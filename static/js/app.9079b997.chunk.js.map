{"version":3,"sources":["assets/fonts/Raleway-Regular.ttf","assets/fonts/Raleway-Thin.ttf","assets/fonts/Raleway-Light.ttf","assets/fonts/Raleway-SemiBold.ttf","assets/fonts/Raleway-Bold.ttf","src/constants/config.ts","src/navigation/utils.ts","src/constants/http-status.ts","src/api/utils.ts","src/state/types.ts","src/model/groups.ts","src/constants/universities.ts","src/api/converters.ts","src/state/profile/actions.ts","src/state/persistent-storage/static.ts","src/api/media-upload.ts","src/state/auth/actions.ts","src/api/errors.ts","src/state/persistent-storage/auth.ts","src/state/settings/actions.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/reducer.ts","src/api/dto.ts","src/state/profile/reducer.ts","src/state/matching/actions.ts","src/general-utils.ts","src/state/matching/reducer.ts","src/api/chat-socket.ts","src/state/messaging/actions.ts","src/state/messaging/reducer.ts","src/state/notifications/reducer.ts","src/state/groups/actions.ts","src/state/reports/reducer.ts","src/state/groups/helpers.ts","src/state/groups/reducer.ts","src/screens/onboarding/index.ts","src/state/static-storage-middleware.ts","src/state/auth-storage-middleware.ts","src/state/notifications/actions.ts","src/notifications-utils.ts","src/state/store.ts","src/state/navigation-middleware.ts","src/state/notifications-middleware.ts","src/state/messaging-middleware.ts","src/hooks/useCachedResources.ts","src/constants/layout.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/ScreenWrapper.tsx","src/styles/general.ts","src/components/Button.tsx","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/forms/FormTextInput.tsx","src/styles/onboarding.ts","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/FormSubmitButton.tsx","src/components/modals/ModalImpl.native.tsx","src/components/modals/ModalImpl.tsx","src/components/modals/CustomModal.tsx","src/components/modals/ConfirmationModal.tsx","src/components/modals/RecoverAccountModal.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/components/forms/ScrollFormWrapper.tsx","src/components/forms/SignupForm.tsx","src/components/SvgPlaceholder.tsx","src/assets.ts","src/polyfills.ts","src/components/headers/LoginHeader.tsx","src/screens/LoginScreens.tsx","src/components/SemiHighlightedText.tsx","src/components/LocalImage.tsx","src/components/MobileStoreButton.tsx","src/screens/WelcomeScreen.tsx","src/components/bottom-sheet/BottomSheet.tsx","src/components/bottom-sheet/BottomSheetTouchableOpacity.tsx","src/components/ActionMenu.tsx","src/components/DebugMenu.tsx","src/components/VersionInfo.tsx","src/navigation/LoginNavigator.tsx","src/components/cards/SwipeableCard.tsx","src/styles/picker.ts","src/constants/reports.ts","src/components/PopUpSelector.tsx","src/state/reports/actions.ts","src/components/forms/QuickForm.tsx","src/components/forms/QuickFormReport.tsx","src/components/GeneralAvatar.tsx","src/components/ChatUserAvatar.tsx","src/components/cards/ChatRoomCard.tsx","src/components/utility/LocaleAware.tsx","src/components/InfiniteScroller.tsx","src/screens/messaging/ChatRoomsScreen.tsx","src/components/ProfileAvatar.tsx","src/styles/headers.ts","src/components/headers/MainHeader.tsx","src/components/headers/ChatScreenHeader.tsx","src/screens/messaging/ChatScreen.tsx","src/constants/route-settings.ts","src/navigation/MessagingNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabHomeScreen.tsx","src/components/modals/BlockProfileModal.tsx","src/components/FormattedUniversity.tsx","src/components/Chips.tsx","src/components/utility/FocusAware.tsx","src/components/SwipeTip.tsx","src/components/cards/MatchProfileCard.tsx","src/components/AsyncButton.tsx","src/components/Wave.tsx","src/components/modals/MatchSuccessModal.tsx","src/screens/TabMatchingScreen.tsx","src/components/headers/MatchScreenHeader.tsx","src/components/MultiPicker.tsx","src/components/MultiUniversityPicker.tsx","src/styles/toggles.ts","src/components/DegreeToggleMulti.tsx","src/components/LanguagePicker.tsx","src/components/RoleToggleMulti.tsx","src/components/OfferCategoryIcon.tsx","src/components/FormattedOfferCategory.tsx","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/StaffRolePicker.tsx","src/screens/MatchFilteringScreen.tsx","src/components/headers/FilteringScreenHeader.tsx","src/components/FormattedMatchStatus.tsx","src/components/cards/HistoryProfileCard.tsx","src/components/BufferedSearchBar.tsx","src/screens/MatchHistoryScreen.tsx","src/navigation/TabMatchingNavigator.tsx","src/components/tabs/MainTabBar.tsx","src/components/modals/GroupInviteResponseModal.tsx","src/components/cards/MyGroupCard.tsx","src/components/MyGroupsView.tsx","src/components/CommentTextInput.tsx","src/components/GroupVoteButton.tsx","src/components/modals/EditCommentModal.tsx","src/components/modals/DeleteCommentConfirmModal.tsx","src/components/ReadMore.tsx","src/components/cards/GroupCommentCard.tsx","src/components/ThemedStatusBar.tsx","src/components/modals/GroupPostCommentsModal.tsx","src/components/forms/EditPostForm.tsx","src/components/modals/EditPostModal.tsx","src/components/EnlargeableAvatar.tsx","src/components/PostHeader.tsx","src/components/modals/DeletePostConfirmModal.tsx","src/components/GroupPostMenu.tsx","src/components/cards/GroupPostCard.tsx","src/components/CustomTooltip.tsx","src/components/PostsFeedView.tsx","src/components/GroupInvitesView.tsx","src/screens/groups/TabGroupsScreen.tsx","src/components/ValidatedCheckBox.tsx","src/components/forms/FormCheckBox.tsx","src/components/forms/CreateGroupForm.tsx","src/components/modals/CreateGroupModal.tsx","src/components/modals/GroupJoinRequestSentModal.tsx","src/components/modals/GroupJoinedModal.tsx","src/components/modals/GroupDescriptionModal.tsx","src/components/cards/GroupExploreCard.tsx","src/screens/groups/GroupsExploreScreen.tsx","src/components/PostSortingOrderPicker.tsx","src/components/GroupPostsView.tsx","src/components/EditableText.tsx","src/components/ImageEditButton.tsx","src/components/GroupCover.tsx","src/components/headers/WavyHeader.tsx","src/components/providers/GroupProvider.tsx","src/components/modals/LeaveGroupConfirmModal.tsx","src/components/modals/DeleteGroupConfirmModal.tsx","src/components/modals/GroupSettingsModal.tsx","src/components/GroupSettingsMenu.tsx","src/components/headers/GroupScreenHeader.tsx","src/screens/groups/GroupScreen.tsx","src/components/GroupMembersView.tsx","src/components/modals/DeleteGroupMemberModal.tsx","src/components/modals/BanGroupMemberModal.tsx","src/components/modals/GroupPromoteAdminModal.tsx","src/components/cards/GroupMemberCard.tsx","src/screens/groups/GroupMembersScreen.tsx","src/components/headers/GroupMembersScreenHeader.tsx","src/components/headers/GroupInviteScreenHeader.tsx","src/components/modals/GroupInviteModal.tsx","src/components/cards/GroupProfileInviteCard.tsx","src/screens/groups/GroupInviteScreen.tsx","src/screens/groups/GroupMembersApprovalScreen.tsx","src/screens/groups/GroupBannedMembersScreen.tsx","src/navigation/GroupsNavigator.tsx","src/components/tabs/MessagingTabIcon.tsx","src/navigation/MainNavigator.tsx","src/components/OnboardingProgressBar.tsx","src/components/GenderToggleMulti.tsx","src/components/OfferControl.tsx","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/GenderToggle.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/NationalityControl.tsx","src/components/FormattedDate.tsx","src/components/DateInput.tsx","src/components/BirthDateInput.tsx","src/screens/onboarding/OnboardingProfileScreen1.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/InterestsPicker.tsx","src/screens/onboarding/OnboardingProfileScreen2.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/components/DegreeToggle.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingLegalSlide.tsx","src/screens/onboarding/screens.tsx","src/screens/onboarding/OnboardingLegalScreen1.tsx","src/screens/onboarding/OnboardingLegalScreen2.tsx","src/screens/onboarding/OnboardingLegalScreen3.tsx","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/components/forms/ResetPasswordForm.tsx","src/screens/ResetPasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/components/RoleToggle.tsx","src/components/AvatarEditButton.tsx","src/components/cards/ValueCard.tsx","src/components/forms/EditProfileForm.tsx","src/screens/MyProfileScreen.tsx","src/components/FormattedGender.tsx","src/components/ProfileView.tsx","src/components/modals/UnmatchProfileModal.tsx","src/components/ProfileActionBar.tsx","src/screens/ProfileScreen.tsx","src/components/LocalePicker.tsx","src/model/user-settings.ts","src/components/modals/CustomizeCookiesModal.tsx","src/screens/SettingsScreen.tsx","src/screens/DeleteAccountSuccessScreen.tsx","src/components/forms/DeleteAccountForm.tsx","src/screens/DeleteAccountScreen.tsx","src/screens/BackendUnreachableScreen.tsx","src/screens/ResendVerifyEmailScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/CookieBanner.tsx","src/components/bottom-sheet/BottomSheetModalProvider.tsx","src/App.tsx","src/notifications.ts"],"names":["module","exports","Environment","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_HOST","SERVER_URL","AVATAR_ASPECT","GROUP_COVER_ASPECT","TERMS_AND_CONDITIONS_URL","rootNavigationRef","React","rootNavigate","route","params","current","navigate","navigateBack","fallback","nav","canGoBack","goBack","getRouteParams","getInitialRoute","loggedIn","onboarded","screenTitle","i18n","t","headerTitle","openChat","roomId","screen","navigateToGroup","groupId","navigateToProfile","profileId","state","profile","user","id","HttpStatusCode","encodeRequestParams","args","str","Object","keys","filter","key","undefined","map","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","length","requestBackend","endpoint","a","async","method","body","authToken","verbose","completelySilent","headers","Accept","console","error","Alert","alert","errorType","description","status","Authorization","accessToken","formattedParams","response","log","JSON","stringify","fetch","json","data","NO_CONTENT","OK","INTERNAL_SERVER_ERROR","PostSortingOrder","PARTNER_UNIVERSITIES","country","GroupVoteStatus","POST_SORTING_ORDERS","Newest","Oldest","Popular","GROUP_VOTE_VALUES","Upvote","Downvote","Neutral","stripSuperfluousOffers","offers","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","complete","common","avatarUrl","avatar","birthdate","Date","educationFields","profileOffers","interests","i","languages","university","find","u","type","staffDto","staffRoles","r","studentDto","degree","convertPartialProfileToCreateDto","toJSON","staff","student","convertDtoToUser","convertDtoToRoom","users","profiles","p","_id","name","firstName","lastName","lastMessageSeenId","lastMessageSeenDate","lastMessage","msg","sender","senderId","convertDtoToChatMessage","messages","writing","messagePagination","page","canFetchMore","fetching","createdAt","updatedAt","convertDtoToHistoryItem","date","convertDtoToGroup","membersPaginations","approved","banned","pending","invited","memberIds","members","posts","postIds","postsPagination","uploadingCover","myRole","isMember","role","myStatus","numApprovedMembers","availableMatches","convertDtoToGroupMember","convertDtoToGroupPost","creator","comments","commentIds","commentsPagination","score","upVotesCount","downVotesCount","voteStatus","isVoted","voteType","convertDtoToPostComments","parentId","depth","comment","text","childrenIds","children","c","allChildren","flatMap","childDto","concat","PROFILE_ACTION_TYPES","storeStaticData","cookieConsent","storageObject","AsyncStorage","setItem","clearStaticData","s","multiRemove","readCachedStaticData","getItem","raw","parse","uploadImage","token","image","onFailure","mimeType","payload","fileName","s3Url","uri","blob","imageBlob","AUTH_ACTION_TYPES","setProfileFieldsSuccess","fields","PROFILE_SET_FIELDS_SUCCESS","createProfileSuccess","PROFILE_CREATE_SUCCESS","createProfile","dispatch","getState","auth","CREATED","loadProfileOffersSuccess","fromCache","LOAD_PROFILE_OFFERS_SUCCESS","loadProfileInterestsSuccess","LOAD_PROFILE_INTERESTS_SUCCESS","fetchUserSuccess","FETCH_USER_SUCCESS","fetchProfileSuccess","FETCH_PROFILE_SUCCESS","localizeError","err","defaultValue","extractError","code","gatherValidationErrors","resp","output","general","UNPROCESSABLE_ENTITY","errors","forEach","e","property","codes","generalError","storeAuthInformation","email","toStore","discardAuthInformation","removeItem","readCachedCredentials","SETTINGS_ACTION_TYPES","registerBegin","password","REGISTER_BEGIN","requestRegister","locale","settings","userSettings","registerSuccess","success","registerFailure","REGISTER_SUCCESS","REGISTER_FAILURE","loginSuccess","usingCachedCredentials","LOG_IN_SUCCESS","loginFailure","needsRecovery","needsVerify","LOG_IN_FAILURE","requestLogin","recover","FORBIDDEN","logout","redirect","LOG_OUT","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","sendVerificationEmailSuccess","SEND_VERIFICATION_EMAIL_SUCCESS","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","deleteAccountSuccess","DELETE_ACCOUNT_SUCCESS","beginOnboarding","BEGIN_ONBOARDING","setOnboardingValues","values","SET_ONBOARDING_VALUES","setTheme","theme","SET_THEME","setLocale","SET_LOCALE","loadCookiesPreferences","preferences","consentDate","LOAD_COOKIES_PREFERENCES","saveCookiesPreferences","SAVE_COOKIES_PREFERENCES","loadVersionInfo","LOAD_VERSION_INFO","extractNamesFromEmail","splitName","split","capitalize","toUpperCase","slice","firstname","lastname","formatDateAgo","time","getTime","DAY","timespans","unit","duration","day","getDate","month","getMonth","year","getFullYear","amount","Math","round","formatPostDate","isEdit","createdAgo","updatedAgo","ago","initialState","authenticated","validated","registerEmail","validatedEmail","accountNeedsRecovery","onboarding","gender","nationality","offerValues","interestIds","onboardingIndex","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","STAFF_ROLE_ICONS","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","trim","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","VALIDATOR_GROUP_NAME","max","VALIDATOR_POST_TEXT","VALIDATOR_COMMENT_TEXT","en","locales","fr","appName","search","send","cancel","close","delete","ok","save","noResultsFound","apply","logOut","showMore","showLess","picker","callToAction","dateInput","dayPlaceholder","monthPlaceholder","yearPlaceholder","nationalityPicker","placeholder","login","emailAddress","passwordRepeat","forgotPassword","forgotPasswordExplanation","newPassword","signupWelcome","createAccount","emailValidation","validating","sent","legal","modal","title","disclaimer","decline","accept","readMore","validation","atLeastOne","addAtLeastOne","invalid","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","language","specifyLevel","tooYoung","group","tooLong","post","error_user_not_verified","user_not_found","email_or_password_incorrect","reset_password_no_token","unique","is_email","is_sea_email_constraint","myProfile","countryPickerLanguageCode","profileType","profileTypes","positions","allRoles","teaching","research","administration","technical","other","genders","male","female","dateOfBirth","dateUnits","singular","second","minute","hour","week","plural","dateRelative","precise","months","0","1","2","3","4","5","6","7","8","9","10","11","spokenLanguages","languageLevels","a1","a2","b1","b2","c1","c2","native","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","fieldsOfEducation","educationFieldsPicker","searchPlaceholder","multiple","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","notFoundScreen","subtitle","backendUnreachable","resendVerifyScreen","universities","universitiesPicker","profile1","profile2","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","legal1","legal2","legal3","back","next","leave","submit","button","quit","yes","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","activism","art","astrology","baking","bbq","blogging","brunch","climbing","coffee","comedy","cooking","couchsurfing","crossfit","cycling","dancing","diy","environmentalism","esports","expositions","fashion","festivals","fishing","foodie","football","gamer","gardening","golf","guitar","hiking","instagram","investing","karaoke","movies","museum","music","netflix","outdoors","parties","photography","piano","picnicking","podcasts","politics","reading","running","sailing","shopping","skateboarder","skiing","sneakers","snowboarding","spirituality","surfing","swimming","tango","tattoos","tea","tennis","theater","travel","trivia","vegan","vegetarian","volunteering","walking","wine","writer","yoga","offersPreText","offerCategories","meet","discover","collaborate","offerSettings","roles","allOffers","help","unmatch","blockQuestion","action","block","warning","welcomeScreen","signIn","signUp","loginForm","titleFirstLaunch","logIn","cookies","bannerText","acceptAll","customize","cache","bugReport","mailSubject","mailTitle","report","what","commentFrom","postFrom","why","typePlaceholder","types","violence","nudity","harassment","confirmationTitle","confirmation","failureTitle","failure","resetPassword","instructions","deleteAccount","success1","success2","inputLabel","recoverAccount","messaging","noMatches","sayHi","sayHiTo","groups","create","visible","requireApproval","visibleDescription","true","false","requireApprovalDescription","newPost","editPost","contentPlaceholder","deletePost","editComment","deleteComment","zero","replyTo","none","joinRequestSent","groupJoined","viewGroup","myGroups","explore","noMore","statusText","invites","inviteNew","invite","approvalDisclaimerInvitee","approvalDisclaimerInviter","nobodyToInvite","postMenu","manage","manageBanned","approval","noResults","deleteMember","deletePendingMember","banMember","banPendingMember","promoteToAdmin","admin","basic","reportPost","noMorePosts","noPosts","justPosted","justCommented","justEdited","edited","editedAgo","postsSorting","newest","oldest","popular","points","feed","deleteData","matching","noMoreItems","noItemsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","offersTitle","offersMore","chat","continue","history","requested","declined","blocked","actions","noResultsAdvice","mute","noOffersSelected","screenTitles","suffix","WelcomeScreen","SigninScreen","ForgotPasswordScreen","SignupScreen","OnboardingNameScreen","OnboardingProfileScreen1","OnboardingProfileScreen2","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingLegalScreen1","OnboardingLegalScreen2","OnboardingLegalScreen3","ChatRoomsScreen","ChatScreen","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","MatchHistoryScreen","TabGroupsScreen","GroupsExploreScreen","GroupScreen","GroupMembersScreen","GroupBannedMembersScreen","GroupMembersApprovalScreen","GroupInviteScreen","TabNotificationsScreen","MyProfileScreen","ProfileScreen","SettingsScreen","DeleteAccountScreen","DeleteAccountSuccessScreen","ValidationEmailSentScreen","ValidateEmailScreen","ResetPasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","BackendUnreachableScreen","ForgotPasswordEmailSentScreen","ResendVerifyEmailScreen","sections","danger","about","darkTheme","deleteMyAccount","termsOfService","reportABug","customizeCookies","mo","SUPPORTED_LOCALES","getDefaultLocale","Localization","substr","LANGUAGES_CODES","getLocalizedLanguageItems","dict","translations","label","value","OfferCategory","cookieConsentDate","previousVersion","isFirstLaunch","localizedLanguageItems","MatchActionStatus","initOfferValue","val","genderVal","allowChooseGender","typeVal","allowChooseProfileType","offerId","GroupRole","GroupMemberStatus","MATCH_ACTION_HISTORY_STATUSES","Declined","Blocked","Requested","MATCHING_ACTION_TYPES","offerIdToCategory","Map","uploadingAvatar","arrayWithIdsToDict","arr","reduce","arrayWithIdMapperToDict","fetchProfilesFailure","FETCH_PROFILES_FAILURE","fetchProfilesSuccess","items","FETCH_PROFILES_SUCCESS","refreshFetchedProfiles","FETCH_PROFILES_REFRESH","likeProfileSuccess","matchStatus","LIKE_PROFILE_SUCCESS","likeProfile","toProfileId","dislikeProfileSuccess","DISLIKE_PROFILE_SUCCESS","blockProfileSuccess","BLOCK_PROFILE_SUCCESS","blockProfile","fetchHistorySuccess","FETCH_HISTORY_SUCCESS","refreshFetchedHistory","FETCH_HISTORY_REFRESH","cancelActionFailure","historyItemId","ACTION_CANCEL_FAILURE","cancelActionSuccess","isMatch","ACTION_CANCEL_SUCCESS","cancelMatchAction","matchingEntityId","filters","orderedProfileIds","profilesPagination","historyPagination","historyFilters","k","initialHistoryFilters","historyItems","myMatches","myMatchesPagination","MESSAGING_ACTION_TYPES","SOCKET_LOCATION","this","socket","connectCallbacks","writingTimeout","lastSentWritingState","lastSentWritingStateRoom","connectTimeout","connectedState","f","listeners","on","clearTimeout","consumeConnectCallbacks","m","onMessageReceived","onMessageRead","onWritingStateChange","emit","room","setTimeout","sendWritingState","callback","push","retry","isConnected","addConnectCallback","isConnecting","connect","query","authorization","reconnection","registerListeners","noop","readMessage","messageId","refreshWritingTimeout","disconnect","connected","beginFetchMatchRooms","FETCH_MATCH_ROOMS_BEGIN","fetchMatchRoomsFailure","FETCH_MATCH_ROOMS_FAILURE","fetchMatchRoomsSuccess","refresh","FETCH_MATCH_ROOMS_SUCCESS","fetchMatchRooms","pagination","matchRoomsPagination","limit","rooms","paginated","meta","currentPage","totalPages","connectToChat","fail","CONNECT_TO_CHAT_FAILURE","chatSocket","CONNECT_TO_CHAT_BEGIN","activeRoomId","receiveChatMessage","readChatMessage","receiveChatWriting","hasConnected","CONNECT_TO_CHAT_SUCCESS","disconnectFromChat","DISCONNECT_FROM_CHAT","joinChatRoomBegin","JOIN_CHAT_ROOM_BEGIN","joinChatRoomFailure","JOIN_CHAT_ROOM_FAILURE","joinChatRoomSuccess","JOIN_CHAT_ROOM_SUCCESS","sendChatMessageSuccess","message","SEND_MESSAGE_SUCCESS","sendChatMessage","localChatUser","sendMessage","SEND_MESSAGE_FAILURE","RECEIVE_MESSAGE","RECEIVE_WRITING_STATE","READ_MESSAGE","fetchEarlierMessagesBegin","FETCH_EARLIER_MESSAGES_BEGIN","fetchEarlierMessagesFailure","FETCH_EARLIER_MESSAGES_FAILURE","fetchEarlierMessagesSuccess","FETCH_EARLIER_MESSAGES_SUCCESS","fetchNewMessagesBegin","FETCH_NEW_MESSAGES_BEGIN","fetchNewMessagesFailure","FETCH_NEW_MESSAGES_FAILURE","fetchNewMessagesSuccess","FETCH_NEW_MESSAGES_SUCCESS","fetchMatchRoomSuccess","FETCH_MATCH_ROOM_SUCCESS","matchRooms","matchRoomsOrdered","socketState","connecting","fetchingNewMessages","toLocalChatUser","updateRoom","setAsFirst","otherRooms","GROUP_ACTION_TYPES","findPost","postId","groupsDict","postsFeed","findComment","commentId","createGroupSuccess","CREATE_SUCCESS","updateGroupSuccess","UPDATE_SUCCESS","updateGroup","responseGroup","UPDATE_FAILURE","leaveGroupSuccess","LEAVE_SUCCESS","leaveGroup","cascade","beginFetchGroups","FETCH_GROUPS_BEGIN","fetchGroupsSuccess","FETCH_GROUPS_SUCCESS","fetchGroupsFailure","FETCH_GROUPS_FAILURE","fetchGroups","statuses","Invited","InvitedByAdmin","Pending","fetchGroupSuccess","FETCH_GROUP_SUCCESS","fetchGroup","fetchPostsFeedBegin","FETCH_POSTS_FEED_BEGIN","fetchPostsFeedSuccess","FETCH_POSTS_FEED_SUCCESS","fetchPostsFeedFailure","FETCH_POSTS_FEED_FAILURE","refreshFetchedPostsFeed","fetchPostsFeed","feedPagination","fetchGroupPostsBegin","FETCH_GROUP_POSTS_BEGIN","fetchGroupPostsSuccess","FETCH_GROUP_POSTS_SUCCESS","fetchGroupPostsFailure","FETCH_GROUP_POSTS_FAILURE","refreshFetchedGroupPosts","fetchGroupPosts","postsSortOrder","g","fetchPostCommentsBegin","FETCH_POST_COMMENTS_BEGIN","fetchPostCommentsSuccess","FETCH_POST_COMMENTS_SUCCESS","fetchPostCommentsFailure","FETCH_POST_COMMENTS_FAILURE","fetchGroupMembersBegin","memberStatus","FETCH_GROUP_MEMBERS_BEGIN","fetchGroupMembersSuccess","totalItems","FETCH_GROUP_MEMBERS_SUCCESS","fetchGroupMembersFailure","FETCH_GROUP_MEMBERS_FAILURE","fetchGroupMembersRefresh","FETCH_GROUP_MEMBERS_REFRESH","fetchGroupMembers","deleteGroupMemberSuccess","isLocalUser","DELETE_GROUP_MEMBER_SUCCESS","deleteGroupMember","setGroupMemberStatusSuccess","SET_GROUP_MEMBER_STATUS_SUCCESS","setGroupMemberStatus","Banned","setGroupMemberRoleSuccess","SET_GROUP_MEMBER_ROLE_SUCCESS","inviteToGroupSuccess","INVITE_TO_GROUP_SUCCESS","beginFetchMyGroups","FETCH_MYGROUPS_BEGIN","fetchMyGroupsSuccess","FETCH_MYGROUPS_SUCCESS","fetchMyGroupsFailure","FETCH_MYGROUPS_FAILURE","refreshFetchedMyGroups","fetchMyGroups","myGroupsPagination","myGroupInvitesPagination","Approved","joinGroupSuccess","localUser","JOIN_GROUP_SUCCESS","createGroupPostBegin","CREATE_POST_BEGIN","createGroupPostSuccess","CREATE_POST_SUCCESS","updateGroupPostSuccess","UPDATE_POST_SUCCESS","deletePostSuccess","DELETE_POST_SUCCESS","createPostCommentBegin","CREATE_COMMENT_BEGIN","createPostCommentSuccess","CREATE_COMMENT_SUCCESS","updatePostCommentSuccess","UPDATE_COMMENT_SUCCESS","deletePostCommentSuccess","DELETE_COMMENT_SUCCESS","setGroupCoverBegin","SET_COVER_BEGIN","setGroupCoverSuccess","url","SET_COVER_SUCCESS","setGroupCoverFailure","SET_COVER_FAILURE","setPostVoteBegin","SET_POST_VOTE_BEGIN","setPostVoteSuccess","SET_POST_VOTE_SUCCESS","setCommentVoteBegin","SET_COMMENT_VOTE_BEGIN","setCommentVoteSuccess","SET_COMMENT_VOTE_SUCCESS","fetchAvailableMatchesBegin","FETCH_AVAILABLE_MATCHES_BEGIN","fetchAvailableMatchesSuccess","FETCH_AVAILABLE_MATCHES_SUCCESS","fetchAvailableMatchesFailure","FETCH_AVAILABLE_MATCHES_FAILURE","myGroupInvites","postsFeedIds","setOrUpdateGroup","update","updated","updatePost","updateMemberStatus","fallbackMember","previousStatus","wasInvite","isNowInvite","myPreviousStatus","member","wasApproved","isApproved","Basic","ONBOARDING_ORDER","hasUserGivenCookieConsent","Platform","OS","now","NOTIFICATIONS_ACTION_TYPES","areNotificationsSupported","isDevice","getNotificationData","notif","request","content","registerNotificationTokenSuccess","REGISTER_TOKEN_SUCCESS","deleteNotificationTokenSuccess","DELETE_TOKEN_SUCCESS","rootReducer","combineReducers","verificationToken","names","LOG_IN_RECOVER_CANCEL","PREVIOUS_ONBOARDING_SLIDE","NEXT_ONBOARDING_SLIDE","SET_ONBOARDING_OFFER_VALUE","TOGGLE_THEME","collab","category","Collaborate","sort","b","disco","Discover","Meet","SET_AVATAR_BEGIN","SET_AVATAR_FAILURE","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","SET_FILTERS","FETCH_PROFILES_BEGIN","ids","indexOf","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","FETCH_MY_MATCHES_REFRESH","FETCH_HISTORY_BEGIN","FETCH_HISTORY_FAILURE","SET_HISTORY_FILTERS","LEAVE_ROOM","existingMessage","filteredMessages","ma","some","mb","findIndex","notifications","reports","newState","gposts","gpostIds","pcomments","FETCH_POST_COMMENTS_REFRESH","commentsCount","parent","currentComments","updatedComments","paginationKey","itemsKey","cover","SET_POST_SORTING_ORDER","order","combinedMiddleware","applyMiddleware","thunk","store","oldCookies","DELETE_SUCCESS","Permissions","Notifications","askForPushNotificationToken","then","pushToken","registerNotificationToken","createStore","loggedInFromCache","isBackendReachable","connectToBackend","Promise","all","cacheIsGood","credentials","userLoggedInFromCache","reachable","width","Dimensions","get","height","window","isSmallDevice","isWideDevice","light","textLight","textInverted","background","cardBackground","accent","themeAwareAccent","accentSlight","accentSecondary","accentTernary","actionNeutral","okay","warn","componentBorder","buttonGroupBorder","greenModalBackground","chatBubble","inputPlaceholder","onboardingInputBackground","dark","preTheme","generator","styles","wideDevice","layout","themes","ScreenWrapper","props","forceFullWidth","wrapperStyle","containerStyle","themedStyles","View","style","wrapper","container","maxWidth","StyleSheet","flex","justifyContent","flexDirection","overflow","alignItems","withTheme","styleTextThin","fontFamily","fontWeight","styleTextLight","webFontFamily","BLUR_HEADER_INTENSITY","BLUR_TAB_INTENSITY","BLUR_MODAL_INTENSITY","BUTTON_SKINS","marginVertical","borderRadius","backgroundColor","paddingHorizontal","fontSize","letterSpacing","color","borderColor","borderWidth","Button","onPress","icon","skin","textStyle","iconLeft","contentOpacity","disabled","skinStyles","TouchableComponent","TouchableOpacity","accessibilityRole","accessibilityLabel","opacity","Text","navigation","replace","redirectButton","padding","textAlign","marginTop","marginBottom","reduxConnector","Staging","ActivityIndicator","size","successText","routeName","fallbackRoute","link","location","attemptRedirectToApp","lineHeight","FontAwesome","mailIcon","infoText","actionsContainer","config","prefixes","Linking","screens","LoginRoot","LoginScreens","MainScreen","TabHome","TabMatching","TabGroups","TabMessaging","TabNotifications","ValidateEmailSentScreen","OnboardingScreen","InputLabel","otherProps","textTransform","InputErrorText","errorStr","ValidatedTextInput","inputRef","createRef","focused","showSecureEntry","focus","blur","showErrorText","untouched","secureTextEntry","inputStyle","inputFocusedStyle","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","showPasswordButtonStyle","showPasswordIconStyle","placeholderTextColor","onBlur","onFocus","showError","isSecureEntry","position","paddingBottom","TextInput","ref","outline","setState","Component","defaultProps","emailProps","keyboardType","autoCompleteType","textContentType","autoCapitalize","autoCorrect","passwordProps","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","isEmail","isPassword","onboardingStyle","root","wideDeviceLeftPanel","slideWrapper","header","slideScrollView","slideContentWrapper","paddingTop","flexGrow","slideContentContainer","slideNavWrapper","slideNavButtons","navButton","marginHorizontal","navButtonBack","navButtonIcon","finishButtonText","onboardingOffersStyle","categoryTitleText","offerControl","offerControlPreText","formStyles","inputFieldIcon","marginRight","inputFieldIconFocused","getLoginTextInputsStyleProps","wrapperVerticalMargin","borderBottomWidth","borderBottomColor","getFormCheckBoxStyleProps","commonStyle","checkboxWrapper","checkboxContainer","marginLeft","checkboxLabel","FormError","FormSubmitButton","submitting","loadingIndicatorStyle","ModalImpl","modalVisible","oldProps","setModalVisible","onHide","onShow","modalViewStyle","animationType","bottom","fullWidth","fullHeight","nonDismissable","noBackground","backdropOpacity","backdropBlur","statusBarTranslucent","backdropColor","backdrop","activeOpacity","modalView","margin","elevation","shadowRadius","shadowColor","shadowOffset","shadowOpacity","renderContent","finalStatusBarTranslucent","Modal","transparent","onRequestClose","KeyboardAvoidingView","enabled","behavior","tint","intensity","paddingVertical","ModalImplClass","document","createElement","zIndex","appendChild","fixedFullSize","left","top","cursor","right","transform","boxShadow","ReactDOM","createPortal","CustomModalClass","modalRef","activator","activatorElement","show","ConfirmationModalClass","preset","hide","justifyText","buttons","additionalContent","contentContainerStyle","buttonDefaults","CustomModal","modalStyle","contentContainer","contentText","actionsWrapper","buttonParams","getPreset","actionDisabledOverlay","actionText","borderTopWidth","hairlineWidth","RecoverAccountModal","ConfirmationModal","LoginFormSchema","shape","LoginForm","pwdInputRef","setFieldValue","remoteErrors","onSuccessfulSubmit","setFieldError","fstyles","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","returnKeyType","blurOnSubmit","onSubmitEditing","MaterialIcons","Keyboard","dismiss","forgotPwdLink","forgotPasswordText","MaterialCommunityIcons","loginButtonIcon","separatorContainer","separatorHbar","separatorText","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","formikCfg","ScrollFormWrapper","keyboardShown","notKeyboardReactive","addListener","contentStyle","ScrollView","keyboardShouldPersistTaps","scrollView","scrollViewContent","minHeight","onLayout","nativeEvent","keyboardAvoidingView","SignupFormSchema","SignupForm","pwdField1Ref","pwdField2Ref","resetForm","validateOnChange","SvgPlaceholder","loaded","assetDictEn","assetDictFr","getLocalImage","onLoad","finish","default","assetDictCommon","getLocalSvg","animateValue","node","setValue","toValue","ReAnimated","timing","start","LoginHeaderClass","Value","getFullHeight","imageTop","getImageHeight","insets","imageTopVal","getCollapsedHeight","heightVal","easing","Easing","cubic","Image","forceUpdate","viewBox","navigationButton","navigationIcon","aspectRatio","SVG_VIEWBOX_W","useSafeAreaInsets","themeProps","SigninScreenClass","wide","form","formContainer","screenWrapper","screenContainer","ForgotPasswordScreenClass","SignupScreenClass","SemiHighlightedText","underlineHeight","underlineSides","textContainer","underline","textShadowColor","textShadowOffset","textShadowRadius","LocalImage","imageKey","img","source","MobileStoreButton","linkStyle","linkProps","Svg","scale","openURL","fill","WelcomeImage","storeButtonWidth","imageAndTextContainer","imageContainer","mobileStoresContainer","alignSelf","BottomSheetClass","webModalRef","skipNextUpdate","BottomSheetTouchableOpacity","ActionMenuClass","sheetRef","noChevron","snapPoints","BottomSheet","bottomDivider","listItemContainer","Content","Title","titleItem","item","onSelect","persistMenu","listItemWrapper","Chevron","DebugMenu","ActionMenu","n","random","level","versionInfoContainer","versionText","versionDisclaimerIcon","SigninRoot","createMaterialTopTabNavigator","Tab","LoginNavigator","Navigator","swipeEnabled","tabBar","Screen","component","options","initialRouteName","DEFAULT_LOOKS","sideMargin","verticalSpacing","SwipeableCardClass","swipeableRef","hideTimeout","looks","hidden","onHidden","onFinish","ease","leftActions","rightActions","wrapperProps","touchableStyle","swipeableProps","hideCard","noAnimation","collapse","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","useNativeAnimations","friction","renderLeftActions","renderRightActions","touchable","flexBasis","display","oneSidedBorderRadius","side","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","SwipeActionButton","buttonStyles","swipeActionButton","swipeActionButtonIcon","swipeActionButtonText","SwipeActionButtons","buttonStyle","SwipeActionContainer","properties","first","last","isExteriorButton","isInteriorButton","interiorFiller","fullCardWidth","swipeActionsContainer","paddingRight","paddingLeft","swipeActionsContent","swipeActionText","pickerStyles","overlay","maxHeight","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","chipContainer","getPickerButtonStyleProps","variant","textNoneSelected","ReportType","PopUpSelector","valueDict","selected","fromSelectedProp","newValue","noOkUnderline","valueStyle","buttonStyleVariant","pstyles","buttonStyleProps","buttonOk","numberOfLines","scroll","scrollContent","index","rowContainer","toggleValue","checked","checkedIcon","uncheckedIcon","ReportEntityType","REPORT_ACTION_TYPES","REPORT_TYPES","VIOLENCE","NUDITY","HARASSMENT","UNDESIRABLE_CONTENT","HATE_SPEECH","VULGAR_CONTENT","OTHER","reportEntitySuccess","reportType","entityType","entityId","REPORT_ENTITY_SUCCESS","reportEntityFailure","REPORT_ENTITY_FAILURE","reportEntity","QuickFormClass","confirmationOpen","failureOpen","hideSubmit","titleIcon","submitText","confirmationText","failureText","sheetHeight","open","wrapperSheet","containerSheet","titleContainer","actionButton","actionButtonText","feedbackModal","containerModal","feedbackTitle","feedbackText","QuickFormReportClass","quickFormRef","selectedType","entity","PROFILE_ENTITY","POST_ENTITY","COMMENT_ENTITY","GROUP_ENTITY","info","getEntityInfo","QuickForm","inputItem","selectorValue","GeneralAvatar","loading","avatarProps","ChatUserAvatar","sourceProp","LOOKS","ChatRoomCard","reportFormRef","swipeableCardRef","lastMessageComponent","isRead","pad","num","padStart","lastMessageText","lastMessageTextNew","lastMessageTime","getHours","getMinutes","noMessageText","SwipeableCard","rightThreshold","overshootRight","getActions","cardContent","avatarContainer","rounded","infoContainer","QuickFormReport","resetSwipe","onLocaleChange","InfiniteScroller","scrollViewRef","scrollListenerEnabled","hiddenIds","fetchMore","isFocused","fetchLimit","getShownItems","refreshOnFocus","shown","justRefreshed","moreIfNeeded","renderItem","noResultsComponent","endOfItemsComponent","itemsContainerStyle","progressViewOffset","horizontal","hideScrollIndicator","onScroll","scroller","refreshControl","RefreshControl","refreshing","onRefresh","layoutMeasurement","contentOffset","contentSize","distanceToStart","x","y","distanceToEnd","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","hideItem","endOfItemsContainer","noResultsContainer","loadingIndicatorContainer","roomIds","fetchingRooms","noMatchesText","itemsContainer","ProfileAvatar","headerStyles","wrapperBlur","wrapperNoShadow","backButton","backButtonIcon","avatarTitle","rightButton","rightIcon","MainHeaderClass","navigateBackOr","navigateBackFallback","rightButtons","noAvatar","noShadow","noSettingsButton","overrideAvatar","overrideTitle","onPressTitle","titleContainerStyle","titleStyle","scene","textColor","buttonBackgroundColor","WrapperComponent","BlurView","blurProps","ButtonComponent","toLowerCase","iconStyle","MainHeaderComp","MainHeader","ChatScreenHeaderClass","getRoomId","stackProps","hstyles","getRoom","ChatScreenHeaderComp","ChatScreenHeader","listRef","removeScrollListener","unsubscribeBlurEvent","unsubscribeFocusEvent","joinRoom","joinChatRoom","fetchMatchRoom","connectToRoom","ensureLatestMessages","leaveRoom","leaveChatRoom","afterDate","fetchPage","convertDto","fetchNewMessages","fetchEarlier","beforeDate","fetchEarlierMessages","scrollNode","getScrollableNode","listener","addEventListener","PAGE_HEIGHT","sY","pY","detail","wheelDelta","wheelDeltaY","deltaY","deltaMode","spinY","pixelY","normalizeWheelEvent","scrollTop","preventDefault","removeEventListener","setNativeProps","chatComponent","isWritingId","userWriting","lastMessageDict","otherUser","ChatEmptySvg","isKeyboardInternallyHandled","renderSend","sendContainer","renderBubble","renderTicks","currentMessage","messageTicksContainer","received","messageTick","bubbleTextLeft","bubbleTextRight","bubbleWrapperLeft","bubbleWrapperRight","renderMessage","seenBy","ChatMessage","messageProps","renderInputToolbar","inputToolbarContainer","primaryStyle","inputToolbarPrimary","renderChatEmpty","emptyChatContainer","emptyChatText","scaleY","chatEmptySvgHeight","preserveAspectRatio","renderFooter","ChatFooter","renderActions","ChatActions","actionsProps","onInputTextChanged","setWriting","onSend","loadEarlier","isLoadingEarlier","onLoadEarlier","timeFormat","listViewProps","setListRef","onEndReached","renderScrollComponent","renderComposer","autoFocus","textInput","multiline","onKeyPress","ev","altKey","shiftKey","minInputToolbarHeight","MIN_INPUT_HEIGHT","showUserAvatar","renderAvatar","renderCustomView","dotColor","dotAmplitude","dotSpeed","dotMargin","dotRadius","dotX","dotY","messageContainerLeft","messageContainerRight","messageReadContainerLeft","messageReadContainerRight","messageReadAvatarText","actionContainer","actionIcon","minWidth","CHAT_CONNECTED_ROUTES","STATUS_BAR_THEME_OVERRIDES","AUTHENTICATED_ROUTES","Stack","createStackNavigator","MessagingNavigator","previousAppStatus","RNAppState","onAppActive","onAppInactive","getCurrentRoute","includes","headerMode","headerShown","LogOutButton","onLogOut","shortCode","BASE_URL","fetchPostEmbed","separator","alphaText","logoutButton","BlockProfileModalClass","onBlock","FormattedUniversity","flagSize","flagEmoji","countryCode","withEmoji","Chips","removable","onRemove","chipStyle","Chip","chip","chipText","chipRemoveButton","chipRemoveIcon","flexWrap","FocusAware","useFocusEffect","ICON_NAMES","SwipeTip","offset","animating","dir","direction","animate","even","ANIMATION_AMPLITUDE","inOut","circle","linear","iconName","setAnimating","MatchProfileCard","cardRef","expanded","PROFILE_PREVIEW_COLLAPSED_HEIGHT","PROFILE_PREVIEW_EXPANDED_HEIGHT","elastic","out","expand","onExpand","showSwipeTip","fullName","chipStyleProps","collapsedContent","swipeTip","swipeTipIcon","expandedContent","expandedSectionTitle","BlockProfileModal","blockButton","blockButtonIcon","leftThreshold","onSwipeableRightWillOpen","onSwipeLeft","onSwipedLeft","onSwipeableLeftWillOpen","onSwipeRight","onSwipedRight","swipeActionContentRight","swipeActionContentLeft","toggleExpanded","flexShrink","AsyncButton","cancelPressPromise","promise","hasCanceled","wrappedPromise","resolve","reject","catch","canceled","makePromiseCancelable","loadingIndicatorColor","loadingIndicatorSize","WAVE_PATTERNS","Wave","patternsIndices","_","patternIndex","wavePatternIdx","floor","upsideDown","wavePattern","rotate","d","localProfile","forwardRef","MatchSuccessModalClass","maxOffersDisplayed","waveWidth","getMatchingOffers","topContainer","profileInfoContainer","offersCard","availableHeight","OFFERS_CARD_VERTICAL_PADDING","numItems","offerText","profileIds","scrollerRef","successModalRef","notEmpty","filterParams","noResultsText1","noResultsText2","scrollTo","animated","Matched","dislikeProfile","MatchSuccessModal","MatchScreenHeaderClass","MatchScreenHeader","MultiPicker","tempSelected","dropdownWrapperHeight","has","set","genLabel","updateItems","onChange","multipleText","searchablePlaceholder","showChips","single","viewProps","selectedItems","toString","searchable","onChangeItem","scrollViewProps","isVisible","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","showSelected","MultiUniversityPicker","uni","univKey","getToggleStyleProps","innerBorderStyle","buttonContainerStyle","selectedButtonStyle","selectedTextStyle","disabledStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonLabels","styleVariant","styleProps","idx","selectMultiple","selectedIndexes","LanguagePicker","languageId","OfferCategoryIcon","svgProps","SvgIcon","iconSize","FormattedOfferCategory","iconProps","withoutIcon","translationKey","SectionedMultiPicker","selectRef","section","genSectionLabel","_toggleSelector","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","select","onSelectedItemsChange","uniqueKey","displayKey","subKey","onCancel","onConfirm","IconRenderer","icons","showDropDowns","readOnlyHeadings","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","confirmFontFamily","itemFontFamily","searchTextFontFamily","subItemFontFamily","EducationFieldCategory","modalWrapper","overflowY","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","subItemText","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","entryContainer","entryLabel","Switch","onValueChange","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","resetButtonIcon","sectionTitle","entryControls","ClearFilterButton","twoLineEntryContainer","FilteringScreenHeaderClass","applyFilters","FilteringScreenHeaderComp","FilteringScreenHeader","FormattedMatchStatus","IconComponent","HistoryProfileCard","blockModalRef","reportButton","cancelButton","BufferedSearchBar","updateTimeout","bufferDelay","onBufferedUpdate","searchBarProps","fetchingHistory","filtersContainer","Filter","filterKey","setHistoryFilters","searchBarContainer","inputContainerStyle","searchBarInputContainer","searchBarInput","fetchHistory","filterButtonContainer","filterButton","filterButtonSelected","filterLabel","filterLabelSelected","raised","topBar","headerContainer","filterIcon","filterIconSelected","TabMatchingStack","TabMatchingNavigator","MainTabBarClass","tabBarProps","blurViewStyle","BottomTabBar","activeTintColor","tabStyle","tab","showLabel","MainTabBarIcon","MainTabBar","GroupInviteResponseModalClass","stillNeedsApproval","requiresApproval","descriptionText","textProps","MyGroupCard","inviteResponseModalRef","isInvite","containerWithoutCover","groupCover","resizeMode","textUnderlay","groupName","GroupInviteResponseModal","MyGroupsView","exploreIcon","exploreButton","exploreButtonText","CommentTextInputClass","inputButton","inputButtonIcon","input","maxLength","onContentSizeChange","event","GroupVoteButton","vote","currentStatus","isSet","isComment","setVote","iconOverride","nonNeutralIcon","EditCommentModalClass","textInputStyle","textAlignVertical","updatePostComment","validate","DeleteCommentConfirmModal","deletePostComment","ReadMore","GroupCommentCard","bottomHeight","onCollapse","setExpanded","closeComments","onPressReplyTo","adminView","toggleChildren","fromLocal","outerContainer","outerContainerExpanded","onLongPress","delayLongPress","innerContainer","innerContainerExpanded","borderLeftWidth","topText","formatCommentDate","renderTruncatedFooter","handlePress","textFooter","renderRevealedFooter","EditCommentModal","bottomButton","bottomButtonIcon","borderLeftColor","statusBarRef","ThemedStatusBarClass","getDefaultStyle","newStyle","override","getThemeOverride","setStyle","StatusBar","GroupPostCommentsModalClass","commentTextInputRef","collapseCurrentlyExpanded","initialStatusBarStyle","createCommentComponent","childrenContainerRef","setReplyingTo","toggle","replyingTo","getStyle","fetchPostComments","oldPagination","fetchFirstComments","Consumer","topButton","topButtonIcon","fetchPostCommentsRefresh","noCommentsText","viewMoreComments","viewMoreCommentsText","replyToContainer","replyToClose","replyToCloseIcon","replyToText","CommentTextInput","CREATE_COMMENT_FAILURE","createPostComment","CommentChildrenContainer","EXTRA_HEIGHT_OFFSET","initialHeight","Animated","h","EditPostFormSchema","EditPostFormClass","submitForm","textInputRef","getCreationDto","CREATE_POST_FAILURE","createGroupPost","updateGroupPost","createMode","poster","creatorAvatar","creatorName","formContent","lengthText","lengthTextError","buttonSubmit","EditPostModalClass","editPostFormRef","triggerSubmit","EditPostForm","EnlargeableAvatar","enlarged","showEnlarged","hideEnlarged","enlargedAvatarContainer","avatarStyle","enlargedAvatar","PostHeader","isFeed","openPostMenu","profileName","toGroup","toProfile","avatarContainerSmall","menuButton","menuButtonIcon","DeletePostConfirmModalClass","deleteGroupPost","GroupPostMenuClass","actionMenuRef","editPostModalRef","deletePostModalRef","isAdmin","Admin","editAction","deleteAction","reportAction","EditPostModal","DeletePostConfirmModal","GroupPostCard","commentsModalRef","menuRef","fetchGroupIfNeeded","postText","openComments","bottomText","GroupPostCommentsModal","GroupPostMenu","CustomTooltip","tooltipStyles","alignContent","PostsFeedView","feedTooltipIcon","GroupInvitesView","hasInvites","staticStyle","ValidatedCheckBox","Fragment","FormCheckBox","setFieldTouched","CreateGroupFormSchema","CreateGroupForm","createdGroup","CREATE_FAILURE","checkboxProps","fieldDescription","buttonCancel","CreateGroupModalClass","GroupJoinRequestSentModalClass","GroupJoinedModalClass","GroupDescriptionModalClass","onJoinGroup","GroupExploreCard","descriptionModalRef","requestSentModalRef","joinedModalRef","joinGroup","canRequestJoin","card","blurView","innerContent","subtitleContainer","statusSpecific","statusTextKey","statusSpecificIcon","groupDescription","GroupJoinRequestSentModal","GroupDescriptionModal","GroupJoinedModal","PostSortingOrderPicker","l","sortOrder","GroupPostsView","buttonIcon","setPostSortingOrder","EditableText","editing","nonEditable","iconColor","textPlaceholder","edit","ImageEditButton","ensurePermission","showPicker","quality","aspect","ImagePicker","mediaTypes","Images","allowsEditing","result","cancelled","onPictureSelected","GroupCover","showLoading","showPlaceholder","allowEditing","placeholderIcon","editButton","imageInfo","WavyHeader","headerWidth","waveTop","wavePatternIndex","onGroupReady","redirectIfNotApproved","setGroupReady","LeaveGroupConfirmModalClass","checkboxTouchable","DeleteGroupConfirmModalClass","inputValue","inputCorrect","setInput","DELETE_FAILURE","inputIncorrect","GroupSettingsModalClass","setStateFromGroup","GroupSettingsMenuClass","leaveModalRef","deleteGroupModalRef","settingsModalRef","leaveAction","manageBansAction","manageMembersAction","settingsAction","LeaveGroupConfirmModal","DeleteGroupConfirmModal","GroupSettingsModal","GroupScreenHeaderClass","settingsMenuRef","getGroup","GroupSettingsMenu","headerRef","pendingMemberIds","topInfo","groupInfo","membersButton","membersButtonIcon","approbationRequestIndicatorContainer","APPROBATION_REQ_INDICATOR_SIZE","fetchFirstGroupMembers","renderTop","postsTitle","toggleTransparentMode","GroupScreenHeader","GroupMembersView","numApproved","DeleteGroupMemberModalClass","translationRoot","BanGroupMemberModalClass","GroupPromoteAdminModalClass","setGroupMemberRole","localUserId","GroupMemberCard","isMemberAdmin","deleteMemberButton","DeleteGroupMemberModal","controlButton","controlIcon","banMemberButton","BanGroupMemberModal","promoteAdminButton","GroupPromoteAdminModal","acceptMemberButton","unbanMemberButton","roleIcon","GroupMembersScreenHeaderClass","keepScreenTitle","noInviteButton","GroupInviteScreenHeaderClass","GroupInviteModalClass","inviteToGroup","GroupProfileInviteCard","GroupInviteModal","fetchAvailableMatches","GroupsStack","GroupsNavigator","createGroupModalRef","useRef","headerProps","screenProps","GroupMembersScreenHeader","GroupInviteScreenHeader","CreateGroupModal","firstRoom","MessagingTabIcon","isNotRead","indicator","indicatorContainer","INDICATOR_SIZE","TabNavigator","createBottomTabNavigator","tabBarIcon","tabBarButton","tabBarVisible","getFocusedRouteNameFromRoute","OnboardingProgressBar","containerWidth","setIndex","targetWidth","sin","foregroundStyle","foreground","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","titleLeft","setAllValues","offerNameTouchable","offerName","sideButton","sideButtonIcon","settingsModal","settingsModalTargetType","settingsModalButton","settingsModalButtonText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","ButtonSpacer","OnboardingSlide","hideNavNext","hasNext","illustration","noKeyboardAvoidance","hasPrevious","navigateRight","keyboardVerticalOffset","previous","quitOnboarding","VALIDATION_SCHEMA","lastNameInputRef","nextProps","prev","getOnboardingTextInputsStyleProps","Illustration","enablesReturnKeyAutomatically","svgWidth","svgHeight","useState","Svg1","Svg2","Blob1","Blob2","selectedIndex","NationalityPicker","showModal","hideModal","filterProps","withFlag","withFilter","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","DARK_THEME","DEFAULT_THEME","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","NationalityControl","buttonValidStyle","FormattedDate","localizedMonth","formattedDate","dateInputProps","clearTextOnFocus","DateInputClass","input1Ref","input2Ref","input3Ref","deriveStateFromDate","pyear","parseInt","pmonth","pday","getError","minimumDate","maximumDate","focused1","focused2","focused3","validDate","inputStyleValid","inputStyleFocused","containerDay","inputDay","containerMonth","inputMonth","containerYear","inputYear","minDate","maxDate","setFullYear","BirthDateInputClass","dateInputRef","DateInput","BirthDateInput","dateTextInput","dateTextInputFocused","dateTextInputValid","birthdateText","nationalityButton","nationalityButtonValid","Blob","LanguageLevelPicker","SpokenLanguagesInput","hasErrors","levelDict","pickerButtonStyleVariant","rows","firstRowContainer","languageLabelContainer","languageLabel","levelPicker","setLanguageLevel","deleteIconContainer","removeRow","deleteIcon","languageCodes","setLanguages","allInterests","updateValues","interest","interestId","StudentBlob","StudentSvg","StaffBlob","StaffSvg","LinearGradient","buttonsContainer","OnboardingOfferScreen1","OnboardingOfferScreen2","OnboardingOfferScreen3","DegreeToggle","onUpdate","studentThemedStyles","StudentIllustration","staffThemedStyles","buttonText","thumbColor","trackColor","StaffIllustration","studentRender","staffRender","TOSDeclinedModal","TextLink","OnboardingLegalSlide","specialBackground","gradient","legalText","readMoreText","actionButtonDecline","actionButtonAccept","ONBOARDING_SCREENS","OnboardingStack","ComponentClass","tabBarOptions","showIcon","springConfig","stiffness","damping","mass","lazy","lazyPreloadDistance","BackgroundSvg","ForegroundSvg","locations","end","wideDeviceIcon","ResetPasswordFormSchema","ResetPasswordForm","pwdRepeatRef","AvatarEditButton","ValueCard","renderModalContent","renderInput","oneLine","modalLabel","modalErrorText","modalButtonsContainer","modalButton","setModal","modalOpen","initialValue","validator","validateSync","setError","overrideModal","noModal","locked","blank","onModalShown","cardWrapper","cardLabelContainer","cardLabel","rightIconContainer","modalContent","Spacer","EditProfileForm","birthDateInputRef","rootScroll","overScrollMode","universityContainer","loadingIndicator","cardText","_error","birthdateInputContainer","birthdateInput","inputError","onFieldChanged","cc","staffRoleButton","OfferCategoryRow","onApply","offerReduxConnector","offerVal","updatedVal","avatarAccessory","PROFILE_SET_FIELDS_FAILURE","setProfileFields","FormattedGender","ProfileView","actionBar","UnmatchProfileModal","matchId","blockTouchable","ActionButton","buttonTop","buttonTopBlank","buttonTopIcon","isMatched","buttonBlock","buttonReport","buttonChat","buttonMute","buttonUnmatch","profileWithMatchInfo","fetchProfile","matchingId","LocalePicker","COOKIES_PREFERENCES_KEYS","CustomizeCookiesModal","storeCookies","localCookies","cookieDict","toggleCookie","preferenceRow","preferenceRowButton","checkBoxContainer","preferenceName","preferenceDescription","versionClickCount","cardIcon","localeButton","localButtonValue","cardButtonText","oneLineCardButton","redBackground","fromEmail","Version","subject","cardButton","logosContainer","logo","logoSeaEuAround","logoErasmus","Section","sectionTitleContainer","sectionIcon","DeleteAccountFormSchema","DeleteAccountForm","warningIcon","iconBanner","retryButton","retryIcon","retryLoading","getLoginEmail","requestSendVerificationEmail","consumedInitialRoute","previousRoute","prePreviousRoute","savedNavigationState","onStateChange","toChat","fromChat","handleRouteChangeForChat","initialRoute","onReady","reactNavigationTheme","DarkTheme","DefaultTheme","NavigationContainer","linking","LinkingConfiguration","BackHandler","toAuthRoute","screenOptions","MainNavigator","OnboardingNavigator","currentTheme","CookieBanner","showCustomize","cookieText","BottomSheetModalProvider","registerRootComponent","platform","web","secondary","grey","searchBg","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","Raleway","require","RalewayThin","RalewayLight","RalewaySemiBold","RalewayBold","loadResourcesAndDataAsync","useCachedResources","fallbacks","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","notification","notifs","identifier","importance","MAX","vibrationPattern","lightColor","navigationReady","setNavigationReady","ThemedStatusBar"],"mappings":"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","file":"static/js/app.9079b997.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/Raleway-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Thin.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-SemiBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Bold.ttf\";","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport Constants from \"expo-constants\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = Constants.manifest.version!;\r\nexport const APP_SCHEME: string = Constants.manifest.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const SERVER_HOST: string = extra.SERVER_HOST;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/*export const ENVIRONMENT = Environment.Production;\r\nexport const DEBUG_MODE = true;\r\nexport const CLIENT_URL = `${\"https\"}://${\"sea-eu-around.univ-brest.fr\"}`;\r\nexport const SERVER_HOST = \"api.sea-eu-around.univ-brest.fr\";\r\nexport const BACKEND_URL = `https://${SERVER_HOST}`;*/\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\nexport const GROUP_COVER_QUALITY = 0.8;\r\n\r\n/**\r\n * Aspect ratios of various media.\r\n */\r\nexport const AVATAR_ASPECT: [number, number] = [1, 1];\r\nexport const GROUP_COVER_ASPECT: [number, number] = [2, 1];\r\n\r\n/**\r\n * The number of resources fetched per request when scrolling in infinite scrolling containers.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8; // Matching tab\r\nexport const ROOMS_FETCH_LIMIT = 10; // Messaging tab\r\nexport const MESSAGES_FETCH_LIMIT = 15; // Chat\r\nexport const HISTORY_FETCH_LIMIT = 12; // Match history tab\r\nexport const GROUPS_FETCH_LIMIT = 8;\r\nexport const GROUPS_POSTS_FETCH_LIMIT = 6;\r\nexport const POSTS_FEED_FETCH_LIMIT = 6;\r\nexport const GROUP_MEMBERS_FETCH_LIMIT = 15;\r\nexport const POST_COMMENTS_FETCH_LIMIT = 20;\r\n\r\n/**\r\n * The maximum depth for comments.\r\n * Depth indexing starts at 0 : for example 3 means that there will be 4 indentation levels.\r\n */\r\nexport const MAX_COMMENTS_DEPTH = 3;\r\n\r\n/**\r\n * The buffer delay before sending a remote request when typing in a search bar (ms).\r\n */\r\nexport const SEARCH_BUFFER_DELAY = 250;\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n\r\n/**\r\n * The time before we ask the user to consent for cookies again.\r\n */\r\nexport const COOKIE_CONSENT_DURATION = 365 * 24 * 60 * 60;\r\n\r\n/**\r\n * The amount of time before we fall back to the web version when trying to\r\n * redirect to the app.\r\n */\r\nexport const WEB_TO_APP_TIMEOUT = 5000;\r\n\r\n/**\r\n * URL of the complete Terms & Conditions.\r\n */\r\nexport const TERMS_AND_CONDITIONS_URL =\r\n    \"https://sea-eu.org/wp-content/uploads/2021/01/SEA-EU-Around_Termsconditions-v2.pdf\";\r\n\r\n/**\r\n * The email address to which bug reports should be sent.\r\n */\r\nexport const BUG_REPORT_EMAIL_ADDRESS = \"sea-eu.around@univ-brest.fr\";\r\n\r\n/**\r\n * Set this to force the initial route for debug purposes.\r\n */\r\nexport const DEBUG_FORCE_INITIAL_ROUTE: NavigatorRoute | undefined = undefined;\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef, Route} from \"@react-navigation/native\";\r\nimport {NavigatorRoute, RootNavigatorScreens} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME, WEB_TO_APP_TIMEOUT} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype RouteParams = Record<string, string | object | undefined | null>;\r\n\r\nexport function rootNavigate(route: NavigatorRoute, params?: RouteParams): void {\r\n    rootNavigationRef.current?.navigate(route as string, params);\r\n}\r\n\r\nexport function navigateBack(fallback?: NavigatorRoute): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else if (fallback) nav.navigate(fallback);\r\n    }\r\n}\r\n\r\nexport function navigateBackOr(fallback: (nac: NavigationContainerRef) => void): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else fallback(nav);\r\n    }\r\n}\r\n\r\nexport function getRouteParams(route: Route<string>): {[key: string]: unknown} {\r\n    const params = route.params;\r\n    return params ? (params as {[key: string]: unknown}) : {};\r\n}\r\n\r\nexport function attemptRedirectToApp(routeName: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS === \"web\") {\r\n        const link = `${APP_SCHEME}://${routeName}`;\r\n        window.location.replace(link);\r\n\r\n        // TODO look at Linking.openURL and Linking.canOpenURL\r\n        setTimeout(() => {\r\n            console.log(\r\n                `Failed to redirect to ${link} (perhaps app is not installed on this device) - Staying on web version`,\r\n            );\r\n            fallback();\r\n        }, WEB_TO_APP_TIMEOUT);\r\n    } else fallback();\r\n}\r\n\r\nexport function unauthorizedRedirect(): void {\r\n    rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n}\r\n\r\nexport function getInitialRoute(loggedIn: boolean, onboarded: boolean): keyof RootNavigatorScreens {\r\n    return loggedIn ? (onboarded ? \"MainScreen\" : \"OnboardingScreen\") : \"LoginRoot\";\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n\r\nexport function headerTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`);\r\n}\r\n\r\nexport function openChat(roomId: string): void {\r\n    rootNavigate(\"MainScreen\", {screen: \"TabMessaging\", params: {screen: \"ChatScreen\", params: {roomId}}});\r\n}\r\n\r\nexport function navigateToGroup(groupId: string): void {\r\n    rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"GroupScreen\", params: {groupId}}});\r\n}\r\n\r\nexport function navigateToProfile(profileId: string, state: AppState): void {\r\n    const isLocalUser = state.profile.user?.id === profileId;\r\n    if (isLocalUser) rootNavigate(\"MyProfileScreen\");\r\n    else rootNavigate(\"ProfileScreen\", {id: profileId});\r\n}\r\n","/**\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n * @see {@link https://gist.github.com/scokmen/f813c904ef79022e84ab2409574d1b45}\r\n */\r\nexport enum HttpStatusCode {\r\n    /**\r\n     * The server has received the request headers and the client should proceed to send the request body\r\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n     */\r\n    CONTINUE = 100,\r\n\r\n    /**\r\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n     */\r\n    SWITCHING_PROTOCOLS = 101,\r\n\r\n    /**\r\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n     * This prevents the client from timing out and assuming the request was lost.\r\n     */\r\n    PROCESSING = 102,\r\n\r\n    /**\r\n     * Standard response for successful HTTP requests.\r\n     * The actual response will depend on the request method used.\r\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n     */\r\n    OK = 200,\r\n\r\n    /**\r\n     * The request has been fulfilled, resulting in the creation of a new resource.\r\n     */\r\n    CREATED = 201,\r\n\r\n    /**\r\n     * The request has been accepted for processing, but the processing has not been completed.\r\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n     */\r\n    ACCEPTED = 202,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The server is a transforming proxy that received a 200 OK from its origin,\r\n     * but is returning a modified version of the origin's response.\r\n     */\r\n    NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n    /**\r\n     * The server successfully processed the request and is not returning any content.\r\n     */\r\n    NO_CONTENT = 204,\r\n\r\n    /**\r\n     * The server successfully processed the request, but is not returning any content.\r\n     * Unlike a 204 response, this response requires that the requester reset the document view.\r\n     */\r\n    RESET_CONTENT = 205,\r\n\r\n    /**\r\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n     * or split a download into multiple simultaneous streams.\r\n     */\r\n    PARTIAL_CONTENT = 206,\r\n\r\n    /**\r\n     * The message body that follows is an XML message and can contain a number of separate response codes,\r\n     * depending on how many sub-requests were made.\r\n     */\r\n    MULTI_STATUS = 207,\r\n\r\n    /**\r\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n     * and are not being included again.\r\n     */\r\n    ALREADY_REPORTED = 208,\r\n\r\n    /**\r\n     * The server has fulfilled a request for the resource,\r\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n     */\r\n    IM_USED = 226,\r\n\r\n    /**\r\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n     * For example, this code could be used to present multiple video format options,\r\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n     */\r\n    MULTIPLE_CHOICES = 300,\r\n\r\n    /**\r\n     * This and all future requests should be directed to the given URI.\r\n     */\r\n    MOVED_PERMANENTLY = 301,\r\n\r\n    /**\r\n     * This is an example of industry practice contradicting the standard.\r\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n     * use the 302 status code as if it were the 303.\r\n     */\r\n    FOUND = 302,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The response to the request can be found under another URI using a GET method.\r\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n     * the server has received the data and should issue a redirect with a separate GET message.\r\n     */\r\n    SEE_OTHER = 303,\r\n\r\n    /**\r\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n     */\r\n    NOT_MODIFIED = 304,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n     */\r\n    USE_PROXY = 305,\r\n\r\n    /**\r\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n     */\r\n    SWITCH_PROXY = 306,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n     * For example, a POST request should be repeated using another POST request.\r\n     */\r\n    TEMPORARY_REDIRECT = 307,\r\n\r\n    /**\r\n     * The request and all future requests should be repeated using another URI.\r\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n     */\r\n    PERMANENT_REDIRECT = 308,\r\n\r\n    /**\r\n     * The server cannot or will not process the request due to an apparent client error\r\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n     */\r\n    BAD_REQUEST = 400,\r\n\r\n    /**\r\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n     */\r\n    UNAUTHORIZED = 401,\r\n\r\n    /**\r\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n     */\r\n    PAYMENT_REQUIRED = 402,\r\n\r\n    /**\r\n     * The request was valid, but the server is refusing action.\r\n     * The user might not have the necessary permissions for a resource.\r\n     */\r\n    FORBIDDEN = 403,\r\n\r\n    /**\r\n     * The requested resource could not be found but may be available in the future.\r\n     * Subsequent requests by the client are permissible.\r\n     */\r\n    NOT_FOUND = 404,\r\n\r\n    /**\r\n     * A request method is not supported for the requested resource;\r\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n     */\r\n    METHOD_NOT_ALLOWED = 405,\r\n\r\n    /**\r\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n     */\r\n    NOT_ACCEPTABLE = 406,\r\n\r\n    /**\r\n     * The client must first authenticate itself with the proxy.\r\n     */\r\n    PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n    /**\r\n     * The server timed out waiting for the request.\r\n     * According to HTTP specifications:\r\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n     */\r\n    REQUEST_TIMEOUT = 408,\r\n\r\n    /**\r\n     * Indicates that the request could not be processed because of conflict in the request,\r\n     * such as an edit conflict between multiple simultaneous updates.\r\n     */\r\n    CONFLICT = 409,\r\n\r\n    /**\r\n     * Indicates that the resource requested is no longer available and will not be available again.\r\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n     * Clients such as search engines should remove the resource from their indices.\r\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n     */\r\n    GONE = 410,\r\n\r\n    /**\r\n     * The request did not specify the length of its content, which is required by the requested resource.\r\n     */\r\n    LENGTH_REQUIRED = 411,\r\n\r\n    /**\r\n     * The server does not meet one of the preconditions that the requester put on the request.\r\n     */\r\n    PRECONDITION_FAILED = 412,\r\n\r\n    /**\r\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n     */\r\n    PAYLOAD_TOO_LARGE = 413,\r\n\r\n    /**\r\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n     * in which case it should be converted to a POST request.\r\n     * Called \"Request-URI Too Long\" previously.\r\n     */\r\n    URI_TOO_LONG = 414,\r\n\r\n    /**\r\n     * The request entity has a media type which the server or resource does not support.\r\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n     */\r\n    UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n    /**\r\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n     * Called \"Requested Range Not Satisfiable\" previously.\r\n     */\r\n    RANGE_NOT_SATISFIABLE = 416,\r\n\r\n    /**\r\n     * The server cannot meet the requirements of the Expect request-header field.\r\n     */\r\n    EXPECTATION_FAILED = 417,\r\n\r\n    /**\r\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n     */\r\n    I_AM_A_TEAPOT = 418,\r\n\r\n    /**\r\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n     */\r\n    MISDIRECTED_REQUEST = 421,\r\n\r\n    /**\r\n     * The request was well-formed but was unable to be followed due to semantic errors.\r\n     */\r\n    UNPROCESSABLE_ENTITY = 422,\r\n\r\n    /**\r\n     * The resource that is being accessed is locked.\r\n     */\r\n    LOCKED = 423,\r\n\r\n    /**\r\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n     */\r\n    FAILED_DEPENDENCY = 424,\r\n\r\n    /**\r\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n     */\r\n    UPGRADE_REQUIRED = 426,\r\n\r\n    /**\r\n     * The origin server requires the request to be conditional.\r\n     * Intended to prevent \"the 'lost update' problem, where a client\r\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n     */\r\n    PRECONDITION_REQUIRED = 428,\r\n\r\n    /**\r\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n     */\r\n    TOO_MANY_REQUESTS = 429,\r\n\r\n    /**\r\n     * The server is unwilling to process the request because either an individual header field,\r\n     * or all the header fields collectively, are too large.\r\n     */\r\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n    /**\r\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n     */\r\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n    /**\r\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n     */\r\n    INTERNAL_SERVER_ERROR = 500,\r\n\r\n    /**\r\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n     */\r\n    NOT_IMPLEMENTED = 501,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n     */\r\n    BAD_GATEWAY = 502,\r\n\r\n    /**\r\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n     * Generally, this is a temporary state.\r\n     */\r\n    SERVICE_UNAVAILABLE = 503,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n     */\r\n    GATEWAY_TIMEOUT = 504,\r\n\r\n    /**\r\n     * The server does not support the HTTP protocol version used in the request\r\n     */\r\n    HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n    /**\r\n     * Transparent content negotiation for the request results in a circular reference.\r\n     */\r\n    VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n    /**\r\n     * The server is unable to store the representation needed to complete the request.\r\n     */\r\n    INSUFFICIENT_STORAGE = 507,\r\n\r\n    /**\r\n     * The server detected an infinite loop while processing the request.\r\n     */\r\n    LOOP_DETECTED = 508,\r\n\r\n    /**\r\n     * Further extensions to the request are required for the server to fulfill it.\r\n     */\r\n    NOT_EXTENDED = 510,\r\n\r\n    /**\r\n     * The client needs to authenticate to gain network access.\r\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n     */\r\n    NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL, DEBUG_MODE} from \"../constants/config\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {RequestResponse, TokenDto} from \"./dto\";\r\n\r\n// Request-related types\r\ntype Primitive = string | number | boolean | Primitive[] | undefined | null;\r\ntype URLParams = {[key: string]: Primitive};\r\ntype URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    authToken: TokenDto | null | undefined = undefined,\r\n    verbose = false,\r\n    completelySilent = false,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (authToken !== undefined) {\r\n        if (authToken === null) {\r\n            if (!completelySilent) console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {errorType: \"error.no-auth\", description: \"Endpoint requires authentication\", status: 401};\r\n        } else headers.Authorization = `Bearer ${authToken.accessToken}`;\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n    let response: Response | null = null;\r\n\r\n    try {\r\n        if (verbose && !completelySilent && DEBUG_MODE) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        let json = {status: response.status, data: {}};\r\n        if (response.status !== HttpStatusCode.NO_CONTENT) {\r\n            // Attempt to parse response JSON\r\n            try {\r\n                json = {...json, ...(await response.json())};\r\n            } catch (error) {\r\n                if (json.status === HttpStatusCode.OK) json.status = HttpStatusCode.INTERNAL_SERVER_ERROR;\r\n                if (!completelySilent) console.error(\"Unable to parse server response as JSON.\");\r\n            }\r\n        }\r\n\r\n        if (verbose && !completelySilent && DEBUG_MODE) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        if (!completelySilent) {\r\n            console.error(\r\n                `An unexpected error occured with a request to ${endpoint}. ` +\r\n                    `Method = ${method}, authToken = ${authToken}, params=${JSON.stringify(params)}, ` +\r\n                    `body=${JSON.stringify(body)}`,\r\n            );\r\n            console.error(error);\r\n            console.error(\"Response received from server:\", response);\r\n        }\r\n        return {errorType: \"error.unknown\", description: \"A client-side exception was raised.\", status: 400};\r\n    }\r\n}\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {\r\n    InterestDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    RemoteValidationErrors,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {ChatRoom, ChatRoomUser} from \"../model/chat-room\";\r\nimport {UserSettings} from \"../model/user-settings\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport {Group, GroupPost, PostSortingOrder} from \"../model/groups\";\r\n\r\nexport type FailableActionReturn = {success: boolean; errors?: string[]};\r\nexport type FailableThunkAction = AppThunk<Promise<FailableActionReturn>>;\r\nexport type ValidatedActionReturn = {success: boolean; errors?: RemoteValidationErrors};\r\nexport type ValidatedThunkAction = AppThunk<Promise<ValidatedActionReturn>>;\r\n\r\nexport type PaginatedState = {page: number; canFetchMore: boolean; fetching: boolean};\r\nexport const initialPaginatedState = (): PaginatedState => ({page: 1, canFetchMore: true, fetching: false});\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    type: Role | null;\r\n    degree: Degree | null;\r\n    staffRoles: {[key: string]: boolean};\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    accountNeedsRecovery: boolean;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n    onboardingIndex: number;\r\n};\r\n\r\nexport type SettingsState = {\r\n    userSettings: UserSettings;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n    previousVersion: string | null;\r\n    isFirstLaunch: boolean;\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n    uploadingAvatar: boolean;\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    educationFields: string[];\r\n    staffRoles: StaffRole[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    profiles: {[key: string]: UserProfile};\r\n    orderedProfileIds: string[];\r\n    profilesPagination: PaginatedState;\r\n    historyPagination: PaginatedState;\r\n    historyFilters: {[key: string]: boolean};\r\n    historyItems: MatchHistoryItem[];\r\n    myMatches: UserProfile[];\r\n    myMatchesPagination: PaginatedState;\r\n};\r\n\r\nexport type MessagingState = {\r\n    socketState: {connecting: boolean; connected: boolean};\r\n    matchRooms: {[key: string]: ChatRoom}; // store by id for faster access\r\n    matchRoomsOrdered: string[];\r\n    matchRoomsPagination: PaginatedState;\r\n    activeRoomId: string | null;\r\n    localChatUser: ChatRoomUser | null;\r\n    fetchingNewMessages: boolean;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type NotificationsState = {};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type ReportsState = {};\r\n\r\nexport type GroupsState = {\r\n    groupsDict: {[key: string]: Group};\r\n    pagination: PaginatedState;\r\n    groups: string[];\r\n    myGroupsPagination: PaginatedState;\r\n    myGroups: string[];\r\n    myGroupInvitesPagination: PaginatedState;\r\n    myGroupInvites: string[];\r\n    postsSortOrder: PostSortingOrder;\r\n    feedPagination: PaginatedState;\r\n    postsFeed: {[key: string]: GroupPost};\r\n    postsFeedIds: string[];\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n    messaging: MessagingState;\r\n    notifications: NotificationsState;\r\n    reports: ReportsState;\r\n    groups: GroupsState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n\r\n// Common action types\r\nexport type PaginatedFetchBeginAction = {type: string};\r\nexport type PaginatedFetchFailureAction = {type: string};\r\nexport type PaginatedFetchSuccessAction<T> = {\r\n    type: string;\r\n    items: T[];\r\n    canFetchMore: boolean;\r\n};\r\nexport type PaginatedFetchSuccessActionRefreshable<T> = {\r\n    type: string;\r\n    items: T[];\r\n    canFetchMore: boolean;\r\n    refresh: boolean;\r\n};\r\nexport type PaginatedFetchRefreshAction = {type: string};\r\n","import {GroupMemberStatus, GroupRole} from \"../api/dto\";\r\nimport {PaginatedState} from \"../state/types\";\r\nimport {UserProfile} from \"./user-profile\";\r\n\r\nexport type Group = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n    cover: string | null;\r\n    uploadingCover: boolean;\r\n    members: {[key: string]: GroupMember};\r\n    membersPaginations: {[key in GroupMemberStatus]: PaginatedState};\r\n    memberIds: {[key in GroupMemberStatus]: string[]};\r\n    posts: {[key: string]: GroupPost};\r\n    postIds: string[];\r\n    postsPagination: PaginatedState;\r\n    myRole: GroupRole | null;\r\n    myStatus: GroupMemberStatus | null;\r\n    numApprovedMembers: number | null;\r\n    availableMatches: {\r\n        fetching: boolean;\r\n        profiles: UserProfile[] | null;\r\n    };\r\n};\r\n\r\nexport type GroupMember = {\r\n    profile: UserProfile;\r\n    role: GroupRole;\r\n    status: GroupMemberStatus;\r\n};\r\n\r\nexport type GroupPost = {\r\n    id: string;\r\n    groupId: string;\r\n    type: string;\r\n    status: string;\r\n    text: string;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    creator: UserProfile;\r\n    score: number;\r\n    voteStatus: GroupVoteStatus;\r\n    comments: {[key: string]: PostComment};\r\n    commentsCount: number; // total number of comments on the post\r\n    commentIds: string[];\r\n    commentsPagination: PaginatedState;\r\n};\r\n\r\nexport type PostComment = {\r\n    id: string;\r\n    text: string;\r\n    score: number;\r\n    voteStatus: GroupVoteStatus;\r\n    creator: UserProfile;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    childrenIds: string[];\r\n    parentId: string | null;\r\n    depth: number;\r\n};\r\n\r\nexport enum PostSortingOrder {\r\n    Newest = \"newest\",\r\n    Oldest = \"oldest\",\r\n    Popular = \"popular\",\r\n}\r\n\r\nexport const POST_SORTING_ORDERS = [PostSortingOrder.Newest, PostSortingOrder.Oldest, PostSortingOrder.Popular];\r\n\r\nexport enum GroupVoteStatus {\r\n    Upvote = \"up\",\r\n    Downvote = \"down\",\r\n    Neutral = \"neutral\",\r\n}\r\nexport const GROUP_VOTE_VALUES = {\r\n    [GroupVoteStatus.Upvote]: 1,\r\n    [GroupVoteStatus.Downvote]: -1,\r\n    [GroupVoteStatus.Neutral]: 0,\r\n};\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {\r\n    ChatRoomProfileDto,\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    MatchHistoryItemDto,\r\n    OfferValueDto,\r\n    ResponseChatMessageDto,\r\n    ResponseProfileDto,\r\n    ResponseProfileDtoStaff,\r\n    ResponseProfileDtoStudent,\r\n    ResponseRoomDto,\r\n    ResponseUserDto,\r\n    ResponseProfileWithMatchInfoDto,\r\n    ResponseGroupDto,\r\n    ResponseGroupMemberDto,\r\n    ResponseGroupPostDto,\r\n    ResponsePostCommentDto,\r\n} from \"./dto\";\r\nimport {\r\n    UserProfile,\r\n    UserProfileCommon,\r\n    UserProfileStaff,\r\n    UserProfileStudent,\r\n    UserProfileWithMatchInfo,\r\n} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../model/chat-room\";\r\nimport {initialPaginatedState} from \"../state/types\";\r\nimport {Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport {PARTNER_UNIVERSITIES} from \"../constants/universities\";\r\nimport {Group, GroupMember, GroupPost, PostComment, GroupVoteStatus} from \"../model/groups\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    const common: UserProfileCommon = {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: (dto.interests || []).map((i) => i.id),\r\n        languages: dto.languages || [],\r\n        university: PARTNER_UNIVERSITIES.find((u) => u.key === dto.university) || PARTNER_UNIVERSITIES[0],\r\n    };\r\n\r\n    let complete: UserProfile;\r\n    if (dto.type === \"staff\") {\r\n        const staffDto = dto as ResponseProfileDtoStaff;\r\n        complete = {...common, staffRoles: (staffDto.staffRoles || []).map((r) => r.id as StaffRole)};\r\n    } else {\r\n        const studentDto = dto as ResponseProfileDtoStudent;\r\n        complete = {...common, degree: studentDto.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        interests: profile.interests.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    let complete: CreateProfileDto;\r\n    if (profile.type === \"staff\") {\r\n        const staff = profile as UserProfileStaff;\r\n        complete = {...common, staffRoles: staff.staffRoles.map((id: string) => ({id}))};\r\n    } else {\r\n        const student = profile as UserProfileStudent;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(\r\n    profile: Partial<UserProfile>,\r\n    type?: Role,\r\n): Partial<CreateProfileDto> {\r\n    const common: Partial<CreateProfileDtoCommon> = {\r\n        ...profile,\r\n        type,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        interests: profile.interests?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n\r\n    let complete: Partial<CreateProfileDto>;\r\n    if (type === \"staff\") {\r\n        const staff = profile as Partial<UserProfileStaff>;\r\n        complete = {...common, staffRoles: staff.staffRoles ? staff.staffRoles.map((id: string) => ({id})) : undefined};\r\n    } else {\r\n        const student = profile as Partial<UserProfileStudent>;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToRoom(dto: ResponseRoomDto): ChatRoom {\r\n    const users: ChatRoomUser[] = dto.profiles.map((p: ChatRoomProfileDto) => ({\r\n        _id: p.id,\r\n        name: `${p.firstName} ${p.lastName}`,\r\n        avatar: p.avatar || \"\",\r\n        lastMessageSeenId: p.lastMessageSeenId,\r\n        lastMessageSeenDate: p.lastMessageSeenDate ? new Date(p.lastMessageSeenDate) : null,\r\n    }));\r\n\r\n    // Try to find the sender of the last message in the list of users that are in the room\r\n    let lastMessage = null;\r\n    if (dto.lastMessage) {\r\n        const msg: ResponseChatMessageDto = dto.lastMessage;\r\n        const sender = users.find((u) => u._id == msg.senderId);\r\n        if (sender) lastMessage = convertDtoToChatMessage(sender, msg);\r\n    }\r\n\r\n    return {\r\n        ...dto,\r\n        users,\r\n        messages: [],\r\n        lastMessage,\r\n        writing: {},\r\n        messagePagination: initialPaginatedState(),\r\n    };\r\n}\r\n\r\nexport function convertDtoToChatMessage(user: ChatRoomUser, dto: ResponseChatMessageDto): ChatRoomMessage {\r\n    return {\r\n        ...dto,\r\n        _id: dto.id,\r\n        createdAt: new Date(dto.updatedAt),\r\n        user,\r\n    };\r\n}\r\n\r\nexport function convertDtoToHistoryItem(dto: MatchHistoryItemDto): MatchHistoryItem {\r\n    return {\r\n        profile: convertDtoToProfile(dto.profile),\r\n        status: dto.status,\r\n        date: new Date(dto.date),\r\n        id: dto.id,\r\n    };\r\n}\r\n\r\nexport function convertDtoToProfileWithMatchInfo(dto: ResponseProfileWithMatchInfoDto): UserProfileWithMatchInfo {\r\n    return {...dto, profile: convertDtoToProfile(dto.profile)};\r\n}\r\n\r\nexport function convertDtoToGroup(dto: ResponseGroupDto): Group {\r\n    return {\r\n        ...dto,\r\n        description: dto.description || \"\",\r\n        membersPaginations: {\r\n            approved: initialPaginatedState(),\r\n            banned: initialPaginatedState(),\r\n            pending: initialPaginatedState(),\r\n            \"invited-by-admin\": initialPaginatedState(),\r\n            invited: initialPaginatedState(),\r\n        },\r\n        memberIds: {\r\n            approved: [],\r\n            banned: [],\r\n            pending: [],\r\n            \"invited-by-admin\": [],\r\n            invited: [],\r\n        },\r\n        members: {},\r\n        posts: {},\r\n        postIds: [],\r\n        postsPagination: initialPaginatedState(),\r\n        uploadingCover: false,\r\n        myRole: dto.isMember ? dto.role : null,\r\n        myStatus: dto.status || null,\r\n        numApprovedMembers: null,\r\n        availableMatches: {\r\n            fetching: false,\r\n            profiles: null,\r\n        },\r\n    };\r\n}\r\n\r\nexport function convertDtoToGroupMember(dto: ResponseGroupMemberDto): GroupMember {\r\n    return {...dto, profile: convertDtoToProfile(dto.profile)};\r\n}\r\n\r\nexport function convertDtoToGroupPost(dto: ResponseGroupPostDto, creator?: UserProfile): GroupPost {\r\n    return {\r\n        ...dto,\r\n        comments: {},\r\n        commentIds: [],\r\n        commentsPagination: initialPaginatedState(),\r\n        createdAt: new Date(dto.createdAt),\r\n        updatedAt: new Date(dto.updatedAt),\r\n        creator: creator && !dto.creator ? creator : convertDtoToProfile(dto.creator),\r\n        score: dto.upVotesCount - dto.downVotesCount,\r\n        voteStatus: dto.isVoted\r\n            ? dto.voteType === \"up\"\r\n                ? GroupVoteStatus.Upvote\r\n                : dto.voteType === \"down\"\r\n                ? GroupVoteStatus.Downvote\r\n                : GroupVoteStatus.Neutral\r\n            : GroupVoteStatus.Neutral,\r\n    };\r\n}\r\n\r\nexport function convertDtoToPostComments(\r\n    dto: ResponsePostCommentDto,\r\n    parentId: string | null = null,\r\n    depth = 0,\r\n    creator?: UserProfile,\r\n): PostComment[] {\r\n    const comment: PostComment = {\r\n        id: dto.id,\r\n        text: dto.text,\r\n        createdAt: new Date(dto.createdAt),\r\n        updatedAt: new Date(dto.updatedAt),\r\n        creator: creator && !dto.creator ? creator : convertDtoToProfile(dto.creator),\r\n        score: dto.upVotesCount - dto.downVotesCount,\r\n        voteStatus: dto.isVoted\r\n            ? dto.voteType === \"up\"\r\n                ? GroupVoteStatus.Upvote\r\n                : dto.voteType === \"down\"\r\n                ? GroupVoteStatus.Downvote\r\n                : GroupVoteStatus.Neutral\r\n            : GroupVoteStatus.Neutral,\r\n        childrenIds: dto.children?.map((c) => c.id) || [],\r\n        parentId,\r\n        depth,\r\n    };\r\n\r\n    if (dto.children && dto.children.length > 0) {\r\n        // Get all children, including nested\r\n        const allChildren = dto.children.flatMap((childDto) =>\r\n            convertDtoToPostComments(childDto, comment.id, depth + 1, creator),\r\n        );\r\n        return [comment].concat(allChildren);\r\n    } else return [comment];\r\n}\r\n","import {AppThunk} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    RequestResponse,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n    SuccessfulRequestResponse,\r\n    ResponseProfileWithMatchInfoDto,\r\n} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    convertDtoToProfile,\r\n    convertDtoToProfileWithMatchInfo,\r\n    convertDtoToUser,\r\n    convertPartialProfileToCreateDto,\r\n} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {readCachedStaticData} from \"../persistent-storage/static\";\r\nimport {uploadImage} from \"../../api/media-upload\";\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_FAILURE = \"PROFILE/SET_FIELDS_FAILURE\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    FETCH_PROFILE_SUCCESS = \"PROFILE/FETCH_PROFILE_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_BEGIN = \"PROFILE/SET_AVATAR_BEGIN\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\nexport type SetProfileFieldsFailureAction = {\r\n    type: string;\r\n};\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {type: string};\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {type: string};\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type FetchProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfileWithMatchInfo;\r\n};\r\n\r\nexport type SetAvatarBeginAction = {type: string};\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\nexport type SetAvatarFailureAction = {type: string};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | SetProfileFieldsFailureAction\r\n    | SetProfileFieldsSuccessAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | FetchProfileSuccessAction\r\n    | SetAvatarBeginAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\nconst setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nconst setProfileFieldsFailure = (): SetProfileFieldsFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_FAILURE,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const type = getState().profile.user?.profile?.type;\r\n\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields, type);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(setProfileFieldsSuccess(fields));\r\n    else dispatch(setProfileFieldsFailure());\r\n};\r\n\r\nconst createProfileSuccess = (profile: UserProfile): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profile = convertDtoToProfile(payload as ResponseProfileDto);\r\n        dispatch(createProfileSuccess(profile));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    let fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n    if (!Array.isArray(fromCache)) fromCache = false; // fix corrupt cache\r\n\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"offers\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const offers = payload as OfferDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = offers.length == 0;\r\n                dispatch(loadProfileOffersSuccess(cacheIsGood ? fromCache.data : offers, cacheIsGood));\r\n            } else dispatch(loadProfileOffersSuccess(offers));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    let fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n    if (!Array.isArray(fromCache)) fromCache = false; // fix corrupt cache\r\n\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"interests\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const interests = payload as InterestDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = interests.length == 0;\r\n                dispatch(loadProfileInterestsSuccess(cacheIsGood ? fromCache.data : interests, cacheIsGood));\r\n            } else dispatch(loadProfileInterestsSuccess(interests));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const user = convertDtoToUser(payload as ResponseUserDto);\r\n        dispatch(fetchUserSuccess(user));\r\n    }\r\n};\r\n\r\nconst fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const fetchProfile = (id: string): AppThunk<Promise<UserProfileWithMatchInfo | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(`profiles/${id}`, \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseProfileWithMatchInfoDto;\r\n        const profileWithMatchInfo = convertDtoToProfileWithMatchInfo(payload);\r\n        dispatch(fetchProfileSuccess(profileWithMatchInfo));\r\n        return profileWithMatchInfo;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst fetchProfileSuccess = (profile: UserProfileWithMatchInfo): FetchProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nconst setAvatarBegin = (): SetAvatarBeginAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_BEGIN,\r\n});\r\n\r\nconst setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nconst setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {uploadingAvatar},\r\n    } = getState();\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (!token || uploadingAvatar) {\r\n        fail();\r\n        return;\r\n    }\r\n\r\n    dispatch(setAvatarBegin());\r\n\r\n    const fileName = await uploadImage(token, image, fail);\r\n\r\n    if (fileName) {\r\n        // Submit the filename to the server\r\n        const response = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, token);\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const {avatar} = (response as SuccessfulRequestResponse).data as AvatarSuccessfulUpdatedDto;\r\n            dispatch(setAvatarSuccess(avatar));\r\n        } else fail();\r\n    }\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {DEBUG_MODE} from \"../../constants/config\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n * @param cookieConsent - Whether or not the user has agreed to storing this type of data. This is here so we don't forget.\r\n */\r\nexport function storeStaticData<T>(key: string, data: T, cookieConsent: boolean): void {\r\n    if (cookieConsent) {\r\n        if (DEBUG_MODE) console.log(`Updating static storage '${key}'.`);\r\n\r\n        // Store the data along with the date\r\n        const storageObject = {\r\n            updatedAt: new Date().toJSON(),\r\n            data,\r\n        };\r\n\r\n        AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n    }\r\n}\r\n\r\n/**\r\n * Clear the data at the given keys from persistent storage.\r\n * @param keys - The keys to clear.\r\n */\r\nexport function clearStaticData<T>(...keys: string[]): void {\r\n    if (DEBUG_MODE) console.log(`Clearing static storage: ${keys.map((s) => `'${s}'`).join(\", \")}.`);\r\n    AsyncStorage.multiRemove(keys);\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {SignedUrlResponseDto, SuccessfulRequestResponse, TokenDto} from \"./dto\";\r\nimport {requestBackend} from \"./utils\";\r\n\r\nexport async function uploadImage(token: TokenDto, image: ImageInfo, onFailure: () => void): Promise<string | null> {\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {fileName, s3Url} = payload as SignedUrlResponseDto;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(s3Url, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/octet-stream\",\r\n                },\r\n                body: imageBlob,\r\n            });\r\n\r\n            return fileName;\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            onFailure();\r\n            return null;\r\n        }\r\n    } else {\r\n        onFailure();\r\n        return null;\r\n    }\r\n}\r\n","import {AppThunk, OnboardingState, ValidatedThunkAction} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, SuccessfulRequestResponse, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {readCachedCredentials} from \"../persistent-storage/auth\";\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_IN_RECOVER_CANCEL = \"AUTH/LOG_IN_RECOVER_CANCEL\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SEND_VERIFICATION_EMAIL_SUCCESS = \"AUTH/SEND_VERIFICATION_EMAIL_SUCCESS\",\r\n    BEGIN_ONBOARDING = \"AUTH/BEGIN_ONBOARDING\",\r\n    NEXT_ONBOARDING_SLIDE = \"AUTH/NEXT_ONBOARDING_SLIDE\",\r\n    PREVIOUS_ONBOARDING_SLIDE = \"AUTH/PREVIOUS_ONBOARDING_SLIDE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n    DELETE_ACCOUNT_SUCCESS = \"AUTH/DELETE_ACCOUNT_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\nexport type RegisterSuccessAction = {type: string; user: User};\r\nexport type RegisterFailureAction = {type: string};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\nexport type LogInFailureAction = {type: string; email?: string; needsRecovery: boolean; needsVerify: boolean};\r\nexport type LogInRecoverCancelAction = {type: string};\r\n\r\nexport type LogOutAction = {type: string; redirect: boolean};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\nexport type ValidateAccountFailureAction = {type: string};\r\n\r\nexport type SendVerificationEmailSuccess = {type: string};\r\n\r\nexport type BeginOnboardingAction = {type: string};\r\nexport type NextOnboardingSlideAction = {type: string};\r\nexport type PreviousOnboardingSlideAction = {type: string};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {type: string};\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {type: string};\r\n\r\nexport type DeleteAccountSuccessAction = {type: string};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogInRecoverCancelAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SendVerificationEmailSuccess\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction\r\n    | DeleteAccountSuccessAction;\r\n\r\n// Register actions\r\n\r\nconst registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = getState().settings.userSettings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const successResp = response as SuccessfulRequestResponse;\r\n        dispatch(registerSuccess(successResp.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nconst registerFailure = (): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n});\r\n\r\n// Log in actions\r\n\r\nconst loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nconst loginFailure = (email?: string, needsRecovery = false, needsVerify = false): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n    email,\r\n    needsRecovery,\r\n    needsVerify,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<User | undefined>> => async (\r\n    dispatch,\r\n): Promise<User | undefined> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n\r\n        if (response.status == HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data as ResponseUserDto;\r\n            const user = convertDtoToUser(payload);\r\n            dispatch(loginSuccess(token, user, true));\r\n            return user;\r\n        } else dispatch(loginFailure()); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return undefined;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string, recover = false): ValidatedThunkAction => async (\r\n    dispatch,\r\n) => {\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password, recover});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, convertDtoToUser(payload.user), false));\r\n        return {success: true};\r\n    } else {\r\n        let needsRecovery = false;\r\n        let needsVerify = false;\r\n        if (response.status === HttpStatusCode.FORBIDDEN) {\r\n            needsRecovery = response.errorType === \"error.user_being_deleted\";\r\n            needsVerify = response.errorType === \"error.user_not_verified\";\r\n        }\r\n        dispatch(loginFailure(email, needsRecovery, needsVerify));\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const cancelLoginRecovery = (): LogInRecoverCancelAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_RECOVER_CANCEL,\r\n});\r\n\r\nexport const logout = (redirect = true): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n    redirect,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {email} = payload as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure());\r\n    }\r\n};\r\n\r\nconst validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst validateAccountFailure = (): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n});\r\n\r\nexport const requestSendVerificationEmail = (email: string): AppThunk<Promise<boolean>> => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify/resend\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(sendVerificationEmailSuccess());\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst sendVerificationEmailSuccess = (): SendVerificationEmailSuccess => ({\r\n    type: AUTH_ACTION_TYPES.SEND_VERIFICATION_EMAIL_SUCCESS,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(forgotPasswordFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst forgotPasswordFailure = (): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const deleteAccount = (password: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"users\", \"DELETE\", {}, {password}, token);\r\n\r\n    if (response.status == HttpStatusCode.NO_CONTENT) {\r\n        dispatch(logout(false));\r\n        dispatch(deleteAccountSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deleteAccountSuccess = (): DeleteAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const beginOnboarding = (): BeginOnboardingAction => ({\r\n    type: AUTH_ACTION_TYPES.BEGIN_ONBOARDING,\r\n});\r\n\r\nexport const nextOnboardingSlide = (): NextOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const previousOnboardingSlide = (): PreviousOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch, getState) => {\r\n    const n = Math.round(1e3 * Math.random());\r\n    const email = `test${n}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"staff\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + n,\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [{id: \"baking\"}, {id: \"art\"}, {id: \"brunch\"}],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"answer-academic-questions\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [{id: \"education-science\"}, {id: \"music-performing-arts\"}],\r\n                //degree: \"m2\",\r\n                staffRoles: [{id: \"research\"}, {id: \"teaching\"}],\r\n            }),\r\n        );\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that the server is alive and reachable by the client.\r\n */\r\nexport const verifyBackendConnection = (): AppThunk<Promise<boolean>> => async () => {\r\n    const response = await requestBackend(\"ping\", \"GET\", {}, {}, undefined, false, true);\r\n\r\n    if (response.status == HttpStatusCode.OK) return true;\r\n    else return false;\r\n};\r\n","import i18n from \"i18n-js\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {ErrorRequestResponse, RemoteValidationErrors, RequestResponse, UnprocessableEntityRequestResponse} from \"./dto\";\r\n\r\nexport const localizeError = (err: string): string => i18n.t(err, {defaultValue: err});\r\n\r\nconst extractError = ({code, description}: {code: string; description: string}): string => {\r\n    const isMissingLocalization = i18n.t(code, {defaultValue: \"missing\"}) == \"missing\";\r\n    return isMissingLocalization ? description : code;\r\n};\r\n\r\nexport function gatherValidationErrors(resp: RequestResponse): RemoteValidationErrors | undefined {\r\n    if (resp.status == HttpStatusCode.OK) return undefined;\r\n    else {\r\n        const {errorType, description} = resp as ErrorRequestResponse;\r\n        const output: RemoteValidationErrors = {general: extractError({code: errorType, description}), fields: {}};\r\n        if (resp.status == HttpStatusCode.UNPROCESSABLE_ENTITY) {\r\n            const {errors} = resp as UnprocessableEntityRequestResponse;\r\n            //errors.forEach((e) => (output.fields[e.property] = e.codes.map(extractError)));\r\n            // Only keep the first error (makes displaying errors a lot easier)\r\n            errors.forEach((e) => (output.fields[e.property] = extractError(e.codes[0])));\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the non-specific error field from remote errors. If field-specific errors are available, yields undefined instead.\r\n * @param errors - Remote validation errors.\r\n */\r\nexport function generalError(errors?: RemoteValidationErrors): string | undefined {\r\n    if (!errors) return undefined;\r\n    else if (Object.keys(errors.fields).length > 0) return undefined;\r\n    else return errors.general;\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {TokenDto} from \"../../api/dto\";\r\nimport {CredentialsStorageObject} from \"../../types\";\r\n\r\n/**\r\n * Override auth information in secure.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nexport function storeAuthInformation(email: string, token: TokenDto): void {\r\n    const toStore: CredentialsStorageObject = {email, token};\r\n    AsyncStorage.setItem(\"auth\", JSON.stringify(toStore));\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from storage.\r\n */\r\nexport function discardAuthInformation(): void {\r\n    AsyncStorage.removeItem(\"auth\");\r\n}\r\n\r\n/**\r\n * Read auth information from storage.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const raw = await AsyncStorage.getItem(\"auth\");\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\nimport {CookiesPreferences} from \"../../model/user-settings\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n    LOAD_COOKIES_PREFERENCES = \"SETTINGS/LOAD_COOKIES_PREFERENCES\",\r\n    SAVE_COOKIES_PREFERENCES = \"SETTINGS/SAVE_COOKIES_PREFERENCES\",\r\n    LOAD_VERSION_INFO = \"SETTINGS/LOAD_VERSION_INFO\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type LoadCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n    consentDate: Date;\r\n};\r\n\r\nexport type SaveCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n};\r\n\r\nexport type LoadVersionInfoAction = {\r\n    type: string;\r\n    version: string | null;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction | LoadCookiesPreferencesAction | LoadVersionInfoAction;\r\n\r\nexport const setTheme = (theme: ThemeKey, fromCache?: boolean): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme, fromCache} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale, fromCache?: boolean): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_LOCALE, locale, fromCache} as SetLocaleAction;\r\n};\r\n\r\nexport const loadCookiesPreferences = (\r\n    preferences: CookiesPreferences,\r\n    consentDate: Date,\r\n): LoadCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES,\r\n    preferences,\r\n    consentDate,\r\n});\r\n\r\nexport const saveCookiesPreferences = (preferences: CookiesPreferences): SaveCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES,\r\n    preferences,\r\n});\r\n\r\nexport const loadVersionInfo = (version: string | null): LoadVersionInfoAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO,\r\n    version,\r\n});\r\n\r\nexport const acceptAllCookies = (): AppThunk => async (dispatch) => {\r\n    dispatch(saveCookiesPreferences({auth: true, cache: true, settings: true}));\r\n};\r\n","import {OfferValueDto} from \"../api/dto\";\r\nimport {GroupPost, PostComment} from \"./groups\";\r\nimport {UserProfile} from \"./user-profile\";\r\nimport i18n from \"i18n-js\";\r\nimport {capitalize} from \"lodash\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Filter only the offers that match a given profile.\r\n * @param offers A list of offer values.\r\n * @param profile A profile\r\n * @returns the offers that target the given profile.\r\n */\r\nexport function getMatchingOffers(offers: OfferValueDto[], profile: UserProfile): OfferValueDto[] {\r\n    return offers.filter((o: OfferValueDto) => {\r\n        if (\r\n            (!o.allowFemale && profile.gender === \"female\") ||\r\n            (!o.allowMale && profile.gender === \"male\") ||\r\n            (!o.allowOther && profile.gender === \"other\") ||\r\n            (!o.allowStaff && profile.type === \"staff\") ||\r\n            (!o.allowStudent && profile.type === \"student\")\r\n        )\r\n            return false;\r\n        return true;\r\n    });\r\n}\r\n\r\nexport function formatDateAgo(date: Date): string | 0 {\r\n    const time = new Date().getTime() - date.getTime();\r\n\r\n    const SECOND = 1000;\r\n    const MINUTE = 60 * SECOND;\r\n    const HOUR = 60 * MINUTE;\r\n    const DAY = 24 * HOUR;\r\n\r\n    const timespans = [\r\n        {unit: \"minute\", duration: MINUTE},\r\n        {unit: \"hour\", duration: HOUR},\r\n        {unit: \"day\", duration: DAY},\r\n        {unit: \"week\", duration: DAY * 7},\r\n        {unit: \"month\", duration: DAY * 30},\r\n    ];\r\n\r\n    let i = 0;\r\n    while (i < timespans.length && time >= timespans[i].duration) i++;\r\n    i--;\r\n\r\n    if (i === -1) return 0;\r\n    if (i === timespans.length - 1) {\r\n        return i18n.t(\"dateRelative.precise\", {\r\n            day: date.getDate(),\r\n            month: i18n.t(`months.${date.getMonth()}`),\r\n            year: date.getFullYear(),\r\n        });\r\n    } else {\r\n        const t = timespans[i];\r\n        const amount = Math.round(time / t.duration);\r\n        return i18n.t(\"dateRelative.ago\", {\r\n            amount,\r\n            unit: i18n.t(`dateUnits.${amount === 1 ? \"singular\" : \"plural\"}.${t.unit}`),\r\n        });\r\n    }\r\n}\r\n\r\nexport function formatPostDate({createdAt, updatedAt}: GroupPost): string {\r\n    /*const tests: Partial<GroupPost>[] = [\r\n        {\r\n            createdAt: new Date(\"1998-11-01T17:33:55.978Z\"),\r\n            updatedAt: new Date(\"1998-12-01T17:33:55.978Z\"),\r\n        },\r\n        {createdAt: new Date(\"2020-11-08T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-01-01T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-03T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-08T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-10T23:33:55.978Z\")},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 61)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 60)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 59)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 61)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 40)},\r\n    ];\r\n    post = {...post, ...tests[10]};*/\r\n\r\n    const isEdit = updatedAt.getTime() != createdAt.getTime();\r\n\r\n    const createdAgo = formatDateAgo(createdAt);\r\n    let text = createdAgo === 0 ? i18n.t(\"groups.justPosted\") : `${capitalize(createdAgo)}`;\r\n\r\n    if (isEdit) {\r\n        const updatedAgo = formatDateAgo(updatedAt);\r\n        text += ` (${updatedAgo === 0 ? i18n.t(\"groups.justEdited\") : i18n.t(\"groups.editedAgo\", {ago: updatedAgo})})`;\r\n    }\r\n    return text;\r\n}\r\n\r\nexport function formatCommentDate({createdAt, updatedAt}: PostComment): string {\r\n    const isEdit = updatedAt.getTime() != createdAt.getTime();\r\n\r\n    const createdAgo = formatDateAgo(createdAt);\r\n    let text = createdAgo === 0 ? i18n.t(\"groups.justCommented\") : `${createdAgo}`;\r\n\r\n    if (isEdit) {\r\n        /*const updatedAgo = formatDateAgo(updatedAt);\r\n        text += ` (${updatedAgo === 0 ? i18n.t(\"groups.justEdited\") : i18n.t(\"groups.editedAgo\", {ago: updatedAgo})})`;*/\r\n        text += ` (${i18n.t(\"groups.edited\")})`;\r\n    }\r\n    return text;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {AuthState, OnboardingState} from \"../types\";\r\nimport {\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n    LogInFailureAction,\r\n} from \"./actions\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    type: null,\r\n    degree: null,\r\n    staffRoles: {},\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    accountNeedsRecovery: false,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n    onboardingIndex: 0,\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = action as RegisterBeginAction;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = action as RegisterSuccessAction;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = action as ValidateAccountSuccessAction;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = action as LogInSuccessAction;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                accountNeedsRecovery: false,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            const {needsRecovery, email} = action as LogInFailureAction;\r\n            return {\r\n                ...state,\r\n                registerEmail: email || state.registerEmail, // change the registerEmail if one is provided\r\n                accountNeedsRecovery: needsRecovery,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_RECOVER_CANCEL: {\r\n            return {...state, accountNeedsRecovery: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                accountNeedsRecovery: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            return {...state, onboardingIndex: 0};\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex - 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex + 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = action as SetOnboardingValuesAction;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = action as SetOnboardingOfferValueAction;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole = \"teaching\" | \"research\" | \"administration\" | \"technical\" | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\"teaching\", \"research\", \"administration\", \"technical\", \"other\"];\r\n\r\n// MaterialIcons\r\nexport const STAFF_ROLE_ICONS = [\"school\", \"library-books\", \"account-balance\", \"build\", \"help\"];\r\n// \"verified-user\" icon for ambassadors?\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 16;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\nexport const MIN_POST_LENGTH = 5;\r\nexport const MAX_POST_LENGTH = 3000;\r\nexport const MIN_COMMENT_LENGTH = 2;\r\nexport const MAX_COMMENT_LENGTH = 1200;\r\nexport const MIN_GROUP_NAME_LENGTH = 4;\r\nexport const MAX_GROUP_NAME_LENGTH = 60;\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&^\\\\/\\-_+=()[\\]|\"'~<>:;§.])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().nullable().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n\r\nexport const VALIDATOR_GROUP_NAME = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_GROUP_NAME_LENGTH, \"validation.group.name.tooShort\")\r\n    .max(MAX_GROUP_NAME_LENGTH, \"validation.group.name.tooLong\");\r\n\r\nexport const VALIDATOR_POST_TEXT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_POST_LENGTH, \"validation.post.tooShort\")\r\n    .max(MAX_POST_LENGTH, \"validation.post.tooLong\");\r\n\r\nexport const VALIDATOR_COMMENT_TEXT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_COMMENT_LENGTH, \"validation.comment.tooShort\")\r\n    .max(MAX_COMMENT_LENGTH, \"validation.comment.tooLong\");\r\n","import {\r\n    MAX_COMMENT_LENGTH,\r\n    MAX_GROUP_NAME_LENGTH,\r\n    MAX_POST_LENGTH,\r\n    MIN_COMMENT_LENGTH,\r\n    MIN_GROUP_NAME_LENGTH,\r\n    MIN_PASSWORD_LENGTH,\r\n    MIN_POST_LENGTH,\r\n} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        locales: {\r\n            en: \"English\",\r\n            fr: \"French\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Search\",\r\n        send: \"Send\",\r\n        cancel: \"Cancel\",\r\n        close: \"Close\",\r\n        delete: \"Delete\",\r\n        ok: \"OK\",\r\n        save: \"Save\",\r\n        noResultsFound: \"No results found\",\r\n        apply: \"Apply\",\r\n        logOut: \"Log out\",\r\n        showMore: \"Show more\",\r\n        showLess: \"Show less\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n        dateInput: {\r\n            dayPlaceholder: \"DD\",\r\n            monthPlaceholder: \"MM\",\r\n            yearPlaceholder: \"YYYY\",\r\n        },\r\n        nationalityPicker: {\r\n            placeholder: \"Select a nationality\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Log in\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        forgotPassword: \"Forgot Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        newPassword: \"New Password\",\r\n        signupWelcome: \"We can't wait for you to join our community!\",\r\n        createAccount: \"Create account\",\r\n        // Email validation screens\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            sent: \"To validate your account, click the link in the email we just sent to\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                title: \"Terms of service\",\r\n                disclaimer:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\\n\\nDeclining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms & conditions \", \"here\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Please select at least one language.\",\r\n                specifyLevel: \"Please specify a level for your languages.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"You must be 16 or older to join this platform.\",\r\n                invalid: \"Please enter a valid date.\",\r\n            },\r\n            group: {\r\n                name: {\r\n                    tooShort: `The name should have at least ${MIN_GROUP_NAME_LENGTH} characters.`,\r\n                    tooLong: `The length of the name cannot exceed ${MAX_GROUP_NAME_LENGTH} characters.`,\r\n                },\r\n            },\r\n            post: {\r\n                tooShort: `A post should contain at least ${MIN_POST_LENGTH} characters.`,\r\n                tooLong: `The length of a post cannot exceed ${MAX_POST_LENGTH} characters.`,\r\n            },\r\n            comment: {\r\n                tooShort: `A comment should contain at least ${MIN_COMMENT_LENGTH} characters.`,\r\n                tooLong: `The length of a comment cannot exceed ${MAX_COMMENT_LENGTH} characters.`,\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"This account's email address has not been verified yet.\",\r\n            user_not_found: \"User not found.\",\r\n            email_or_password_incorrect: \"Incorrect email or password.\",\r\n            reset_password_no_token: \"Could not fulfill this request.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"This email address is already in use.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Please provide a valid email address.\",\r\n                    is_sea_email_constraint: \"Your email address must match one of our partner universities.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"My Profile\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offers\",\r\n        positions: \"Positions\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            research: \"Research\",\r\n            administration: \"Administration\",\r\n            technical: \"Technical\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        dateUnits: {\r\n            singular: {\r\n                second: \"second\",\r\n                minute: \"minute\",\r\n                hour: \"hour\",\r\n                day: \"day\",\r\n                week: \"week\",\r\n                month: \"month\",\r\n                year: \"year\",\r\n            },\r\n            plural: {\r\n                second: \"seconds\",\r\n                minute: \"minutes\",\r\n                hour: \"hours\",\r\n                day: \"days\",\r\n                week: \"weeks\",\r\n                month: \"months\",\r\n                year: \"years\",\r\n            },\r\n        },\r\n        dateRelative: {\r\n            precise: \"{{month}} {{day}}, {{year}}\",\r\n            ago: \"{{amount}} {{unit}} ago\",\r\n        },\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Native\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Fields of education\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"care-elderly-disabled-adults\": \"Care of the elderly and of disabled adults\",\r\n            \"child-care-youth-services\": \"Child care and youth services\",\r\n            \"social-work-counselling\": \"Social work and counselling\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page not found.\",\r\n            subtitle: \"This page doesn't exist.\",\r\n            redirect: \"Go to home screen\",\r\n        },\r\n        // Backend unreachable\r\n        backendUnreachable: {\r\n            title: \"Unable to reach the server\",\r\n            subtitle: \"This can be caused by your network or by the application server itself.\",\r\n        },\r\n        // Resend verify email screen\r\n        resendVerifyScreen: {\r\n            title: \"Account Verification\",\r\n            text:\r\n                \"This account is not verified yet. You should have received an email from us with a validation link. If not, click the button below to send it again.\",\r\n            send: \"Send Again\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profile\",\r\n            },\r\n            profile2: {\r\n                title: \"Languages & Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff roles\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            legal1: {\r\n                title: \"Terms & Conditions\",\r\n                text:\r\n                    \"As explained in details in our Terms & Conditions, you agree to use «SEA-EU Around» and its services only to be put into contact, on a non-business and non-profit basis, with people wishing to meet, collaborate and interact online or in the frame of a mobility. You commit to carry out respectful exchanges with other members. Your name and surname will be visible by other members.\",\r\n            },\r\n            legal2: {\r\n                title: \"Data Policy\",\r\n                text:\r\n                    \"In the context of your use of SEA-EU Around, you will provide some personal data to create your profile as further explained in our Terms & Conditions. This data is collected and processed by UBO through SEA-EU Around in order to enable matching among Members, according to needs/offers and interests defined by Members of SEA-EU Around. Your data will be visible only by  other Members.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"I acknowledge that cookies might be used. The information is kept only for application purposes and does not permit to identify the Member except for the cookie enabling UBO to re-authenticate the Member on its arrival on SEA-EU Around, saving the Member from having to re-enter their password at each connection.\",\r\n            },\r\n            back: \"Back\",\r\n            next: \"Next\",\r\n            leave: \"Leave\",\r\n            submit: \"Submit\",\r\n            success: {\r\n                title: \"Nice to meet you!\",\r\n                subtitle: \"Your profile is now created.\",\r\n                button: \"Get Started\",\r\n            },\r\n            quit: {\r\n                title: \"Quit on-boarding\",\r\n                text: \"Do you really wish to leave? You can resume later.\",\r\n                cancel: \"Cancel\",\r\n                yes: \"Yes\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activism\",\r\n            art: \"Art\",\r\n            astrology: \"Astrology\",\r\n            baking: \"Baking\",\r\n            bbq: \"BBQ\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Board games\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n            climbing: \"Climbing\",\r\n            coffee: \"Coffee\",\r\n            comedy: \"Comedy\",\r\n            cooking: \"Cooking\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Cycling\",\r\n            dancing: \"Dancing\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            environmentalism: \"Environmentalism\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            foodie: \"Foodie\",\r\n            football: \"Football\",\r\n            gamer: \"Gamer\",\r\n            gardening: \"Gardening\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            guitar: \"Guitar\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Hiking\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investing\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Language exchange\",\r\n            movies: \"Movies\",\r\n            museum: \"Museum\",\r\n            music: \"Music\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Outdoors\",\r\n            parties: \"Parties\",\r\n            photography: \"Photography\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Picnicking\",\r\n            \"playing-music\": \"Playing music\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politics\",\r\n            reading: \"Reading\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Running\",\r\n            sailing: \"Sailing\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboarding\",\r\n            skiing: \"Skiing\",\r\n            sneakers: \"Sneakers\",\r\n            snowboarding: \"Snowboarding\",\r\n            spirituality: \"Spirituality\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surfing\",\r\n            swimming: \"Swimming\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tattoos\",\r\n            tea: \"Tea\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Theater\",\r\n            travel: \"Travel\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Vegetarian\",\r\n            volunteering: \"Volunteering\",\r\n            walking: \"Walking\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            wine: \"Wine\",\r\n            \"working-out\": \"Working out\",\r\n            writer: \"Writing\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"I am open to...\",\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Target genders\",\r\n            roles: \"Target positions\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Host you for some time\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Get into campus life\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Co-work on a project\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Answer academic questions\",\r\n                help: \"I can give information about my university or answer to general academic questions.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Share interests\",\r\n                help: \"I would like to chat with other users about common interests.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Join a language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            title: \"Unmatch user?\",\r\n            text: \"Are you sure you want to unmatch {{firstname}}? You will not be able to communicate anymore.\",\r\n            blockQuestion: \"If you don't want {{firstname}} to be able to find you anymore, you can also block them:\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            title: \"Block user?\",\r\n            warning: \"You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            subtitle: \"Join an alliance united around the values of European identity.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Welcome Back!\",\r\n            titleFirstLaunch: \"Welcome!\",\r\n            logIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            or: \"or\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"We use cookies to provide you with the best possible user experience.\\nOur usage of cookies includes caching data for faster loading, storing your preferences and authentication. We do not collect any information that could be used for tracking or advertising.\",\r\n            acceptAll: \"Accept cookies\",\r\n            customize: \"Customize\",\r\n            preferences: {\r\n                text:\r\n                    \"We offer you the ability to choose what information will be stored on your device when using SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentication\",\r\n                    description: \"Store information used to sign-in automatically when starting the app.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Store some data on your device (less than 1MB) for faster loading.\",\r\n                },\r\n                settings: {name: \"Settings\", description: \"Store your settings (e.g. theme and locale).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Bug report from the app\",\r\n            mailTitle: \"Description of the bug (with steps to reproduce it if possible):\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Report\",\r\n            send: \"Send\",\r\n            cancel: \"Cancel\",\r\n            what: \"What / who?\",\r\n            commentFrom: \"Comment from {{name}}\",\r\n            postFrom: \"Post from {{name}}\",\r\n            group: \"Group “{{name}}”\",\r\n            why: \"Why?\",\r\n            typePlaceholder: \"Select a reason\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudity\",\r\n                harassment: \"Harassment\",\r\n                \"undesirable-content\": \"Undesirable content\",\r\n                \"hate-speech\": \"Hate speech\",\r\n                \"vulgar-content\": \"Vulgar content\",\r\n                other: \"Other\",\r\n            },\r\n            confirmationTitle: \"Thank you\",\r\n            confirmation: \"An administrator will investigate your report shortly.\",\r\n            failureTitle: \"Sorry\",\r\n            failure: \"We are unable to fulfill your request.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions: \"To choose a new password, click the link in the email we just sent you.\",\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: \"Your password has been updated.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Delete your account\",\r\n            warning:\r\n                \"Your account and all associated data will be deleted within six months. Please be aware that after this time, your account will be irreversibly deleted. If you sign in before the end however, the deletion will be cancelled.\",\r\n            button: \"Delete\",\r\n            success1: \"Your request has been received and will be processed shortly.\",\r\n            success2: \"We are sorry to see you go.\",\r\n            leave: \"Leave\",\r\n            inputLabel: \"Enter password to confirm\",\r\n        },\r\n        // Recover account\r\n        recoverAccount: {\r\n            title: \"Recover Account\",\r\n            text:\r\n                \"You account is currently inactive and set for deletion. If you continue, the deletion process will be cancelled.\",\r\n            yes: \"Recover\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n            sayHi: \"Say hi\",\r\n            sayHiTo: \"Say hi to {{name}}!\",\r\n        },\r\n        // Groups tab\r\n        groups: {\r\n            group: \"Group\",\r\n            create: {\r\n                title: \"Create Group\",\r\n                name: \"Name\",\r\n                visible: \"Visible\",\r\n                requireApproval: \"Requires approval\",\r\n                visibleDescription: {\r\n                    true: \"Anyone can find this group.\",\r\n                    false: \"This group is not visible: in order to join, users have to be invited.\",\r\n                },\r\n                requireApprovalDescription: {\r\n                    true: \"Requests to join this group have to be manually approved by a group moderator.\",\r\n                    false: \"Anyone can join this group without approval.\",\r\n                },\r\n                submit: \"Create\",\r\n            },\r\n            newPost: {\r\n                title: \"New Post\",\r\n                submit: \"Create\",\r\n            },\r\n            editPost: {\r\n                title: \"Edit Post\",\r\n                contentPlaceholder: \"Content\",\r\n                submit: \"Send\",\r\n            },\r\n            deletePost: {\r\n                title: \"Delete post\",\r\n                text: \"This action is irreversible.\",\r\n            },\r\n            editComment: {\r\n                title: \"Edit comment\",\r\n            },\r\n            deleteComment: {\r\n                title: \"Delete comment\",\r\n                text: \"This action is irreversible.\",\r\n            },\r\n            comments: {\r\n                zero: \"No comments\",\r\n                singular: \"1 comment\",\r\n                plural: \"{{num}} comments\",\r\n                replyTo: \"Reply to {{name}}\",\r\n                placeholder: \"Write a comment...\",\r\n                none: \"No comments here yet.\",\r\n            },\r\n            join: \"Join\",\r\n            joinRequestSent: {\r\n                title: \"Request Sent\",\r\n                text: \"You will be added to this group when one of its administrators has accepted your request.\",\r\n            },\r\n            groupJoined: {\r\n                title: \"Congratulations!\",\r\n                text: \"You have successfully joined the group “{{name}}”.\",\r\n                viewGroup: \"Show\",\r\n            },\r\n            myGroups: {\r\n                title: \"My groups\",\r\n                none: \"When you join a group, it will appear here.\",\r\n            },\r\n            explore: {\r\n                button: \"Explore\",\r\n                none: \"No groups found.\",\r\n                noMore: \"No other groups to show.\",\r\n                statusText: {\r\n                    pending: \"Demande envoyée\",\r\n                    banned: \"Banni\",\r\n                    invited: \"Invitation reçue\",\r\n                },\r\n            },\r\n            invites: \"Invites\",\r\n            inviteNew: \"Invite new members\",\r\n            invite: {\r\n                decline: \"Decline\",\r\n                accept: \"Accept\",\r\n                approvalDisclaimerInvitee:\r\n                    \"You have been invited by a member. If you accept this invitation, an administrator of this group will still need to approve you.\",\r\n                approvalDisclaimerInviter: \"{{name}} will still need to be approved by an administrator of this group.\",\r\n                nobodyToInvite:\r\n                    \"Your matches who are not part of this group and have not been invited yet will appear here.\",\r\n                invite: \"Invite\",\r\n                title: \"Invite User\",\r\n                text: \"Do you want to invite {{name}} to this group?\",\r\n            },\r\n            posts: \"Posts\",\r\n            postMenu: {\r\n                title: \"Post\",\r\n            },\r\n            members: {\r\n                zero: \"No members\",\r\n                singular: \"1 member\",\r\n                plural: \"{{num}} members\",\r\n                manage: \"Manage members\",\r\n                manageBanned: \"Banned users\",\r\n                approval: {\r\n                    noResults: \"No approval requests.\",\r\n                },\r\n                approved: {\r\n                    noResults: \"No members.\",\r\n                },\r\n                banned: {\r\n                    noResults: \"No banned users.\",\r\n                },\r\n            },\r\n            deleteMember: {\r\n                title: \"Remove User?\",\r\n                text:\r\n                    \"{{name}} will no longer be able to post in this group. Additionally, existing posts and comments from this member will be deleted.\",\r\n                action: \"Remove\",\r\n            },\r\n            deletePendingMember: {\r\n                title: \"Refuse User\",\r\n                text: \"Do you really want to refuse {{name}}'s request to join the group?\",\r\n                action: \"Yes\",\r\n            },\r\n            banMember: {\r\n                title: \"Ban User?\",\r\n                text:\r\n                    \"{{name}} will be removed and unable to join this group again. Additionally, existing posts and comments from this member will be deleted.\",\r\n                action: \"Ban\",\r\n            },\r\n            banPendingMember: {\r\n                title: \"Ban User?\",\r\n                text: \"{{name}} will no longer be able to send requests to join the group.\",\r\n                action: \"Ban\",\r\n            },\r\n            promoteToAdmin: {\r\n                title: \"Administrator\",\r\n                text: \"Do you want to promote {{name}} to admin?\",\r\n                action: \"Yes\",\r\n            },\r\n            description: {\r\n                placeholder: \"Enter a description here\",\r\n                none: \"No description\",\r\n            },\r\n            roles: {\r\n                admin: \"Administrator\",\r\n                basic: \"Member\",\r\n            },\r\n            reportPost: \"Report\",\r\n            noMorePosts: \"No more posts to show.\",\r\n            noPosts: \"No posts to show.\",\r\n            justPosted: \"Just posted\",\r\n            justCommented: \"just commented\",\r\n            justEdited: \"just edited\",\r\n            edited: \"edited\",\r\n            editedAgo: \"edited {{ago}}\",\r\n            postsSorting: {\r\n                newest: \"Newest\",\r\n                oldest: \"Oldest\",\r\n                popular: \"Most popular\",\r\n            },\r\n            points: {\r\n                zero: \"0 points\",\r\n                singular: \"1 point\",\r\n                plural: \"{{num}} points\",\r\n            },\r\n            feed: {\r\n                title: \"Trending\",\r\n                help:\r\n                    \"We are showing you posts from your groups, based on their popularity and how long ago they were posted.\",\r\n            },\r\n            leave: {\r\n                title: \"Leave Group\",\r\n                text: \"Are you sure you want to leave this group?\",\r\n                deleteData: \"Delete all of my posts and comments from this group.\",\r\n            },\r\n            delete: {\r\n                title: \"Delete Group\",\r\n                text: \"If you really want to delete this group, type its name below:\",\r\n            },\r\n            settings: {\r\n                title: \"Group settings\",\r\n            },\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noMoreItems: \"No more profiles to show\",\r\n            noItemsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match!\",\r\n                offersTitle: \"Open to:\",\r\n                offersMore: \"more\",\r\n                chat: \"Chat\",\r\n                continue: \"Continue\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liked\",\r\n                    declined: \"Hidden\",\r\n                    blocked: \"Blocked\",\r\n                },\r\n                actions: {\r\n                    report: \"Report\",\r\n                    cancel: {\r\n                        requested: \"Cancel like\",\r\n                        declined: \"Cancel hide\",\r\n                        blocked: \"Cancel block\",\r\n                    },\r\n                    block: \"Block\",\r\n                },\r\n                noResults: \"No results found\",\r\n                noResultsAdvice: \"Perhaps try removing some filters\",\r\n            },\r\n        },\r\n        // Profile screen\r\n        profile: {\r\n            action: {\r\n                chat: \"Chat\",\r\n                mute: \"Mute\",\r\n                block: \"Block\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Report\",\r\n            },\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Welcome\",\r\n            SigninScreen: \"Login\",\r\n            ForgotPasswordScreen: \"Forgot Password\",\r\n            SignupScreen: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingProfileScreen1: \"Profile\",\r\n            OnboardingProfileScreen2: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingLegalScreen1: \"Terms & Conditions\",\r\n            OnboardingLegalScreen2: \"Terms & Conditions\",\r\n            OnboardingLegalScreen3: \"Terms & Conditions\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Add Filters\",\r\n            MatchHistoryScreen: \"History\",\r\n            TabGroupsScreen: \"Groups\",\r\n            GroupsExploreScreen: \"Explore Groups\",\r\n            GroupScreen: \"Group\",\r\n            GroupMembersScreen: \"Group Members\",\r\n            GroupBannedMembersScreen: \"Banned Users\",\r\n            GroupMembersApprovalScreen: \"Members Approval\",\r\n            GroupInviteScreen: \"Invite\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profile\",\r\n            ProfileScreen: \"Profile\",\r\n            SettingsScreen: \"Settings\",\r\n            DeleteAccountScreen: \"Delete Account\",\r\n            DeleteAccountSuccessScreen: \"Account Deleted\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ResetPasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            BackendUnreachableScreen: \"Error\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n            ResendVerifyEmailScreen: \"Account verification\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"General\",\r\n                danger: \"Danger zone\",\r\n                about: \"About\",\r\n            },\r\n            language: \"Language\",\r\n            darkTheme: \"Dark theme\",\r\n            deleteAccount: \"Delete Account\",\r\n            deleteMyAccount: \"Delete my account\",\r\n            version: \"Version\",\r\n            termsOfService: \"Terms of Service\",\r\n            reportABug: \"Report a Bug\",\r\n            logOut: \"Log out\",\r\n            customizeCookies: \"Customize cookies\",\r\n        },\r\n    },\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    fr: {\r\n        locales: {\r\n            en: \"Anglais\",\r\n            fr: \"Français\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Rechercher\",\r\n        send: \"Envoyer\",\r\n        cancel: \"Annuler\",\r\n        close: \"Fermer\",\r\n        delete: \"Supprimer\",\r\n        ok: \"OK\",\r\n        save: \"Sauvegarder\",\r\n        noResultsFound: \"Aucun résultat\",\r\n        apply: \"Appliquer\",\r\n        logOut: \"Déconnexion\",\r\n        showMore: \"Afficher plus\",\r\n        showLess: \"Afficher moins\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"%d éléments\",\r\n        },\r\n        dateInput: {\r\n            dayPlaceholder: \"JJ\",\r\n            monthPlaceholder: \"MM\",\r\n            yearPlaceholder: \"AAAA\",\r\n        },\r\n        nationalityPicker: {\r\n            placeholder: \"Nationalité\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Connexion\",\r\n        emailAddress: \"Adresse mail\",\r\n        password: \"Mot de passe\",\r\n        passwordRepeat: \"Répéter le mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        forgotPasswordExplanation:\r\n            \"Entrez l'adresse mail associée à votre compte ci-dessous. Vous recevrez sous peu des instructions pour choisir un nouveau mot de passe.\",\r\n        newPassword: \"Nouveau mot de passe\",\r\n        signupWelcome: \"Nous vous attendons avec impatience!\",\r\n        createAccount: \"Créer le compte\",\r\n        // Email validation screens\r\n        emailValidation: {\r\n            validating: \"Validation\",\r\n            sent: \"Pour valider votre compte, cliquez sur le lien dans le mail que nous venons de vous envoyer\",\r\n            success: [\"Le compte est désormais validé. Vous pouvez maintenant vous \", \"connecter\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                title: \"Conditions d'utilisation\",\r\n                disclaimer:\r\n                    \"Vous ne pourrez pas utiliser nos services si vous choisissez de refuser les conditions d'utilisation.\\n\\nLa création du profil sera annulée.\",\r\n            },\r\n            decline: \"Refuser\",\r\n            accept: \"Accepter\",\r\n            readMore: [\"Une version complète des conditions d'utilisation est disponible \", \"ici\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Champ requis.\",\r\n            atLeastOne: \"Sélectionner au moins un élément.\",\r\n            addAtLeastOne: \"Ajouter au moins un élément.\",\r\n            email: {\r\n                invalid: \"Adresse mail invalide.\",\r\n            },\r\n            password: {\r\n                tooShort: `Le mot de passe doit contenir au moins ${MIN_PASSWORD_LENGTH} caractères.`,\r\n                noDigit: \"Le mot de passe doit contenir au moins un chiffre.\",\r\n                noUpperCase: \"Le mot de passe doit contenir au moins une lettre majuscule.\",\r\n                noLowerCase: \"Le mot de passe doit contenir au moins une lettre minuscule.\",\r\n                noSymbol: \"Le mot de passe doit contenir au moins un symbole (#@$!%*?&).\",\r\n                repeatWrong: \"Ces mots de passe ne sont pas identiques.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Sélectionnez au moins une langue.\",\r\n                specifyLevel: \"Spécifiez un niveau pour chaque langue.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"Vous devez avoir au moins 16 ans pour rejoindre cette plateforme.\",\r\n                invalid: \"Date invalide.\",\r\n            },\r\n            group: {\r\n                name: {\r\n                    tooShort: `Le nom du groupe doit contenir au moins ${MIN_GROUP_NAME_LENGTH} caractères.`,\r\n                    tooLong: `Le nom du groupe ne doit pas excéder ${MAX_GROUP_NAME_LENGTH} caractères.`,\r\n                },\r\n            },\r\n            post: {\r\n                tooShort: `Le post doit contenir au moins ${MIN_POST_LENGTH} caractères.`,\r\n                tooLong: `Le post ne doit pas excéder ${MAX_POST_LENGTH} caractères.`,\r\n            },\r\n            comment: {\r\n                tooShort: `Le commentaire doit contenir au moins ${MIN_COMMENT_LENGTH} caractères.`,\r\n                tooLong: `Le commentaire ne doit pas excéder ${MAX_COMMENT_LENGTH} caractères.`,\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"L'adresse mail de ce compte n'a pas encore été vérifiée.\",\r\n            user_not_found: \"Utilisateur introuvable.\",\r\n            email_or_password_incorrect: \"Adresse mail ou mot de passe incorrect.\",\r\n            reset_password_no_token: \"Cette requête n'a pas pu être traitée.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"Cette adresse mail est déjà utilisée.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Adresse mail invalide.\",\r\n                    is_sea_email_constraint: \"L'adresse mail doit correspondre à l'une de nos universités partenaires.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"Mon Profil\",\r\n        firstname: \"Prénom\",\r\n        lastname: \"Nom\",\r\n        nationality: \"Nationalité\",\r\n        university: \"Université\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offres\",\r\n        positions: \"Postes\",\r\n        allRoles: {\r\n            student: \"Étudiant\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Enseignement\",\r\n            research: \"Recherche\",\r\n            administration: \"Administration\",\r\n            technical: \"Technique\",\r\n            other: \"Autre\",\r\n        },\r\n        gender: \"Genre\",\r\n        genders: {\r\n            male: \"Homme\",\r\n            female: \"Femme\",\r\n            other: \"Autre\",\r\n        },\r\n        dateOfBirth: \"Date de naissance\",\r\n        dateUnits: {\r\n            singular: {\r\n                second: \"seconde\",\r\n                minute: \"minute\",\r\n                hour: \"heure\",\r\n                day: \"jour\",\r\n                week: \"semaine\",\r\n                month: \"mois\",\r\n                year: \"année\",\r\n            },\r\n            plural: {\r\n                second: \"secondes\",\r\n                minute: \"minutes\",\r\n                hour: \"heures\",\r\n                day: \"jours\",\r\n                week: \"semaines\",\r\n                month: \"mois\",\r\n                year: \"années\",\r\n            },\r\n        },\r\n        dateRelative: {\r\n            precise: \"{{day}} {{month}} {{year}}\",\r\n            ago: \"il y a {{amount}} {{unit}}\",\r\n        },\r\n        months: {\r\n            0: \"Janvier\",\r\n            1: \"Février\",\r\n            2: \"Mars\",\r\n            3: \"Avril\",\r\n            4: \"Mai\",\r\n            5: \"Juin\",\r\n            6: \"Juillet\",\r\n            7: \"Août\",\r\n            8: \"Septembre\",\r\n            9: \"Octobre\",\r\n            10: \"Novembre\",\r\n            11: \"Decembre\",\r\n        },\r\n        spokenLanguages: \"Langues parlées\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Natif\",\r\n        },\r\n        levelOfStudy: \"Niveau d'études\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Domaines d'études\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d selectionnés\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Programmes et certifications génériques\",\r\n            education: \"Éducation\",\r\n            \"arts-humanities\": \"Lettres et arts\",\r\n            \"social-sciences-journalism-information\": \"Sciences sociales, journalisme et information\",\r\n            \"business-administration-law\": \" Commerce, administration et droit\",\r\n            \"natural-sciences-mathematics-statistics\": \"Sciences naturelles, mathématiques et statistiques\",\r\n            \"information-communication-technologies\": \"Technologies de l’information et de la communication\",\r\n            \"engineering-manufacturing-construction\": \"Ingénierie, industries de transformation et construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\":\r\n                \"Agriculture, sylviculture, halieutique et sciences vétérinaires\",\r\n            \"health-welfare\": \"Santé et protection sociale\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Programmes et certifications de base\",\r\n            \"literacy-numeracy\": \"Alphabétisation et apprentissage du calcul\",\r\n            \"personal-skills-development\": \"Compétences et développement personnels\",\r\n            \"education-science\": \"Sciences de l’éducation\",\r\n            \"training-for-pre-school-teachers\": \"Formation des enseignants au niveau préscolaire\",\r\n            \"teacher-training-without-subject-specialisation\": \"Formation des enseignants sans spécialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Formation des enseignants avec spécialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Techniques audiovisuelles et production multimédia\",\r\n            \"fashion-interior-industrial-design\": \"Stylisme, décoration et design industriel\",\r\n            \"fine-arts\": \"Beaux-arts\",\r\n            handicrafts: \"Artisanat\",\r\n            \"music-performing-arts\": \"Musique, théâtre, danse, cirque\",\r\n            \"religion-theology\": \"Religion et théologie\",\r\n            \"history-archaeology\": \"Histoire et archéologie\",\r\n            \"philosophy-ethics\": \"Philosophie et morale\",\r\n            \"language-acquisition\": \"Acquisition d’une langue\",\r\n            \"literature-linguistics\": \"Littérature et linguistique\",\r\n            economics: \"Économie\",\r\n            \"political-sciences-civics\": \"Sciences politiques et éducation civique\",\r\n            psychology: \"Psychologie\",\r\n            \"sociology-cultural-studies\": \"Sociologie et études culturelles\",\r\n            \"journalism-reporting\": \"Journalisme et reportage\",\r\n            \"library-information-archival-studies\": \"Formation aux bibliothèques, à la documentation et à l’archivisme\",\r\n            \"accounting-taxation\": \"Comptabilité et fiscalité\",\r\n            \"finance-banking-insurance\": \"Finance, banque et assurances\",\r\n            \"management-administration\": \"Gestion et administration\",\r\n            \"marketing-advertising\": \"Marketing et publicité\",\r\n            \"secretarial-office-work\": \"Travail de secrétariat et de bureau\",\r\n            \"wholesale-retail-sales\": \"Vente en gros et au détail\",\r\n            \"work-skills\": \"Compétences professionnelles\",\r\n            law: \"Droit\",\r\n            biology: \"Biologie\",\r\n            biochemistry: \"Biochimie\",\r\n            \"environmental-sciences\": \"Sciences environnementales\",\r\n            \"natural-environments-wildlife\": \"Environnements naturels et faune et flore\",\r\n            chemistry: \"Chimie\",\r\n            \"earth-sciences\": \"Sciences de la Terre\",\r\n            physics: \"Physique\",\r\n            mathematics: \"Mathématiques\",\r\n            statistics: \"Statistiques\",\r\n            \"computer-use\": \"Utilisation d’un ordinateur\",\r\n            \"database-network-design-administration\": \"Conception et administration de bases de données et de réseau\",\r\n            \"software-applications-development-analysis\": \"Développement et analyse de logiciels et d’applications\",\r\n            \"chemical-engineering-processes\": \"Ingénierie chimique et processus\",\r\n            \"environmental-protection-technology\": \"Technologie de la protection de l’environnement\",\r\n            \"electricity-energy\": \"Électricité et énergie\",\r\n            \"electronics-automation\": \"Électronique et automatisation\",\r\n            \"mechanics-metal-trades\": \"Mécanique et techniques apparentées\",\r\n            \"motor-vehicles-ships-aircraft\": \"Véhicules à moteur, bateaux et aéronefs\",\r\n            \"food-processing\": \"Traitement des aliments\",\r\n            materials: \"Matériaux (verre, papier, plastique et bois)\",\r\n            textiles: \"Textiles (vêtements, chaussures et cuir)\",\r\n            \"mining-extraction\": \"Exploitation minière et extraction\",\r\n            \"architecture-town-planning\": \"Architecture et urbanisme\",\r\n            \"building-civil-engineering\": \"Construction et génie civil\",\r\n            \"crop-livestock-production\": \"Culture et élevage\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Sylviculture\",\r\n            fisheries: \"Halieutique\",\r\n            veterinary: \"Sciences vétérinaires\",\r\n            \"dental-studies\": \"Études dentaires\",\r\n            medicine: \"Médecine\",\r\n            \"nursing-midwifery\": \"Soins infirmiers et formation de sages-femmes\",\r\n            \"medical-diagnostic-treatment-technology\": \"Diagnostic médical et technologie de traitement\",\r\n            \"therapy-rehabilitation\": \"Thérapie et rééducation\",\r\n            pharmacy: \"Pharmacie\",\r\n            \"traditional-complementary-medicine-therapy\": \"Médecine et thérapies traditionnelles et complémentaires\",\r\n            \"care-elderly-disabled-adults\": \"Soins gérontologiques et aux adultes handicapés\",\r\n            \"child-care-youth-services\": \"Soins aux enfants et à la jeunesse\",\r\n            \"social-work-counselling\": \"Travail social et orientation\",\r\n            \"domestic-services\": \"Services domestiques\",\r\n            \"hair-beauty-services\": \"Services de soins de beauté et de coiffure\",\r\n            \"hotel-restaurants-catering\": \"Hôtellerie et services de restauration\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Voyage, tourisme et loisirs\",\r\n            \"community-sanitation\": \"Salubrité publique\",\r\n            \"occupational-health-safety\": \"Santé et sécurité au travail\",\r\n            \"military-defence\": \"Sécurité militaire et défense\",\r\n            \"protection-of-persons-property\": \"Protection des biens et des personnes\",\r\n            \"transport-services\": \"Services de transport\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page introuvable.\",\r\n            subtitle: \"Cette page n'existe pas.\",\r\n            redirect: \"Aller à l'écran d'accueil\",\r\n        },\r\n        // Backend unreachable\r\n        backendUnreachable: {\r\n            title: \"Impossible de se connecter au serveur\",\r\n            subtitle: \"Cela peut provenir de votre connection Internet ou du serveur de l'application.\",\r\n        },\r\n        // Resend verify email screen\r\n        resendVerifyScreen: {\r\n            title: \"Vérification du compte\",\r\n            text:\r\n                \"Ce compte n'est pas encore vérifié. Vous devriez avoir reçu un mail de notre part contenant un lien de vérification. Sinon, cliquez sur le bouton ci-dessous pour le renvoyer.\",\r\n            send: \"Envoyer à nouveau\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"Université de Cádiz\",\r\n            \"univ-brest\": \"Université de Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"Université de Gdańsk\",\r\n            \"univ-malta\": \"Université de Malte\",\r\n            \"univ-kiel\": \"Université de Kiel\",\r\n            \"univ-split\": \"Université de Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Bienvenue\",\r\n                subtitle:\r\n                    \"Avant de commencer, nous avons besoin d'en savoir un peu plus sur vous afin d'assurer les meilleures recommendations possibles.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profil\",\r\n            },\r\n            profile2: {\r\n                title: \"Langues et Hobbies\",\r\n            },\r\n            role: {\r\n                title: \"Je suis un...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Étudiant\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Rencontrer\",\r\n                subtitle: \"Rencondrer des nouveaux amis dans la vraie vie.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Découvrir\",\r\n                subtitle: \"En apprendre plus sur d'autres cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborer\",\r\n                subtitle: \"Trouver d'autres personnes pour travailler sur des projets, académiques ou non.\",\r\n            },\r\n            legal1: {\r\n                title: \"Conditions d'utilisation\",\r\n                text:\r\n                    \"Comme précisé dans les conditions d’usage, vous acceptez d’utiliser « SEA-EU Around » et ses services pour être mis en relation avec d’autres personnes souhaitant se rencontrer, collaborer, ou interagir en ligne ou dans le cadre d’une mobilité, sur un principe non-commercial et non lucratif. Vous vous engagez à des échanges respectueux avec les autres membres. Vos noms et prénoms seront visibles des autres membres.\",\r\n            },\r\n            legal2: {\r\n                title: \"Politique des données\",\r\n                text:\r\n                    \"Dans le cadre de votre utilisation de SEA-EU Around, vous allez fournir des données personnelles afin de créer votre profil selon les conditions précisées dans les Conditions d’utilisation. Ces données sont collectées et traitées par l’UBO via l'application pour permettre la mise en relation entre membres, en fonctions des besoins, offres et intérêts qu’ils auront définis. Vos données ne seront visibles que par les autres membres.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"L’application peut utiliser les cookies. L’information est utilisée exclusivement dans le cadre du fonctionnement de l’application et ne permet pas d’identifier le membre, à l’exception du cookie permettant une réauthentification sans avoir à ressaisir son mot de passe.\",\r\n            },\r\n            back: \"Retour\",\r\n            next: \"Suivant\",\r\n            leave: \"Quitter\",\r\n            submit: \"Envoyer\",\r\n            success: {\r\n                title: \"Ravis de vous voir !\",\r\n                subtitle: \"Votre profil est créé.\",\r\n                button: \"Commencer\",\r\n            },\r\n            quit: {\r\n                title: \"Quitter\",\r\n                text: \"Voulez vous vraiment quitter la création du profil ? Vous pourrez reprendre plus tard.\",\r\n                cancel: \"Annuler\",\r\n                yes: \"Oui\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Langue\",\r\n            placeholderMultiple: \"Sélectionner des langues\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Niveau\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhaze\",\r\n            ae: \"Avestique\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharique\",\r\n            an: \"Aragonais\",\r\n            ar: \"Arabe\",\r\n            as: \"Assamais\",\r\n            av: \"Avar\",\r\n            ay: \"Aymara\",\r\n            az: \"Azéri\",\r\n            ba: \"Bachkir\",\r\n            be: \"Biélorusse\",\r\n            bg: \"Bulgare\",\r\n            bh: \"Bihari\",\r\n            bi: \"Bichelamar\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibétain\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnien\",\r\n            ca: \"Catalan\",\r\n            ce: \"Tchétchène\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corse\",\r\n            cr: \"Cri\",\r\n            cs: \"Tchèque\",\r\n            cu: \"Vieux-slave\",\r\n            cv: \"Tchouvache\",\r\n            cy: \"Gallois\",\r\n            da: \"Danois\",\r\n            de: \"Allemand\",\r\n            dv: \"Maldivien\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Grec moderne\",\r\n            en: \"Anglais\",\r\n            eo: \"Espéranto\",\r\n            es: \"Espagnol\",\r\n            et: \"Estonien\",\r\n            eu: \"Basque\",\r\n            fa: \"Persan\",\r\n            ff: \"Peul\",\r\n            fi: \"Finnois\",\r\n            fj: \"Fidjien\",\r\n            fo: \"Féroïen\",\r\n            fr: \"Français\",\r\n            fy: \"Frison occidental\",\r\n            ga: \"Irlandais\",\r\n            gd: \"Écossais\",\r\n            gl: \"Galicien\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Mannois\",\r\n            ha: \"Haoussa\",\r\n            he: \"Hébreu\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri motu\",\r\n            hr: \"Croate\",\r\n            ht: \"Créole haïtien\",\r\n            hu: \"Hongrois\",\r\n            hy: \"Arménien\",\r\n            hz: \"Héréro\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonésien\",\r\n            ie: \"Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Yi\",\r\n            ik: \"Inupiak\",\r\n            io: \"Ido\",\r\n            is: \"Islandais\",\r\n            it: \"Italien\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japonais\",\r\n            jv: \"Javanais\",\r\n            ka: \"Géorgien\",\r\n            kg: \"Kikongo\",\r\n            ki: \"Kikuyu\",\r\n            kj: \"Kuanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Groenlandais\",\r\n            km: \"Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Coréen\",\r\n            kr: \"Kanouri\",\r\n            ks: \"Cachemiri\",\r\n            ku: \"Kurde\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornique\",\r\n            ky: \"Kirghiz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgeois\",\r\n            lg: \"Ganda\",\r\n            li: \"Limbourgeois\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lituanien\",\r\n            lu: \"Luba\",\r\n            lv: \"Letton\",\r\n            mg: \"Malgache\",\r\n            mh: \"Marshallais\",\r\n            mi: \"Maori de Nouvelle-Zélande\",\r\n            mk: \"Macédonien\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongol\",\r\n            mo: \"Moldave\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malais\",\r\n            mt: \"Maltais\",\r\n            my: \"Birman\",\r\n            na: \"Nauruan\",\r\n            nb: \"Norvégien Bokmål\",\r\n            nd: \"Sindebele\",\r\n            ne: \"Népalais\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Néerlandais\",\r\n            nn: \"Norvégien Nynorsk\",\r\n            no: \"Norvégien\",\r\n            nr: \"Nrebele\",\r\n            nv: \"Navajo\",\r\n            ny: \"Chichewa\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwé\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossète\",\r\n            pa: \"Pendjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polonais\",\r\n            ps: \"Pachto\",\r\n            pt: \"Portugais\",\r\n            qu: \"Quechua\",\r\n            rc: \"Créole Réunionnais\",\r\n            rm: \"Romanche\",\r\n            rn: \"Kirundi\",\r\n            ro: \"Roumain\",\r\n            ru: \"Russe\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sarde\",\r\n            sd: \"Sindhi\",\r\n            se: \"Same du Nord\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-croate\",\r\n            si: \"Cingalais\",\r\n            sk: \"Slovaque\",\r\n            sl: \"Slovène\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanais\",\r\n            sr: \"Serbe\",\r\n            ss: \"Swati\",\r\n            st: \"Sotho du Sud\",\r\n            su: \"Soundanais\",\r\n            sv: \"Suédois\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamoul\",\r\n            te: \"Télougou\",\r\n            tg: \"Tadjik\",\r\n            th: \"Thaï\",\r\n            ti: \"Tigrigna\",\r\n            tk: \"Turkmène\",\r\n            tl: \"Tagalog\",\r\n\r\n            tn: \"Tswana\",\r\n            to: \"Tongien\",\r\n            tr: \"Turc\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitien\",\r\n            ug: \"Ouïghour\",\r\n            uk: \"Ukrainien\",\r\n            ur: \"Ourdou\",\r\n            uz: \"Ouzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamien\",\r\n            vo: \"Volapük\",\r\n            wa: \"Wallon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang\",\r\n            zh: \"Chinois\",\r\n            zu: \"Zoulou\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Hobbies\",\r\n        chooseInterests: \"Choisissez des hobbies\",\r\n        interestsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activisme\",\r\n            art: \"Art\",\r\n            astrology: \"Astrologie\",\r\n            baking: \"Pâtisserie\",\r\n            bbq: \"Barbecue\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Jeux de société\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Chats\",\r\n            climbing: \"Escalade\",\r\n            coffee: \"Café\",\r\n            comedy: \"Comédie\",\r\n            cooking: \"Cuisine\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Bière artisanale\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Vélo\",\r\n            dancing: \"Danse\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Chiens\",\r\n            environmentalism: \"Écologie\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Pèche\",\r\n            foodie: \"Gastronomie\",\r\n            football: \"Football\",\r\n            gamer: \"Gaming\",\r\n            gardening: \"Jardinage\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Boire un verre\",\r\n            guitar: \"Guitare\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Randonnée\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investissement\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Échange linguistique\",\r\n            movies: \"Films\",\r\n            museum: \"Musées\",\r\n            music: \"Musique\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Activités d'extérieur\",\r\n            parties: \"Fêtes\",\r\n            photography: \"Photographie\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Pique-nique\",\r\n            \"playing-music\": \"Jouer de la musique\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politique\",\r\n            reading: \"Lecture\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Course à pied\",\r\n            sailing: \"La voile\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboard\",\r\n            skiing: \"Ski\",\r\n            sneakers: \"Chaussures de sport\",\r\n            snowboarding: \"Snowboard\",\r\n            spirituality: \"Spiritualité\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surf\",\r\n            swimming: \"Nage\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tatouages\",\r\n            tea: \"Thé\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Théatre\",\r\n            travel: \"Voyage\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Végétarien\",\r\n            volunteering: \"Bénévolat\",\r\n            walking: \"Marche\",\r\n            \"walking-my-dog\": \"Promener son chien\",\r\n            wine: \"Vin\",\r\n            \"working-out\": \"Entraînement sportif\",\r\n            writer: \"Écriture\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"Je suis ouvert à...\",\r\n        offerCategories: {\r\n            meet: \"Rencontrer\",\r\n            discover: \"Découvrir\",\r\n            collaborate: \"Collaborer\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Genres ciblés\",\r\n            roles: \"Postes ciblés\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Boire un verre\",\r\n                help: \"Je suis ouvert pour boire un verre avec les personnes que je rencontre sur cette plateforme.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Héberger quelque temps\",\r\n                help: \"Je suis ouvert à héberger quelqu'un pendant quelques jours.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Intégrer la vie du campus\",\r\n                help: \"Je suis motivé.e à l'idée de présenter à quelqu'un la vie de mon campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Collaborer sur un projet\",\r\n                help: \"Je recherche des collaborateurs pour un projet.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Répondre à des questions académiques\",\r\n                help:\r\n                    \"Je peux donner des informations à propos de mon université ou répondre à des questions générales en lien avec les études.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Partager des hobbies\",\r\n                help: \"J'aimerais discuter avec d'autres utilisateurs à propos de centres d'intérêts communs.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Rejoindre un tandem d'apprentissage de langue\",\r\n                help:\r\n                    \"Je cherche à rejoindre un tandem de langue afin d'aider d'autres utilisateurs à apprendre une de mes langues.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            title: \"Annuler le match ?\",\r\n            text: \"Voulez-vous vraiment annuler le match avec {{firstname}} ? Vous ne pourrez plus communiquer.\",\r\n            blockQuestion:\r\n                \"Si vous ne voulez plus apparaître dans les résultats de {{firstname}}, vous pouvez aussi bloquer ce profil :\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            title: \"Bloquer l'utilisateur ?\",\r\n            warning: \"Vous et {{firstname}} n'apparaîtrez plus dans vos recherches respectives.\",\r\n            action: \"Bloquer\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            subtitle: \"Rejoignez une alliance unie autour des valeurs de l'identité européenne.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Ravis de vous revoir !\",\r\n            titleFirstLaunch: \"Bienvenue !\",\r\n            logIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            or: \"ou\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"Nous utilisons des cookies afin de vous fournir la meilleure expérience utilisateur possible.\\nNotre utilisation des cookies inclut notamment le stockage de données pour des chargements plus rapides, le stockage de vos paramètres et l'authentification. Nous ne collectons aucune information qui pourrait être utilisée pour du traçage ou de la publicité.\",\r\n            acceptAll: \"Accepter les cookies\",\r\n            customize: \"Personnaliser\",\r\n            preferences: {\r\n                text:\r\n                    \"Nous offrons la possibilité de choisir les informations qui sont stockées sur votre appareil par SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentification\",\r\n                    description:\r\n                        \"Stockage d'information permettant de vous authentifier automatiquement lorsque vous lancez l'application.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Stockage d'information (moins d'un 1MO) permettant d'accélérer les chargements.\",\r\n                },\r\n                settings: {name: \"Paramètres\", description: \"Stockage des paramètres (thème, langue, etc).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Signalement de bug depuis l'app\",\r\n            mailTitle: \"Description du bug (inclure si possible les étapes pour le reproduire) :\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Signalement\",\r\n            send: \"Envoyer\",\r\n            cancel: \"Annuler\",\r\n            what: \"Quoi / qui ?\",\r\n            commentFrom: \"Commentaire de {{name}}\",\r\n            postFrom: \"Post de {{name}}\",\r\n            group: \"Groupe “{{name}}”\",\r\n            why: \"Pourquoi ?\",\r\n            typePlaceholder: \"Sélectionner une raison\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudité\",\r\n                harassment: \"Harcèlement\",\r\n                \"undesirable-content\": \"Contenu indésirable\",\r\n                \"hate-speech\": \"Discours haineux\",\r\n                \"vulgar-content\": \"Contenu vulgaire\",\r\n                other: \"Autre\",\r\n            },\r\n            confirmationTitle: \"Merci\",\r\n            confirmation: \"Un administrateur traitera votre signalement sous peu.\",\r\n            failureTitle: \"Désolé\",\r\n            failure: \"Nous ne sommes pas en mesure de traîter votre requête.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions:\r\n                \"Pour choisir un nouveau mot de passe, cliquez sur le lien dans le mail que nous venons de vous envoyer.\",\r\n            title: \"Choisissez un nouveau mot de passe\",\r\n            button: \"Envoyer\",\r\n            success: \"Votre mot de passe a été mis à jour.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Supprimer votre compte\",\r\n            warning:\r\n                \"Votre compte et toutes les données associées seront supprimées d'ici 6 mois. Après cette période, le compte sera irréversiblement supprimé. Si vous vous connectez avant, la suppression sera annulée.\",\r\n            button: \"Supprimer\",\r\n            success1: \"Votre requête a bien été reçue et sera traitée sous peu.\",\r\n            success2: \"Nous sommes désolés de vous voir partir.\",\r\n            leave: \"Quitter\",\r\n            inputLabel: \"Entrez votre mot de passe pour confirmer\",\r\n        },\r\n        // Recover account\r\n        recoverAccount: {\r\n            title: \"Récupération du Compte\",\r\n            text:\r\n                \"Ce compte est actuellement inactif et en attente d'être supprimé. Si vous continuez, la suppression sera annulée.\",\r\n            yes: \"Récupérer\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"Il semblerait que vous n'ailliez pas encore eu de match. :(\",\r\n            sayHi: \"Envoyez un message\",\r\n            sayHiTo: \"Envoyez un message à {{name}}\",\r\n        },\r\n        // Groups tab\r\n        groups: {\r\n            group: \"Groupe\",\r\n            create: {\r\n                title: \"Créer un groupe\",\r\n                name: \"Nom\",\r\n                visible: \"Visible\",\r\n                requireApproval: \"Approbation requise\",\r\n                visibleDescription: {\r\n                    true: \"Tout le monde peut voir ce groupe.\",\r\n                    false: \"Ce groupe est invisible: les utilisateurs doivent être invités pour rejoindre.\",\r\n                },\r\n                requireApprovalDescription: {\r\n                    true: \"Un modérateur du groupe doit manuellement approuver les demandes pour rejoindre le groupe.\",\r\n                    false: \"Les utilisateurs peuvent rejoindre le groupe sans approbation.\",\r\n                },\r\n                submit: \"Créer\",\r\n            },\r\n            newPost: {\r\n                title: \"Nouveau Post\",\r\n                submit: \"Créer\",\r\n            },\r\n            editPost: {\r\n                title: \"Éditer le post\",\r\n                contentPlaceholder: \"Contenu\",\r\n                submit: \"Envoyer\",\r\n            },\r\n            deletePost: {\r\n                title: \"Supprimer le post\",\r\n                text: \"Cette action est irréversible.\",\r\n            },\r\n            editComment: {\r\n                title: \"Éditer le commentaire\",\r\n            },\r\n            deleteComment: {\r\n                title: \"Supprimer le commentaire\",\r\n                text: \"Cette action est irréversible.\",\r\n            },\r\n            comments: {\r\n                zero: \"Aucun commentaire\",\r\n                singular: \"1 commentaire\",\r\n                plural: \"{{num}} commentaires\",\r\n                replyTo: \"Répondre à {{name}}\",\r\n                placeholder: \"Écrivez un commentaire...\",\r\n                none: \"Il n'y a pas encore de commentaires ici.\",\r\n            },\r\n            join: \"Rejoindre\",\r\n            joinRequestSent: {\r\n                title: \"Demande envoyée\",\r\n                text: \"Vous serez ajouté à ce groupe lorsque l'un de ses administrateurs aura accepté votre demande.\",\r\n            },\r\n            groupJoined: {\r\n                title: \"Félicitations !\",\r\n                text: \"Vous venez de rejoindre le groupe “{{name}}”.\",\r\n                viewGroup: \"Afficher\",\r\n            },\r\n            myGroups: {\r\n                title: \"Mes groupes\",\r\n                none: \"Lorsque vous aurez rejoint un groupe, il apparaîtra ici.\",\r\n            },\r\n            explore: {\r\n                button: \"Explorer\",\r\n                none: \"Aucun groupe n'a été trouvé.\",\r\n                noMore: \"Aucun autre groupe à afficher.\",\r\n                statusText: {\r\n                    pending: \"Request sent\",\r\n                    banned: \"Banned\",\r\n                    invited: \"Invited\",\r\n                },\r\n            },\r\n            invites: \"Invitations\",\r\n            inviteNew: \"Inviter\",\r\n            invite: {\r\n                decline: \"Refuser\",\r\n                accept: \"Rejoindre\",\r\n                approvalDisclaimerInvitee:\r\n                    \"Vous avez été invité par un membre. Si vous acceptez, un administrateur du groupe devra encore approuver avant que vous ne rejoigniez ce groupe.\",\r\n                approvalDisclaimerInviter: \"{{name}} devra être accepté par un administrateur de ce groupe.\",\r\n                nobodyToInvite:\r\n                    \"Vos match qui ne sont pas dans ce groupe et qui n'ont pas déjà été invités apparaîtront ici.\",\r\n                invite: \"Inviter\",\r\n                title: \"Inviter un utilisateur\",\r\n                text: \"Voulez-vous inviter {{name}} à rejoindre ce groupe ?\",\r\n            },\r\n            posts: \"Posts\",\r\n            postMenu: {\r\n                title: \"Post\",\r\n            },\r\n            members: {\r\n                zero: \"Aucun membre\",\r\n                singular: \"1 membre\",\r\n                plural: \"{{num}} membres\",\r\n                manage: \"Gérer les membres\",\r\n                manageBanned: \"Utilisateurs bannis\",\r\n                approval: {\r\n                    noResults: \"Aucune demande d'approbation.\",\r\n                },\r\n                approved: {\r\n                    noResults: \"Aucun membre.\",\r\n                },\r\n                banned: {\r\n                    noResults: \"Aucun utilisateur banni.\",\r\n                },\r\n            },\r\n            deleteMember: {\r\n                title: \"Exclure l'utilisateur ?\",\r\n                text:\r\n                    \"{{name}} ne pourra plus poster sur ce groupe. De plus, ses posts et commentaires existants seront supprimés.\",\r\n                action: \"Exclure\",\r\n            },\r\n            deletePendingMember: {\r\n                title: \"Refuser la demande\",\r\n                text: \"Voulez-vous vraiment refuser la demande de {{name}} pour rejoindre le groupe ?\",\r\n                action: \"Oui\",\r\n            },\r\n            banMember: {\r\n                title: \"Bannir l'utilisateur ?\",\r\n                text:\r\n                    \"L'utilisateur sera exclu et ne pourra plus rejoindre le groupe. De plus, ses posts et commentaires existants seront supprimés.\",\r\n                action: \"Bannir\",\r\n            },\r\n            banPendingMember: {\r\n                title: \"Bannir l'utilisateur ?\",\r\n                text: \"{{name}} ne pourra plus demander à rejoindre le groupe.\",\r\n                action: \"Bannir\",\r\n            },\r\n            promoteToAdmin: {\r\n                title: \"Administrateur\",\r\n                text: \"Voulez-vous promouvoir {{name}} au rang d'administrateur ?\",\r\n                action: \"Oui\",\r\n            },\r\n            description: {\r\n                placeholder: \"Entrez une description ici\",\r\n                none: \"Pas de description\",\r\n            },\r\n            roles: {\r\n                admin: \"Administrateur\",\r\n                basic: \"Membre\",\r\n            },\r\n            reportPost: \"Signaler\",\r\n            noMorePosts: \"Aucun autre post à afficher.\",\r\n            noPosts: \"Aucun post à afficher.\",\r\n            justPosted: \"Posté à l'instant\",\r\n            justCommented: \"commenté à l'instant\",\r\n            justEdited: \"modifié à l'instant\",\r\n            edited: \"modifié\",\r\n            editedAgo: \"modifié {{ago}}\",\r\n            postsSorting: {\r\n                newest: \"Récent\",\r\n                oldest: \"Ancien\",\r\n                popular: \"Populaire\",\r\n            },\r\n            points: {\r\n                zero: \"0 points\",\r\n                singular: \"1 point\",\r\n                plural: \"{{num}} points\",\r\n            },\r\n            feed: {\r\n                title: \"En tendance\",\r\n                help:\r\n                    \"Nous vous montrons seulement les posts de vos groupes, en fonction de leur popularité et leur date de création.\",\r\n            },\r\n            leave: {\r\n                title: \"Quitter le groupe\",\r\n                text: \"Voulez-vous vraiment quitter ce groupe ?\",\r\n                deleteData: \"Supprimer tous mes posts et commentaires de ce groupe.\",\r\n            },\r\n            delete: {\r\n                title: \"Supprimer le groupe\",\r\n                text: \"Si vous voulez vraiment supprimer ce groupe, entrez son nom ci-dessous :\",\r\n            },\r\n            settings: {\r\n                title: \"Paramètres du groupe\",\r\n            },\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"Aucun résultat\",\r\n            noMoreItems: \"Pas d'autres profils à afficher\",\r\n            noItemsAdvice: \"Éssayez de supprimer des filtres\",\r\n            filtering: {\r\n                sectionGeneral: \"Général\",\r\n                buttonReset: \"Réinitialiser\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Cacher\",\r\n            success: {\r\n                title: \"Nouveau match !\",\r\n                offersTitle: \"Ouvert à:\",\r\n                offersMore: \"autres\",\r\n                chat: \"Discuter\",\r\n                continue: \"Continuer\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liké\",\r\n                    declined: \"Caché\",\r\n                    blocked: \"Bloqué\",\r\n                },\r\n                actions: {\r\n                    report: \"Signaler\",\r\n                    cancel: {\r\n                        requested: \"Annuler like\",\r\n                        declined: \"Dé-cacher\",\r\n                        blocked: \"Débloquer\",\r\n                    },\r\n                    block: \"Bloquer\",\r\n                },\r\n                noResults: \"Aucun résultat\",\r\n                noResultsAdvice: \"Éssayez de supprimer des filtres\",\r\n            },\r\n        },\r\n        // Profile screen\r\n        profile: {\r\n            action: {\r\n                chat: \"Chat\",\r\n                mute: \"Mettre en sourdine\",\r\n                block: \"Bloquer\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Signaler\",\r\n            },\r\n            noOffersSelected: \"Aucune offre sélectionnée.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Bienvenue\",\r\n            SigninScreen: \"Connexion\",\r\n            ForgotPasswordScreen: \"Mot de Passe Oublié\",\r\n            SignupScreen: \"Inscription\",\r\n            OnboardingNameScreen: \"Bienvenue\",\r\n            OnboardingProfileScreen1: \"Profil\",\r\n            OnboardingProfileScreen2: \"Profil\",\r\n            OnboardingRoleScreen: \"Profil\",\r\n            OnboardingRoleSpecificScreen: \"Profil\",\r\n            OnboardingOffersScreen1: \"Découvrir\",\r\n            OnboardingOffersScreen2: \"Collaborer\",\r\n            OnboardingOffersScreen3: \"Rencontrer\",\r\n            OnboardingLegalScreen1: \"Conditions d'utilisation\",\r\n            OnboardingLegalScreen2: \"Politique des données\",\r\n            OnboardingLegalScreen3: \"Cookies\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Accueil\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Ajouter des Filtres\",\r\n            MatchHistoryScreen: \"Historique\",\r\n            TabGroupsScreen: \"Groupes\",\r\n            GroupsExploreScreen: \"Explorer les groupes\",\r\n            GroupScreen: \"Groupe\",\r\n            GroupMembersScreen: \"Membres du groupe\",\r\n            GroupBannedMembersScreen: \"Utilisateurs bannis\",\r\n            GroupMembersApprovalScreen: \"Approbation des membres\",\r\n            GroupInviteScreen: \"Inviter\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profil\",\r\n            ProfileScreen: \"Profil\",\r\n            SettingsScreen: \"Paramètres\",\r\n            DeleteAccountScreen: \"Suppression du Compte\",\r\n            DeleteAccountSuccessScreen: \"Compte Supprimé\",\r\n            ValidationEmailSentScreen: \"Validation du Compte\",\r\n            ValidateEmailScreen: \"Validation du Compte\",\r\n            ResetPasswordScreen: \"Changement de Mot de Passe\",\r\n            ResetPasswordSuccessScreen: \"Mot de Passe Modifié\",\r\n            OnboardingSuccessfulScreen: \"Inscription Réussie\",\r\n            NotFoundScreen: \"Page Introuvable\",\r\n            BackendUnreachableScreen: \"Erreur\",\r\n            ForgotPasswordEmailSentScreen: \"Mot de Passe Oublié\",\r\n            ResendVerifyEmailScreen: \"Vérification du compte\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"Général\",\r\n                danger: \"Zone dangereuse\",\r\n                about: \"À propos\",\r\n            },\r\n            language: \"Langue\",\r\n            darkTheme: \"Thème sombre\",\r\n            deleteAccount: \"Suppression de compte\",\r\n            deleteMyAccount: \"Supprimer mon compte\",\r\n            version: \"Version\",\r\n            termsOfService: \"Conditions d'utilisation\",\r\n            reportABug: \"Signaler un bug\",\r\n            logOut: \"Déconnexion\",\r\n            customizeCookies: \"Personnaliser les cookies\",\r\n        },\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    const loc = Localization.locale.substr(0, 2);\r\n    return loc === \"fr\" ? \"fr\" : \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"hr\",\r\n    \"en\",\r\n    \"fr\",\r\n    \"de\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"es\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[2].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n\r\n/* French translations from https://fr.wikipedia.org/wiki/Liste_des_codes_ISO_639-1 */\r\n/*\r\nlet entries = {};\r\n$(\"#mw-content-text > div.mw-parser-output > table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[0].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[3].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport translations from \"../../constants/translations\";\r\nimport {\r\n    LoadCookiesPreferencesAction,\r\n    LoadVersionInfoAction,\r\n    SaveCookiesPreferencesAction,\r\n    SetLocaleAction,\r\n    SetThemeAction,\r\n    SettingsAction,\r\n    SETTINGS_ACTION_TYPES,\r\n} from \"./actions\";\r\nimport {SettingsState} from \"../types\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const dict = translations as {[key: string]: {[key: string]: unknown}};\r\n    const languageNames = (dict[locale].languageNames || dict[\"en\"].languageNames) as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    userSettings: {\r\n        theme: \"light\",\r\n        locale: getDefaultLocale(),\r\n        cookies: {\r\n            auth: false,\r\n            cache: false,\r\n            settings: false,\r\n        },\r\n        cookieConsentDate: null,\r\n    },\r\n    previousVersion: null,\r\n    isFirstLaunch: false,\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES: {\r\n            const {preferences, consentDate} = action as LoadCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: consentDate, cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const {preferences} = action as SaveCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: new Date(Date.now()), cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = action as SetThemeAction;\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            const theme = state.userSettings.theme == \"light\" ? \"dark\" : \"light\";\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = action as SetLocaleAction;\r\n            return {\r\n                ...state,\r\n                localizedLanguageItems: getLocalizedLanguageItems(locale),\r\n                userSettings: {...state.userSettings, locale},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO: {\r\n            const {version} = action as LoadVersionInfoAction;\r\n            return {\r\n                ...state,\r\n                previousVersion: version,\r\n                isFirstLaunch: version === null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {Degree, Gender, LanguageLevel, Role} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\n\r\n/* General response-related types */\r\n\r\n// Any response from the server should follow this structure\r\nexport type RequestResponse = SuccessfulRequestResponse | UnprocessableEntityRequestResponse | ErrorRequestResponse;\r\nexport type SuccessfulRequestResponse = {status: number; data: unknown} & {[key: string]: unknown};\r\nexport type PaginatedRequestResponse = SuccessfulRequestResponse & {\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type ErrorRequestResponse = {status: number; errorType: string; description: string};\r\n\r\n// Only on 422 status\r\nexport type UnprocessableEntityRequestResponse = ErrorRequestResponse & {\r\n    errors: {property: string; codes: {description: string; code: string}[]}[];\r\n};\r\n\r\nexport type RemoteValidationErrors = {general: string; fields: {[key: string]: string}};\r\n\r\n/* Specific DTOs */\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: ResponseUserDto;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: InterestDto[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRoles: StaffRoleDto[];\r\n};\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDtoCommon = CreateProfileDtoCommon & {\r\n    id: string;\r\n    university: UniversityKey;\r\n    avatar: string;\r\n};\r\nexport type ResponseProfileDtoStudent = ResponseProfileDtoCommon & CreateProfileDtoStudent;\r\nexport type ResponseProfileDtoStaff = ResponseProfileDtoCommon & CreateProfileDtoStaff;\r\nexport type ResponseProfileDto = ResponseProfileDtoStudent | ResponseProfileDtoStaff;\r\n\r\nexport type ResponseProfileWithMatchInfoDto = {\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchingId: string | null;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type StaffRoleDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type ChatRoomProfileDto = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatar: string | null;\r\n    lastMessageSeenId: string | null;\r\n    lastMessageSeenDate: string | null;\r\n};\r\n\r\nexport type ResponseRoomDto = {\r\n    id: string;\r\n    profiles: ChatRoomProfileDto[];\r\n    lastMessage: ResponseChatMessageDto | null;\r\n};\r\n\r\nexport type ResponseChatMessageDto = {\r\n    roomId: string;\r\n    id: string;\r\n    senderId: string;\r\n    sent: boolean;\r\n    text: string;\r\n    updatedAt: string;\r\n};\r\n\r\nexport type ResponseChatMessageReadDto = {\r\n    roomId: string;\r\n    date: string;\r\n    messageId: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type ResponseChatWritingDto = {\r\n    roomId: string;\r\n    profileId: string;\r\n    state: boolean;\r\n};\r\n\r\nexport enum MatchActionStatus {\r\n    Declined = \"declined\",\r\n    Blocked = \"blocked\",\r\n    Matched = \"matched\",\r\n    Requested = \"requested\",\r\n}\r\nexport const MATCH_ACTION_HISTORY_STATUSES: MatchActionStatus[] = [\r\n    MatchActionStatus.Declined,\r\n    MatchActionStatus.Blocked,\r\n    MatchActionStatus.Requested,\r\n];\r\n\r\nexport type MatchActionResponseDto = {\r\n    roomId: string | null;\r\n    status: MatchActionStatus;\r\n};\r\n\r\nexport type MatchHistoryItemDto = {\r\n    profile: ResponseProfileDto;\r\n    status: MatchActionStatus;\r\n    date: string;\r\n    id: string;\r\n};\r\n\r\nexport type ResponseGroupDto = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    cover: string | null;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n    members: null;\r\n    isMember: boolean;\r\n    role: GroupRole | null;\r\n    status: GroupMemberStatus | null;\r\n};\r\n\r\nexport type CreateGroupDto = {\r\n    name: string;\r\n    description: string;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n};\r\n\r\nexport type CreateGroupPostDto = {\r\n    type: string;\r\n    text: string;\r\n};\r\n\r\nexport type ResponseGroupPostDto = {\r\n    id: string;\r\n    groupId: string;\r\n    type: string;\r\n    status: string;\r\n    text: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    creator: ResponseProfileDto;\r\n    commentsCount: number;\r\n    upVotesCount: number;\r\n    downVotesCount: number;\r\n    isVoted: boolean;\r\n    voteType?: \"up\" | \"down\";\r\n};\r\n\r\nexport type ResponsePostCommentDto = {\r\n    id: string;\r\n    text: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    creator: ResponseProfileDto;\r\n    children: ResponsePostCommentDto[] | null;\r\n    upVotesCount: number;\r\n    downVotesCount: number;\r\n    isVoted: boolean;\r\n    voteType?: \"up\" | \"down\";\r\n};\r\n\r\nexport type CreatePostCommentDto = {\r\n    text: string;\r\n    parentId?: string;\r\n};\r\n\r\nexport enum GroupRole {\r\n    Admin = \"admin\",\r\n    Basic = \"basic\",\r\n}\r\n\r\nexport enum GroupMemberStatus {\r\n    Pending = \"pending\",\r\n    Approved = \"approved\",\r\n    Banned = \"banned\",\r\n    Invited = \"invited\",\r\n    InvitedByAdmin = \"invited-by-admin\",\r\n}\r\n\r\nexport type ResponseGroupMemberDto = {\r\n    profile: ResponseProfileDto;\r\n    profileId: string;\r\n    role: GroupRole;\r\n    status: GroupMemberStatus;\r\n};\r\n\r\nexport type GroupCoverSuccessfullyUpdatedDto = {\r\n    cover: string;\r\n};\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferCategory, OfferDto} from \"../../api/dto\";\r\nimport {AuthAction, AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {ProfileState} from \"../types\";\r\nimport {\r\n    CreateProfileSuccessAction,\r\n    FetchUserSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    SetAvatarSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n    uploadingAvatar: false,\r\n};\r\n\r\nexport const profileReducer = (\r\n    state: ProfileState = initialState,\r\n    action: ProfileAction | AuthAction,\r\n): ProfileState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = action as SetProfileFieldsSuccessAction;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return state.user ? {...state, user: {...state.user, profile}} : state;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            let {offers} = action as LoadProfileOffersSuccessAction;\r\n\r\n            // Reorder the offers\r\n\r\n            // \"Collaborate\" category\r\n            const collab = offers\r\n                .filter((o) => o.category === OfferCategory.Collaborate)\r\n                .sort((a, b) => (a.id < b.id ? -1 : 1));\r\n            // \"Discover\" category\r\n            const disco = offers\r\n                .filter((o) => o.category === OfferCategory.Discover)\r\n                .sort((a, b) => (a.id < b.id ? 1 : -1));\r\n            // \"Meet \" category\r\n            const meet = offers.filter((o) => o.category === OfferCategory.Meet).sort((a, b) => (a.id < b.id ? -1 : 1));\r\n\r\n            offers = collab.concat(disco).concat(meet);\r\n\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = action as LoadProfileInterestsSuccessAction;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_BEGIN: {\r\n            return {...state, uploadingAvatar: true};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE: {\r\n            return {...state, uploadingAvatar: false};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = action as SetAvatarSuccessAction;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                    uploadingAvatar: false,\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {convertDtoToHistoryItem, convertDtoToProfile} from \"../../api/converters\";\r\nimport {\r\n    MatchActionResponseDto,\r\n    MatchActionStatus,\r\n    MatchHistoryItemDto,\r\n    PaginatedRequestResponse,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    MatchingFiltersState,\r\n    AppThunk,\r\n    PaginatedFetchRefreshAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchSuccessAction,\r\n} from \"../types\";\r\nimport {HISTORY_FETCH_LIMIT, PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n    FETCH_MY_MATCHES_REFRESH = \"MATCHING/FETCH_MY_MATCHES_REFRESH\",\r\n\r\n    FETCH_HISTORY_BEGIN = \"MATCHING/FETCH_HISTORY_BEGIN\",\r\n    FETCH_HISTORY_FAILURE = \"MATCHING/FETCH_HISTORY_FAILURE\",\r\n    FETCH_HISTORY_SUCCESS = \"MATCHING/FETCH_HISTORY_SUCCESS\",\r\n    FETCH_HISTORY_REFRESH = \"MATCHING/FETCH_HISTORY_REFRESH\",\r\n\r\n    ACTION_CANCEL_SUCCESS = \"MATCHING/ACTION_CANCEL_SUCCESS\",\r\n    ACTION_CANCEL_FAILURE = \"MATCHING/ACTION_CANCEL_FAILURE\",\r\n\r\n    SET_HISTORY_FILTERS = \"MATCHING/SET_HISTORY_FILTERS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {type: string};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n    matchStatus: MatchActionStatus;\r\n    roomId: string | null;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type SetHistoryFiltersAction = {\r\n    type: string;\r\n    filters: {[key: string]: boolean};\r\n};\r\n\r\nexport type ActionCancelSuccessAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n    isMatch: boolean;\r\n};\r\nexport type ActionCancelFailureAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | PaginatedFetchBeginAction\r\n    | PaginatedFetchSuccessAction<UserProfile>\r\n    | PaginatedFetchSuccessAction<MatchHistoryItem>\r\n    | PaginatedFetchFailureAction\r\n    | PaginatedFetchRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | SetHistoryFiltersAction\r\n    | ActionCancelSuccessAction\r\n    | ActionCancelFailureAction;\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst beginFetchProfiles = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {filters, profilesPagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchProfilesFailure());\r\n        return;\r\n    }\r\n\r\n    if (profilesPagination.fetching || !profilesPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    // Replaces empty arrays with \"undefined\"\r\n    function notEmpty<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n    // Remove the \"degrees\" filters when not filtering for students\r\n    const degrees = filters.types && filters.types.indexOf(\"student\") === -1 ? [] : filters.degrees;\r\n    // Same for staffRoles & staff\r\n    const staffRoles = filters.types && filters.types.indexOf(\"staff\") === -1 ? [] : filters.staffRoles;\r\n\r\n    const filterParams = {\r\n        universities: notEmpty(filters.universities),\r\n        spokenLanguages: notEmpty(filters.languages),\r\n        degrees: notEmpty(degrees),\r\n        educationFields: notEmpty(filters.educationFields),\r\n        staffRoles: notEmpty(staffRoles),\r\n        types: notEmpty(filters.types),\r\n        offers: notEmpty(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: profilesPagination.page,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const profiles = (paginated.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(profiles, canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nconst fetchProfilesFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nconst fetchProfilesSuccess = (\r\n    items: UserProfile[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<UserProfile> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nconst likeProfileSuccess = (\r\n    profile: UserProfile,\r\n    matchStatus: MatchActionStatus,\r\n    roomId: string | null,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profile,\r\n    matchStatus,\r\n    roomId,\r\n});\r\n\r\nexport const likeProfile = (profile: UserProfile): AppThunk<Promise<MatchActionResponseDto | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toProfileId: profile.id}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {status, roomId} = payload as MatchActionResponseDto;\r\n        dispatch(likeProfileSuccess(profile, status, roomId));\r\n        return {status, roomId};\r\n    }\r\n    return null;\r\n};\r\n\r\nconst dislikeProfileSuccess = (profile: UserProfile): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const dislikeProfile = (profile: UserProfile): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toProfileId: profile.id}, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(dislikeProfileSuccess(profile));\r\n};\r\n\r\nconst blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nconst beginFetchMyMatches = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nconst fetchMyMatchesFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nconst fetchMyMatchesSuccess = (\r\n    items: UserProfile[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<UserProfile> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchMyMatchesRefresh = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_REFRESH,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching,\r\n    } = getState();\r\n\r\n    const pagination = matching.myMatchesPagination;\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const items = (payload as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchMyMatchesSuccess(items, false));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n\r\nconst beginFetchHistory = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN,\r\n});\r\n\r\nconst fetchHistorySuccess = (\r\n    items: MatchHistoryItem[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<MatchHistoryItem> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchHistoryFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE,\r\n});\r\n\r\nexport const refreshFetchedHistory = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH,\r\n});\r\n\r\nexport const fetchHistory = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {historyPagination, historyFilters},\r\n    } = getState();\r\n\r\n    if (historyPagination.fetching || !historyPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchHistory());\r\n\r\n    const response = await requestBackend(\r\n        \"matching/history\",\r\n        \"GET\",\r\n        {\r\n            page: historyPagination.page,\r\n            limit: HISTORY_FETCH_LIMIT,\r\n            status: Object.keys(historyFilters).filter((k) => historyFilters[k]),\r\n            search: search && search.length > 0 ? search : undefined,\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const items = (paginated.data as MatchHistoryItemDto[]).map(convertDtoToHistoryItem);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchHistorySuccess(items, canFetchMore));\r\n    } else dispatch(fetchHistoryFailure());\r\n};\r\n\r\nexport const setHistoryFilters = (filters: {[key: string]: boolean}): SetHistoryFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst cancelActionFailure = (historyItemId: string): ActionCancelFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_FAILURE,\r\n    historyItemId,\r\n});\r\n\r\nconst cancelActionSuccess = (historyItemId: string, isMatch: boolean): ActionCancelSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS,\r\n    historyItemId,\r\n    isMatch,\r\n});\r\n\r\nexport const cancelMatchAction = (historyItemId: string, isMatch = false): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\r\n        \"matching/cancel\",\r\n        \"POST\",\r\n        {},\r\n        {matchingEntityId: historyItemId},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(cancelActionSuccess(historyItemId, isMatch));\r\n        return true;\r\n    } else {\r\n        dispatch(cancelActionFailure(historyItemId));\r\n        return false;\r\n    }\r\n};\r\n","export function arrayWithIdsToDict<T extends {id: string}>(arr: T[]): {[key: string]: T} {\r\n    return arr.reduce((dict, el) => ((dict[el.id] = el), dict), {} as {[key: string]: T});\r\n}\r\n\r\nexport function arrayWithIdMapperToDict<T>(arr: T[], id: (item: T) => string): {[key: string]: T} {\r\n    return arr.reduce((dict, el) => ((dict[id(el)] = el), dict), {} as {[key: string]: T});\r\n}\r\n\r\nexport type CancelablePromise<T = unknown> = Promise<T> & {cancel: () => void};\r\n\r\nexport function makePromiseCancelable<T>(promise: Promise<T>): CancelablePromise<T> {\r\n    let hasCanceled = false;\r\n\r\n    const wrappedPromise = new Promise<T>((resolve, reject) => {\r\n        promise.then((val: T) => !hasCanceled && resolve(val));\r\n        promise.catch((error) => (hasCanceled ? reject({canceled: true}) : reject(error)));\r\n    });\r\n\r\n    const cancel = () => (hasCanceled = true);\r\n\r\n    return Object.assign(wrappedPromise, {cancel});\r\n}\r\n","import {MATCH_ACTION_HISTORY_STATUSES} from \"../../api/dto\";\r\nimport {arrayWithIdsToDict} from \"../../general-utils\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES} from \"../auth/actions\";\r\nimport {initialPaginatedState, MatchingFiltersState, MatchingState, PaginatedFetchSuccessAction} from \"../types\";\r\nimport {\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    SetHistoryFiltersAction,\r\n    ActionCancelSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    educationFields: [],\r\n    staffRoles: [],\r\n    types: [],\r\n});\r\n\r\nconst initialHistoryFilters = () => {\r\n    const filters: {[key: string]: boolean} = {};\r\n    MATCH_ACTION_HISTORY_STATUSES.forEach((k) => (filters[k] = true));\r\n    return filters;\r\n};\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    profiles: {},\r\n    orderedProfileIds: [],\r\n    profilesPagination: initialPaginatedState(),\r\n    historyPagination: initialPaginatedState(),\r\n    historyFilters: initialHistoryFilters(),\r\n    historyItems: [],\r\n    myMatches: [],\r\n    myMatchesPagination: initialPaginatedState(),\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = action as SetOfferFilterAction;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = action as SetMatchingFiltersAction;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<UserProfile>;\r\n            const ids = items.map((p) => p.id);\r\n            const pagination = state.profilesPagination;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.concat(\r\n                    // Remove duplicates\r\n                    ids.filter((id) => state.orderedProfileIds.indexOf(id) === -1),\r\n                ),\r\n                profiles: {...state.profiles, ...arrayWithIdsToDict(items)},\r\n                profilesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: [],\r\n                profilesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, myMatchesPagination: {...state.myMatchesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                myMatchesPagination: {...state.myMatchesPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<UserProfile>;\r\n            const pagination = state.historyPagination;\r\n            return {\r\n                ...state,\r\n                myMatches: state.myMatches.concat(items),\r\n                myMatchesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                myMatches: [],\r\n                myMatchesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS:\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profile} = action as LikeProfileSuccessAction | DislikeProfileSuccessAction;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.filter((id: string) => id != profile.id),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = action as BlockProfileSuccessAction;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.filter((id: string) => id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<MatchHistoryItem>;\r\n            const pagination = state.historyPagination;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.concat(items),\r\n                historyPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH: {\r\n            return {\r\n                ...state,\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS: {\r\n            const {filters} = action as SetHistoryFiltersAction;\r\n            return {\r\n                ...state,\r\n                historyFilters: {...state.historyFilters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {historyItemId} = action as ActionCancelSuccessAction;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.filter((it: MatchHistoryItem) => it.id !== historyItemId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                profiles: {},\r\n                orderedProfileIds: [],\r\n                profilesPagination: initialPaginatedState(),\r\n                myMatches: [],\r\n                myMatchesPagination: initialPaginatedState(),\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {noop} from \"lodash\";\r\nimport io from \"socket.io-client\";\r\nimport {BACKEND_URL, DEBUG_MODE} from \"../constants/config\";\r\nimport {ChatRoom} from \"../model/chat-room\";\r\nimport {ResponseChatWritingDto, ResponseChatMessageDto, TokenDto, ResponseChatMessageReadDto} from \"./dto\";\r\n\r\nconst SOCKET_LOCATION = `${BACKEND_URL}/chat`;\r\n\r\nconst WRITING_STATE_DELAY = 1000;\r\nconst CONNECT_TIMEOUT = 2000;\r\nconst RECONNECT_ATTEMPTS = 3;\r\n\r\nexport type ChatSocketEventListeners = {\r\n    onMessageReceived: (m: ResponseChatMessageDto) => void;\r\n    onWritingStateChange: (m: ResponseChatWritingDto) => void;\r\n    onMessageRead: (m: ResponseChatMessageReadDto) => void;\r\n};\r\n\r\nclass ChatSocket {\r\n    private socket: SocketIOClient.Socket | null;\r\n    private connectCallbacks: ((connected: boolean) => void)[];\r\n    private writingTimeout: NodeJS.Timeout | null;\r\n    private lastSentWritingState: boolean;\r\n    private lastSentWritingStateRoom: ChatRoom | null;\r\n\r\n    private connectTimeout: NodeJS.Timeout | null;\r\n\r\n    constructor() {\r\n        this.socket = null;\r\n        this.connectCallbacks = [];\r\n        this.writingTimeout = null;\r\n        this.lastSentWritingState = false;\r\n        this.lastSentWritingStateRoom = null;\r\n        this.connectTimeout = null;\r\n    }\r\n\r\n    private consumeConnectCallbacks(connectedState: boolean): void {\r\n        this.connectCallbacks.forEach((f) => f(connectedState));\r\n        this.connectCallbacks = [];\r\n    }\r\n\r\n    private registerListeners(listeners: ChatSocketEventListeners): void {\r\n        if (!this.socket) return;\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            this.log(\"connected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(true);\r\n        });\r\n        this.socket.on(\"close\", () => {\r\n            this.log(\"close\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n        this.socket.on(\"disconnect\", () => {\r\n            this.log(\"disconnected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n\r\n        /*this.socket.on(\"connect_failed\", () => this.log(\"connect_failed\"));\r\n        this.socket.on(\"connect_error\", () => this.log(\"connect_error\"));\r\n        this.socket.on(\"error\", () => this.log(\"error\"));\r\n        this.socket.on(\"exception\", (e: unknown) => this.log(\"<---- Exception \" + JSON.stringify(e)));*/\r\n\r\n        this.socket.on(\"receiveMessage\", (m: ResponseChatMessageDto) => listeners.onMessageReceived(m));\r\n        this.socket.on(\"readMessage\", (m: ResponseChatMessageReadDto) => listeners.onMessageRead(m));\r\n        this.socket.on(\"isWriting\", (m: ResponseChatWritingDto) => listeners.onWritingStateChange(m));\r\n    }\r\n\r\n    private log(msg: string): void {\r\n        if (DEBUG_MODE) console.log(`[ChatSocket] ${msg}`);\r\n    }\r\n\r\n    private emit(msg: string, payload: unknown): void {\r\n        this.log(`----> '${msg}' - payload: ${JSON.stringify(payload)}`);\r\n        this.socket?.emit(msg, payload);\r\n    }\r\n\r\n    private sendWritingState(room: ChatRoom, state: boolean): void {\r\n        this.lastSentWritingState = state;\r\n        this.lastSentWritingStateRoom = room;\r\n        this.emit(\"isWriting\", {roomId: room.id, state});\r\n    }\r\n\r\n    private refreshWritingTimeout(room: ChatRoom): void {\r\n        if (this.writingTimeout !== null) {\r\n            clearTimeout(this.writingTimeout);\r\n            this.writingTimeout = null;\r\n        }\r\n        this.writingTimeout = setTimeout(() => {\r\n            this.sendWritingState(room, false);\r\n        }, WRITING_STATE_DELAY);\r\n    }\r\n\r\n    addConnectCallback(callback: (connected: boolean) => void): void {\r\n        this.connectCallbacks.push(callback);\r\n    }\r\n\r\n    connect(\r\n        authToken: TokenDto,\r\n        listeners: Partial<ChatSocketEventListeners> = {},\r\n        callback?: (connected: boolean) => void,\r\n        retry = RECONNECT_ATTEMPTS,\r\n    ): void {\r\n        // If we're already connected, callback and abort\r\n        if (this.isConnected()) {\r\n            if (callback) callback(true);\r\n            return;\r\n        }\r\n\r\n        if (callback) this.addConnectCallback(callback);\r\n\r\n        // If we're already connecting, abort (the callback we be called whenever we're connected)\r\n        if (this.isConnecting()) return;\r\n\r\n        this.log(\"Connecting to \" + SOCKET_LOCATION);\r\n\r\n        if (this.socket) {\r\n            this.socket.connect();\r\n            /*setTimeout(() => {\r\n                if (this.socket) this.socket.connect();\r\n            }, 100);*/\r\n        } else {\r\n            this.log(\"----> Authenticating - token = \" + authToken.accessToken);\r\n            this.socket = io(SOCKET_LOCATION, {\r\n                query: {authorization: authToken.accessToken},\r\n                //reconnectionDelay: RECONNECT_DELAY,\r\n                //reconnectionAttempts: RECONNECT_ATTEMPTS,\r\n                reconnection: false,\r\n            });\r\n            this.registerListeners({\r\n                onMessageRead: noop,\r\n                onMessageReceived: noop,\r\n                onWritingStateChange: noop,\r\n                ...listeners,\r\n            });\r\n        }\r\n\r\n        if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n\r\n        // Set a timeout to catch connection failure\r\n        this.connectTimeout = setTimeout(() => {\r\n            this.connectTimeout = null;\r\n            // If we're still not connected\r\n            if (!this.isConnected()) {\r\n                // Try again\r\n                if (retry > 0) this.connect(authToken, listeners, noop, retry - 1);\r\n                // Stop trying\r\n                else this.consumeConnectCallbacks(false);\r\n            }\r\n        }, CONNECT_TIMEOUT);\r\n    }\r\n\r\n    joinRoom(room: ChatRoom): void {\r\n        this.emit(\"joinRoom\", {roomId: room.id});\r\n        // Inform the server that we have read the last message of the room\r\n        if (room.lastMessage) this.readMessage(room.id, room.lastMessage._id, room.lastMessage.createdAt.toJSON());\r\n    }\r\n\r\n    leaveRoom(room: ChatRoom): void {\r\n        this.emit(\"leaveRoom\", {roomId: room.id});\r\n    }\r\n\r\n    sendMessage(roomId: string, id: string, text: string): void {\r\n        this.emit(\"sendMessage\", {roomId, id, text});\r\n    }\r\n\r\n    readMessage(roomId: string, messageId: string, createdAt: string): void {\r\n        this.emit(\"readMessage\", {roomId, messageId, date: createdAt});\r\n    }\r\n\r\n    setWriting(room: ChatRoom): void {\r\n        // Refesh the timeout - in a fixed amount of time, this will tell the server we are no longer writing\r\n        this.refreshWritingTimeout(room);\r\n\r\n        // If we are beginning to write, inform the server now\r\n        if (this.lastSentWritingState === false) this.sendWritingState(room, true);\r\n    }\r\n\r\n    disconnect(): void {\r\n        // If we were connecting\r\n        if (this.isConnecting()) {\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        }\r\n        // If the socket was connected, disconnect it\r\n        if (this.isConnected()) {\r\n            if (this.lastSentWritingStateRoom && this.lastSentWritingState === true)\r\n                this.sendWritingState(this.lastSentWritingStateRoom, false);\r\n            if (this.socket) this.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return this.socket !== null && this.socket.connected;\r\n    }\r\n\r\n    isConnecting(): boolean {\r\n        return this.connectTimeout !== null;\r\n    }\r\n}\r\n\r\nexport default new ChatSocket();\r\n","import chatSocket from \"../../api/chat-socket\";\r\nimport {convertDtoToChatMessage, convertDtoToRoom} from \"../../api/converters\";\r\nimport {\r\n    PaginatedRequestResponse,\r\n    ResponseChatMessageDto,\r\n    ResponseChatMessageReadDto,\r\n    ResponseChatWritingDto,\r\n    ResponseRoomDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MESSAGES_FETCH_LIMIT, ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ChatRoom, ChatRoomMessage} from \"../../model/chat-room\";\r\nimport {\r\n    AppThunk,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchSuccessAction,\r\n    PaginatedFetchSuccessActionRefreshable,\r\n} from \"../types\";\r\n\r\nexport enum MESSAGING_ACTION_TYPES {\r\n    FETCH_MATCH_ROOMS_BEGIN = \"MESSAGING/FETCH_MATCH_ROOMS_BEGIN\",\r\n    FETCH_MATCH_ROOMS_FAILURE = \"MESSAGING/FETCH_MATCH_ROOMS_FAILURE\",\r\n    FETCH_MATCH_ROOMS_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOMS_SUCCESS\",\r\n    FETCH_MATCH_ROOM_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOM_SUCCESS\",\r\n    CONNECT_TO_CHAT_BEGIN = \"MESSAGING/CONNECT_TO_CHAT_BEGIN\",\r\n    CONNECT_TO_CHAT_FAILURE = \"MESSAGING/CONNECT_TO_CHAT_FAILURE\",\r\n    CONNECT_TO_CHAT_SUCCESS = \"MESSAGING/CONNECT_TO_CHAT_SUCCESS\",\r\n    DISCONNECT_FROM_CHAT = \"MESSAGING/DISCONNECT_FROM_CHAT\",\r\n    JOIN_CHAT_ROOM_BEGIN = \"MESSAGING/JOIN_CHAT_ROOM_BEGIN\",\r\n    JOIN_CHAT_ROOM_FAILURE = \"MESSAGING/JOIN_CHAT_ROOM_FAILURE\",\r\n    JOIN_CHAT_ROOM_SUCCESS = \"MESSAGING/JOIN_CHAT_ROOM_SUCCESS\",\r\n    LEAVE_ROOM = \"MESSAGING/LEAVE_ROOM\",\r\n    SEND_MESSAGE_FAILURE = \"MESSAGING/SEND_MESSAGE_FAILURE\",\r\n    SEND_MESSAGE_SUCCESS = \"MESSAGING/SEND_MESSAGE_SUCCESS\",\r\n    RECEIVE_MESSAGE = \"MESSAGING/RECEIVE_MESSAGE\",\r\n    RECEIVE_WRITING_STATE = \"MESSAGING/RECEIVE_WRITING_STATE\",\r\n    READ_MESSAGE = \"MESSAGING/READ_MESSAGE\",\r\n    FETCH_EARLIER_MESSAGES_BEGIN = \"MESSAGING/FETCH_EARLIER_MESSAGES_BEGIN\",\r\n    FETCH_EARLIER_MESSAGES_FAILURE = \"MESSAGING/FETCH_EARLIER_MESSAGES_FAILURE\",\r\n    FETCH_EARLIER_MESSAGES_SUCCESS = \"MESSAGING/FETCH_EARLIER_MESSAGES_SUCCESS\",\r\n    FETCH_NEW_MESSAGES_BEGIN = \"MESSAGING/FETCH_NEW_MESSAGES_BEGIN\",\r\n    FETCH_NEW_MESSAGES_FAILURE = \"MESSAGING/FETCH_NEW_MESSAGES_FAILURE\",\r\n    FETCH_NEW_MESSAGES_SUCCESS = \"MESSAGING/FETCH_NEW_MESSAGES_SUCCESS\",\r\n}\r\n\r\nexport type FetchMatchRoomSuccessAction = {type: string; room: ChatRoom};\r\n\r\nexport type ConnectToChatBeginAction = {type: string};\r\nexport type ConnectToChatFailureAction = {type: string};\r\nexport type ConnectToChatSuccessAction = {type: string};\r\n\r\nexport type JoinChatRoomBeginAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomFailureAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomSuccessAction = {type: string; room: ChatRoom};\r\nexport type LeaveChatRoomAction = {type: string};\r\n\r\nexport type DisconnectFromChatAction = {type: string};\r\n\r\nexport type SendMessageFailureAction = {type: string};\r\nexport type SendMessageSuccessAction = {type: string; message: ChatRoomMessage};\r\nexport type ReceiveChatMessageAction = {type: string; message: ResponseChatMessageDto};\r\nexport type ReceiveChatWritingAction = {type: string; payload: ResponseChatWritingDto};\r\nexport type ReadChatMessageAction = {type: string; payload: ResponseChatMessageReadDto};\r\n\r\nexport type FetchEarlierMessagesBeginAction = {room: ChatRoom} & PaginatedFetchBeginAction;\r\nexport type FetchEarlierMessagesFailureAction = {room: ChatRoom} & PaginatedFetchFailureAction;\r\nexport type FetchEarlierMessagesSuccessAction = {room: ChatRoom} & PaginatedFetchSuccessAction<ChatRoomMessage>;\r\n\r\nexport type FetchNewMessagesBeginAction = {room: ChatRoom} & PaginatedFetchBeginAction;\r\nexport type FetchNewMessagesFailureAction = {room: ChatRoom} & PaginatedFetchFailureAction;\r\nexport type FetchNewMessagesSuccessAction = {room: ChatRoom} & PaginatedFetchSuccessAction<ChatRoomMessage>;\r\n\r\nexport type MessagingAction =\r\n    | FetchMatchRoomSuccessAction\r\n    | PaginatedFetchBeginAction\r\n    | PaginatedFetchSuccessActionRefreshable<ChatRoom>\r\n    | ConnectToChatBeginAction\r\n    | ConnectToChatFailureAction\r\n    | ConnectToChatSuccessAction\r\n    | JoinChatRoomBeginAction\r\n    | JoinChatRoomFailureAction\r\n    | JoinChatRoomSuccessAction\r\n    | LeaveChatRoomAction\r\n    | DisconnectFromChatAction\r\n    | SendMessageFailureAction\r\n    | SendMessageSuccessAction\r\n    | ReceiveChatMessageAction\r\n    | FetchEarlierMessagesBeginAction\r\n    | FetchEarlierMessagesFailureAction\r\n    | FetchEarlierMessagesSuccessAction\r\n    | FetchNewMessagesBeginAction\r\n    | FetchNewMessagesFailureAction\r\n    | FetchNewMessagesSuccessAction;\r\n\r\nconst beginFetchMatchRooms = (): PaginatedFetchBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN,\r\n});\r\n\r\nconst fetchMatchRoomsFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE,\r\n});\r\n\r\nconst fetchMatchRoomsSuccess = (\r\n    items: ChatRoom[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<ChatRoom> => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nexport const fetchMatchRooms = (search?: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const token = state.auth.token;\r\n    const pagination = state.messaging.matchRoomsPagination;\r\n\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchMatchRooms());\r\n\r\n    const response = await requestBackend(\r\n        \"rooms\",\r\n        \"GET\",\r\n        {page: refresh ? 1 : pagination.page, limit: ROOMS_FETCH_LIMIT, search},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const rooms = (paginated.data as ResponseRoomDto[]).map(convertDtoToRoom);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMatchRoomsSuccess(rooms, canFetchMore, refresh));\r\n    } else dispatch(fetchMatchRoomsFailure());\r\n};\r\n\r\nexport const refreshMatchRooms = (search?: string): AppThunk => async (dispatch) => {\r\n    dispatch(fetchMatchRooms(search, true));\r\n};\r\n\r\nconst connectToChatBegin = (): ConnectToChatBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN,\r\n});\r\n\r\nconst connectToChatFailure = (): ConnectToChatFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE,\r\n});\r\n\r\nconst connectToChatSuccess = (): ConnectToChatSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS,\r\n});\r\n\r\nexport const connectToChat = (callback?: (connected: boolean) => void): AppThunk => async (dispatch, getState) => {\r\n    const authToken = getState().auth.token;\r\n\r\n    const fail = () => {\r\n        dispatch(connectToChatFailure());\r\n        if (callback) callback(false);\r\n    };\r\n\r\n    if (chatSocket.isConnected()) {\r\n        if (callback) callback(true);\r\n    } else if (authToken) {\r\n        if (chatSocket.isConnecting()) {\r\n            if (callback) chatSocket.addConnectCallback(callback);\r\n        } else {\r\n            dispatch(connectToChatBegin());\r\n            chatSocket.connect(\r\n                authToken,\r\n                {\r\n                    onMessageReceived: (m) => {\r\n                        const {activeRoomId} = getState().messaging;\r\n                        // Tell the server we've read the message if this is the active room\r\n                        if (m.roomId == activeRoomId) chatSocket.readMessage(activeRoomId, m.id, m.updatedAt);\r\n                        dispatch(receiveChatMessage(m));\r\n                    },\r\n                    onMessageRead: (p) => dispatch(readChatMessage(p)),\r\n                    onWritingStateChange: (m) => dispatch(receiveChatWriting(m)),\r\n                },\r\n                (hasConnected: boolean) => {\r\n                    if (hasConnected) {\r\n                        dispatch(connectToChatSuccess());\r\n                        if (callback) callback(true);\r\n                    } else fail();\r\n                },\r\n            );\r\n        }\r\n    } else fail();\r\n};\r\n\r\nexport const disconnectFromChat = (): DisconnectFromChatAction => {\r\n    chatSocket.disconnect();\r\n    return {type: MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT};\r\n};\r\n\r\nconst joinChatRoomBegin = (room: ChatRoom): JoinChatRoomBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomFailure = (room: ChatRoom): JoinChatRoomFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomSuccess = (room: ChatRoom): JoinChatRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const joinChatRoom = (room: ChatRoom): AppThunk => async (dispatch) => {\r\n    if (chatSocket.isConnected()) {\r\n        dispatch(joinChatRoomBegin(room));\r\n        chatSocket.joinRoom(room);\r\n        dispatch(joinChatRoomSuccess(room));\r\n    } else dispatch(joinChatRoomFailure(room));\r\n};\r\n\r\nexport const leaveChatRoom = (room: ChatRoom): LeaveChatRoomAction => {\r\n    chatSocket.leaveRoom(room);\r\n    return {type: MESSAGING_ACTION_TYPES.LEAVE_ROOM};\r\n};\r\n\r\nconst sendChatMessageFailure = (): SendMessageFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_FAILURE,\r\n});\r\n\r\nconst sendChatMessageSuccess = (message: ChatRoomMessage): SendMessageSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n});\r\n\r\nexport const sendChatMessage = (id: string, text: string, createdAt: Date): AppThunk => async (dispatch, getState) => {\r\n    const {activeRoomId, localChatUser} = getState().messaging;\r\n\r\n    if (chatSocket.isConnected() && activeRoomId && localChatUser) {\r\n        const message: ChatRoomMessage = {\r\n            _id: id,\r\n            createdAt,\r\n            user: localChatUser,\r\n            text,\r\n            sent: false,\r\n        };\r\n        dispatch(sendChatMessageSuccess(message));\r\n        chatSocket.sendMessage(activeRoomId, id, text);\r\n    } else dispatch(sendChatMessageFailure());\r\n};\r\n\r\nexport const receiveChatMessage = (message: ResponseChatMessageDto): ReceiveChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE,\r\n    message,\r\n});\r\n\r\nconst receiveChatWriting = (payload: ResponseChatWritingDto): ReceiveChatWritingAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE,\r\n    payload,\r\n});\r\n\r\nconst readChatMessage = (payload: ResponseChatMessageReadDto): ReadChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.READ_MESSAGE,\r\n    payload,\r\n});\r\n\r\nconst fetchEarlierMessagesBegin = (room: ChatRoom): FetchEarlierMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesFailure = (room: ChatRoom): FetchEarlierMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesSuccess = (\r\n    room: ChatRoom,\r\n    items: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchEarlierMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS,\r\n    room,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchNewMessagesBegin = (room: ChatRoom): FetchNewMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesFailure = (room: ChatRoom): FetchNewMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesSuccess = (\r\n    room: ChatRoom,\r\n    items: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchNewMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS,\r\n    room,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\n/**\r\n * Fetch all messages that are more recent than the last one we have for a given room.\r\n * @param room a ChatRoom\r\n */\r\nexport const fetchNewMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {fetchingNewMessages} = state.messaging;\r\n    const token = state.auth.token;\r\n\r\n    if (fetchingNewMessages) return;\r\n    const lastMessage = room.lastMessage;\r\n\r\n    if (chatSocket.isConnected() && lastMessage) {\r\n        dispatch(fetchNewMessagesBegin(room));\r\n\r\n        // Fetch messages only after the date of the latest message we have\r\n        const afterDate = lastMessage.createdAt.toJSON();\r\n\r\n        const fetchPage = async (page: number) => {\r\n            const response = await requestBackend(\r\n                `rooms/${room.id}/messages`,\r\n                \"GET\",\r\n                {page, limit: MESSAGES_FETCH_LIMIT, afterDate},\r\n                {},\r\n                token,\r\n            );\r\n\r\n            const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n                const user = room.users.find((u) => u._id === dto.senderId);\r\n                return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n            };\r\n\r\n            if (response.status === HttpStatusCode.OK) {\r\n                const paginated = response as PaginatedRequestResponse;\r\n                const messages = (paginated.data as ResponseChatMessageDto[])\r\n                    .map(convertDto)\r\n                    .filter((m) => m !== undefined);\r\n\r\n                // Keep fetching if there are more messages to fetch\r\n                if (page < paginated.meta.totalPages) fetchPage(page + 1);\r\n                else if (messages.length > 0 && messages[0]) {\r\n                    // Inform the server that we've read the last message\r\n                    chatSocket.readMessage(room.id, messages[0]._id, messages[0].createdAt.toJSON());\r\n                }\r\n                dispatch(\r\n                    fetchNewMessagesSuccess(room, messages as ChatRoomMessage[], page < paginated.meta.totalPages),\r\n                );\r\n            } else dispatch(fetchNewMessagesFailure(room));\r\n        };\r\n\r\n        fetchPage(1);\r\n    } else {\r\n        dispatch(fetchNewMessagesFailure(room));\r\n    }\r\n};\r\n\r\nexport const fetchEarlierMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {\r\n        socketState: {connected},\r\n    } = state.messaging;\r\n    const token = state.auth.token;\r\n    const pagination = room.messagePagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    if (connected) {\r\n        dispatch(fetchEarlierMessagesBegin(room));\r\n\r\n        // Fetch messages only before the date of the earliest message we have\r\n        const beforeDate =\r\n            room.messages.length > 0 ? room.messages[room.messages.length - 1].createdAt.toJSON() : undefined;\r\n\r\n        const response = await requestBackend(\r\n            `rooms/${room.id}/messages`,\r\n            \"GET\",\r\n            {page: 1, limit: MESSAGES_FETCH_LIMIT, beforeDate},\r\n            {},\r\n            token,\r\n        );\r\n\r\n        const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n            const user = room.users.find((u) => u._id === dto.senderId);\r\n            return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n        };\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const paginated = response as PaginatedRequestResponse;\r\n            const messages = (paginated.data as ResponseChatMessageDto[])\r\n                .map(convertDto)\r\n                .filter((m) => m !== undefined);\r\n            const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n            dispatch(fetchEarlierMessagesSuccess(room, messages as ChatRoomMessage[], canFetchMore));\r\n        } else dispatch(fetchEarlierMessagesFailure(room));\r\n    } else {\r\n        dispatch(fetchEarlierMessagesFailure(room));\r\n    }\r\n};\r\n\r\nconst fetchMatchRoomSuccess = (room: ChatRoom): FetchMatchRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const fetchMatchRoom = (roomId: string): AppThunk<Promise<ChatRoom | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    const response = await requestBackend(`rooms/${roomId}`, \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const room = convertDtoToRoom(payload as ResponseRoomDto);\r\n        dispatch(fetchMatchRoomSuccess(room));\r\n        return room;\r\n    } else return null;\r\n};\r\n","import {convertDtoToChatMessage} from \"../../api/converters\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {CreateProfileSuccessAction, FetchUserSuccessAction, PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {MessagingState, initialPaginatedState, PaginatedFetchSuccessActionRefreshable} from \"../types\";\r\nimport {\r\n    FetchEarlierMessagesBeginAction,\r\n    FetchEarlierMessagesFailureAction,\r\n    FetchEarlierMessagesSuccessAction,\r\n    FetchMatchRoomSuccessAction,\r\n    FetchNewMessagesSuccessAction,\r\n    JoinChatRoomBeginAction,\r\n    MessagingAction,\r\n    MESSAGING_ACTION_TYPES,\r\n    ReadChatMessageAction,\r\n    ReceiveChatMessageAction,\r\n    ReceiveChatWritingAction,\r\n    SendMessageSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: MessagingState = {\r\n    matchRooms: {},\r\n    matchRoomsOrdered: [],\r\n    matchRoomsPagination: initialPaginatedState(),\r\n    socketState: {connected: false, connecting: false},\r\n    activeRoomId: null,\r\n    localChatUser: null,\r\n    fetchingNewMessages: false,\r\n};\r\n\r\nfunction toLocalChatUser(profile: UserProfile): ChatRoomUser | null {\r\n    return {\r\n        _id: profile.id,\r\n        name: `${profile.firstName} ${profile.lastName}`,\r\n        avatar: profile.avatarUrl || \"\",\r\n        lastMessageSeenDate: null,\r\n        lastMessageSeenId: null,\r\n    };\r\n}\r\n\r\nexport const messagingReducer = (state: MessagingState = initialState, action: MessagingAction): MessagingState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(profile)};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN: {\r\n            return {...state, matchRoomsPagination: {...state.matchRoomsPagination, fetching: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                matchRoomsPagination: {...state.matchRoomsPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<ChatRoom>;\r\n            const pagination = state.matchRoomsPagination;\r\n            const matchRooms = {...state.matchRooms};\r\n            // Add entries in the rooms dictionary\r\n            items.forEach((r: ChatRoom) => {\r\n                if (matchRooms[r.id]) {\r\n                    // matchRooms[r.id] = {...matchRooms[r.id], lastMessage: r.lastMessage, users: r.users};\r\n                    matchRooms[r.id] = {...matchRooms[r.id], lastMessage: r.lastMessage};\r\n                } else {\r\n                    matchRooms[r.id] = r;\r\n                }\r\n            });\r\n            const ids = items.map((r: ChatRoom) => r.id);\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms,\r\n                matchRoomsOrdered: refresh ? ids : state.matchRoomsOrdered.concat(ids),\r\n                matchRoomsPagination: {fetching: false, page: (refresh ? 1 : pagination.page) + 1, canFetchMore},\r\n            };\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOM_SUCCESS: {\r\n            const {room} = action as FetchMatchRoomSuccessAction;\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms: {\r\n                    ...state.matchRooms,\r\n                    [room.id]: state.matchRooms[room.id]\r\n                        ? {...state.matchRooms[room.id], lastMessage: room.lastMessage}\r\n                        : room,\r\n                },\r\n            };\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN: {\r\n            return {...state, socketState: {connected: false, connecting: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS: {\r\n            return {...state, socketState: {connected: true, connecting: false}};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT: {\r\n            return {...state, socketState: {connected: false, connecting: false}, activeRoomId: null};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN: {\r\n            const {room} = action as JoinChatRoomBeginAction;\r\n            return {...state, activeRoomId: room.id};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE:\r\n        case MESSAGING_ACTION_TYPES.LEAVE_ROOM: {\r\n            return {...state, activeRoomId: null};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS: {\r\n            const {message} = action as SendMessageSuccessAction;\r\n            if (state.activeRoomId) {\r\n                const room = state.matchRooms[state.activeRoomId];\r\n                return updateRoom(state, true, {\r\n                    ...room,\r\n                    messages: [message].concat(room.messages),\r\n                    lastMessage: message,\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE: {\r\n            const {message} = action as ReceiveChatMessageAction;\r\n\r\n            let room = state.matchRooms[message.roomId];\r\n            if (room) {\r\n                room = {...room};\r\n                // Start by checking if this is an existing message (e.g. our own message)\r\n                const existingMessage = room.messages.find((m: ChatRoomMessage) => m._id === message.id);\r\n                if (existingMessage) {\r\n                    const msg = {...existingMessage, sent: true, text: message.text};\r\n\r\n                    // Update the message in the list\r\n                    room.messages = room.messages.map((m: ChatRoomMessage) => (m._id === message.id ? msg : m));\r\n\r\n                    // Also update the last message\r\n                    if (!room.lastMessage || msg.createdAt >= room.lastMessage.createdAt) room.lastMessage = msg;\r\n                } else {\r\n                    const user = room.users.find((u: ChatRoomUser) => u._id == message.senderId);\r\n                    if (user) {\r\n                        const msg = convertDtoToChatMessage(user, message);\r\n                        room.messages = [msg].concat(room.messages);\r\n                        room.lastMessage = msg;\r\n                        room.writing[message.senderId] = false;\r\n                    }\r\n                }\r\n                return updateRoom(state, true, room);\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE: {\r\n            const payload = (action as ReceiveChatWritingAction).payload;\r\n            const {profileId, roomId} = payload;\r\n\r\n            // Just ignore if this is about our own writing state\r\n            if (state.localChatUser && state.localChatUser._id === profileId) return state;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    writing: {...room.writing, [profileId]: payload.state},\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.READ_MESSAGE: {\r\n            const {roomId, date, messageId, profileId} = (action as ReadChatMessageAction).payload;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    users: room.users.map((u: ChatRoomUser) =>\r\n                        u._id == profileId\r\n                            ? {...u, lastMessageSeenDate: new Date(date), lastMessageSeenId: messageId}\r\n                            : u,\r\n                    ),\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN: {\r\n            const {room} = action as FetchEarlierMessagesBeginAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: true},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE: {\r\n            const {room} = action as FetchEarlierMessagesFailureAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: false, canFetchMore: false},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS: {\r\n            const {room, items, canFetchMore} = action as FetchEarlierMessagesSuccessAction;\r\n            const pagination = room.messagePagination;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messages: room.messages.concat(items),\r\n                messagePagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            });\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: true,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: false,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS: {\r\n            const {room, items} = action as FetchNewMessagesSuccessAction;\r\n            const filteredMessages = items.filter((ma) => !room.messages.some((mb) => mb._id === ma._id));\r\n            const users = room.users.concat(); // copy\r\n\r\n            // Update the last message seen for the user who sent it\r\n            if (filteredMessages.length > 0) {\r\n                const lastMessage = filteredMessages[0];\r\n                const i = users.findIndex((u) => u._id === lastMessage.user._id);\r\n                users[i] = {\r\n                    ...users[i],\r\n                    lastMessageSeenId: lastMessage._id,\r\n                    lastMessageSeenDate: lastMessage.createdAt,\r\n                };\r\n            }\r\n\r\n            return updateRoom({...state, fetchingNewMessages: false}, false, {\r\n                ...room,\r\n                messages: filteredMessages.concat(room.messages),\r\n                users,\r\n                ...(filteredMessages.length > 0 ? {lastMessage: filteredMessages[0]} : {}),\r\n            });\r\n        }\r\n\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                activeRoomId: null,\r\n                matchRooms: {},\r\n                matchRoomsOrdered: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n                localChatUser: null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateRoom(state: MessagingState, setAsFirst: boolean, room: ChatRoom): MessagingState {\r\n    if (setAsFirst) {\r\n        const otherRooms = state.matchRoomsOrdered.filter((id: string) => id !== room.id);\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            matchRoomsOrdered: [room.id].concat(otherRooms),\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n        };\r\n    }\r\n}\r\n","import {NotificationsState} from \"../types\";\r\nimport {NotificationsAction} from \"./actions\";\r\n\r\nexport const initialState: NotificationsState = {};\r\n\r\nexport const notificationsReducer = (\r\n    state: NotificationsState = initialState,\r\n    action: NotificationsAction,\r\n): NotificationsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    AppThunk,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchRefreshAction,\r\n    PaginatedFetchSuccessAction,\r\n    PaginatedFetchSuccessActionRefreshable,\r\n    ValidatedThunkAction,\r\n} from \"../types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {\r\n    GROUPS_FETCH_LIMIT,\r\n    GROUPS_POSTS_FETCH_LIMIT,\r\n    GROUP_MEMBERS_FETCH_LIMIT,\r\n    POSTS_FEED_FETCH_LIMIT,\r\n    POST_COMMENTS_FETCH_LIMIT,\r\n} from \"../../constants/config\";\r\nimport {\r\n    CreateGroupDto,\r\n    CreateGroupPostDto,\r\n    CreatePostCommentDto,\r\n    GroupCoverSuccessfullyUpdatedDto,\r\n    GroupMemberStatus,\r\n    GroupRole,\r\n    PaginatedRequestResponse,\r\n    ResponseGroupDto,\r\n    ResponseGroupMemberDto,\r\n    ResponseGroupPostDto,\r\n    ResponsePostCommentDto,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {Group, GroupMember, GroupPost, PostComment, PostSortingOrder, GroupVoteStatus} from \"../../model/groups\";\r\nimport {\r\n    convertDtoToGroup,\r\n    convertDtoToGroupMember,\r\n    convertDtoToGroupPost,\r\n    convertDtoToPostComments,\r\n    convertDtoToProfile,\r\n} from \"../../api/converters\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {uploadImage} from \"../../api/media-upload\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {findComment, findPost} from \"./helpers\";\r\nimport {User} from \"../../model/user\";\r\n\r\nexport enum GROUP_ACTION_TYPES {\r\n    CREATE_SUCCESS = \"GROUP/CREATE_SUCCESS\",\r\n    CREATE_FAILURE = \"GROUP/CREATE_FAILURE\",\r\n    UPDATE_SUCCESS = \"GROUP/UPDATE_SUCCESS\",\r\n    UPDATE_FAILURE = \"GROUP/UPDATE_FAILURE\",\r\n    DELETE_SUCCESS = \"GROUP/DELETE_SUCCESS\",\r\n    DELETE_FAILURE = \"GROUP/DELETE_FAILURE\",\r\n    LEAVE_SUCCESS = \"GROUP/LEAVE_SUCCESS\",\r\n    FETCH_POSTS_FEED_BEGIN = \"GROUP/FETCH_POSTS_FEED_BEGIN\",\r\n    FETCH_POSTS_FEED_SUCCESS = \"GROUP/FETCH_POSTS_FEED_SUCCESS\",\r\n    FETCH_POSTS_FEED_FAILURE = \"GROUP/FETCH_POSTS_FEED_FAILURE\",\r\n    FETCH_GROUPS_BEGIN = \"GROUP/FETCH_GROUPS_BEGIN\",\r\n    FETCH_GROUPS_FAILURE = \"GROUP/FETCH_GROUPS_FAILURE\",\r\n    FETCH_GROUPS_SUCCESS = \"GROUP/FETCH_GROUPS_SUCCESS\",\r\n    FETCH_GROUP_SUCCESS = \"GROUP/FETCH_GROUP_SUCCESS\",\r\n    FETCH_GROUP_MEMBERS_BEGIN = \"GROUP/FETCH_GROUP_MEMBERS_BEGIN\",\r\n    FETCH_GROUP_MEMBERS_SUCCESS = \"GROUP/FETCH_GROUP_MEMBERS_SUCCESS\",\r\n    FETCH_GROUP_MEMBERS_FAILURE = \"GROUP/FETCH_GROUP_MEMBERS_FAILURE\",\r\n    FETCH_GROUP_MEMBERS_REFRESH = \"GROUP/FETCH_GROUP_MEMBERS_REFRESH\",\r\n    DELETE_GROUP_MEMBER_SUCCESS = \"GROUP/DELETE_GROUP_MEMBER_SUCCESS\",\r\n    SET_GROUP_MEMBER_STATUS_SUCCESS = \"GROUP/SET_GROUP_MEMBER_STATUS_SUCCESS\",\r\n    SET_GROUP_MEMBER_ROLE_SUCCESS = \"GROUP/SET_GROUP_MEMBER_ROLE_SUCCESS\",\r\n    INVITE_TO_GROUP_SUCCESS = \"GROUP/INVITE_TO_GROUP_SUCCESS\",\r\n    FETCH_GROUP_POSTS_BEGIN = \"GROUP/FETCH_GROUP_POSTS_BEGIN\",\r\n    FETCH_GROUP_POSTS_SUCCESS = \"GROUP/FETCH_GROUP_POSTS_SUCCESS\",\r\n    FETCH_GROUP_POSTS_FAILURE = \"GROUP/FETCH_GROUP_POSTS_FAILURE\",\r\n    FETCH_POST_COMMENTS_BEGIN = \"GROUP/FETCH_POST_COMMENTS_BEGIN\",\r\n    FETCH_POST_COMMENTS_SUCCESS = \"GROUP/FETCH_POST_COMMENTS_SUCCESS\",\r\n    FETCH_POST_COMMENTS_FAILURE = \"GROUP/FETCH_POST_COMMENTS_FAILURE\",\r\n    FETCH_POST_COMMENTS_REFRESH = \"GROUP/FETCH_POST_COMMENTS_REFRESH\",\r\n    FETCH_MYGROUPS_BEGIN = \"GROUP/FETCH_MYGROUPS_BEGIN\",\r\n    FETCH_MYGROUPS_FAILURE = \"GROUP/FETCH_MYGROUPS_FAILURE\",\r\n    FETCH_MYGROUPS_SUCCESS = \"GROUP/FETCH_MYGROUPS_SUCCESS\",\r\n    JOIN_GROUP_SUCCESS = \"GROUP/JOIN_GROUP_SUCCESS\",\r\n    CREATE_POST_BEGIN = \"GROUP/CREATE_POST_BEGIN\",\r\n    CREATE_POST_SUCCESS = \"GROUP/CREATE_POST_SUCCESS\",\r\n    CREATE_POST_FAILURE = \"GROUP/CREATE_POST_FAILURE\",\r\n    UPDATE_POST_SUCCESS = \"GROUP/UPDATE_POST_SUCCESS\",\r\n    DELETE_POST_SUCCESS = \"GROUP/DELETE_POST_SUCCESS\",\r\n    CREATE_COMMENT_BEGIN = \"GROUP/CREATE_COMMENT_BEGIN\",\r\n    CREATE_COMMENT_SUCCESS = \"GROUP/CREATE_COMMENT_SUCCESS\",\r\n    CREATE_COMMENT_FAILURE = \"GROUP/CREATE_COMMENT_FAILURE\",\r\n    UPDATE_COMMENT_SUCCESS = \"GROUP/UPDATE_COMMENT_SUCCESS\",\r\n    DELETE_COMMENT_SUCCESS = \"GROUP/DELETE_COMMENT_SUCCESS\",\r\n    SET_COVER_BEGIN = \"GROUP/SET_COVER_BEGIN\",\r\n    SET_COVER_SUCCESS = \"GROUP/SET_COVER_SUCCESS\",\r\n    SET_COVER_FAILURE = \"GROUP/SET_COVER_FAILURE\",\r\n    SET_POST_SORTING_ORDER = \"GROUP/SET_POST_SORTING_ORDER\",\r\n    SET_POST_VOTE_BEGIN = \"GROUP/SET_POST_VOTE_BEGIN\",\r\n    SET_POST_VOTE_SUCCESS = \"GROUP/SET_POST_VOTE_SUCCESS\",\r\n    SET_COMMENT_VOTE_BEGIN = \"GROUP/SET_COMMENT_VOTE_BEGIN\",\r\n    SET_COMMENT_VOTE_SUCCESS = \"GROUP/SET_COMMENT_VOTE_SUCCESS\",\r\n    FETCH_AVAILABLE_MATCHES_BEGIN = \"GROUP/FETCH_AVAILABLE_MATCHES_BEGIN\",\r\n    FETCH_AVAILABLE_MATCHES_FAILURE = \"GROUP/FETCH_AVAILABLE_MATCHES_FAILURE\",\r\n    FETCH_AVAILABLE_MATCHES_SUCCESS = \"GROUP/FETCH_AVAILABLE_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type CreateGroupSuccessAction = {type: string; group: Group};\r\nexport type CreateGroupFailureAction = {type: string};\r\n\r\nexport type UpdateGroupSuccessAction = {\r\n    type: string;\r\n    group: {id: string} & Partial<Group>;\r\n};\r\nexport type UpdateGroupFailureAction = {type: string};\r\n\r\nexport type DeleteGroupSuccessAction = {type: string};\r\nexport type DeleteGroupFailureAction = {type: string};\r\n\r\nexport type LeaveGroupSuccessAction = {type: string; id: string};\r\n\r\nexport type FetchGroupSuccessAction = {type: string; group: Group};\r\n\r\nexport type FetchMyGroupsBeginAction = {invites: boolean} & PaginatedFetchBeginAction;\r\nexport type FetchMyGroupsFailureAction = {invites: boolean} & PaginatedFetchFailureAction;\r\nexport type FetchMyGroupsSuccessAction = {invites: boolean} & PaginatedFetchSuccessActionRefreshable<Group>;\r\nexport type FetchMyGroupsRefreshAction = {invites: boolean} & PaginatedFetchRefreshAction;\r\n\r\nexport type FetchGroupMembersBeginAction = PaginatedFetchBeginAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\nexport type FetchGroupMembersSuccessAction = PaginatedFetchSuccessAction<GroupMember> & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n    totalItems: number;\r\n    search?: string;\r\n};\r\nexport type FetchGroupMembersRefreshAction = PaginatedFetchRefreshAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\nexport type FetchGroupMembersFailureAction = PaginatedFetchFailureAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\n\r\nexport type DeleteGroupMemberSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    isLocalUser: boolean;\r\n};\r\nexport type SetGroupMemberStatusSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    memberStatus: GroupMemberStatus;\r\n    isLocalUser: boolean;\r\n};\r\n\r\nexport type SetGroupMemberRoleSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    role: GroupRole;\r\n    isLocalUser: boolean;\r\n};\r\n\r\nexport type InviteToGroupSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profile: UserProfile;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\n\r\nexport type FetchGroupPostsBeginAction = PaginatedFetchBeginAction & {groupId: string};\r\nexport type FetchGroupPostsSuccessAction = PaginatedFetchSuccessActionRefreshable<GroupPost> & {groupId: string};\r\nexport type FetchGroupPostsRefreshAction = PaginatedFetchRefreshAction & {groupId: string};\r\nexport type FetchGroupPostsFailureAction = PaginatedFetchFailureAction & {groupId: string};\r\n\r\nexport type FetchPostCommentsBeginAction = PaginatedFetchBeginAction & {groupId: string; postId: string};\r\nexport type FetchPostCommentsSuccessAction = PaginatedFetchSuccessAction<PostComment> & {\r\n    groupId: string;\r\n    postId: string;\r\n};\r\nexport type FetchPostCommentsFailureAction = PaginatedFetchFailureAction & {groupId: string; postId: string};\r\nexport type FetchPostCommentsRefreshAction = PaginatedFetchRefreshAction & {groupId: string; postId: string};\r\n\r\nexport type JoinGroupSuccessAction = {\r\n    type: string;\r\n    group: Group;\r\n    memberStatus: GroupMemberStatus;\r\n    role: GroupRole;\r\n    localUser: User | null;\r\n};\r\n\r\nexport type CreatePostBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\nexport type CreatePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    post: GroupPost;\r\n};\r\nexport type CreatePostFailureAction = {type: string};\r\n\r\nexport type UpdatePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    post: GroupPost;\r\n};\r\n\r\nexport type DeletePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n};\r\n\r\nexport type CreateCommentBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n};\r\nexport type CreateCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    comment: PostComment;\r\n    parentId: string | null;\r\n};\r\nexport type CreateCommentFailureAction = {type: string};\r\n\r\nexport type UpdateCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    comments: PostComment[]; // possibly children getting updated too\r\n};\r\n\r\nexport type DeleteCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n};\r\n\r\nexport type SetGroupCoverBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\nexport type SetGroupCoverSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    url: string;\r\n};\r\nexport type SetGroupCoverFailureAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\n\r\nexport type SetPostSortingOrderAction = {\r\n    type: string;\r\n    order: PostSortingOrder;\r\n};\r\n\r\nexport type SetPostVoteBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetPostVoteSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetCommentVoteBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetCommentVoteSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type FetchAvailableMatchesBeginAction = {type: string; groupId: string};\r\nexport type FetchAvailableMatchesFailureAction = {type: string; groupId: string};\r\nexport type FetchAvailableMatchesSuccessAction = {type: string; groupId: string; items: UserProfile[]};\r\n\r\nexport type GroupsAction = CreateGroupSuccessAction &\r\n    CreateGroupFailureAction &\r\n    UpdateGroupSuccessAction &\r\n    UpdateGroupFailureAction &\r\n    LeaveGroupSuccessAction &\r\n    FetchGroupSuccessAction &\r\n    FetchMyGroupsBeginAction &\r\n    FetchMyGroupsFailureAction &\r\n    FetchMyGroupsSuccessAction &\r\n    FetchMyGroupsRefreshAction &\r\n    PaginatedFetchBeginAction &\r\n    PaginatedFetchFailureAction &\r\n    PaginatedFetchSuccessAction<Group> &\r\n    PaginatedFetchRefreshAction &\r\n    PaginatedFetchSuccessActionRefreshable<Group> &\r\n    FetchGroupMembersBeginAction &\r\n    FetchGroupMembersFailureAction &\r\n    FetchGroupMembersSuccessAction &\r\n    FetchGroupMembersRefreshAction &\r\n    DeleteGroupMemberSuccessAction &\r\n    SetGroupMemberStatusSuccessAction &\r\n    SetGroupMemberRoleSuccessAction &\r\n    InviteToGroupSuccessAction &\r\n    FetchGroupPostsBeginAction &\r\n    FetchGroupPostsFailureAction &\r\n    FetchGroupPostsSuccessAction &\r\n    FetchGroupPostsRefreshAction &\r\n    FetchPostCommentsBeginAction &\r\n    FetchPostCommentsFailureAction &\r\n    FetchPostCommentsSuccessAction &\r\n    FetchPostCommentsRefreshAction &\r\n    JoinGroupSuccessAction &\r\n    CreatePostBeginAction &\r\n    CreatePostFailureAction &\r\n    CreatePostSuccessAction &\r\n    UpdatePostSuccessAction &\r\n    DeletePostSuccessAction &\r\n    CreateCommentBeginAction &\r\n    CreateCommentFailureAction &\r\n    CreateCommentSuccessAction &\r\n    UpdateCommentSuccessAction &\r\n    DeleteCommentSuccessAction &\r\n    SetGroupCoverBeginAction &\r\n    SetGroupCoverFailureAction &\r\n    SetGroupCoverSuccessAction &\r\n    SetPostSortingOrderAction &\r\n    SetPostVoteBeginAction &\r\n    SetPostVoteSuccessAction &\r\n    SetCommentVoteBeginAction &\r\n    SetCommentVoteSuccessAction &\r\n    FetchAvailableMatchesBeginAction &\r\n    FetchAvailableMatchesFailureAction &\r\n    FetchAvailableMatchesSuccessAction;\r\n\r\nconst createGroupSuccess = (group: Group): CreateGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_SUCCESS,\r\n    group,\r\n});\r\n\r\nconst createGroupFailure = (): CreateGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_FAILURE,\r\n});\r\n\r\nconst updateGroupSuccess = (group: {id: string} & Partial<Group>): UpdateGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_SUCCESS,\r\n    group,\r\n});\r\n\r\nconst updateGroupFailure = (): UpdateGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_FAILURE,\r\n});\r\n\r\nconst deleteGroupSuccess = (): DeleteGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_SUCCESS,\r\n});\r\n\r\nconst deleteGroupFailure = (): DeleteGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_FAILURE,\r\n});\r\n\r\nexport const createGroup = (group: CreateGroupDto): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n\r\n    const dto: CreateGroupDto = {\r\n        ...group,\r\n        name: group.name.trim(),\r\n    };\r\n\r\n    const response = await requestBackend(\"groups\", \"POST\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseGroupDto;\r\n        const createdGroup: Group = {\r\n            ...convertDtoToGroup(payload),\r\n            myStatus: GroupMemberStatus.Approved,\r\n            myRole: GroupRole.Admin,\r\n        };\r\n        dispatch(createGroupSuccess(createdGroup));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const updateGroup = (id: string, group: Partial<CreateGroupDto>): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n\r\n    const response = await requestBackend(`groups/${id}`, \"PATCH\", {}, group, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const responseGroup = (response as SuccessfulRequestResponse).data as {id: string} & Partial<Group>;\r\n        dispatch(updateGroupSuccess(responseGroup));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(updateGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const deleteGroup = (id: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n\r\n    const response = await requestBackend(`groups/${id}`, \"DELETE\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteGroupSuccess());\r\n        return {success: true};\r\n    } else {\r\n        dispatch(deleteGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst leaveGroupSuccess = (id: string): LeaveGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.LEAVE_SUCCESS,\r\n    id,\r\n});\r\n\r\nexport const leaveGroup = (id: string, deleteData: boolean): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    if (!user) return false;\r\n\r\n    const response = await requestBackend(\r\n        `groups/${id}/members/${user.id}`,\r\n        \"DELETE\",\r\n        {cascade: deleteData},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(leaveGroupSuccess(id));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst beginFetchGroups = (): PaginatedFetchBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_BEGIN,\r\n});\r\n\r\nconst fetchGroupsSuccess = (\r\n    groups: Group[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<Group> => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_SUCCESS,\r\n    items: groups,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchGroupsFailure = (): PaginatedFetchFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_FAILURE,\r\n});\r\n\r\nexport const fetchGroups = (search?: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {pagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchGroupsFailure());\r\n        return;\r\n    }\r\n\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchGroups());\r\n\r\n    const response = await requestBackend(\r\n        \"groups\",\r\n        \"GET\",\r\n        {\r\n            page: refresh ? 1 : pagination.page,\r\n            limit: GROUPS_FETCH_LIMIT,\r\n            search: search && search.length > 0 ? search : undefined,\r\n            explore: true,\r\n            statuses: [GroupMemberStatus.Invited, GroupMemberStatus.InvitedByAdmin, GroupMemberStatus.Pending],\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const groups = (paginated.data as ResponseGroupDto[]).map(convertDtoToGroup);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupsSuccess(groups, canFetchMore, refresh));\r\n    } else dispatch(fetchGroupsFailure());\r\n};\r\n\r\nconst fetchGroupSuccess = (group: Group): FetchGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_SUCCESS,\r\n    group,\r\n});\r\n\r\nexport const fetchGroup = (groupId: string): AppThunk<Promise<Group | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return null;\r\n\r\n    const response = await requestBackend(`groups/${groupId}`, \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const group = convertDtoToGroup(payload as ResponseGroupDto);\r\n        dispatch(fetchGroupSuccess(group));\r\n        return group;\r\n    } else return null;\r\n};\r\n\r\nconst fetchPostsFeedBegin = (): PaginatedFetchBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n});\r\n\r\nconst fetchPostsFeedSuccess = (\r\n    items: GroupPost[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<GroupPost> => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchPostsFeedFailure = (): PaginatedFetchFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_FAILURE,\r\n});\r\n\r\nexport const refreshFetchedPostsFeed = (): AppThunk => async (dispatch) => {\r\n    dispatch(fetchPostsFeed(true));\r\n};\r\n\r\nexport const fetchPostsFeed = (refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {feedPagination},\r\n    } = getState();\r\n\r\n    if (!refresh && (feedPagination.fetching || !feedPagination.canFetchMore)) return;\r\n\r\n    dispatch(fetchPostsFeedBegin());\r\n\r\n    const response = await requestBackend(\r\n        \"groups/feed\",\r\n        \"GET\",\r\n        {page: refresh ? 1 : feedPagination.page, limit: POSTS_FEED_FETCH_LIMIT},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const posts = (paginated.data as ResponseGroupPostDto[]).map((p) => convertDtoToGroupPost(p));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchPostsFeedSuccess(posts, canFetchMore, refresh));\r\n    } else dispatch(fetchPostsFeedFailure());\r\n};\r\n\r\nconst fetchGroupPostsBegin = (groupId: string): FetchGroupPostsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst fetchGroupPostsSuccess = (\r\n    groupId: string,\r\n    items: GroupPost[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): FetchGroupPostsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_SUCCESS,\r\n    groupId,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchGroupPostsFailure = (groupId: string): FetchGroupPostsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const refreshFetchedGroupPosts = (groupId: string): AppThunk => async (dispatch) => {\r\n    dispatch(fetchGroupPosts(groupId, true));\r\n};\r\n\r\nexport const fetchGroupPosts = (groupId: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict, postsSortOrder},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n\r\n    if (!g || (!refresh && (g.postsPagination.fetching || !g.postsPagination.canFetchMore))) return;\r\n\r\n    dispatch(fetchGroupPostsBegin(groupId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts`,\r\n        \"GET\",\r\n        {page: refresh ? 1 : g.postsPagination.page, limit: GROUPS_POSTS_FETCH_LIMIT, type: postsSortOrder},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const posts = (paginated.data as ResponseGroupPostDto[]).map((p) => convertDtoToGroupPost(p));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupPostsSuccess(groupId, posts, canFetchMore, refresh));\r\n    } else dispatch(fetchGroupPostsFailure(groupId));\r\n};\r\n\r\nconst fetchPostCommentsBegin = (groupId: string, postId: string): FetchPostCommentsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nconst fetchPostCommentsSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    items: PostComment[],\r\n    canFetchMore: boolean,\r\n): FetchPostCommentsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchPostCommentsFailure = (groupId: string, postId: string): FetchPostCommentsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_FAILURE,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const fetchPostCommentsRefresh = (groupId: string, postId: string): FetchPostCommentsRefreshAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_REFRESH,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const fetchPostComments = (groupId: string, postId: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    // Try to get the post from storage (from its group or from the feed)\r\n    const p = findPost(groups, groupId, postId);\r\n\r\n    if (!p || p.commentsPagination.fetching || !p.commentsPagination.canFetchMore) return;\r\n\r\n    dispatch(fetchPostCommentsBegin(groupId, postId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments`,\r\n        \"GET\",\r\n        {page: p.commentsPagination.page, limit: POST_COMMENTS_FETCH_LIMIT},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const comments = (paginated.data as ResponsePostCommentDto[]).flatMap((c) => convertDtoToPostComments(c));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchPostCommentsSuccess(groupId, postId, comments, canFetchMore));\r\n    } else dispatch(fetchPostCommentsFailure(groupId, postId));\r\n};\r\n\r\nconst fetchGroupMembersBegin = (groupId: string, memberStatus: GroupMemberStatus): FetchGroupMembersBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nconst fetchGroupMembersSuccess = (\r\n    groupId: string,\r\n    items: GroupMember[],\r\n    canFetchMore: boolean,\r\n    totalItems: number,\r\n    memberStatus: GroupMemberStatus,\r\n    search?: string,\r\n): FetchGroupMembersSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_SUCCESS,\r\n    groupId,\r\n    items,\r\n    canFetchMore,\r\n    totalItems,\r\n    memberStatus,\r\n    search,\r\n});\r\n\r\nconst fetchGroupMembersFailure = (\r\n    groupId: string,\r\n    memberStatus: GroupMemberStatus,\r\n): FetchGroupMembersFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_FAILURE,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nexport const fetchGroupMembersRefresh = (\r\n    groupId: string,\r\n    memberStatus: GroupMemberStatus,\r\n): FetchGroupMembersRefreshAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_REFRESH,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nexport const fetchGroupMembers = (groupId: string, status: GroupMemberStatus, search?: string): AppThunk => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n    if (!g) return;\r\n\r\n    const pagination = g.membersPaginations[status];\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(fetchGroupMembersBegin(groupId, status));\r\n\r\n    if (search && search.length <= 1) search = undefined;\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members`,\r\n        \"GET\",\r\n        {page: pagination.page, limit: GROUP_MEMBERS_FETCH_LIMIT, statuses: [status], search},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const members = (paginated.data as ResponseGroupMemberDto[]).map(convertDtoToGroupMember);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupMembersSuccess(groupId, members, canFetchMore, paginated.meta.totalItems, status, search));\r\n    } else dispatch(fetchGroupMembersFailure(groupId, status));\r\n};\r\n\r\nconst deleteGroupMemberSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    isLocalUser: boolean,\r\n): DeleteGroupMemberSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_GROUP_MEMBER_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    isLocalUser,\r\n});\r\n\r\nexport const deleteGroupMember = (\r\n    groupId: string,\r\n    profileId: string,\r\n    deleteData?: boolean,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members/${profileId}`,\r\n        \"DELETE\",\r\n        {cascade: deleteData},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteGroupMemberSuccess(groupId, profileId, profileId === user?.id));\r\n        // If we're deleting the user's data, force a refresh on the feed and posts to ensure it's not there anymore\r\n        if (deleteData) {\r\n            dispatch(refreshFetchedPostsFeed());\r\n            dispatch(refreshFetchedGroupPosts(groupId));\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst setGroupMemberStatusSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    memberStatus: GroupMemberStatus,\r\n    isLocalUser: boolean,\r\n): SetGroupMemberStatusSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_GROUP_MEMBER_STATUS_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    memberStatus,\r\n    isLocalUser,\r\n});\r\n\r\nexport const setGroupMemberStatus = (\r\n    groupId: string,\r\n    profileId: string,\r\n    status: GroupMemberStatus,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(`groups/${groupId}/members/${profileId}`, \"PATCH\", {}, {status}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(setGroupMemberStatusSuccess(groupId, profileId, status, profileId === user?.id));\r\n        // If banned, force a refresh on the feed and posts to ensure the user's content is not there anymore\r\n        if (status === GroupMemberStatus.Banned) {\r\n            dispatch(refreshFetchedPostsFeed());\r\n            dispatch(refreshFetchedGroupPosts(groupId));\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst setGroupMemberRoleSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    role: GroupRole,\r\n    isLocalUser: boolean,\r\n): SetGroupMemberRoleSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_GROUP_MEMBER_ROLE_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    role,\r\n    isLocalUser,\r\n});\r\n\r\nexport const setGroupMemberRole = (\r\n    groupId: string,\r\n    profileId: string,\r\n    role: GroupRole,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(`groups/${groupId}/members/${profileId}`, \"PATCH\", {}, {role}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(setGroupMemberRoleSuccess(groupId, profileId, role, profileId === user?.id));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst inviteToGroupSuccess = (\r\n    groupId: string,\r\n    profile: UserProfile,\r\n    memberStatus: GroupMemberStatus,\r\n): InviteToGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.INVITE_TO_GROUP_SUCCESS,\r\n    groupId,\r\n    profile,\r\n    memberStatus,\r\n});\r\n\r\nexport const inviteToGroup = (groupId: string, profile: UserProfile): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    /// Backend is responsible for assigning the right status\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members`,\r\n        \"POST\",\r\n        {},\r\n        {profileId: profile.id},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const status = (payload.data as ResponseGroupMemberDto).status;\r\n        dispatch(inviteToGroupSuccess(groupId, profile, status));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst beginFetchMyGroups = (invites: boolean): FetchMyGroupsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_BEGIN,\r\n    invites,\r\n});\r\n\r\nconst fetchMyGroupsSuccess = (\r\n    items: Group[],\r\n    canFetchMore: boolean,\r\n    invites: boolean,\r\n    refresh: boolean,\r\n): FetchMyGroupsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    invites,\r\n    refresh,\r\n});\r\n\r\nconst fetchMyGroupsFailure = (invites: boolean): FetchMyGroupsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_FAILURE,\r\n    invites,\r\n});\r\n\r\nexport const refreshFetchedMyGroups = (invites = false): AppThunk => async (dispatch) => {\r\n    dispatch(fetchMyGroups(invites, true));\r\n};\r\n\r\nexport const fetchMyGroups = (invites = false, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {myGroupsPagination, myGroupInvitesPagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchMyGroupsFailure(invites));\r\n        return;\r\n    }\r\n\r\n    const pagination = invites ? myGroupInvitesPagination : myGroupsPagination;\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchMyGroups(invites));\r\n\r\n    const response = await requestBackend(\r\n        \"groups\",\r\n        \"GET\",\r\n        {\r\n            page: refresh ? 1 : pagination.page,\r\n            limit: GROUPS_FETCH_LIMIT,\r\n            statuses: invites\r\n                ? [GroupMemberStatus.Invited, GroupMemberStatus.InvitedByAdmin]\r\n                : [GroupMemberStatus.Approved],\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const groups = (paginated.data as ResponseGroupDto[]).map(convertDtoToGroup);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMyGroupsSuccess(groups, canFetchMore, invites, refresh));\r\n    } else dispatch(fetchMyGroupsFailure(invites));\r\n};\r\n\r\nconst joinGroupSuccess = (\r\n    group: Group,\r\n    memberStatus: GroupMemberStatus,\r\n    role: GroupRole,\r\n    localUser: User | null,\r\n): JoinGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.JOIN_GROUP_SUCCESS,\r\n    group,\r\n    memberStatus,\r\n    role,\r\n    localUser,\r\n});\r\n\r\nexport const joinGroup = (group: Group): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    if (!token) return false;\r\n\r\n    // Handle the case where we've been invited already\r\n    if (user && group.myStatus !== null) {\r\n        if (!group.requiresApproval || group.myStatus === GroupMemberStatus.InvitedByAdmin)\r\n            return dispatch(setGroupMemberStatus(group.id, user.id, GroupMemberStatus.Approved));\r\n        else if (group.myStatus === GroupMemberStatus.Invited)\r\n            return dispatch(setGroupMemberStatus(group.id, user.id, GroupMemberStatus.Pending));\r\n    }\r\n\r\n    const response = await requestBackend(`groups/${group.id}/members`, \"POST\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const data = (response as SuccessfulRequestResponse).data as ResponseGroupMemberDto;\r\n        const role: GroupRole = data.role;\r\n        const status: GroupMemberStatus = data.status;\r\n        dispatch(joinGroupSuccess(group, status, role, user));\r\n        return true;\r\n    } else return false;\r\n};\r\n\r\nconst createGroupPostBegin = (groupId: string): CreatePostBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst createGroupPostFailure = (): CreatePostFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_FAILURE,\r\n});\r\n\r\nconst createGroupPostSuccess = (groupId: string, post: GroupPost): CreatePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_SUCCESS,\r\n    groupId,\r\n    post,\r\n});\r\n\r\nexport const createGroupPost = (groupId: string, dto: CreateGroupPostDto): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    dispatch(createGroupPostBegin(groupId));\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts`, \"POST\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const post = convertDtoToGroupPost(payload as ResponseGroupPostDto, getState().profile.user?.profile);\r\n        dispatch(createGroupPostSuccess(groupId, post));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createGroupPostFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst updateGroupPostSuccess = (groupId: string, post: GroupPost): UpdatePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_POST_SUCCESS,\r\n    groupId,\r\n    post,\r\n});\r\n\r\nexport const updateGroupPost = (\r\n    groupId: string,\r\n    postId: string,\r\n    dto: Partial<CreateGroupPostDto>,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}`, \"PATCH\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseGroupPostDto;\r\n        const post = convertDtoToGroupPost(payload, getState().profile.user?.profile);\r\n        dispatch(updateGroupPostSuccess(groupId, post));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deletePostSuccess = (groupId: string, postId: string): DeletePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_POST_SUCCESS,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const deleteGroupPost = (groupId: string, postId: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}`, \"DELETE\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deletePostSuccess(groupId, postId));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst createPostCommentBegin = (groupId: string, postId: string): CreateCommentBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_BEGIN,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nconst createPostCommentFailure = (): CreateCommentFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_FAILURE,\r\n});\r\n\r\nconst createPostCommentSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    comment: PostComment,\r\n    parentId: string | null,\r\n): CreateCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    comment,\r\n    parentId,\r\n});\r\n\r\nexport const createPostComment = (\r\n    groupId: string,\r\n    postId: string,\r\n    dto: CreatePostCommentDto,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    if (!token) return {success: false};\r\n\r\n    dispatch(createPostCommentBegin(groupId, postId));\r\n\r\n    let depth = 0;\r\n\r\n    if (dto.parentId) {\r\n        // Try to get the parent post and comment from storage (from its group or from the feed)\r\n        const parent = findComment(groups, groupId, postId, dto.parentId);\r\n        if (parent) depth = parent.depth + 1;\r\n    }\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}/comments`, \"POST\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const comment = convertDtoToPostComments(\r\n            payload.data as ResponsePostCommentDto,\r\n            dto.parentId || null,\r\n            depth,\r\n            getState().profile.user?.profile,\r\n        )[0]; // no children yet => we can safely just get the first and only comment\r\n        dispatch(createPostCommentSuccess(groupId, postId, comment, dto.parentId || null));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createPostCommentFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst updatePostCommentSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    comments: PostComment[],\r\n): UpdateCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    comments,\r\n});\r\n\r\nexport const updatePostComment = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    dto: Partial<CreatePostCommentDto>,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments/${commentId}`,\r\n        \"PATCH\",\r\n        {},\r\n        dto,\r\n        token,\r\n    );\r\n\r\n    const comment = findComment(groups, groupId, postId, commentId);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponsePostCommentDto;\r\n        // Can include children\r\n        const comments = convertDtoToPostComments(\r\n            payload,\r\n            comment?.parentId,\r\n            comment?.depth,\r\n            getState().profile.user?.profile,\r\n        );\r\n        dispatch(updatePostCommentSuccess(groupId, postId, comments));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deletePostCommentSuccess = (groupId: string, postId: string, commentId: string): DeleteCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n});\r\n\r\nexport const deletePostComment = (groupId: string, postId: string, commentId: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments/${commentId}`,\r\n        \"DELETE\",\r\n        {},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deletePostCommentSuccess(groupId, postId, commentId));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst setGroupCoverBegin = (groupId: string): SetGroupCoverBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst setGroupCoverSuccess = (groupId: string, url: string): SetGroupCoverSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_SUCCESS,\r\n    groupId,\r\n    url,\r\n});\r\n\r\nconst setGroupCoverFailure = (groupId: string): SetGroupCoverFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const setGroupCover = (groupId: string, image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {uploadingAvatar},\r\n    } = getState();\r\n\r\n    const fail = () => dispatch(setGroupCoverFailure(groupId));\r\n\r\n    if (!token || uploadingAvatar) {\r\n        fail();\r\n        return;\r\n    }\r\n\r\n    dispatch(setGroupCoverBegin(groupId));\r\n\r\n    const fileName = await uploadImage(token, image, fail);\r\n\r\n    if (fileName) {\r\n        // Submit the filename to the server\r\n        const response = await requestBackend(`groups/${groupId}/cover`, \"POST\", {}, {fileName}, token);\r\n\r\n        if (response.status === HttpStatusCode.CREATED) {\r\n            const {cover} = (response as SuccessfulRequestResponse).data as GroupCoverSuccessfullyUpdatedDto;\r\n            dispatch(setGroupCoverSuccess(groupId, cover));\r\n        } else fail();\r\n    }\r\n};\r\n\r\nexport const setPostSortingOrder = (order: PostSortingOrder): SetPostSortingOrderAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_SORTING_ORDER,\r\n    order,\r\n});\r\n\r\nconst setPostVoteBegin = (groupId: string, postId: string, status: GroupVoteStatus): SetPostVoteBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_VOTE_BEGIN,\r\n    groupId,\r\n    postId,\r\n    status,\r\n});\r\n\r\nconst setPostVoteSuccess = (groupId: string, postId: string, status: GroupVoteStatus): SetPostVoteSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_VOTE_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    status,\r\n});\r\n\r\nconst setCommentVoteBegin = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    status: GroupVoteStatus,\r\n): SetCommentVoteBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COMMENT_VOTE_BEGIN,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n    status,\r\n});\r\n\r\nconst setCommentVoteSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    status: GroupVoteStatus,\r\n): SetCommentVoteSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COMMENT_VOTE_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n    status,\r\n});\r\n\r\nexport const setVote = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string | null,\r\n    status: GroupVoteStatus,\r\n    currentStatus: GroupVoteStatus,\r\n): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n    } = getState();\r\n\r\n    const entityId = commentId || postId;\r\n    const isComment = commentId !== null;\r\n    const entityType = isComment ? \"comment\" : \"post\";\r\n    const url = `groups/${groupId}/votes/${entityType}/${entityId}`;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    if (isComment) dispatch(setCommentVoteBegin(groupId, postId, commentId!, status));\r\n    else dispatch(setPostVoteBegin(groupId, postId, status));\r\n\r\n    const response =\r\n        status === GroupVoteStatus.Neutral\r\n            ? // If setting to neutral, simply DELETE the entity\r\n              await requestBackend(url, \"DELETE\", {}, {}, token)\r\n            : currentStatus === GroupVoteStatus.Neutral\r\n            ? // If currently neutral, POST a new entity\r\n              await requestBackend(url, \"POST\", {}, {voteType: status}, token)\r\n            : // If already set, PATCH the entity\r\n              await requestBackend(url, \"PATCH\", {}, {voteType: status}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        if (commentId) dispatch(setCommentVoteSuccess(groupId, postId, commentId, status));\r\n        else dispatch(setPostVoteSuccess(groupId, postId, status));\r\n    }\r\n};\r\n\r\nconst fetchAvailableMatchesBegin = (groupId: string): FetchAvailableMatchesBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst fetchAvailableMatchesSuccess = (groupId: string, items: UserProfile[]): FetchAvailableMatchesSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_SUCCESS,\r\n    groupId,\r\n    items,\r\n});\r\n\r\nconst fetchAvailableMatchesFailure = (groupId: string): FetchAvailableMatchesFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const fetchAvailableMatches = (groupId: string, search?: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n\r\n    if (!g || g.availableMatches.fetching) return;\r\n\r\n    dispatch(fetchAvailableMatchesBegin(groupId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/availableMatches`,\r\n        \"GET\",\r\n        {search: search || \"\"},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const profiles = (payload.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchAvailableMatchesSuccess(groupId, profiles));\r\n    } else dispatch(fetchAvailableMatchesFailure(groupId));\r\n};\r\n","import {ReportsState} from \"../types\";\r\nimport {ReportAction} from \"./actions\";\r\n\r\nexport const initialState: ReportsState = {};\r\n\r\nexport const reportsReducer = (state: ReportsState = initialState, action: ReportAction): ReportsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {GroupsState} from \"../types\";\r\n\r\nexport function findPost(state: GroupsState, groupId: string, postId: string): GroupPost | undefined {\r\n    const {groupsDict, postsFeed} = state;\r\n\r\n    // Try to get the post from storage (from its group or from the feed)\r\n    return groupsDict[groupId].posts[postId] || postsFeed[postId];\r\n}\r\n\r\nexport function findComment(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n): PostComment | undefined {\r\n    const post = findPost(state, groupId, postId);\r\n    const comment = post?.comments[commentId];\r\n    return comment;\r\n}\r\n","import {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {arrayWithIdMapperToDict, arrayWithIdsToDict} from \"../../general-utils\";\r\nimport {Group, GroupMember, GroupPost, GROUP_VOTE_VALUES, PostSortingOrder} from \"../../model/groups\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {GroupsState, initialPaginatedState, PaginatedFetchSuccessActionRefreshable} from \"../types\";\r\nimport {\r\n    CreateCommentSuccessAction,\r\n    CreateGroupSuccessAction,\r\n    CreatePostSuccessAction,\r\n    DeleteCommentSuccessAction,\r\n    DeleteGroupMemberSuccessAction,\r\n    DeletePostSuccessAction,\r\n    FetchAvailableMatchesBeginAction,\r\n    FetchAvailableMatchesSuccessAction,\r\n    FetchGroupMembersBeginAction,\r\n    FetchGroupMembersFailureAction,\r\n    FetchGroupMembersRefreshAction,\r\n    FetchGroupMembersSuccessAction,\r\n    FetchGroupPostsBeginAction,\r\n    FetchGroupPostsFailureAction,\r\n    FetchGroupPostsSuccessAction,\r\n    FetchGroupSuccessAction,\r\n    FetchMyGroupsBeginAction,\r\n    FetchMyGroupsFailureAction,\r\n    FetchMyGroupsSuccessAction,\r\n    FetchPostCommentsBeginAction,\r\n    FetchPostCommentsFailureAction,\r\n    FetchPostCommentsRefreshAction,\r\n    FetchPostCommentsSuccessAction,\r\n    GroupsAction,\r\n    GROUP_ACTION_TYPES,\r\n    InviteToGroupSuccessAction,\r\n    JoinGroupSuccessAction,\r\n    LeaveGroupSuccessAction,\r\n    SetCommentVoteBeginAction,\r\n    SetGroupCoverBeginAction,\r\n    SetGroupCoverFailureAction,\r\n    SetGroupCoverSuccessAction,\r\n    SetGroupMemberRoleSuccessAction,\r\n    SetGroupMemberStatusSuccessAction,\r\n    SetPostSortingOrderAction,\r\n    SetPostVoteBeginAction,\r\n    UpdateCommentSuccessAction,\r\n    UpdateGroupSuccessAction,\r\n    UpdatePostSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: GroupsState = {\r\n    groupsDict: {},\r\n    pagination: initialPaginatedState(),\r\n    groups: [],\r\n    myGroupsPagination: initialPaginatedState(),\r\n    myGroups: [],\r\n    myGroupInvitesPagination: initialPaginatedState(),\r\n    myGroupInvites: [],\r\n    postsSortOrder: PostSortingOrder.Newest,\r\n    feedPagination: initialPaginatedState(),\r\n    postsFeed: {},\r\n    postsFeedIds: [],\r\n};\r\n\r\nexport const groupsReducer = (state: GroupsState = initialState, action: GroupsAction): GroupsState => {\r\n    switch (action.type) {\r\n        case GROUP_ACTION_TYPES.CREATE_SUCCESS: {\r\n            const {group} = action as CreateGroupSuccessAction;\r\n            return {\r\n                ...state,\r\n                groupsDict: {...state.groupsDict, [group.id]: group},\r\n                myGroups: [group.id].concat(state.myGroups),\r\n            };\r\n        }\r\n        case GROUP_ACTION_TYPES.UPDATE_SUCCESS: {\r\n            const {group} = action as UpdateGroupSuccessAction;\r\n            return updateGroup(state, group.id, () => group);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.LEAVE_SUCCESS: {\r\n            const {id} = action as LeaveGroupSuccessAction;\r\n            return {\r\n                ...state,\r\n                myGroups: state.myGroups.filter((groupId) => groupId !== id),\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_BEGIN: {\r\n            return {...state, pagination: {...state.pagination, fetching: true}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_FAILURE: {\r\n            return {...state, pagination: {...state.pagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<Group>;\r\n            const pagination = state.pagination;\r\n            const newState = items.reduce(setOrUpdateGroup, state);\r\n            const ids = items.map((g: Group) => g.id);\r\n            return {\r\n                ...newState,\r\n                groups: refresh ? ids : state.groups.concat(ids),\r\n                pagination: {fetching: false, page: (refresh ? 1 : pagination.page) + 1, canFetchMore},\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_SUCCESS: {\r\n            const {group} = action as FetchGroupSuccessAction;\r\n            return setOrUpdateGroup(state, group);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_FAILURE: {\r\n            return {\r\n                ...state,\r\n                feedPagination: {\r\n                    ...state.feedPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n                },\r\n            };\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<GroupPost>;\r\n            const ids = items.map((p) => p.id);\r\n            return {\r\n                ...state,\r\n                postsFeedIds: refresh\r\n                    ? ids\r\n                    : state.postsFeedIds.concat(ids.filter((id) => state.postsFeedIds.indexOf(id) === -1)),\r\n                postsFeed: {...state.postsFeed, ...arrayWithIdsToDict(items)},\r\n                feedPagination: {\r\n                    fetching: false,\r\n                    page: (refresh ? 1 : state.feedPagination.page) + 1,\r\n                    canFetchMore,\r\n                },\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_FAILURE: {\r\n            const {groupId} = action as FetchGroupPostsBeginAction | FetchGroupPostsFailureAction;\r\n            return updateGroup(state, groupId, ({postsPagination}) => ({\r\n                postsPagination: {\r\n                    ...postsPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_SUCCESS: {\r\n            const {groupId, items, canFetchMore, refresh} = action as FetchGroupPostsSuccessAction;\r\n            const ids = items.map((p) => p.id);\r\n            return updateGroup(state, groupId, ({postsPagination: p, posts: gposts, postIds: gpostIds}) => ({\r\n                postIds: refresh ? ids : gpostIds.concat(ids.filter((id) => gpostIds.indexOf(id) === -1)),\r\n                posts: {...gposts, ...arrayWithIdsToDict(items)},\r\n                postsPagination: {fetching: false, page: (refresh ? 1 : p.page) + 1, canFetchMore},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.CREATE_POST_SUCCESS: {\r\n            const {groupId, post} = action as CreatePostSuccessAction;\r\n            return updateGroup(state, groupId, ({posts, postIds}) => ({\r\n                posts: {...posts, [post.id]: post},\r\n                postIds: [post.id].concat(postIds),\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.UPDATE_POST_SUCCESS: {\r\n            const {groupId, post} = action as UpdatePostSuccessAction;\r\n            return updatePost(state, groupId, post.id, () => ({\r\n                status: post.status,\r\n                type: post.type,\r\n                text: post.text,\r\n                updatedAt: post.updatedAt,\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_POST_SUCCESS: {\r\n            const {groupId, postId} = action as DeletePostSuccessAction;\r\n            // Remove post from feed\r\n            state = {...state, postsFeedIds: state.postsFeedIds.filter((id) => id !== postId)};\r\n            // Remove post from group\r\n            return updateGroup(state, groupId, ({posts, postIds}) => {\r\n                delete posts[postId];\r\n                return {\r\n                    posts,\r\n                    postIds: postIds.filter((id) => id !== postId),\r\n                };\r\n            });\r\n        }\r\n        // Update on begin action so it doesn't look slow\r\n        case GROUP_ACTION_TYPES.SET_POST_VOTE_BEGIN: {\r\n            const {groupId, postId, status} = action as SetPostVoteBeginAction;\r\n            return updatePost(state, groupId, postId, ({score, voteStatus}) => ({\r\n                voteStatus: status,\r\n                // Add value of new vote, remove value of previous vote\r\n                score: score + GROUP_VOTE_VALUES[status] - GROUP_VOTE_VALUES[voteStatus],\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_FAILURE: {\r\n            const {groupId, postId} = action as FetchPostCommentsBeginAction | FetchPostCommentsFailureAction;\r\n            return updatePost(state, groupId, postId, ({commentsPagination}) => ({\r\n                commentsPagination: {\r\n                    ...commentsPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_SUCCESS: {\r\n            const {groupId, postId, items, canFetchMore} = action as FetchPostCommentsSuccessAction;\r\n            return updatePost(\r\n                state,\r\n                groupId,\r\n                postId,\r\n                ({commentsPagination: p, comments: pcomments, commentIds: pcommentIds}) => ({\r\n                    commentIds: pcommentIds.concat(items.map((c) => c.id)),\r\n                    comments: {...pcomments, ...arrayWithIdsToDict(items)},\r\n                    commentsPagination: {...p, fetching: false, page: p.page + 1, canFetchMore},\r\n                }),\r\n            );\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_REFRESH: {\r\n            const {groupId, postId} = action as FetchPostCommentsRefreshAction;\r\n            return updatePost(state, groupId, postId, ({commentsPagination: p}) => ({\r\n                commentIds: [],\r\n                commentsPagination: {...p, fetching: false, page: 1, canFetchMore: true},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.CREATE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, comment, parentId} = action as CreateCommentSuccessAction;\r\n\r\n            return updatePost(state, groupId, postId, ({comments, commentIds, commentsCount}) => {\r\n                const updated: Partial<GroupPost> = {\r\n                    commentsCount: commentsCount + 1,\r\n                    comments: {...comments, [comment.id]: comment},\r\n                };\r\n\r\n                if (parentId) {\r\n                    // Add the comment the its parent's children\r\n                    const parent = comments[parentId];\r\n                    if (parent) {\r\n                        updated.comments = {\r\n                            ...updated.comments,\r\n                            [parentId]: {...parent, childrenIds: [comment.id].concat(parent.childrenIds)},\r\n                        };\r\n                    }\r\n                } else updated.commentIds = [comment.id].concat(commentIds);\r\n\r\n                return updated;\r\n            });\r\n        }\r\n        case GROUP_ACTION_TYPES.UPDATE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, comments} = action as UpdateCommentSuccessAction;\r\n            return updatePost(state, groupId, postId, ({comments: currentComments}) => {\r\n                const updatedComments = {...currentComments};\r\n                comments.forEach((c) => {\r\n                    updatedComments[c.id] = {\r\n                        ...currentComments[c.id],\r\n                        text: c.text,\r\n                        updatedAt: new Date(),\r\n                    };\r\n                });\r\n                return {comments: updatedComments};\r\n            });\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, commentId} = action as DeleteCommentSuccessAction;\r\n            return updatePost(state, groupId, postId, (post) => {\r\n                const {comments, commentIds, commentsCount} = post;\r\n                const updated: Partial<GroupPost> = {commentsCount: commentsCount - 1};\r\n\r\n                const comment = comments[commentId];\r\n                const parent = comment && comment.parentId && comments[comment.parentId];\r\n                if (parent) {\r\n                    // If this comment has a parent, remove it from the parent's comments\r\n                    updated.comments = {\r\n                        ...comments,\r\n                        [parent.id]: {\r\n                            ...parent,\r\n                            childrenIds: parent.childrenIds.filter((id) => id !== commentId),\r\n                        },\r\n                    };\r\n                } else {\r\n                    // Otherwise, simply remove the comment from the post\r\n                    updated.commentIds = commentIds.filter((id) => id !== commentId);\r\n                }\r\n                return updated;\r\n            });\r\n        }\r\n        // Update on begin action so it doesn't look slow\r\n        case GROUP_ACTION_TYPES.SET_COMMENT_VOTE_BEGIN: {\r\n            const {groupId, postId, commentId, status} = action as SetCommentVoteBeginAction;\r\n            return updatePost(state, groupId, postId, ({comments}) => ({\r\n                comments: {\r\n                    ...comments,\r\n                    [commentId]: {\r\n                        ...comments[commentId],\r\n                        voteStatus: status,\r\n                        // Add value of new vote, remove value of previous vote\r\n                        score:\r\n                            comments[commentId].score +\r\n                            GROUP_VOTE_VALUES[status] -\r\n                            GROUP_VOTE_VALUES[comments[commentId].voteStatus],\r\n                    },\r\n                },\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_FAILURE: {\r\n            const {groupId, memberStatus} = action as FetchGroupMembersBeginAction | FetchGroupMembersFailureAction;\r\n            return updateGroup(state, groupId, ({membersPaginations}) => ({\r\n                membersPaginations: {\r\n                    ...membersPaginations,\r\n                    [memberStatus]: {\r\n                        ...membersPaginations[memberStatus],\r\n                        fetching: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n                        canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n                    },\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_SUCCESS: {\r\n            const {\r\n                groupId,\r\n                items,\r\n                canFetchMore,\r\n                totalItems,\r\n                memberStatus,\r\n                search,\r\n            } = action as FetchGroupMembersSuccessAction;\r\n\r\n            return updateGroup(state, groupId, ({membersPaginations, members, memberIds}) => ({\r\n                members: {...members, ...arrayWithIdMapperToDict(items, (it) => it.profile.id)},\r\n                memberIds: {\r\n                    ...memberIds,\r\n                    [memberStatus]: memberIds[memberStatus].concat(\r\n                        items.map((m) => m.profile.id).filter((id) => memberIds[memberStatus].indexOf(id) === -1),\r\n                    ),\r\n                },\r\n                membersPaginations: {\r\n                    ...membersPaginations,\r\n                    [memberStatus]: {\r\n                        ...membersPaginations[memberStatus],\r\n                        fetching: false,\r\n                        page: membersPaginations[memberStatus].page + 1,\r\n                        canFetchMore,\r\n                    },\r\n                },\r\n                // Update number of approved members\r\n                ...(memberStatus === GroupMemberStatus.Approved && !search ? {numApprovedMembers: totalItems} : {}),\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.JOIN_GROUP_SUCCESS: {\r\n            const {group, memberStatus, role, localUser} = action as JoinGroupSuccessAction;\r\n\r\n            if (localUser && localUser.profile) {\r\n                const member: GroupMember = {\r\n                    profile: localUser.profile,\r\n                    role,\r\n                    status: memberStatus,\r\n                };\r\n                return updateMemberStatus(state, group.id, localUser.id, true, memberStatus, member);\r\n            }\r\n            return state;\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_REFRESH: {\r\n            const {groupId, memberStatus} = action as FetchGroupMembersRefreshAction;\r\n            return updateGroup(state, groupId, ({memberIds, membersPaginations}) => ({\r\n                memberIds: {...memberIds, [memberStatus]: []},\r\n                membersPaginations: {...membersPaginations, [memberStatus]: initialPaginatedState()},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.DELETE_GROUP_MEMBER_SUCCESS: {\r\n            const {groupId, profileId, isLocalUser} = action as DeleteGroupMemberSuccessAction;\r\n\r\n            // If this user is us, remove the group from the arrays\r\n            if (isLocalUser) {\r\n                state = {\r\n                    ...state,\r\n                    myGroups: state.myGroups.filter((id) => id !== groupId),\r\n                    myGroupInvites: state.myGroupInvites.filter((id) => id !== groupId),\r\n                };\r\n            }\r\n\r\n            return updateGroup(state, groupId, ({memberIds, members}) => {\r\n                const member = members[profileId];\r\n                if (member) {\r\n                    // Remove the member from the right array, depending on his status\r\n                    return {\r\n                        memberIds: {\r\n                            ...memberIds,\r\n                            [member.status]: memberIds[member.status].filter((id) => id !== profileId),\r\n                        },\r\n                    };\r\n                } else {\r\n                    // If we didn't have this member, do nothing\r\n                    return {};\r\n                }\r\n            });\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_GROUP_MEMBER_STATUS_SUCCESS: {\r\n            const {groupId, profileId, memberStatus, isLocalUser} = action as SetGroupMemberStatusSuccessAction;\r\n            return updateMemberStatus(state, groupId, profileId, isLocalUser, memberStatus);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_GROUP_MEMBER_ROLE_SUCCESS: {\r\n            const {groupId, profileId, role, isLocalUser} = action as SetGroupMemberRoleSuccessAction;\r\n\r\n            // Change the member's role in the group\r\n            return updateGroup(state, groupId, ({members}) => ({\r\n                members: {...members, [profileId]: {...members[profileId], role: role}},\r\n                ...(isLocalUser && {myRole: role}),\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.INVITE_TO_GROUP_SUCCESS: {\r\n            const {groupId, profile /*, memberStatus*/} = action as InviteToGroupSuccessAction;\r\n            return updateGroup(state, groupId, ({availableMatches: am}) => ({\r\n                availableMatches: {\r\n                    ...am,\r\n                    profiles: am.profiles ? am.profiles.filter((p: UserProfile) => p.id !== profile.id) : null,\r\n                },\r\n                // members: {...members, [profile.id]: profile},\r\n                // memberIds: {...memberIds, [memberStatus]: memberIds[memberIds].concat([profile.id])}\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_BEGIN: {\r\n            const {invites} = action as FetchMyGroupsBeginAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            return {...state, [paginationKey]: {...state[paginationKey], fetching: true}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_FAILURE: {\r\n            const {invites} = action as FetchMyGroupsFailureAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            return {...state, [paginationKey]: {...state[paginationKey], fetching: false, canFetchMore: false}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_SUCCESS: {\r\n            const {items, canFetchMore, invites, refresh} = action as FetchMyGroupsSuccessAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            const itemsKey: keyof GroupsState = invites ? \"myGroupInvites\" : \"myGroups\";\r\n            const pagination = state[paginationKey];\r\n            const ids = items.map((g: Group) => g.id);\r\n            return {\r\n                ...state,\r\n                groupsDict: {...state.groupsDict, ...arrayWithIdsToDict(items)},\r\n                [itemsKey]: refresh ? ids : state[itemsKey].concat(ids),\r\n                [paginationKey]: {\r\n                    fetching: false,\r\n                    page: (refresh ? 1 : pagination.page) + 1,\r\n                    canFetchMore,\r\n                },\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_COVER_BEGIN: {\r\n            const {groupId} = action as SetGroupCoverBeginAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: true}));\r\n        }\r\n        case GROUP_ACTION_TYPES.SET_COVER_FAILURE: {\r\n            const {groupId} = action as SetGroupCoverFailureAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: false}));\r\n        }\r\n        case GROUP_ACTION_TYPES.SET_COVER_SUCCESS: {\r\n            const {groupId, url} = action as SetGroupCoverSuccessAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: false, cover: url}));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_POST_SORTING_ORDER: {\r\n            const {order} = action as SetPostSortingOrderAction;\r\n            return {...state, postsSortOrder: order};\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_FAILURE:\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN: {\r\n            const {groupId} = action as FetchAvailableMatchesBeginAction;\r\n            return updateGroup(state, groupId, ({availableMatches}) => ({\r\n                availableMatches: {\r\n                    ...availableMatches,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_SUCCESS: {\r\n            const {groupId, items} = action as FetchAvailableMatchesSuccessAction;\r\n            return updateGroup(state, groupId, () => ({\r\n                availableMatches: {profiles: items, fetching: false},\r\n            }));\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction setOrUpdateGroup(state: GroupsState, group: Group): GroupsState {\r\n    const g = state.groupsDict[group.id];\r\n    if (g) return updateGroup(state, group.id, () => group);\r\n    else return {...state, groupsDict: {...state.groupsDict, [group.id]: group}};\r\n}\r\n\r\nfunction updateGroup(state: GroupsState, groupId: string, update: (g: Group) => Partial<Group>): GroupsState {\r\n    const g = state.groupsDict[groupId];\r\n    if (g) {\r\n        const updated = update(g);\r\n        return {\r\n            ...state,\r\n            groupsDict: {\r\n                ...state.groupsDict,\r\n                [groupId]: {\r\n                    ...g,\r\n                    ...updated,\r\n                    members: updated.members || g.members, // prevents members from being replaced with null\r\n                },\r\n            },\r\n        };\r\n    } else {\r\n        console.error(\"Anomaly: cannot update group (not in memory).\");\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction updatePost(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    postId: string,\r\n    update: (p: GroupPost) => Partial<GroupPost>,\r\n): GroupsState {\r\n    const s = {...state};\r\n    const g = s.groupsDict[groupId];\r\n    // Update the post in the group it belongs to\r\n    if (g && g.posts[postId]) {\r\n        s.groupsDict = {\r\n            ...s.groupsDict,\r\n            [groupId]: {...g, posts: {...g.posts, [postId]: {...g.posts[postId], ...update(g.posts[postId])}}},\r\n        };\r\n    }\r\n    // Update the post in the feed\r\n    if (s.postsFeed[postId]) {\r\n        s.postsFeed = {\r\n            ...s.postsFeed,\r\n            [postId]: {...s.postsFeed[postId], ...update(s.postsFeed[postId])},\r\n        };\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction updateMemberStatus(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    profileId: string,\r\n    isLocalUser: boolean,\r\n    status: GroupMemberStatus,\r\n    fallbackMember?: GroupMember,\r\n) {\r\n    if (isLocalUser && state.groupsDict[groupId]) {\r\n        const previousStatus = state.groupsDict[groupId].myStatus;\r\n        // If I was previously an invite and not anymore, remove group from invites\r\n        const wasInvite =\r\n            previousStatus === GroupMemberStatus.Invited || previousStatus === GroupMemberStatus.InvitedByAdmin;\r\n        const isNowInvite = status === GroupMemberStatus.Invited || status === GroupMemberStatus.InvitedByAdmin;\r\n        if (wasInvite && !isNowInvite)\r\n            state = {...state, myGroupInvites: state.myGroupInvites.filter((id) => id !== groupId)};\r\n        // If I was approved and I'm not anymore, remove group from myGroups\r\n        if (previousStatus === GroupMemberStatus.Approved && status !== GroupMemberStatus.Approved)\r\n            state = {...state, myGroups: state.myGroups.filter((id) => id !== groupId)};\r\n        // If i am now approved, add group to myGroups\r\n        if (status === GroupMemberStatus.Approved) state = {...state, myGroups: [groupId].concat(state.myGroups)};\r\n    }\r\n\r\n    // Change the member's status in the group\r\n    return updateGroup(state, groupId, ({members, memberIds, numApprovedMembers, myStatus: myPreviousStatus}) => {\r\n        const member = members[profileId];\r\n        const wasApproved = member\r\n            ? member.status === GroupMemberStatus.Approved\r\n            : isLocalUser\r\n            ? myPreviousStatus === GroupMemberStatus.Approved\r\n            : false;\r\n        const isApproved = status === GroupMemberStatus.Approved;\r\n\r\n        const updated = {\r\n            numApprovedMembers:\r\n                numApprovedMembers === null\r\n                    ? null\r\n                    : numApprovedMembers + (!wasApproved && isApproved ? 1 : wasApproved && !isApproved ? -1 : 0),\r\n            ...(isLocalUser\r\n                ? {\r\n                      myStatus: status,\r\n                      myRole: status === GroupMemberStatus.Approved ? GroupRole.Basic : null,\r\n                  }\r\n                : {}),\r\n            memberIds: {\r\n                ...memberIds,\r\n                [status]: (memberIds[status] || []).concat([profileId]),\r\n            },\r\n            members: {...members},\r\n        };\r\n\r\n        // Register the new member in the members dict\r\n        if (member || fallbackMember) {\r\n            updated.members = {\r\n                ...updated.members,\r\n                [profileId]: (member ? {...member, status} : fallbackMember) as GroupMember,\r\n            };\r\n        }\r\n\r\n        // Remove from ids of previous status\r\n        if (member) {\r\n            updated.memberIds = {\r\n                ...updated.memberIds,\r\n                [member.status]: updated.memberIds[member.status].filter((id) => id !== profileId),\r\n            };\r\n        }\r\n        return updated;\r\n    });\r\n}\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingLegalScreen1\",\r\n    \"OnboardingLegalScreen2\",\r\n    \"OnboardingLegalScreen3\",\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingProfileScreen1\",\r\n    \"OnboardingProfileScreen2\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import {Platform} from \"react-native\";\r\nimport {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {COOKIE_CONSENT_DURATION} from \"../constants/config\";\r\nimport {clearStaticData, storeStaticData} from \"./persistent-storage/static\";\r\nimport {\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./profile/actions\";\r\nimport {SaveCookiesPreferencesAction, SetLocaleAction, SetThemeAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    // Handle cookie preferences changes\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const oldCookies = store.getState().settings.userSettings.cookies;\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n\r\n            // Store data for cookies that were accepted by the user\r\n            if (!oldCookies.cache && cookies.cache) {\r\n                const {offers, interests} = store.getState().profile;\r\n                storeStaticData(\"interests\", interests, cookies.cache);\r\n                storeStaticData(\"offers\", offers, cookies.cache);\r\n            }\r\n            if (!oldCookies.settings && cookies.settings) {\r\n                const {locale, theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"locale\", locale, cookies.settings);\r\n                storeStaticData(\"theme\", theme, cookies.settings);\r\n            }\r\n\r\n            // Discard cookies that were refused by the user\r\n            if (oldCookies.cache && !cookies.cache) clearStaticData(\"interests\", \"offers\");\r\n            if (oldCookies.settings && !cookies.settings) clearStaticData(\"locale\", \"theme\");\r\n\r\n            // Store new cookies preferences\r\n            storeStaticData(\"cookies\", cookies, true);\r\n            storeStaticData(\"cookieConsentDate\", new Date(Date.now()).toJSON(), true);\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    // Handle storage that requires cookie consent from the user\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n                const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n                if (!fromCache) storeStaticData(\"interests\", interests, cookies.cache);\r\n                break;\r\n            }\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n                const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n                if (!fromCache) storeStaticData(\"offers\", offers, cookies.cache);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n                const {locale, fromCache} = action as SetLocaleAction;\r\n                if (!fromCache) storeStaticData(\"locale\", locale, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n                const {theme, fromCache} = action as SetThemeAction;\r\n                if (!fromCache) storeStaticData(\"theme\", theme, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n                const {theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"theme\", theme === \"dark\" ? \"light\" : \"dark\", cookies.settings);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport function hasUserGivenCookieConsent(consentDate: Date | null): boolean {\r\n    // Never ask the user in the native version of the app\r\n    if (Platform.OS !== \"web\") return true;\r\n    return consentDate !== null && (Date.now() - consentDate.getTime()) / 1000 < COOKIE_CONSENT_DURATION;\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {AppState} from \"./types\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {discardAuthInformation, storeAuthInformation} from \"./persistent-storage/auth\";\r\nimport {SaveCookiesPreferencesAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {hasUserGivenCookieConsent} from \"./static-storage-middleware\";\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        // Handle cookie preferences changes\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n            if (cookies.auth) {\r\n                // Store again when accepting the auth cookie\r\n                const token = store.getState().auth.token;\r\n                const user = store.getState().profile.user;\r\n                if (token && user) storeAuthInformation(user.email, token);\r\n            } else {\r\n                // Discard when refusing the auth cookie\r\n                discardAuthInformation();\r\n            }\r\n            break;\r\n        }\r\n        // Discard when needed\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n                const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n                // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n                if (!usingCachedCredentials && cookies.auth) storeAuthInformation(user.email, token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {requestBackend} from \"../../api/utils\";\r\nimport {AppThunk} from \"../types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\n\r\nexport enum NOTIFICATIONS_ACTION_TYPES {\r\n    REGISTER_TOKEN_SUCCESS = \"NOTIFICATIONS/REGISTER_TOKEN_SUCCESS\",\r\n    DELETE_TOKEN_SUCCESS = \"NOTIFICATIONS/DELETE_TOKEN_SUCCESS\",\r\n}\r\n\r\nexport type RegisterNotificationSuccessAction = {type: string};\r\n\r\nexport type DeleteNotificationTokenSuccessAction = {type: string};\r\n\r\nexport type NotificationsAction = RegisterNotificationSuccessAction & DeleteNotificationTokenSuccessAction;\r\n\r\nexport const registerNotificationToken = (pushToken: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"POST\", {}, {token: pushToken}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(registerNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst registerNotificationTokenSuccess = (): RegisterNotificationSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.REGISTER_TOKEN_SUCCESS,\r\n});\r\n\r\nexport const deleteNotificationToken = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"DELETE\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst deleteNotificationTokenSuccess = (): DeleteNotificationTokenSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.DELETE_TOKEN_SUCCESS,\r\n});\r\n","import * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport Constants from \"expo-constants\";\r\nimport {Platform} from \"react-native\";\r\n\r\nexport function areNotificationsSupported(): boolean {\r\n    return Constants.isDevice && Platform.OS !== \"web\";\r\n}\r\n\r\nexport function getNotificationData(notif: Notifications.Notification): {[key: string]: unknown} {\r\n    return notif.request.content.data;\r\n}\r\n\r\nexport async function askForPushNotificationToken(): Promise<string | null> {\r\n    if (!areNotificationsSupported()) return null;\r\n\r\n    let status = (await Permissions.getAsync(Permissions.NOTIFICATIONS)).status;\r\n    if (status !== \"granted\") status = (await Permissions.askAsync(Permissions.NOTIFICATIONS)).status;\r\n\r\n    if (status === \"granted\") {\r\n        const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n        return token;\r\n    } else {\r\n        // User refused notifications\r\n        return null;\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport {messagingReducer} from \"./messaging/reducer\";\r\nimport {notificationsReducer} from \"./notifications/reducer\";\r\nimport {reportsReducer} from \"./reports/reducer\";\r\nimport {groupsReducer} from \"./groups/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\nimport {notificationsMiddleware} from \"./notifications-middleware\";\r\nimport {messagingMiddleware} from \"./messaging-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n    messaging: messagingReducer,\r\n    notifications: notificationsReducer,\r\n    reports: reportsReducer,\r\n    groups: groupsReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(\r\n    thunk,\r\n    authStorageMiddleware,\r\n    staticStorageMiddleware,\r\n    navigationMiddleware,\r\n    notificationsMiddleware,\r\n    messagingMiddleware,\r\n);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport {navigateToGroup, rootNavigate} from \"../navigation/utils\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {AUTH_ACTION_TYPES, beginOnboarding, LogInFailureAction, LogInSuccessAction, LogOutAction} from \"./auth/actions\";\r\nimport {CreateGroupSuccessAction, GROUP_ACTION_TYPES} from \"./groups/actions\";\r\nimport {ActionCancelSuccessAction, MATCHING_ACTION_TYPES} from \"./matching/actions\";\r\nimport {PROFILE_ACTION_TYPES} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    if (DEBUG_MODE) console.log(action.type);\r\n\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            if (user.onboarded) rootNavigate(\"MainScreen\", {screen: \"TabMatching\"});\r\n            else store.dispatch(beginOnboarding());\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            const {needsVerify, email} = action as LogInFailureAction;\r\n            if (needsVerify && email) rootNavigate(\"ResendVerifyEmailScreen\", {email});\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            const {redirect} = action as LogOutAction;\r\n            if (redirect) {\r\n                rootNavigate(\"LoginRoot\", {\r\n                    screen: \"LoginScreens\",\r\n                    params: {screen: \"SigninScreen\"},\r\n                });\r\n            }\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.SEND_VERIFICATION_EMAIL_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            rootNavigate(\"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS: {\r\n            rootNavigate(\"DeleteAccountSuccessScreen\");\r\n            break;\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {isMatch} = action as ActionCancelSuccessAction;\r\n            // When un-matching someone, navigate back from their profile to MainScreen\r\n            if (isMatch) rootNavigate(\"MainScreen\", {screen: \"TabMatching\"});\r\n            break;\r\n        }\r\n        case GROUP_ACTION_TYPES.CREATE_SUCCESS: {\r\n            const {group} = action as CreateGroupSuccessAction;\r\n            navigateToGroup(group.id);\r\n            break;\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_SUCCESS:\r\n        case GROUP_ACTION_TYPES.LEAVE_SUCCESS: {\r\n            rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n            break;\r\n        }\r\n    }\r\n};\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {AppState, MyThunkDispatch} from \"./types\";\r\nimport {AUTH_ACTION_TYPES} from \"./auth/actions\";\r\nimport {askForPushNotificationToken} from \"../notifications-utils\";\r\nimport {deleteNotificationToken, registerNotificationToken} from \"./notifications/actions\";\r\n\r\nexport const notificationsMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            // Register push notifications\r\n            askForPushNotificationToken().then((pushToken: string | null) => {\r\n                // The token will be null if the device does not support push notifications,\r\n                // or we did not get permission from the user.\r\n                if (pushToken !== null) (store.dispatch as MyThunkDispatch)(registerNotificationToken(pushToken));\r\n            });\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            // Discard the token\r\n            (store.dispatch as MyThunkDispatch)(deleteNotificationToken());\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {AppState, MyThunkDispatch} from \"./types\";\r\nimport {AUTH_ACTION_TYPES} from \"./auth/actions\";\r\nimport {fetchMatchRooms} from \"./messaging/actions\";\r\n\r\nexport const messagingMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            (store.dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n            break;\r\n        }\r\n    }\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {User} from \"../model/user\";\r\nimport {CookiesPreferences} from \"../model/user-settings\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {getInitialRoute} from \"../navigation/utils\";\r\nimport {attemptLoginFromCache, verifyBackendConnection} from \"../state/auth/actions\";\r\nimport {readCachedStaticData, storeStaticData} from \"../state/persistent-storage/static\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport {loadCookiesPreferences, loadVersionInfo, setLocale, setTheme} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nlet loggedInFromCache: User | undefined = undefined;\r\nlet isBackendReachable = false;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    Raleway: require(\"@assets/fonts/Raleway-Regular.ttf\"),\r\n                    RalewayThin: require(\"@assets/fonts/Raleway-Thin.ttf\"),\r\n                    RalewayLight: require(\"@assets/fonts/Raleway-Light.ttf\"),\r\n                    RalewaySemiBold: require(\"@assets/fonts/Raleway-SemiBold.ttf\"),\r\n                    RalewayBold: require(\"@assets/fonts/Raleway-Bold.ttf\"),\r\n                });\r\n\r\n                // Read cookie consent information from persistent storage\r\n                readCachedStaticData(\"cookieConsentDate\").then((consentDate) => {\r\n                    readCachedStaticData(\"cookies\").then((cookies) => {\r\n                        if (consentDate && cookies) {\r\n                            const date = new Date(consentDate.data as string);\r\n                            dispatch(loadCookiesPreferences(cookies.data as CookiesPreferences, date));\r\n                        } else {\r\n                            // On mobile, storage is turned on by default on the first visit\r\n                            dispatch(loadCookiesPreferences({auth: true, cache: true, settings: true}, new Date()));\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Read previous version of the app, so we know if we are launching the app after an update\r\n                readCachedStaticData(\"version\").then((version) => {\r\n                    dispatch(loadVersionInfo(version ? (version.data as string) : null));\r\n                    storeStaticData(\"version\", APP_VERSION, true);\r\n                });\r\n\r\n                // Attempt to read the settings from persistent storage\r\n                readCachedStaticData(\"theme\").then((theme) => {\r\n                    if (theme) dispatch(setTheme(theme.data as ThemeKey, true));\r\n                });\r\n                readCachedStaticData(\"locale\").then((locale) => {\r\n                    if (locale) dispatch(setLocale(locale.data as SupportedLocale, true));\r\n                    else store.dispatch(setLocale(\"en\" as SupportedLocale, true));\r\n                });\r\n\r\n                const {reachable, userLoggedInFromCache} = await connectToBackend();\r\n                isBackendReachable = reachable;\r\n                loggedInFromCache = userLoggedInFromCache;\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (!isBackendReachable) initialRoute = \"BackendUnreachableScreen\";\r\n    else if (loggedInFromCache) initialRoute = getInitialRoute(true, loggedInFromCache.onboarded);\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n\r\nexport async function connectToBackend(): Promise<{\r\n    reachable: boolean;\r\n    userLoggedInFromCache: User | undefined;\r\n}> {\r\n    const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n    const reachable = await dispatch(verifyBackendConnection());\r\n\r\n    if (reachable) {\r\n        // Load static data\r\n        await Promise.all([dispatch(loadProfileOffers()), dispatch(loadProfileInterests())]);\r\n\r\n        // Attempt to authenticate using cached data\r\n        const userLoggedInFromCache = await dispatch(attemptLoginFromCache());\r\n\r\n        return {reachable: true, userLoggedInFromCache};\r\n    }\r\n\r\n    return {reachable: false, userLoggedInFromCache: undefined};\r\n}\r\n","import {Dimensions} from \"react-native\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nexport default {\r\n    window: {\r\n        width,\r\n        height,\r\n    },\r\n    isSmallDevice: width < 375,\r\n    isWideDevice: width / (height + 1) > 0.85,\r\n};\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fff\",\r\n        cardBackground: \"#f7f7f7\",\r\n        accent: \"#003da5\",\r\n        themeAwareAccent: \"#003da5\",\r\n        accentSlight: \"#E0E8F4\",\r\n        accentSecondary: \"#009ace\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"#ff3b30\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#bbb\",\r\n        buttonGroupBorder: \"#dfdfdf\",\r\n        greenModalBackground: \"#3caf82\",\r\n        chatBubble: \"#ededed\",\r\n        inputPlaceholder: \"#999\",\r\n        onboardingInputBackground: \"#F2F2F7\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#000\",\r\n        cardBackground: \"#1c1c1e\",\r\n        accent: \"#003da5\",\r\n        themeAwareAccent: \"#448CFF\", // a variant of the accent color that is usable against a dark background\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"#ff453a\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#555\",\r\n        buttonGroupBorder: \"#1f1f1f\",\r\n        greenModalBackground: \"#3caf82\",\r\n        chatBubble: \"#333\",\r\n        inputPlaceholder: \"#bbb\",\r\n        onboardingInputBackground: \"#333337\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport layout from \"../constants/layout\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\ntype ThemedStylesInternal<T extends NamedStyles<T>> = (theme: Theme, wideDevice: boolean) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStylesInternal<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    const wideDevice = layout.isWideDevice;\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme, wideDevice)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\ntype ScreenWrapperProps = ThemeProps & {\r\n    forceFullWidth?: boolean;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const DEFAULT_MAX_WIDTH = 1000;\r\n\r\nclass ScreenWrapper extends React.Component<ScreenWrapperProps> {\r\n    render(): JSX.Element {\r\n        const {theme, forceFullWidth, wrapperStyle, containerStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, wrapperStyle]}>\r\n                <View style={[styles.container, forceFullWidth ? {maxWidth: undefined} : {}, containerStyle]}>\r\n                    {this.props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n            overflow: \"hidden\",\r\n        },\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            maxWidth: DEFAULT_MAX_WIDTH,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ScreenWrapper);\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-thin\"} : {fontWeight: \"100\"};\r\n\r\nexport const styleTextLight: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-light\"} : {fontWeight: \"200\"};\r\n\r\nexport const webFontFamily =\r\n    Platform.OS == \"web\" ? {fontFamily: `\"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif`} : {};\r\n\r\nexport const BLUR_HEADER_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_TAB_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_MODAL_INTENSITY = Platform.OS === \"ios\" ? 90 : 80;\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type ButtonSkinStyle = {button: ViewStyle; text: TextStyle};\r\n\r\nexport const BUTTON_SKINS = {\r\n    \"rounded-filled\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 10,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: themes.dark.text,\r\n        },\r\n    }),\r\n    \"rounded-hollow\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            borderColor: theme.accent,\r\n            borderWidth: 1,\r\n            paddingHorizontal: 10,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: theme.accent,\r\n        },\r\n    }),\r\n};\r\n\r\nexport type ButtonSkin = keyof typeof BUTTON_SKINS;\r\n\r\n// Component props\r\nexport type ButtonProps = {\r\n    onPress?: () => void;\r\n    text?: string;\r\n    icon?: JSX.Element;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    skin?: ButtonSkin;\r\n    iconLeft?: boolean;\r\n    contentOpacity?: number;\r\n    disabled?: boolean;\r\n    TouchableComponent?: typeof React.Component;\r\n} & ThemeProps;\r\n\r\nclass Button extends React.Component<ButtonProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            onPress,\r\n            text,\r\n            icon,\r\n            skin,\r\n            style,\r\n            textStyle,\r\n            iconLeft,\r\n            contentOpacity,\r\n            disabled,\r\n            children,\r\n            theme,\r\n        } = this.props;\r\n\r\n        const skinStyles = skin ? BUTTON_SKINS[skin](theme) : {button: {}, text: {}};\r\n\r\n        const TouchableComponent = this.props.TouchableComponent || TouchableOpacity;\r\n\r\n        return (\r\n            <TouchableComponent\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                onPress={onPress}\r\n                style={[{alignItems: \"center\"}, skinStyles.button, style]}\r\n                disabled={disabled}\r\n            >\r\n                {children}\r\n                {/* if content opacity is set, render content AND children anyway */}\r\n                {(!children || contentOpacity !== undefined) && (\r\n                    <View\r\n                        style={[\r\n                            {flexDirection: iconLeft ? \"row-reverse\" : \"row\", alignItems: \"center\"},\r\n                            contentOpacity !== undefined && {opacity: contentOpacity},\r\n                        ]}\r\n                    >\r\n                        <Text style={[skinStyles.text, textStyle]}>{text}</Text>\r\n                        {icon}\r\n                    </View>\r\n                )}\r\n            </TouchableComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(Button);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport store from \"../state/store\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper containerStyle={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"notFoundScreen.title\")}</Text>\r\n                <Text style={styles.subtitle}>{i18n.t(\"notFoundScreen.subtitle\")}</Text>\r\n                <Button\r\n                    onPress={() => {\r\n                        const {authenticated, onboarded} = store.getState().auth;\r\n                        if (authenticated) {\r\n                            if (onboarded) navigation.replace(\"MainScreen\");\r\n                            else navigation.replace(\"OnboardingScreen\");\r\n                        } else navigation.replace(\"LoginRoot\");\r\n                    }}\r\n                    skin=\"rounded-filled\"\r\n                    style={styles.redirectButton}\r\n                    text={i18n.t(\"notFoundScreen.redirect\")}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        title: {\r\n            fontSize: 48,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        },\r\n        redirectButton: {\r\n            maxWidth: 280,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"SigninScreen\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}.\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            maxWidth: 280,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport i18n from \"i18n-js\";\r\nimport Button from \"../components/Button\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.infoText}>{i18n.t(\"emailValidation.sent\")}</Text>\r\n                    <Text style={[styles.infoText, styles.email]}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={[styles.infoText, {marginBottom: 25}]}>Debug: Click here</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n\r\n                    <View style={styles.actionsContainer}>\r\n                        <Button\r\n                            text={i18n.t(\"ok\")}\r\n                            onPress={() =>\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SigninScreen\"},\r\n                                })\r\n                            }\r\n                            skin=\"rounded-hollow\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        infoText: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 18,\r\n            lineHeight: 22,\r\n            textAlign: \"center\",\r\n            marginTop: 25,\r\n            maxWidth: 300,\r\n        },\r\n        email: {\r\n            width: \"100%\",\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginRoot: {\r\n                screens: {\r\n                    WelcomeScreen: \"welcome\",\r\n                    LoginScreens: {\r\n                        screens: {\r\n                            SigninScreen: \"login\",\r\n                            ForgotPasswordScreen: \"forgot-password\",\r\n                            SignupScreen: \"signup\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MatchFilteringScreen: \"match/filters\",\r\n                            MatchHistoryScreen: \"match/history\",\r\n                        },\r\n                    },\r\n                    TabGroups: {\r\n                        screens: {\r\n                            TabGroupsScreen: \"groups\",\r\n                            GroupsExploreScreen: \"groups/explore\",\r\n                            GroupScreen: \"group/:groupId\",\r\n                            GroupMembersScreen: \"group/:groupId/members\",\r\n                            GroupBannedMembersScreen: \"group/:groupId/banned\",\r\n                            GroupMembersApprovalScreen: \"group/:groupId/requests\",\r\n                            GroupInviteScreen: \"group/:groupId/invite\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            ChatRoomsScreen: \"messaging\",\r\n                            ChatScreen: \"chat/:roomId\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ResetPasswordScreen: \"reset-password/:token\",\r\n            ResetPasswordSuccessScreen: \"password-reset\",\r\n            MyProfileScreen: \"profile\",\r\n            ProfileScreen: \"profile/:id\",\r\n            SettingsScreen: \"settings\",\r\n            DeleteAccountScreen: \"delete-account\",\r\n            DeleteAccountSuccessScreen: \"account-deleted\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingProfileScreen1: \"onboarding/profile/1\",\r\n                    OnboardingProfileScreen2: \"onboarding/profile/2\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingLegalScreen1: \"onboarding/tos\",\r\n                    OnboardingLegalScreen2: \"onboarding/data\",\r\n                    OnboardingLegalScreen3: \"onboarding/cookies\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            BackendUnreachableScreen: \"cannot-reach-server\",\r\n            ResendVerifyEmailScreen: \"verify\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n            marginBottom: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {localizeError} from \"../api/errors\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? localizeError(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {\r\n    TextStyle,\r\n    StyleProp,\r\n    View,\r\n    TextInputProps,\r\n    TextInput,\r\n    ViewStyle,\r\n    TouchableOpacity,\r\n    Platform,\r\n} from \"react-native\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\n\r\nexport type TextInputStyleProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputFocusedStyle?: StyleProp<TextStyle>;\r\n    showPasswordButtonStyle?: StyleProp<TextStyle>;\r\n    showPasswordIconStyle?: StyleProp<TextStyle>;\r\n    placeholderTextColor?: string;\r\n};\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    icon?: (focused: boolean, error: boolean, valid: boolean) => JSX.Element;\r\n} & TextInputStyleProps &\r\n    Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n    showSecureEntry: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nclass ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false, showSecureEntry: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    blur(): void {\r\n        this.inputRef.current?.blur();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            error,\r\n            value,\r\n            label,\r\n            icon,\r\n            untouched,\r\n            secureTextEntry,\r\n            style,\r\n            wrapperStyle,\r\n            inputStyle,\r\n            inputFocusedStyle,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            showPasswordButtonStyle,\r\n            showPasswordIconStyle,\r\n            placeholderTextColor,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        const {showSecureEntry} = this.state;\r\n\r\n        const showError = showErrorText && !untouched && error;\r\n        const isSecureEntry = secureTextEntry === true;\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    wrapperStyle,\r\n                    {width: \"100%\", flexDirection: \"column\", position: \"relative\", paddingBottom: showError ? 0 : 6},\r\n                ]}\r\n            >\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <View\r\n                    style={[\r\n                        {flexDirection: \"row\", alignItems: \"center\"},\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                >\r\n                    {icon && icon(this.state.focused, error !== undefined, error !== undefined && value.length > 0)}\r\n                    <TextInput\r\n                        ref={this.inputRef}\r\n                        style={[\r\n                            {flex: 1, height: \"100%\", backgroundColor: \"transparent\"},\r\n                            inputStyle,\r\n                            this.state.focused && Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : {},\r\n                            this.state.focused ? inputFocusedStyle : {},\r\n                            // untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                        ]}\r\n                        onBlur={(e) => {\r\n                            if (onBlur) onBlur(e);\r\n                            this.setState({focused: false});\r\n                        }}\r\n                        onFocus={(e) => {\r\n                            if (onFocus) onFocus(e);\r\n                            this.setState({focused: true});\r\n                        }}\r\n                        // Workaround to prevent the input from getting slow with large amounts of text (use defaultValue instead of value)\r\n                        // TODO test that this doesn't break anything\r\n                        defaultValue={value}\r\n                        // value={value}\r\n                        placeholderTextColor={placeholderTextColor}\r\n                        {...(isSecureEntry ? {secureTextEntry: !showSecureEntry} : {})}\r\n                        {...otherProps}\r\n                    />\r\n                    {isSecureEntry && (\r\n                        <TouchableOpacity\r\n                            style={showPasswordButtonStyle}\r\n                            onPress={() => this.setState({...this.state, showSecureEntry: !showSecureEntry})}\r\n                        >\r\n                            <FontAwesome name={showSecureEntry ? \"eye-slash\" : \"eye\"} style={showPasswordIconStyle} />\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n                {showError && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidatedTextInput;\r\n","import {noop} from \"lodash\";\r\nimport React from \"react\";\r\nimport {TextInputProps} from \"react-native\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"../ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n    isEmail?: boolean;\r\n    isPassword?: boolean;\r\n} & ValidatedTextInputProps;\r\n\r\nconst emailProps: Partial<TextInputProps> = {\r\n    keyboardType: \"email-address\",\r\n    autoCompleteType: \"email\",\r\n    textContentType: \"emailAddress\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\nconst passwordProps: Partial<TextInputProps> = {\r\n    secureTextEntry: true,\r\n    autoCompleteType: \"password\",\r\n    textContentType: \"password\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    inputRef = React.createRef<ValidatedTextInput>();\r\n\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        handleChange: noop,\r\n        handleBlur: noop,\r\n    };\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    blur(): void {\r\n        this.inputRef.current?.blur();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            field,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            error,\r\n            onBlur,\r\n            onChangeText,\r\n            isEmail,\r\n            isPassword,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <ValidatedTextInput\r\n                ref={this.inputRef}\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(field)(e);\r\n                }}\r\n                {...(isEmail ? emailProps : {})}\r\n                {...(isPassword ? passwordProps : {})}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const ONBOARDING_INPUT_BORDER_RADIUS = 12;\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        root: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        wideDeviceLeftPanel: {\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        slideWrapper: {\r\n            width: wideDevice ? \"50%\" : \"100%\",\r\n            height: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideScrollView: {\r\n            width: \"100%\",\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            paddingTop: 100,\r\n            paddingBottom: 20,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        slideContentContainer: {\r\n            width: \"80%\",\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"80%\",\r\n            alignItems: \"center\",\r\n            marginTop: 15,\r\n        },\r\n        slideNavButtons: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        navButton: {\r\n            flex: 1,\r\n            marginHorizontal: 0,\r\n            marginVertical: 0,\r\n        },\r\n        navButtonBack: {\r\n            backgroundColor: \"#fff\",\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const onboardingOffersStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        categoryTitleText: {},\r\n        offerControl: {\r\n            marginVertical: 10,\r\n        },\r\n        offerControlPreText: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n        },\r\n    });\r\n});\r\n","import {StyleSheet} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormCheckBoxProps} from \"../components/forms/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\nimport {TextInputStyleProps} from \"../components/ValidatedTextInput\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\n\r\nexport const formStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputFieldIcon: {\r\n            fontSize: 20,\r\n            color: theme.inputPlaceholder,\r\n            marginRight: 10,\r\n        },\r\n        inputFieldIconFocused: {\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): TextInputStyleProps {\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            borderBottomWidth: 2,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        focusedStyle: {\r\n            borderColor: theme.accent,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        labelStyle: {\r\n            marginBottom: 4,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 16,\r\n            color: theme.accent,\r\n        },\r\n        showPasswordButtonStyle: {\r\n            padding: 8,\r\n        },\r\n        showPasswordIconStyle: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n        placeholderTextColor: theme.inputPlaceholder,\r\n    };\r\n}\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): TextInputStyleProps {\r\n    /*return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        inputFocusedStyle:\r\n            Platform.OS === \"web\"\r\n                ? ({\r\n                      backgroundColor: \"transparent\",\r\n                      outline: \"none\",\r\n                  } as TextStyle)\r\n                : {},\r\n    };*/\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 55,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n        },\r\n        focusedStyle: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {},\r\n        inputStyle: {\r\n            fontSize: 18,\r\n            color: theme.text,\r\n            marginHorizontal: 15,\r\n        },\r\n    };\r\n}\r\n\r\nexport function getFormCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 16,\r\n            marginLeft: 5,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        containerStyle: commonStyle.checkboxContainer,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewProps, StyleSheet, StyleProp, TextStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {localizeError} from \"../../api/errors\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error?: string;\r\n    textStyle?: StyleProp<TextStyle>;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, textStyle, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {error && error.length > 0 && (\r\n                    <View style={[styles.wrapper, style]} {...otherProps}>\r\n                        <Text style={[styles.text, textStyle]}>{localizeError(error)}</Text>\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginTop: 5,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, TextStyle, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport Button, {ButtonSkin} from \"../Button\";\r\n\r\n// Component props\r\ntype FormSubmitButtonProps = {\r\n    onPress: () => void;\r\n    text: string;\r\n    icon?: JSX.Element;\r\n    submitting: boolean;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    skin?: ButtonSkin;\r\n    TouchableComponent?: typeof React.Component;\r\n} & ThemeProps;\r\n\r\nclass FormSubmitButton extends React.Component<FormSubmitButtonProps> {\r\n    render(): JSX.Element {\r\n        const {submitting, onPress, style, loadingIndicatorStyle, theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <Button\r\n                {...{onPress: submitting ? undefined : onPress}}\r\n                style={[{flexDirection: \"row\", alignItems: \"center\"}, style]}\r\n                {...otherProps}\r\n            >\r\n                {submitting && <ActivityIndicator color={theme.accentTernary} style={loadingIndicatorStyle} />}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormSubmitButton);\r\n","import {BlurView} from \"expo-blur\";\r\nimport React from \"react\";\r\nimport {Modal, TouchableOpacity, ViewStyle, StyleSheet, StyleProp, KeyboardAvoidingView} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {BLUR_MODAL_INTENSITY} from \"../../styles/general\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeProps} from \"../../types\";\r\n\r\nexport type ModalImplProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    onShow?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: StyleProp<ViewStyle>;\r\n    visible?: boolean;\r\n    animationType?: \"fade\" | \"none\" | \"slide\" | undefined;\r\n    bottom?: boolean;\r\n    fullWidth?: boolean;\r\n    fullHeight?: boolean;\r\n    nonDismissable?: boolean;\r\n    noBackground?: boolean;\r\n    backdropOpacity?: number;\r\n    backdropBlur?: boolean;\r\n    statusBarTranslucent?: boolean;\r\n};\r\n\r\nexport const DEFAULT_MODAL_BACKDROP_OPACITY = 0.15;\r\n\r\ntype ModalImplState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nclass ModalImpl extends React.Component<ModalImplProps, ModalImplState> {\r\n    constructor(props: ModalImplProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ModalImplProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n        if (b && this.props.onShow) this.props.onShow();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            modalViewStyle,\r\n            animationType,\r\n            bottom,\r\n            fullWidth,\r\n            fullHeight,\r\n            nonDismissable,\r\n            noBackground,\r\n            backdropOpacity,\r\n            backdropBlur,\r\n            statusBarTranslucent,\r\n        } = this.props;\r\n        const {modalVisible} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const backdropColor = `rgba(0,0,0,${\r\n            backdropOpacity === undefined ? DEFAULT_MODAL_BACKDROP_OPACITY : backdropOpacity\r\n        })`;\r\n\r\n        const content = (\r\n            <TouchableOpacity\r\n                style={[styles.backdrop, {backgroundColor: backdropColor}]}\r\n                activeOpacity={1.0}\r\n                onPress={nonDismissable ? undefined : () => this.setModalVisible(false)}\r\n            >\r\n                <TouchableOpacity\r\n                    // This TouchableOpacity intercepts press events so the modal doesn't hide when pressed\r\n                    activeOpacity={1.0}\r\n                    style={[\r\n                        styles.modalView,\r\n                        bottom ? {position: \"absolute\", bottom: 0, margin: 0} : {},\r\n                        fullWidth ? {width: \"100%\", maxWidth: \"100%\"} : {},\r\n                        fullHeight ? {height: \"100%\"} : {},\r\n                        !noBackground\r\n                            ? {\r\n                                  backgroundColor: theme.cardBackground,\r\n                                  shadowColor: \"#000\",\r\n                                  shadowOffset: {width: 0, height: 2},\r\n                                  shadowOpacity: 0.25,\r\n                                  shadowRadius: 3.84,\r\n                                  elevation: 5,\r\n                              }\r\n                            : {elevation: 0, shadowRadius: 0},\r\n                        modalViewStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.renderContent(() => this.setModalVisible(false))}\r\n                </TouchableOpacity>\r\n            </TouchableOpacity>\r\n        );\r\n\r\n        // Default to true if not given\r\n        const finalStatusBarTranslucent = statusBarTranslucent === undefined ? true : statusBarTranslucent;\r\n\r\n        return (\r\n            <Modal\r\n                animationType={animationType}\r\n                transparent\r\n                statusBarTranslucent={finalStatusBarTranslucent}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    if (!nonDismissable) this.setModalVisible(false);\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    enabled={finalStatusBarTranslucent} // statusBarTranslucent prop breaks the keyboard avoidance\r\n                    behavior=\"height\"\r\n                    style={{width: \"100%\", height: \"100%\", flex: 1}}\r\n                >\r\n                    {backdropBlur ? (\r\n                        <BlurView style={{flex: 1}} tint={\"dark\"} intensity={BLUR_MODAL_INTENSITY}>\r\n                            {content}\r\n                        </BlurView>\r\n                    ) : (\r\n                        content\r\n                    )}\r\n                </KeyboardAvoidingView>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        backdrop: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderColor: \"transparent\",\r\n        },\r\n        modalView: {\r\n            width: \"80%\",\r\n            maxWidth: 300,\r\n            margin: 20,\r\n            borderRadius: 3,\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 30,\r\n            alignItems: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ModalImpl);\r\n","import {BlurView} from \"expo-blur\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {StyleProp, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {BLUR_MODAL_INTENSITY} from \"../../styles/general\";\r\nimport {DEFAULT_MODAL_BACKDROP_OPACITY, ModalImplProps} from \"./ModalImpl.native\";\r\n\r\ntype ModalImplState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nlet container: HTMLDivElement | null = null;\r\n\r\nexport class ModalImplClass extends React.Component<ModalImplProps, ModalImplState> {\r\n    constructor(props: ModalImplProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (container === null) {\r\n            container = document.createElement(\"div\");\r\n            container.style.zIndex = \"1000\";\r\n            document.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ModalImplProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n        if (b && this.props.onShow) this.props.onShow();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            modalViewStyle,\r\n            bottom,\r\n            fullWidth,\r\n            fullHeight,\r\n            nonDismissable,\r\n            noBackground,\r\n            backdropOpacity,\r\n            backdropBlur,\r\n        } = this.props;\r\n        const {modalVisible} = this.state;\r\n\r\n        const fixedFullSize = {\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            left: 0,\r\n            top: 0,\r\n        };\r\n\r\n        const modal = modalVisible ? (\r\n            <>\r\n                {backdropBlur && (\r\n                    <BlurView style={{flex: 1, ...fixedFullSize}} tint={\"dark\"} intensity={BLUR_MODAL_INTENSITY} />\r\n                )}\r\n                <TouchableOpacity\r\n                    style={\r\n                        ({\r\n                            ...fixedFullSize,\r\n                            backgroundColor: `rgba(0,0,0,${\r\n                                backdropOpacity === undefined ? DEFAULT_MODAL_BACKDROP_OPACITY : backdropOpacity\r\n                            })`,\r\n                            cursor: \"pointer\",\r\n                        } as unknown) as StyleProp<ViewStyle> // force typings to accept web-specific styling\r\n                    }\r\n                    activeOpacity={1.0}\r\n                    onPress={nonDismissable ? undefined : () => this.setModalVisible(false)}\r\n                />\r\n                <View\r\n                    style={[\r\n                        ({\r\n                            // Centering\r\n                            position: \"fixed\",\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: \"auto\",\r\n                            // Actual styling\r\n                            width: \"80%\",\r\n                            maxWidth: 300,\r\n                            borderRadius: 3,\r\n                            paddingVertical: 20,\r\n                            paddingHorizontal: 30,\r\n                            alignItems: \"center\",\r\n                        } as unknown) as ViewStyle, // force typings to accept web-specific styling\r\n                        fullWidth ? {width: \"100%\", maxWidth: \"100%\"} : {},\r\n                        fullHeight\r\n                            ? {height: \"100%\"}\r\n                            : bottom\r\n                            ? {bottom: 0}\r\n                            : (({top: \"50%\", transform: \"translateY(-50%)\"} as unknown) as ViewStyle),\r\n                        !noBackground\r\n                            ? (({\r\n                                  backgroundColor: theme.cardBackground,\r\n                                  boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.05)\",\r\n                              } as unknown) as ViewStyle)\r\n                            : {},\r\n                        modalViewStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.renderContent(() => this.setModalVisible(false))}\r\n                </View>\r\n            </>\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        // \"Teleport\" the modal to an element that we previously appended to the <body>\r\n        return container ? ReactDOM.createPortal(modal, container) : <></>;\r\n    }\r\n}\r\n\r\nexport default withTheme(ModalImplClass);\r\n","import React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ModalImpl, {ModalImplClass} from \"./ModalImpl\";\r\nimport {ModalImplProps} from \"./ModalImpl.native\";\r\n\r\nexport type ModalActivator = (show: () => void) => JSX.Element;\r\n\r\nexport type CustomModalProps = ModalImplProps & {activator?: ModalActivator};\r\n\r\nexport class CustomModalClass extends React.Component<CustomModalProps> {\r\n    modalRef = React.createRef<ModalImplClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.setModalVisible(true);\r\n    }\r\n\r\n    hide(): void {\r\n        this.modalRef.current?.setModalVisible(false);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, ...otherProps} = this.props;\r\n\r\n        const activatorElement = activator ? activator(() => this.show()) : <></>;\r\n\r\n        return (\r\n            <>\r\n                {activatorElement}\r\n                <ModalImpl ref={this.modalRef} {...otherProps} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomModalClass);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TextProps, TouchableOpacity, StyleProp, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {IconProps} from \"@expo/vector-icons/build/createIconSet\";\r\nimport {styleTextLight} from \"../../styles/general\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nexport type ConfirmationModalButtonPreset = \"cancel\" | \"confirm\" | \"delete\";\r\n\r\nexport type ConfirmationModalButton = {\r\n    preset?: ConfirmationModalButtonPreset;\r\n    text?: string;\r\n    icon?: (props: Partial<IconProps<never>>) => JSX.Element;\r\n    onPress?: (hide: () => void) => void;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    disabled?: boolean;\r\n};\r\n\r\nexport type ConfirmationModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {\r\n        title: string;\r\n        text?: string;\r\n        justifyText?: boolean;\r\n        icon?: (props: Partial<IconProps<never>>) => JSX.Element;\r\n        buttons: ConfirmationModalButton[];\r\n        additionalContent?: (hide: () => void, textProps: TextProps) => JSX.Element;\r\n        contentContainerStyle?: StyleProp<ViewStyle>;\r\n    };\r\n\r\nexport class ConfirmationModalClass extends React.Component<ConfirmationModalProps> {\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    private getPreset(preset: ConfirmationModalButtonPreset): ConfirmationModalButton {\r\n        const {theme} = this.props;\r\n\r\n        switch (preset) {\r\n            case \"cancel\": {\r\n                return {\r\n                    text: i18n.t(\"cancel\"),\r\n                    backgroundColor: theme.background,\r\n                    color: theme.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n            case \"confirm\": {\r\n                return {\r\n                    text: i18n.t(\"ok\"),\r\n                    backgroundColor: theme.okay,\r\n                    color: themes.dark.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n            case \"delete\": {\r\n                return {\r\n                    text: i18n.t(\"delete\"),\r\n                    backgroundColor: theme.error,\r\n                    color: themes.dark.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            title,\r\n            text,\r\n            justifyText,\r\n            icon,\r\n            buttons,\r\n            additionalContent,\r\n            contentContainerStyle,\r\n            ...otherProps\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const buttonDefaults = {backgroundColor: theme.okay, color: themes.dark.text};\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                {...otherProps}\r\n                modalViewStyle={[styles.modalStyle, otherProps.modalViewStyle]}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        {icon && icon({style: styles.icon})}\r\n                        <View style={[styles.contentContainer, contentContainerStyle]}>\r\n                            <Text style={styles.title}>{title}</Text>\r\n                            <Text\r\n                                style={[\r\n                                    styles.text,\r\n                                    justifyText && {textAlign: \"justify\"},\r\n                                    !text && {marginVertical: 8, height: 0},\r\n                                ]}\r\n                            >\r\n                                {text}\r\n                            </Text>\r\n                            {additionalContent && additionalContent(hide, {style: styles.contentText})}\r\n                        </View>\r\n                        <View style={styles.actionsWrapper}>\r\n                            {buttons.map((buttonParams, i) => {\r\n                                const b = {\r\n                                    ...buttonDefaults,\r\n                                    ...(buttonParams.preset ? this.getPreset(buttonParams.preset) : {}),\r\n                                    ...buttonParams,\r\n                                };\r\n                                return (\r\n                                    <TouchableOpacity\r\n                                        key={`modal-button-${i}-${b.text}`}\r\n                                        style={[styles.action, {backgroundColor: b.backgroundColor}]}\r\n                                        activeOpacity={b.disabled ? 1.0 : undefined}\r\n                                        onPress={b.disabled ? undefined : () => b.onPress && b.onPress(hide)}\r\n                                    >\r\n                                        {b.disabled && <View style={styles.actionDisabledOverlay}></View>}\r\n                                        {b.text && <Text style={[styles.actionText, {color: b.color}]}>{b.text}</Text>}\r\n                                    </TouchableOpacity>\r\n                                );\r\n                            })}\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalStyle: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n            paddingTop: 20,\r\n            borderRadius: 20,\r\n            overflow: \"hidden\",\r\n        },\r\n        actionsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            borderTopWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            height: 50,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n        actionDisabledOverlay: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#777\",\r\n            opacity: 0.6,\r\n        },\r\n        contentContainer: {\r\n            paddingHorizontal: 25,\r\n            width: \"100%\",\r\n        },\r\n        icon: {\r\n            fontSize: 36,\r\n            marginBottom: 5,\r\n        },\r\n        title: {\r\n            fontSize: 24,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n            textAlign: \"center\",\r\n        },\r\n        contentText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ConfirmationModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport store from \"../../state/store\";\r\nimport {cancelLoginRecovery, requestLogin} from \"../../state/auth/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nexport type RecoverAccountModalProps = ThemeProps & Partial<CustomModalProps> & {email: string; password: string};\r\n\r\nclass RecoverAccountModal extends React.Component<RecoverAccountModalProps> {\r\n    render() {\r\n        const {email, password, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"recoverAccount.title\")}\r\n                text={i18n.t(\"recoverAccount.text\")}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\", onPress: () => store.dispatch(cancelLoginRecovery())},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"recoverAccount.yes\"),\r\n                        onPress: () => (store.dispatch as MyThunkDispatch)(requestLogin(email, password, true)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(RecoverAccountModal);\r\n","import * as React from \"react\";\r\nimport {Keyboard, StyleProp, StyleSheet, Text, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport RecoverAccountModal from \"../modals/RecoverAccountModal\";\r\nimport themes from \"../../constants/themes\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validatedEmail: state.auth.validatedEmail,\r\n    needsRecovery: state.auth.accountNeedsRecovery,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<FormState> & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\ntype LoginFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    pwdInputRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (success) {\r\n                    // Clear password input\r\n                    if (this.setFieldValue) this.setFieldValue(\"password\", \"\", false);\r\n                    if (this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                }\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle, needsRecovery} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Formik\r\n                    initialValues={{email: \"\", password: \"\"} as FormState}\r\n                    validationSchema={LoginFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldValue,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 10)};\r\n                        this.setFieldValue = setFieldValue;\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <View>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdInputRef.current?.focus()}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdInputRef}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"link\"\r\n                                    accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                    onPress={() => {\r\n                                        Keyboard.dismiss();\r\n                                        rootNavigate(\"LoginRoot\", {\r\n                                            screen: \"LoginScreens\",\r\n                                            params: {screen: \"ForgotPasswordScreen\"},\r\n                                        });\r\n                                    }}\r\n                                    style={styles.forgotPwdLink}\r\n                                >\r\n                                    <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                                </TouchableOpacity>\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"loginForm.logIn\")}\r\n                                        icon={<MaterialCommunityIcons name=\"login\" style={styles.loginButtonIcon} />}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <View style={styles.separatorContainer}>\r\n                                        <View style={styles.separatorHbar} />\r\n                                        <Text style={styles.separatorText}>{i18n.t(\"loginForm.or\")}</Text>\r\n                                        <View style={styles.separatorHbar} />\r\n                                    </View>\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            rootNavigate(\"LoginRoot\", {\r\n                                                screen: \"LoginScreens\",\r\n                                                params: {screen: \"SignupScreen\"},\r\n                                            });\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"loginForm.signUp\")}\r\n                                    />\r\n                                </View>\r\n                                <RecoverAccountModal\r\n                                    visible={needsRecovery}\r\n                                    email={values.email}\r\n                                    password={values.password}\r\n                                />\r\n                            </View>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n        },\r\n        loginButtonIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n        },\r\n        forgotPwdLink: {\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            textAlign: \"center\",\r\n        },\r\n        separatorContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        separatorHbar: {\r\n            flex: 1,\r\n            height: 1,\r\n            backgroundColor: theme.text,\r\n            opacity: 0.2,\r\n        },\r\n        separatorText: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LoginForm));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, StyleProp, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormError from \"./FormError\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\nexport type ForgotPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps, ForgotPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ForgotPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit({email}: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email)).then(({errors}: ValidatedActionReturn) => {\r\n            if (errors && errors.fields) {\r\n                const f = errors.fields;\r\n                Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n            }\r\n            this.setState({remoteErrors: errors, submitting: false});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as FormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikCfg: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"send\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 40,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ScrollView, LayoutChangeEvent, StyleProp, ViewStyle, Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\ntype ScrollFormWrapperProps = ThemeProps & {contentStyle?: StyleProp<ViewStyle>; notKeyboardReactive?: boolean};\r\n\r\ntype ScrollFormWrapperState = {height: number};\r\n\r\nclass ScrollFormWrapper extends React.Component<ScrollFormWrapperProps, ScrollFormWrapperState> {\r\n    keyboardShown = false;\r\n\r\n    constructor(props: ScrollFormWrapperProps) {\r\n        super(props);\r\n        this.state = {height: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.notKeyboardReactive) {\r\n            Keyboard.addListener(\"keyboardDidShow\", () => {\r\n                /*const coords = e.endCoordinates;\r\n                console.log(coords);\r\n                if (coords) this.setState({...this.state, height: coords.height, keyboardTopY: coords.screenY, keyboardOpen: true});*/\r\n                this.keyboardShown = true;\r\n            });\r\n            Keyboard.addListener(\"keyboardDidHide\", () => (this.keyboardShown = false));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {notKeyboardReactive, contentStyle, theme} = this.props;\r\n        const {height} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                style={styles.scrollView}\r\n                contentContainerStyle={[\r\n                    styles.scrollViewContent,\r\n                    {\r\n                        minHeight: notKeyboardReactive ? 0 : height,\r\n                    },\r\n                ]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    if (!notKeyboardReactive || this.state.height == 0) {\r\n                        // Manually give a minimum height to the content\r\n                        // (-5 is to prevent an unnecessary scrollbar from showing on web)\r\n                        if (!this.keyboardShown)\r\n                            this.setState({...this.state, height: e.nativeEvent.layout.height - 5});\r\n                    }\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    behavior=\"padding\"\r\n                    style={[\r\n                        styles.keyboardAvoidingView,\r\n                        // Avoid showing the content until we have the height computed\r\n                        !notKeyboardReactive && this.state.height === 0 ? {opacity: 0} : {},\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.children}\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => ({\r\n    keyboardAvoidingView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    scrollViewContent: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport default withTheme(ScrollFormWrapper);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport {noop} from \"lodash\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype SignupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormState> {\r\n    pwdField1Ref = React.createRef<FormTextInput>();\r\n    pwdField2Ref = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    resetForm: () => void = noop;\r\n\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success) {\r\n                    this.resetForm();\r\n                    if (this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 5)};\r\n                        this.setFieldError = setFieldError;\r\n                        this.resetForm = formikProps.resetForm;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField1Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField1Ref}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField2Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField2Ref}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    accessibilityLabel={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"createAccount\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 10,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type SvgPlaceholderProps = SvgProps;\r\n\r\nfunction SvgPlaceholder(): JSX.Element {\r\n    return <></>;\r\n}\r\n\r\nexport default SvgPlaceholder;\r\n","import {SvgProps} from \"react-native-svg\";\r\nimport SvgPlaceholder from \"./components/SvgPlaceholder\";\r\nimport {SupportedLocale} from \"./localization\";\r\nimport store from \"./state/store\";\r\nimport {ThemeKey} from \"./types\";\r\n\r\nlet loaded: {[key: string]: number} = {};\r\nlet locale: SupportedLocale | null = null;\r\nlet theme: ThemeKey | null = null;\r\n\r\nasync function assetDictCommon(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"welcome\":\r\n            return import(\"@assets/images/welcome.svg\");\r\n        case \"login-header\":\r\n            return import(\"@assets/images/login.svg\");\r\n        case \"offers.categories.discover\":\r\n            return import(\"@assets/images/offers/discover.svg\");\r\n        case \"offers.categories.meet\":\r\n            return import(\"@assets/images/offers/meet.svg\");\r\n        case \"offers.categories.collaborate\":\r\n            return import(\"@assets/images/offers/collaborate.svg\");\r\n        case \"background.onboarding\":\r\n            return import(\"@assets/images/background.svg\");\r\n        case \"large-wave-bg\":\r\n            return import(\"@assets/images/large-wave-bg.svg\");\r\n        case \"woman-holding-phone\":\r\n            return import(\"@assets/images/woman-holding-phone.svg\");\r\n        case \"woman-holding-phone-2\":\r\n            return import(\"@assets/images/woman-holding-phone-2.svg\");\r\n        case \"woman-holding-phone-3\":\r\n            return import(\"@assets/images/woman-holding-phone-3.svg\");\r\n        case \"woman-holding-phone-4\":\r\n            return import(\"@assets/images/woman-holding-phone-4.svg\");\r\n        case \"man-holding-phone\":\r\n            return import(\"@assets/images/man-holding-phone.svg\");\r\n        case \"blob-4\":\r\n            return import(\"@assets/images/blob-4.svg\");\r\n        case \"blob-5\":\r\n            return import(\"@assets/images/blob-5.svg\");\r\n        case \"blob-6\":\r\n            return import(\"@assets/images/blob-6.svg\");\r\n        case \"blob-8\":\r\n            return import(\"@assets/images/blob-8.svg\");\r\n        case \"blob-9\":\r\n            return import(\"@assets/images/blob-9.svg\");\r\n        case \"blob-10\":\r\n            return import(\"@assets/images/blob-10.svg\");\r\n        case \"blob-11\":\r\n            return import(\"@assets/images/blob-11.svg\");\r\n        case \"staff\":\r\n            return import(\"@assets/images/staff.svg\");\r\n        case \"student\":\r\n            return import(\"@assets/images/student.svg\");\r\n        case \"logos.sea-eu-around.small\":\r\n            return import(\"@assets/images/logos/sea-eu-around.small.png\");\r\n        case \"store-button.android\":\r\n            return import(\"@assets/images/store-android.png\");\r\n        case \"store-button.ios\":\r\n            return import(\"@assets/images/store-ios.svg\");\r\n        case \"group-placeholder\":\r\n            return import(\"@assets/images/group-placeholder.png\");\r\n        default:\r\n            return import(\"@assets/images/placeholder.png\");\r\n    }\r\n}\r\n\r\nasync function assetDictEn(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_en_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nasync function assetDictFr(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_fr_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function getLocalImage(key: string, onLoad?: () => void): number {\r\n    const settings = store.getState().settings.userSettings;\r\n    if (locale != settings.locale || theme != settings.theme) loaded = {};\r\n    locale = settings.locale;\r\n    theme = settings.theme;\r\n\r\n    if (loaded[key]) return loaded[key];\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const finish = (v: any) => {\r\n        loaded[key] = v.default;\r\n        if (onLoad) onLoad();\r\n    };\r\n\r\n    const localizedDict = locale === \"en\" ? assetDictEn : assetDictFr;\r\n\r\n    localizedDict(theme, key).then((v) => {\r\n        // Fallback to the common dict if needed\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        if (v === null) assetDictCommon(theme!, key).then((v) => finish(v));\r\n        else finish(v);\r\n    });\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getLocalSvg(key: string, onLoad?: () => void): React.FC<SvgProps> {\r\n    const raw = getLocalImage(key, onLoad);\r\n    if (raw === 0) return SvgPlaceholder;\r\n    return (raw as unknown) as React.FC<SvgProps>;\r\n}\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport {Dimensions, Platform} from \"react-native\";\r\nimport {colors} from \"react-native-elements\";\r\nimport ReAnimated from \"react-native-reanimated\";\r\n\r\nexport function initPolyfills(): void {\r\n    // FIXME: https://github.com/react-native-elements/react-native-elements/pull/2561\r\n\r\n    // @ts-ignore react-native-elements typings are missing \"web\"\r\n    if (!colors.platform.web) {\r\n        // @ts-ignore react-native-elements typings are missing \"web\"\r\n        colors.platform.web = {\r\n            primary: \"#2089dc\",\r\n            secondary: \"#ca71eb\",\r\n            grey: \"#393e42\",\r\n            searchBg: \"#303337\",\r\n            success: \"#52c41a\",\r\n            error: \"#ff190c\",\r\n            warning: \"#faad14\",\r\n        };\r\n    }\r\n}\r\n\r\nexport function normalizeWheelEvent(e: WheelEvent): {spinY: number; pixelY: number} {\r\n    // Reasonable defaults\r\n    const PIXEL_STEP = 10;\r\n    const LINE_HEIGHT = 40;\r\n    const PAGE_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\n    let sY = 0; // spinY\r\n    let pY = 0; // pixelY\r\n\r\n    // Legacy\r\n    if (\"detail\" in e) sY = e.detail;\r\n    if (\"wheelDelta\" in e) sY = -(e as {wheelDelta: number}).wheelDelta / 120;\r\n    if (\"wheelDeltaY\" in e) sY = -(e as {wheelDeltaY: number}).wheelDeltaY / 120;\r\n\r\n    if (\"deltaY\" in e) pY = e.deltaY;\r\n    else pY = sY * PIXEL_STEP;\r\n\r\n    if (pY && e.deltaMode) {\r\n        // delta in LINE units\r\n        if (e.deltaMode == 1) pY *= LINE_HEIGHT;\r\n        // delta in PAGE units\r\n        else pY *= PAGE_HEIGHT;\r\n    }\r\n\r\n    // Fall-back if spin cannot be determined\r\n    if (pY && !sY) sY = pY < 1 ? -1 : 1;\r\n\r\n    return {spinY: sY, pixelY: pY};\r\n}\r\n\r\nexport function animateValue(node: ReAnimated.Value<number>, config: ReAnimated.TimingConfig): void {\r\n    if (Platform.OS === \"web\") node.setValue(config.toValue);\r\n    else ReAnimated.timing(node, config).start();\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, StyleSheet, Dimensions, Keyboard, View} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport layout from \"../../constants/layout\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    isFirstLaunch: state.settings.isFirstLaunch,\r\n}));\r\n\r\n// Component props\r\ntype LoginHeaderProps = ThemeProps & {insets: EdgeInsets} & ConnectedProps<typeof reduxConnector>;\r\n\r\nexport const LOGIN_HEADER_WAVE_HEIGHT = 60;\r\nconst SVG_VIEWBOX_W = 620;\r\nconst SVG_VIEWBOX_H = 800;\r\n\r\nclass LoginHeaderClass extends React.Component<LoginHeaderProps> {\r\n    height = new ReAnimated.Value<number>(this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT);\r\n    imageTop = new ReAnimated.Value<number>(this.getFullHeight() - this.getImageHeight());\r\n\r\n    back(): void {\r\n        Keyboard.dismiss();\r\n        rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n    }\r\n\r\n    getImageHeight(): number {\r\n        return (SVG_VIEWBOX_H / SVG_VIEWBOX_W) * Dimensions.get(\"window\").width;\r\n    }\r\n\r\n    getCollapsedHeight(): number {\r\n        const minHeightBelow = /*550*/ 650;\r\n        return Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top;\r\n    }\r\n\r\n    getFullHeight(): number {\r\n        const maxHeight = 530;\r\n        const minHeightBelow = 420;\r\n        return Math.min(Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top, maxHeight);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Keyboard.addListener(\"keyboardDidShow\", () => {\r\n            const imageTopVal = this.getCollapsedHeight() - this.getImageHeight();\r\n            const heightVal = this.getCollapsedHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n            const duration = 100;\r\n            animateValue(this.height, {\r\n                toValue: heightVal,\r\n                duration,\r\n                easing,\r\n            });\r\n            animateValue(this.imageTop, {\r\n                toValue: imageTopVal,\r\n                duration,\r\n                easing,\r\n            });\r\n        });\r\n\r\n        Keyboard.addListener(\"keyboardDidHide\", () => {\r\n            const imageTopVal = this.getFullHeight() - this.getImageHeight();\r\n            const heightVal = this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n            const duration = 100;\r\n\r\n            animateValue(this.height, {\r\n                toValue: heightVal,\r\n                duration,\r\n                easing,\r\n            });\r\n            animateValue(this.imageTop, {\r\n                toValue: imageTopVal,\r\n                duration,\r\n                easing,\r\n            });\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, isFirstLaunch} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const Image = getLocalSvg(\"login-header\", () => this.forceUpdate());\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                {!layout.isWideDevice && (\r\n                    <ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n                        <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n                    </ReAnimated.View>\r\n                )}\r\n\r\n                <ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n                    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n                        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.title}>\r\n                        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n                    </Text>\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n    <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n</ReAnimated.View>\r\n<ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n    </TouchableOpacity>\r\n    <Text style={styles.title}>\r\n        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n    </Text>\r\n</ReAnimated.View>\r\n*/\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            ...(wideDevice\r\n                ? {\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"50%\",\r\n                      height: \"100%\",\r\n                      backgroundColor: theme.accent,\r\n                      zIndex: 1,\r\n                  }\r\n                : {zIndex: 1}),\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            padding: 40,\r\n            zIndex: 2,\r\n            overflow: \"hidden\",\r\n        },\r\n        navigationButton: {\r\n            width: 50,\r\n            marginLeft: -15,\r\n        },\r\n        navigationIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 50,\r\n        },\r\n        title: {\r\n            color: themes.dark.text,\r\n            fontSize: 38,\r\n            maxWidth: 210,\r\n            fontFamily: \"RalewaySemiBold\",\r\n        },\r\n        image: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            width: Dimensions.get(\"window\").width,\r\n            aspectRatio: SVG_VIEWBOX_W / SVG_VIEWBOX_H,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction LoginHeader(props: ConnectedProps<typeof reduxConnector>): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <LoginHeaderClass {...themeProps} insets={insets} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(LoginHeader);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {LoginScreens} from \"../navigation/types\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {LOGIN_HEADER_WAVE_HEIGHT} from \"../components/headers/LoginHeader\";\r\nimport layout from \"../constants/layout\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Sign-in\r\n\r\ntype TabSigninScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"SigninScreen\">;\r\n\r\nclass SigninScreenClass extends React.Component<TabSigninScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <LoginForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Forgot password\r\n\r\ntype ForgotPasswordScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"ForgotPasswordScreen\">;\r\n\r\nclass ForgotPasswordScreenClass extends React.Component<ForgotPasswordScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <ForgotPasswordForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Sign-up\r\n\r\ntype SignupScreenProps = ThemeProps;\r\n\r\nclass SignupScreenClass extends React.Component<SignupScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <SignupForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    if (wideDevice) {\r\n        return StyleSheet.create({\r\n            screenWrapper: {\r\n                width: \"50%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: \"50%\",\r\n            },\r\n            screenContainer: {\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n            },\r\n            formContainer: {\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    } else {\r\n        return StyleSheet.create({\r\n            screenWrapper: {},\r\n            screenContainer: {},\r\n            formContainer: {\r\n                // Add top padding to the form so the top is below the header wave\r\n                paddingTop: LOGIN_HEADER_WAVE_HEIGHT,\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    }\r\n});\r\n\r\nexport const SigninScreen = withTheme(SigninScreenClass);\r\nexport const ForgotPasswordScreen = withTheme(ForgotPasswordScreenClass);\r\nexport const SignupScreen = withTheme(SignupScreenClass);\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type SemiHighlightedTextProps = {\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    text: string;\r\n    fontSize?: number;\r\n} & ThemeProps;\r\n\r\nclass SemiHighlightedText extends React.Component<SemiHighlightedTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, text, containerStyle, textStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fontSize = this.props.fontSize || 24;\r\n        const underlineHeight = fontSize * 0.55;\r\n        const underlineBottom = -1;\r\n        const underlineSides = fontSize * 0.4;\r\n\r\n        return (\r\n            <View style={[styles.textContainer, containerStyle]}>\r\n                <View style={[styles.underline, {height: underlineHeight, bottom: underlineBottom}]} />\r\n                <Text style={[styles.text, textStyle, {fontSize, paddingHorizontal: underlineSides}]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        textContainer: {\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontFamily: \"RalewaySemiBold\",\r\n            color: theme.accent,\r\n            zIndex: 2,\r\n\r\n            // Make it more readable with the dark theme\r\n            ...(theme.id === \"dark\"\r\n                ? {\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.6)\",\r\n                      textShadowOffset: {width: 0, height: 1},\r\n                      textShadowRadius: 1,\r\n                  }\r\n                : {}),\r\n        },\r\n        underline: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            backgroundColor: theme.accentTernary,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SemiHighlightedText);\r\n","import * as React from \"react\";\r\nimport {ImageProps, Image} from \"react-native\";\r\nimport {getLocalImage} from \"../assets\";\r\n\r\n// Component props\r\nexport type LocalImageProps = Partial<ImageProps> & {imageKey: string};\r\n\r\nclass LocalImage extends React.Component<LocalImageProps> {\r\n    render(): JSX.Element {\r\n        const {imageKey, ...otherProps} = this.props;\r\n        const img = getLocalImage(imageKey, () => this.forceUpdate());\r\n        return img ? <Image source={img} {...otherProps} /> : <></>;\r\n    }\r\n}\r\n\r\nexport default LocalImage;\r\n","import React from \"react\";\r\nimport {Linking, StyleProp, TouchableOpacity, TouchableOpacityProps, ViewStyle} from \"react-native\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport LocalImage from \"./LocalImage\";\r\n\r\ntype MobileStoreButtonProps = {\r\n    url: string;\r\n    store: \"ios\" | \"android\";\r\n    scale?: number;\r\n    width?: number;\r\n    linkStyle?: StyleProp<ViewStyle>;\r\n    linkProps?: TouchableOpacityProps;\r\n};\r\n\r\nconst DEFAULT_WIDTH = 204;\r\nconst DEFAULT_HEIGHT = 60;\r\n\r\nclass MobileStoreButton extends React.Component<MobileStoreButtonProps> {\r\n    render(): JSX.Element {\r\n        const {store, url, linkStyle, linkProps} = this.props;\r\n\r\n        const Svg = store === \"ios\" ? getLocalSvg(\"store-button.ios\", () => this.forceUpdate()) : null;\r\n        const scale = this.props.scale === undefined ? 1 : this.props.scale;\r\n        const width = this.props.width === undefined ? DEFAULT_WIDTH * scale : this.props.width * scale;\r\n        const height = (width * DEFAULT_HEIGHT) / DEFAULT_WIDTH;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[\r\n                    {\r\n                        overflow: \"hidden\",\r\n                        height,\r\n                        width,\r\n                        margin: 10,\r\n                    },\r\n                    linkProps ? linkProps.style : {},\r\n                    linkStyle,\r\n                ]}\r\n                activeOpacity={0.7}\r\n                onPress={() => {\r\n                    Linking.openURL(url);\r\n                }}\r\n                {...linkProps}\r\n            >\r\n                {store === \"android\" && (\r\n                    <LocalImage imageKey=\"store-button.android\" style={{width: \"100%\", height: \"100%\"}} />\r\n                )}\r\n                {store === \"ios\" && Svg && <Svg viewBox=\"0 0 133 40\" width={width} height={height} fill=\"black\" />}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MobileStoreButton;\r\n","import * as React from \"react\";\r\nimport {Dimensions, Platform, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SemiHighlightedText from \"../components/SemiHighlightedText\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport Button from \"../components/Button\";\r\nimport MobileStoreButton from \"../components/MobileStoreButton\";\r\n\r\nexport type WelcomeScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass WelcomeScreen extends React.Component<WelcomeScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const WelcomeImage = getLocalSvg(\"welcome\", () => this.forceUpdate());\r\n        const storeButtonWidth = Math.min(Dimensions.get(\"window\").width * 0.4, 200);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <View style={styles.imageAndTextContainer}>\r\n                        <View style={styles.imageContainer}>\r\n                            <WelcomeImage />\r\n                        </View>\r\n                        <View style={styles.textContainer}>\r\n                            <SemiHighlightedText text={i18n.t(\"appName\")} fontSize={32} textStyle={styles.appName} />\r\n                            <Text style={styles.subtitle}>{i18n.t(\"welcomeScreen.subtitle\")}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {Platform.OS === \"web\" && (\r\n                        <View style={styles.mobileStoresContainer}>\r\n                            <MobileStoreButton\r\n                                store=\"android\"\r\n                                url=\"https://play.google.com/store/apps/details?id=com.sea_eu.around\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                            <MobileStoreButton\r\n                                store=\"ios\"\r\n                                url=\"https://apps.apple.com/fr/app/sea-eu-around/id1543605955\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                    <View style={styles.actionsContainer}>\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signIn\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SigninScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-filled\"\r\n                        />\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signUp\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SignupScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-hollow\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"85%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageAndTextContainer: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageContainer: {\r\n            width: \"100%\",\r\n            height: 300,\r\n        },\r\n        textContainer: {\r\n            marginVertical: 20,\r\n        },\r\n        appName: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewayBold\",\r\n        },\r\n        subtitle: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            alignSelf: \"center\",\r\n            maxWidth: 250,\r\n            marginTop: 10,\r\n        },\r\n\r\n        mobileStoresContainer: {\r\n            flexDirection: \"row\",\r\n            marginVertical: 20,\r\n        },\r\n\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(WelcomeScreen);\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"../modals/CustomModal\";\r\nimport {BottomSheetProps} from \"./types\";\r\n\r\nexport class BottomSheetClass extends React.Component<BottomSheetProps> {\r\n    webModalRef = React.createRef<CustomModalClass>();\r\n    skipNextUpdate = false;\r\n\r\n    show(): void {\r\n        this.webModalRef.current?.show();\r\n    }\r\n\r\n    hide(): void {\r\n        this.webModalRef.current?.hide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, renderContent} = this.props;\r\n        const hide = () => this.hide();\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.webModalRef}\r\n                modalViewStyle={{paddingHorizontal: 0, paddingVertical: 0}}\r\n                renderContent={() => renderContent(hide)}\r\n                activator={activator}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BottomSheetClass);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, TouchableOpacityProps} from \"react-native\";\r\n\r\nexport default class BottomSheetTouchableOpacity extends React.Component<TouchableOpacityProps> {\r\n    render(): JSX.Element {\r\n        return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, StyleProp, ViewStyle, TextStyle} from \"react-native\";\r\nimport {ListItem, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport BottomSheet, {BottomSheetClass} from \"./bottom-sheet/BottomSheet\";\r\nimport BottomSheetTouchableOpacity from \"./bottom-sheet/BottomSheetTouchableOpacity\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ActionMenuItemPreset = \"close\";\r\n\r\nexport type ActionMenuItem = {\r\n    preset?: ActionMenuItemPreset;\r\n    text?: string;\r\n    icon?: (style: StyleProp<TextStyle>) => JSX.Element;\r\n    onSelect?: () => void;\r\n    persistMenu?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    noChevron?: boolean;\r\n};\r\n\r\nexport type ActionMenuProps = {\r\n    activator?: (show: () => void) => JSX.Element;\r\n    title?: string;\r\n    actions: ActionMenuItem[];\r\n    snapPoints?: number[];\r\n} & ThemeProps;\r\n\r\nconst ITEM_HEIGHT = 55;\r\n\r\nexport class ActionMenuClass extends React.Component<ActionMenuProps> {\r\n    sheetRef = React.createRef<BottomSheetClass>();\r\n\r\n    private getPreset(preset: ActionMenuItemPreset): ActionMenuItem {\r\n        const {theme} = this.props;\r\n\r\n        switch (preset) {\r\n            case \"close\": {\r\n                return {\r\n                    text: i18n.t(\"close\"),\r\n                    containerStyle: {backgroundColor: theme.cardBackground},\r\n                    textStyle: {color: theme.text},\r\n                    noChevron: true,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.sheetRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, activator, title, actions, snapPoints} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <BottomSheet\r\n                    ref={this.sheetRef}\r\n                    activator={activator}\r\n                    snapPoints={snapPoints || [0, (1 + actions.length) * ITEM_HEIGHT]}\r\n                    renderContent={(hide) => (\r\n                        <>\r\n                            {title && (\r\n                                <ListItem bottomDivider style={styles.listItemContainer}>\r\n                                    <ListItem.Content>\r\n                                        <ListItem.Title style={styles.titleItem}>{title}</ListItem.Title>\r\n                                    </ListItem.Content>\r\n                                </ListItem>\r\n                            )}\r\n                            {actions.map((item, i) => {\r\n                                const it = {\r\n                                    ...(item.preset ? this.getPreset(item.preset) : {}),\r\n                                    ...item,\r\n                                };\r\n                                return (\r\n                                    <BottomSheetTouchableOpacity\r\n                                        key={`menu-action-${i}`}\r\n                                        onPress={() => {\r\n                                            if (it.onSelect) it.onSelect();\r\n                                            if (!it.persistMenu) hide();\r\n                                        }}\r\n                                        style={styles.listItemWrapper}\r\n                                    >\r\n                                        <ListItem containerStyle={[styles.listItemContainer, it.containerStyle]}>\r\n                                            {!it.noChevron && <ListItem.Chevron />}\r\n                                            {it.icon && it.icon([it.textStyle, {fontSize: 26}])}\r\n                                            <ListItem.Content>\r\n                                                <ListItem.Title style={it.textStyle}>{it.text}</ListItem.Title>\r\n                                            </ListItem.Content>\r\n                                        </ListItem>\r\n                                    </BottomSheetTouchableOpacity>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        listItemWrapper: {\r\n            width: \"100%\",\r\n            height: ITEM_HEIGHT,\r\n        },\r\n        listItemContainer: {\r\n            width: \"100%\",\r\n            height: ITEM_HEIGHT,\r\n        },\r\n        titleItem: {\r\n            fontSize: 26,\r\n            color: themes.light.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ActionMenuClass);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {beginOnboarding, debugConnect} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu from \"./ActionMenu\";\r\n\r\nexport type DebugMenuProps = ThemeProps;\r\n\r\nclass DebugMenu extends React.Component<DebugMenuProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n\r\n        return (\r\n            <ActionMenu\r\n                title=\"Debug Menu\"\r\n                actions={[\r\n                    {\r\n                        text: \"Access MainScreen\",\r\n                        onSelect: () => rootNavigate(\"MainScreen\"),\r\n                    },\r\n                    {\r\n                        text: \"Access OnBoardingScreen\",\r\n                        onSelect: () => store.dispatch(beginOnboarding()),\r\n                    },\r\n                    {\r\n                        text: \"Automatically create profile\",\r\n                        onSelect: () => (store.dispatch as MyThunkDispatch)(debugConnect()),\r\n                    },\r\n                    {\r\n                        preset: \"close\",\r\n                    },\r\n                ]}\r\n                activator={(show) => (\r\n                    <TouchableOpacity\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            bottom: 10,\r\n                            right: 10,\r\n                            width: 36,\r\n                            height: 36,\r\n                            backgroundColor: theme.error,\r\n                            borderRadius: 20,\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                        onPress={show}\r\n                    >\r\n                        <FontAwesome name=\"gear\" color=\"white\" style={{fontSize: 26}} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DebugMenu);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type VersionInfoProps = ThemeProps;\r\n\r\nfunction VersionInfo(props: VersionInfoProps): JSX.Element {\r\n    const {theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <View style={styles.versionInfoContainer}>\r\n            <Text style={styles.versionText}>{APP_VERSION} </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight, fontSize: 12},\r\n        versionDisclaimerIcon: {color: theme.error, fontSize: 13},\r\n    });\r\n});\r\n\r\nexport default withTheme(VersionInfo);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {SigninScreen, SignupScreen, ForgotPasswordScreen} from \"../screens/LoginScreens\";\r\nimport {LoginRoot, LoginScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\nimport LoginHeader from \"../components/headers/LoginHeader\";\r\nimport DebugMenu from \"../components/DebugMenu\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport VersionInfo from \"../components/VersionInfo\";\r\n\r\nconst SigninRoot = createMaterialTopTabNavigator<LoginScreens>();\r\nconst Tab = createMaterialTopTabNavigator<LoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator swipeEnabled={false} tabBar={() => <></>}>\r\n        <Tab.Screen name=\"WelcomeScreen\" component={WelcomeScreen} options={{title: screenTitle(\"WelcomeScreen\")}} />\r\n        <Tab.Screen name=\"LoginScreens\">\r\n            {() => (\r\n                <>\r\n                    <LoginHeader />\r\n\r\n                    <SigninRoot.Navigator tabBar={() => <></>} initialRouteName=\"SigninScreen\" swipeEnabled={false}>\r\n                        <SigninRoot.Screen\r\n                            name=\"ForgotPasswordScreen\"\r\n                            component={ForgotPasswordScreen}\r\n                            options={{\r\n                                title: screenTitle(\"ForgotPasswordScreen\"),\r\n                            }}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SigninScreen\"\r\n                            component={SigninScreen}\r\n                            options={{title: screenTitle(\"SigninScreen\")}}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SignupScreen\"\r\n                            component={SignupScreen}\r\n                            options={{title: screenTitle(\"SignupScreen\")}}\r\n                        />\r\n                    </SigninRoot.Navigator>\r\n\r\n                    <VersionInfo />\r\n                    {DEBUG_MODE && <DebugMenu />}\r\n                </>\r\n            )}\r\n        </Tab.Screen>\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport {\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    Platform,\r\n    StyleProp,\r\n    Dimensions,\r\n    Text,\r\n    ViewProps,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable, {SwipeableProperties} from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Theses style elements are defined this way because they have to be set in very specific ways\r\nexport type SwipeableLooks = {\r\n    sideMargin: number;\r\n    borderRadius: number;\r\n    verticalSpacing: number;\r\n    minHeight: number;\r\n};\r\n\r\nconst DEFAULT_LOOKS: SwipeableLooks = {\r\n    sideMargin: 15,\r\n    borderRadius: 10,\r\n    verticalSpacing: 8,\r\n    minHeight: 150,\r\n};\r\n\r\n// Component props\r\nexport type SwipeableCardProps = ThemeProps &\r\n    SwipeableProperties & {\r\n        wrapperStyle?: StyleProp<ViewStyle>;\r\n        touchableStyle?: StyleProp<ViewStyle>;\r\n        style?: StyleProp<ViewStyle>;\r\n        onHidden?: () => void;\r\n        onPress?: () => void;\r\n        looks?: Partial<SwipeableLooks>;\r\n        leftActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        rightActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        wrapperProps?: ViewProps;\r\n    };\r\n\r\n// Component state\r\nexport type SwipeableCardState = {\r\n    minHeight: ReAnimated.Value<number>;\r\n    right: ReAnimated.Value<number>;\r\n    hidden: boolean;\r\n};\r\n\r\nexport class SwipeableCardClass extends React.Component<SwipeableCardProps, SwipeableCardState> {\r\n    swipeableRef = React.createRef<Swipeable>();\r\n    private hideTimeout: NodeJS.Timeout | null = null;\r\n\r\n    constructor(props: SwipeableCardProps) {\r\n        super(props);\r\n\r\n        const {minHeight} = {...DEFAULT_LOOKS, ...props.looks};\r\n\r\n        this.state = {\r\n            minHeight: new ReAnimated.Value(minHeight),\r\n            right: new ReAnimated.Value(0),\r\n            hidden: false,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n    }\r\n\r\n    hide(): void {\r\n        this.setState({...this.state, hidden: true});\r\n        if (this.props.onHidden) this.props.onHidden();\r\n    }\r\n\r\n    collapse(onFinish?: () => void, right?: boolean): void {\r\n        const duration = 200;\r\n        ReAnimated.timing(this.state.right, {\r\n            toValue: (right ? -1 : 1) * Dimensions.get(\"window\").width * 1.5,\r\n            duration,\r\n            easing: Easing.ease,\r\n        }).start();\r\n        this.hideTimeout = setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.hide();\r\n            this.hideTimeout = null;\r\n        }, duration);\r\n    }\r\n\r\n    resetSwipe(): void {\r\n        this.swipeableRef.current?.close();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            children,\r\n            leftActions,\r\n            rightActions,\r\n            wrapperStyle,\r\n            style,\r\n            looks,\r\n            onPress,\r\n            wrapperProps,\r\n            containerStyle,\r\n            touchableStyle,\r\n            ...swipeableProps\r\n        } = this.props;\r\n        const {minHeight, right, hidden} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n        const hideCard = (noAnimation?: boolean) => {\r\n            if (noAnimation) this.hide();\r\n            else this.collapse();\r\n        };\r\n\r\n        const container = (\r\n            <Swipeable\r\n                ref={this.swipeableRef}\r\n                containerStyle={[\r\n                    styles.swipeableContainer,\r\n                    containerStyle,\r\n                    {paddingHorizontal: sideMargin, paddingVertical: verticalSpacing},\r\n                ]}\r\n                childrenContainerStyle={[styles.swipeable, {borderRadius}, style]}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                renderLeftActions={leftActions ? () => leftActions(hideCard) : swipeableProps.renderLeftActions}\r\n                renderRightActions={rightActions ? () => rightActions(hideCard) : swipeableProps.renderRightActions}\r\n                {...swipeableProps}\r\n            >\r\n                <TouchableOpacity\r\n                    activeOpacity={0.75}\r\n                    style={[styles.touchable, touchableStyle]}\r\n                    {...(onPress ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </TouchableOpacity>\r\n            </Swipeable>\r\n        );\r\n\r\n        if (Platform.OS === \"web\") {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <View\r\n                    style={[\r\n                        styles.wrapper,\r\n                        wrapperStyle,\r\n                        {flexBasis: minHeight[\" __value\"], right: right[\" __value\"]},\r\n                        hidden ? {display: \"none\"} : {},\r\n                    ]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <ReAnimated.View\r\n                    style={[\r\n                        styles.wrapper,\r\n                        wrapperStyle,\r\n                        {flexBasis: minHeight, right},\r\n                        hidden ? {display: \"none\"} : {},\r\n                    ]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </ReAnimated.View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport type SwipeActionProps = {\r\n    icon?: string;\r\n    text?: string;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    onPress?: () => void;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst oneSidedBorderRadius = (side: \"left\" | \"right\", borderRadius: number) => {\r\n    return side === \"left\"\r\n        ? {borderTopLeftRadius: borderRadius, borderBottomLeftRadius: borderRadius}\r\n        : {borderTopRightRadius: borderRadius, borderBottomRightRadius: borderRadius};\r\n};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, text, backgroundColor, onPress, style, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n        const color = props.color || themes.dark.text;\r\n\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor}, style]}>\r\n                {icon && <MaterialIcons style={[styles.swipeActionButtonIcon, {color}]} name={icon} />}\r\n                {text && <Text style={[styles.swipeActionButtonText, {color}]}>{text}</Text>}\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionsProps = ThemeProps & {\r\n    id: string;\r\n    side: \"left\" | \"right\";\r\n    actions: SwipeActionProps[];\r\n    looks?: Partial<SwipeableLooks>;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const SwipeActionButtons = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionsProps>): JSX.Element => {\r\n        const {id, actions, side, looks, buttonStyle} = props;\r\n\r\n        const {borderRadius} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <SwipeActionContainer side={side} looks={looks} contentStyle={{aspectRatio: actions.length}}>\r\n                {actions.map((properties: SwipeActionProps, i: number) => {\r\n                    const first = i === 0;\r\n                    const last = i === actions.length - 1;\r\n                    const isExteriorButton = (first && side === \"left\") || (last && side === \"right\");\r\n                    const isInteriorButton = (first && side === \"right\") || (last && side === \"left\");\r\n                    const {backgroundColor} = properties;\r\n\r\n                    // Add a small view to fill the empty area created by the card's border radius\r\n                    const interiorFiller = isInteriorButton ? (\r\n                        <View\r\n                            style={{\r\n                                width: borderRadius,\r\n                                height: \"100%\",\r\n                                position: \"absolute\",\r\n                                top: 0,\r\n                                ...(side === \"left\" ? {right: -borderRadius} : {left: -borderRadius}),\r\n                                backgroundColor,\r\n                            }}\r\n                        />\r\n                    ) : undefined;\r\n\r\n                    return (\r\n                        <React.Fragment key={`swipe-actions-${id}-${side}-${i}`}>\r\n                            {isInteriorButton && interiorFiller}\r\n                            <SwipeActionButton\r\n                                style={[isExteriorButton ? oneSidedBorderRadius(side, borderRadius) : {}, buttonStyle]}\r\n                                {...properties}\r\n                            />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </SwipeActionContainer>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionContainerProps = ThemeProps & {\r\n    side: \"left\" | \"right\";\r\n    looks?: Partial<SwipeableLooks>;\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n    fullCardWidth?: boolean;\r\n};\r\n\r\nexport const SwipeActionContainer = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionContainerProps>): JSX.Element => {\r\n        const {side, looks, fullCardWidth, contentStyle, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    styles.swipeActionsContainer,\r\n                    {paddingVertical: verticalSpacing},\r\n                    side === \"left\"\r\n                        ? {\r\n                              marginLeft: sideMargin,\r\n                              marginRight: -sideMargin,\r\n                              justifyContent: \"flex-start\",\r\n                          }\r\n                        : {\r\n                              marginLeft: -sideMargin,\r\n                              marginRight: sideMargin,\r\n                              justifyContent: \"flex-end\",\r\n                          },\r\n                    fullCardWidth\r\n                        ? {\r\n                              width: \"100%\",\r\n                              marginHorizontal: sideMargin,\r\n                              ...(side === \"left\" ? {paddingRight: sideMargin * 2} : {paddingLeft: sideMargin * 2}),\r\n                          }\r\n                        : {},\r\n                ]}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.swipeActionsContent,\r\n                        fullCardWidth ? {borderRadius} : oneSidedBorderRadius(side, borderRadius),\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n    });\r\n});\r\n\r\nconst buttonStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        swipeActionsContainer: {\r\n            height: \"100%\",\r\n        },\r\n        swipeActionsContent: {\r\n            justifyContent: \"flex-start\",\r\n            flexDirection: \"row\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionButton: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            aspectRatio: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            fontSize: 22,\r\n        },\r\n        swipeActionButtonText: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SwipeableCardClass);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type PickerButtonStyleVariant = \"classic\" | \"onboarding\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        dropdownWrapper: {\r\n            width: \"100%\",\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\", height: \"100%\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n        },\r\n        chipContainer: {\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getPickerButtonStyleProps(\r\n    variant: PickerButtonStyleVariant = \"classic\",\r\n    theme: Theme,\r\n): {button: ViewStyle; text: TextStyle; textNoneSelected: TextStyle} {\r\n    if (variant === \"onboarding\") {\r\n        return {\r\n            button: {\r\n                width: \"100%\",\r\n                height: 48,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 20,\r\n                borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n                backgroundColor: theme.onboardingInputBackground,\r\n            },\r\n            text: {\r\n                fontSize: 14,\r\n                color: theme.text,\r\n            },\r\n            textNoneSelected: {\r\n                color: theme.textLight,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            button: {\r\n                width: \"100%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 20,\r\n                height: 40,\r\n                borderWidth: 1,\r\n                borderRadius: 2,\r\n                backgroundColor: theme.background,\r\n                borderColor: theme.componentBorder,\r\n            },\r\n            text: {\r\n                fontSize: 14,\r\n                color: theme.text,\r\n            },\r\n            textNoneSelected: {},\r\n        };\r\n    }\r\n}\r\n","export enum ReportType {\r\n    VIOLENCE = \"violence\",\r\n    NUDITY = \"nudity\",\r\n    HARASSMENT = \"harassment\",\r\n    UNDESIRABLE_CONTENT = \"undesirable-content\",\r\n    HATE_SPEECH = \"hate-speech\",\r\n    VULGAR_CONTENT = \"vulgar-content\",\r\n    OTHER = \"other\",\r\n}\r\n\r\nexport const REPORT_TYPES = [\r\n    ReportType.VIOLENCE,\r\n    ReportType.NUDITY,\r\n    ReportType.HARASSMENT,\r\n    ReportType.UNDESIRABLE_CONTENT,\r\n    ReportType.HATE_SPEECH,\r\n    ReportType.VULGAR_CONTENT,\r\n    ReportType.OTHER,\r\n];\r\n\r\nexport enum ReportEntityType {\r\n    PROFILE_ENTITY = \"ProfileEntity\",\r\n    POST_ENTITY = \"PostEntity\",\r\n    COMMENT_ENTITY = \"CommentEntity\",\r\n    GROUP_ENTITY = \"GroupEntity\",\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, ScrollView, TouchableOpacity, TextStyle, ViewStyle, StyleProp} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport type PopUpSelectorActivator = (show: () => void) => JSX.Element;\r\n\r\n// Component props\r\nexport type PopUpSelectorProps = ThemeProps & {\r\n    values: string[];\r\n    selected: string[];\r\n    label: (value: string, i: number) => string;\r\n    icon?: (value: string, i: number) => JSX.Element;\r\n    onSelect?: (selected: string[]) => void;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    noOkUnderline?: boolean;\r\n    placeholder?: string;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n    activator?: PopUpSelectorActivator;\r\n    TouchableComponent?: typeof React.Component;\r\n};\r\n\r\n// Component state\r\nexport type PopUpSelectorState = {\r\n    valueDict: {[key: string]: boolean};\r\n};\r\n\r\nclass PopUpSelector extends React.Component<PopUpSelectorProps, PopUpSelectorState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: PopUpSelectorProps) {\r\n        super(props);\r\n        this.state = {valueDict: {}};\r\n    }\r\n\r\n    private fromSelectedProp() {\r\n        const valueDict: {[key: string]: boolean} = {};\r\n        this.props.selected.forEach((v) => (valueDict[v] = true));\r\n        this.setState({...this.state, valueDict});\r\n    }\r\n\r\n    show(): void {\r\n        this.fromSelectedProp();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    hide(apply: boolean): void {\r\n        this.modalRef.current?.hide();\r\n        if (apply) this.apply();\r\n        else this.fromSelectedProp();\r\n    }\r\n\r\n    toggleValue(v: string) {\r\n        const dict = this.state.valueDict;\r\n        const newValue = !dict[v];\r\n\r\n        if (this.props.multiple) {\r\n            this.setState({...this.state, valueDict: {...dict, [v]: newValue}});\r\n        } else {\r\n            this.setState({...this.state, valueDict: {[v]: newValue}}, () => {\r\n                if (newValue) this.hide(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        const {onSelect} = this.props;\r\n        const valueDict = this.state.valueDict;\r\n        if (onSelect) {\r\n            const selected = Object.keys(valueDict).filter((val: string) => valueDict[val]);\r\n            onSelect(selected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            values,\r\n            selected,\r\n            label,\r\n            icon,\r\n            multiple,\r\n            atLeastOne,\r\n            noOkUnderline,\r\n            placeholder,\r\n            buttonStyle,\r\n            valueStyle,\r\n            buttonStyleVariant,\r\n            activator,\r\n            theme,\r\n        } = this.props;\r\n        const {valueDict} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const pstyles = pickerStyles(theme);\r\n        const buttonStyleProps = getPickerButtonStyleProps(buttonStyleVariant, theme);\r\n\r\n        const TouchableComponent = this.props.TouchableComponent || TouchableOpacity;\r\n\r\n        return (\r\n            <>\r\n                {activator !== undefined && activator(() => this.show())}\r\n                {!activator && (\r\n                    <TouchableComponent\r\n                        style={[\r\n                            buttonStyleProps.button,\r\n                            selected.length > 0 && !noOkUnderline ? styles.buttonOk : {},\r\n                            buttonStyle,\r\n                        ]}\r\n                        onPress={() => this.show()}\r\n                    >\r\n                        {selected.length === 0 && (\r\n                            <Text\r\n                                style={[buttonStyleProps.text, buttonStyleProps.textNoneSelected, valueStyle]}\r\n                                numberOfLines={2}\r\n                            >\r\n                                {placeholder}\r\n                            </Text>\r\n                        )}\r\n                        {selected.length > 0 && (\r\n                            <Text style={[buttonStyleProps.text, valueStyle]} numberOfLines={2}>\r\n                                {selected.map(label).join(\", \")}\r\n                            </Text>\r\n                        )}\r\n                    </TouchableComponent>\r\n                )}\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    modalViewStyle={{width: \"100%\", paddingHorizontal: 0, paddingVertical: 0}}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContent}>\r\n                                {values.map((v: string, index: number) => (\r\n                                    <TouchableOpacity\r\n                                        key={`popup-selector-row-${v}`}\r\n                                        style={styles.rowContainer}\r\n                                        onPress={() => this.toggleValue(v)}\r\n                                        activeOpacity={0.5}\r\n                                    >\r\n                                        {icon && icon(v, index)}\r\n                                        <Text style={styles.label}>{label(v, index)}</Text>\r\n                                        <CheckBox\r\n                                            checked={valueDict[v]}\r\n                                            containerStyle={styles.checkboxContainer}\r\n                                            wrapperStyle={styles.checkboxWrapper}\r\n                                            onPress={() => this.toggleValue(v)}\r\n                                            size={26}\r\n                                            {...(multiple\r\n                                                ? {}\r\n                                                : {checkedIcon: \"check-circle\", uncheckedIcon: \"circle-o\"})}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </ScrollView>\r\n                            {multiple && (!atLeastOne || Object.values(valueDict).some((v) => v === true)) && (\r\n                                <TouchableOpacity\r\n                                    onPress={() => this.hide(true)}\r\n                                    style={[pstyles.okButton, {width: \"100%\"}]}\r\n                                >\r\n                                    <Text style={pstyles.okButtonText}>{i18n.t(\"ok\")}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            width: \"100%\",\r\n            paddingVertical: 2,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        label: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            flexGrow: 1,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginRight: 0,\r\n        },\r\n        checkboxWrapper: {\r\n            padding: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PopUpSelector);\r\n","import {AppThunk} from \"../types\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ReportEntityType, ReportType} from \"../../constants/reports\";\r\n\r\nexport enum REPORT_ACTION_TYPES {\r\n    REPORT_ENTITY_SUCCESS = \"REPORTS/REPORT_ENTITY_SUCCESS\",\r\n    REPORT_ENTITY_FAILURE = \"REPORTS/REPORT_ENTITY_FAILURE\",\r\n}\r\n\r\nexport type ReportEntitySuccessAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportEntityFailureAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportAction = ReportEntitySuccessAction | ReportEntityFailureAction;\r\n\r\nconst reportEntitySuccess = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntitySuccessAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_SUCCESS,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nconst reportEntityFailure = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntityFailureAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_FAILURE,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nexport const reportEntity = (\r\n    type: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"reports\", \"POST\", {}, {type, entityType, entityId}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(reportEntitySuccess(type, entityType, entityId));\r\n        return true;\r\n    } else {\r\n        dispatch(reportEntityFailure(type, entityType, entityId));\r\n        return false;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Text, Platform} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport FormSubmitButton from \"../forms/FormSubmitButton\";\r\nimport {Icon} from \"expo\";\r\nimport Button from \"../Button\";\r\nimport BottomSheet, {BottomSheetClass} from \"../bottom-sheet/BottomSheet\";\r\nimport BottomSheetTouchableOpacity from \"../bottom-sheet/BottomSheetTouchableOpacity\";\r\n\r\nexport type QuickFormProps = ThemeProps & {\r\n    activator?: (open: () => void) => JSX.Element;\r\n    submit: () => Promise<boolean>;\r\n    hideSubmit?: boolean;\r\n    title?: string;\r\n    titleIcon?: {component: Icon<string, unknown>; name: string};\r\n    confirmationTitle: string;\r\n    confirmationText: string;\r\n    failureTitle?: string;\r\n    failureText?: string;\r\n    submitText: string;\r\n    sheetHeight?: number;\r\n};\r\n\r\ntype QuickFormState = {\r\n    confirmationOpen: boolean;\r\n    failureOpen: boolean;\r\n    submitting: boolean;\r\n};\r\n\r\nexport class QuickFormClass extends React.Component<QuickFormProps, QuickFormState> {\r\n    sheetRef = React.createRef<BottomSheetClass>();\r\n\r\n    constructor(props: QuickFormProps) {\r\n        super(props);\r\n        this.state = {confirmationOpen: false, failureOpen: false, submitting: false};\r\n    }\r\n\r\n    open(): void {\r\n        this.sheetRef.current?.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.sheetRef.current?.hide();\r\n    }\r\n\r\n    submit(): void {\r\n        const {submit} = this.props;\r\n\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        submit().then((success: boolean) => {\r\n            if (success) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    confirmationOpen: true,\r\n                    failureOpen: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    confirmationOpen: false,\r\n                    failureOpen: true,\r\n                });\r\n            }\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            activator,\r\n            hideSubmit,\r\n            title,\r\n            titleIcon,\r\n            submitText,\r\n            confirmationTitle,\r\n            confirmationText,\r\n            failureTitle,\r\n            failureText,\r\n            theme,\r\n            sheetHeight,\r\n            children,\r\n        } = this.props;\r\n        const {confirmationOpen, failureOpen, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {activator && activator(() => this.open())}\r\n                <BottomSheet\r\n                    ref={this.sheetRef}\r\n                    snapPoints={[0, sheetHeight === undefined ? 300 : sheetHeight]}\r\n                    renderContent={(hide) => (\r\n                        <View style={styles.wrapperSheet}>\r\n                            <View style={styles.containerSheet}>\r\n                                {(title || titleIcon) && (\r\n                                    <View style={styles.titleContainer}>\r\n                                        {titleIcon && (\r\n                                            <titleIcon.component\r\n                                                name={titleIcon.name}\r\n                                                style={[styles.title, styles.titleIcon]}\r\n                                            />\r\n                                        )}\r\n                                        {title && <Text style={styles.title}>{title}</Text>}\r\n                                    </View>\r\n                                )}\r\n                                {children}\r\n                                {!hideSubmit && (\r\n                                    <FormSubmitButton\r\n                                        text={submitText}\r\n                                        submitting={submitting}\r\n                                        onPress={() => this.submit()}\r\n                                        skin=\"rounded-filled\"\r\n                                        style={styles.actionButton}\r\n                                        textStyle={styles.actionButtonText}\r\n                                        TouchableComponent={BottomSheetTouchableOpacity}\r\n                                    />\r\n                                )}\r\n                                <Button\r\n                                    text={i18n.t(\"cancel\")}\r\n                                    onPress={hide}\r\n                                    skin=\"rounded-hollow\"\r\n                                    style={styles.actionButton}\r\n                                    textStyle={styles.actionButtonText}\r\n                                    TouchableComponent={BottomSheetTouchableOpacity}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                />\r\n                <CustomModal\r\n                    visible={confirmationOpen}\r\n                    onHide={() => this.setState({...this.state, confirmationOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{confirmationTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{confirmationText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, confirmationOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n                <CustomModal\r\n                    visible={failureOpen}\r\n                    onHide={() => this.setState({...this.state, failureOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{failureTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{failureText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, failureOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapperSheet: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            padding: Platform.OS === \"web\" ? 20 : 0,\r\n        },\r\n        containerSheet: {\r\n            width: \"90%\",\r\n        },\r\n        containerModal: {\r\n            width: \"100%\",\r\n        },\r\n\r\n        // Title\r\n        titleContainer: {\r\n            flexDirection: \"row\",\r\n            marginBottom: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        titleIcon: {\r\n            marginRight: 5,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n\r\n        // Actions\r\n        actionButton: {\r\n            height: 44,\r\n            marginVertical: 0,\r\n            marginTop: 15,\r\n        },\r\n        actionButtonText: {\r\n            fontSize: 16,\r\n        },\r\n\r\n        feedbackModal: {\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 20,\r\n        },\r\n        feedbackTitle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n            marginBottom: 15,\r\n        },\r\n        feedbackText: {\r\n            fontSize: 15,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormClass);\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport PopUpSelector from \"../PopUpSelector\";\r\nimport {ReportEntityType, ReportType, REPORT_TYPES} from \"../../constants/reports\";\r\nimport InputLabel from \"../InputLabel\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport store from \"../../state/store\";\r\nimport {reportEntity} from \"../../state/reports/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport QuickForm, {QuickFormClass} from \"./QuickForm\";\r\nimport {Group, GroupPost, PostComment} from \"../../model/groups\";\r\nimport BottomSheetTouchableOpacity from \"../bottom-sheet/BottomSheetTouchableOpacity\";\r\n\r\nexport type QuickFormReportProps = ThemeProps & {\r\n    entityType: ReportEntityType;\r\n    entity: unknown;\r\n    activator?: (open: () => void) => JSX.Element;\r\n    onSubmit?: (success: boolean) => void;\r\n};\r\n\r\ntype QuickFormReportState = {\r\n    selectedType: ReportType | null;\r\n};\r\n\r\nexport class QuickFormReportClass extends React.Component<QuickFormReportProps, QuickFormReportState> {\r\n    quickFormRef = React.createRef<QuickFormClass>();\r\n\r\n    constructor(props: QuickFormReportProps) {\r\n        super(props);\r\n        this.state = {selectedType: null};\r\n    }\r\n\r\n    private getEntityInfo(): {id: string; name: string} | null {\r\n        const {entityType, entity} = this.props;\r\n\r\n        if (!entity) return null;\r\n\r\n        switch (entityType) {\r\n            case ReportEntityType.PROFILE_ENTITY: {\r\n                if ((entity as ChatRoomUser)._id) {\r\n                    const u = entity as ChatRoomUser;\r\n                    return {name: u.name, id: u._id};\r\n                } else {\r\n                    const p = entity as UserProfile;\r\n                    return {name: `${p.firstName} ${p.lastName}`, id: p.id};\r\n                }\r\n            }\r\n            case ReportEntityType.POST_ENTITY: {\r\n                const post = entity as GroupPost;\r\n                const {firstName, lastName} = post.creator;\r\n                return {name: i18n.t(\"report.postFrom\", {name: `${firstName} ${lastName}`}), id: post.id};\r\n            }\r\n            case ReportEntityType.COMMENT_ENTITY: {\r\n                const comment = entity as PostComment;\r\n                const {firstName, lastName} = comment.creator;\r\n                return {name: i18n.t(\"report.commentFrom\", {name: `${firstName} ${lastName}`}), id: comment.id};\r\n            }\r\n            case ReportEntityType.GROUP_ENTITY: {\r\n                const group = entity as Group;\r\n                return {name: i18n.t(\"report.group\", {name: group.name}), id: group.id};\r\n            }\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    open(): void {\r\n        this.quickFormRef.current?.open();\r\n    }\r\n\r\n    close(): void {\r\n        this.quickFormRef.current?.close();\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        const {entityType, onSubmit} = this.props;\r\n        const {selectedType} = this.state;\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        let success = false;\r\n        if (selectedType && info)\r\n            success = await (store.dispatch as MyThunkDispatch)(reportEntity(selectedType, entityType, info.id));\r\n\r\n        if (onSubmit) onSubmit(success);\r\n        return success;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, theme} = this.props;\r\n        const {selectedType} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        return (\r\n            <>\r\n                <QuickForm\r\n                    activator={activator}\r\n                    ref={this.quickFormRef}\r\n                    submit={() => this.submit()}\r\n                    titleIcon={{component: MaterialIcons, name: \"report\"}}\r\n                    title={i18n.t(\"report.title\")}\r\n                    submitText={i18n.t(\"report.send\")}\r\n                    confirmationTitle={i18n.t(\"report.confirmationTitle\")}\r\n                    confirmationText={i18n.t(\"report.confirmation\")}\r\n                    failureTitle={i18n.t(\"report.failureTitle\")}\r\n                    failureText={i18n.t(\"report.failure\")}\r\n                    hideSubmit={!selectedType}\r\n                    sheetHeight={330}\r\n                >\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.what\")}</InputLabel>\r\n                        <Text style={styles.what}>{info ? info.name : \"unknown\"}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.why\")}</InputLabel>\r\n                        <PopUpSelector\r\n                            values={REPORT_TYPES}\r\n                            label={(t: string) => i18n.t(`report.types.${t}`)}\r\n                            placeholder={i18n.t(\"report.typePlaceholder\")}\r\n                            selected={selectedType ? [selectedType] : []}\r\n                            valueStyle={styles.selectorValue}\r\n                            //buttonStyle={[styles.button, buttonStyle]}\r\n                            onSelect={(values: string[]) => {\r\n                                if (values.length > 0)\r\n                                    this.setState({...this.state, selectedType: values[0] as ReportType});\r\n                            }}\r\n                            buttonStyleVariant=\"onboarding\"\r\n                            TouchableComponent={BottomSheetTouchableOpacity}\r\n                        />\r\n                    </View>\r\n                </QuickForm>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputItem: {\r\n            marginBottom: 20,\r\n        },\r\n        what: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"right\",\r\n        },\r\n        selectorValue: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormReportClass);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, ImageSourcePropType, View} from \"react-native\";\r\nimport {Avatar, AvatarProps} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type GeneralAvatarProps = {\r\n    name?: string;\r\n    source?: ImageSourcePropType;\r\n    loading?: boolean;\r\n} & AvatarProps;\r\n\r\nclass GeneralAvatar extends React.Component<GeneralAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, name, source, loading, ...avatarProps} = this.props;\r\n\r\n        return (\r\n            <Avatar {...avatarProps} title={name} source={source}>\r\n                {children}\r\n                {loading && (\r\n                    <View style={{position: \"absolute\", left: \"50%\", top: \"50%\"}}>\r\n                        <ActivityIndicator size={40} color=\"white\" style={{right: 20, bottom: 20}} />\r\n                    </View>\r\n                )}\r\n            </Avatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralAvatar;\r\n","import * as React from \"react\";\r\nimport {AvatarProps} from \"react-native-elements\";\r\nimport {ChatRoomUser} from \"../model/chat-room\";\r\nimport GeneralAvatar from \"./GeneralAvatar\";\r\n\r\n// Component props\r\nexport type ChatUserAvatarProps = {user?: ChatRoomUser} & AvatarProps;\r\n\r\nclass ChatUserAvatar extends React.Component<ChatUserAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, user, ...avatarProps} = this.props;\r\n\r\n        let name = undefined;\r\n\r\n        // Extract initials\r\n        if (user) {\r\n            const split = user.name.split(\" \");\r\n            name = split[0][0];\r\n            if (split.length > 0) name += split[1][0];\r\n            name = name.toUpperCase();\r\n        }\r\n\r\n        const sourceProp = user && user.avatar.length > 0 ? {source: {uri: user.avatar}} : {};\r\n\r\n        return (\r\n            <GeneralAvatar {...avatarProps} name={name} {...sourceProp}>\r\n                {children}\r\n            </GeneralAvatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatUserAvatar;\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {openChat} from \"../../navigation/utils\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport i18n from \"i18n-js\";\r\nimport ChatUserAvatar from \"../ChatUserAvatar\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localChatUser: state.messaging.localChatUser,\r\n}));\r\n\r\n// Component props\r\nexport type ChatRoomCardProps = {\r\n    room: ChatRoom;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 5,\r\n    borderRadius: 10,\r\n    minHeight: 75,\r\n};\r\n\r\nclass ChatRoomCard extends React.Component<ChatRoomCardProps> {\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {theme} = this.props;\r\n\r\n        return [\r\n            // TODO implement chat mute\r\n            /*{\r\n                icon: \"notifications-off\",\r\n                backgroundColor: \"#ccc\",\r\n            },*/\r\n            {\r\n                icon: \"report\",\r\n                backgroundColor: theme.error,\r\n                onPress: () => this.reportFormRef.current?.open(),\r\n            },\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {theme, room, onPress, localChatUser} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = room.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const user = room.users.filter((p: ChatRoomUser) => p._id !== localChatUser?._id)[0];\r\n\r\n        let lastMessageComponent = <></>;\r\n\r\n        if (room.lastMessage) {\r\n            const date = room.lastMessage.createdAt;\r\n            const isFromLocal = localUser && room.lastMessage.user._id === localUser._id;\r\n            const isRead =\r\n                isFromLocal ||\r\n                (localUser &&\r\n                    localUser.lastMessageSeenDate &&\r\n                    (localUser.lastMessageSeenDate >= date || localUser.lastMessageSeenId == room.lastMessage._id));\r\n            const pad = (num: number) => (num + \"\").padStart(2, \"0\");\r\n            lastMessageComponent = (\r\n                <>\r\n                    <Text style={[styles.lastMessageText, isRead ? {} : styles.lastMessageTextNew]} numberOfLines={1}>\r\n                        {room.lastMessage.user.name.split(\" \")[0]}: {room.lastMessage.text}\r\n                    </Text>\r\n                    <Text style={styles.lastMessageTime}>\r\n                        {pad(date.getHours())}:{pad(date.getMinutes())}\r\n                    </Text>\r\n                </>\r\n            );\r\n        } else {\r\n            lastMessageComponent = (\r\n                <Text style={styles.noMessageText} numberOfLines={1}>\r\n                    {room.users.length === 2 ? i18n.t(\"messaging.sayHiTo\", {name: user.name}) : i18n.t(\"sayHi\")}\r\n                </Text>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.swipeableCardRef}\r\n                looks={LOOKS}\r\n                rightThreshold={100}\r\n                overshootRight={false}\r\n                rightActions={(hideCard) => (\r\n                    <SwipeActionButtons\r\n                        id={`room-${room.id}`}\r\n                        looks={LOOKS}\r\n                        side=\"right\"\r\n                        actions={this.getActions(hideCard)}\r\n                    />\r\n                )}\r\n                onPress={() => {\r\n                    if (onPress) onPress();\r\n                    openChat(room.id);\r\n                }}\r\n            >\r\n                <View style={styles.cardContent}>\r\n                    <ChatUserAvatar containerStyle={styles.avatarContainer} user={user} size={45} rounded />\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{user.name}</Text>\r\n                        <View style={styles.lastMessage}>{lastMessageComponent}</View>\r\n                    </View>\r\n                </View>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={user}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        lastMessage: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n        },\r\n        noMessageText: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageText: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageTextNew: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        lastMessageTime: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomCard));\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport {AppState} from \"../../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\nexport type LocaleAwareProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>> & {\r\n    onLocaleChange?: (locale: SupportedLocale) => void;\r\n};\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass LocaleAware extends React.Component<LocaleAwareProps> {\r\n    componentDidUpdate(oldProps: LocaleAwareProps) {\r\n        const {locale, onLocaleChange} = this.props;\r\n        if (oldProps.locale !== locale) {\r\n            if (onLocaleChange) onLocaleChange(locale);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {children} = this.props;\r\n        return <>{children}</>;\r\n    }\r\n}\r\n\r\nexport default reduxConnector(LocaleAware);\r\n","import * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleProp,\r\n    StyleSheet,\r\n    View,\r\n    ViewStyle,\r\n} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport LocaleAware from \"./utility/LocaleAware\";\r\n\r\n// Component props\r\nexport type InfiniteScrollerProps<T> = {\r\n    items: T[];\r\n    id: (item: T) => string;\r\n    fetchMore: () => void;\r\n    refresh: () => void;\r\n    fetching: boolean;\r\n    canFetchMore: boolean;\r\n    fetchLimit: number;\r\n    renderItem: (item: T, hide: () => void) => JSX.Element;\r\n    noResultsComponent: JSX.Element;\r\n    endOfItemsComponent?: JSX.Element;\r\n    currentPage: number;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    navigation: {isFocused: () => boolean; addListener: (k: any, l: () => void) => void};\r\n    itemsContainerStyle?: StyleProp<ViewStyle>;\r\n    progressViewOffset?: number;\r\n    refreshOnFocus?: boolean;\r\n    horizontal?: boolean;\r\n    hideScrollIndicator?: boolean;\r\n    top?: JSX.Element;\r\n    keyboardShouldPersistTaps?: \"always\" | \"never\" | \"handled\";\r\n    onScroll?: OnScroll;\r\n};\r\n\r\nexport type OnScroll = (distanceToStart: number, distanceToEnd: number) => void;\r\n\r\n// Component state\r\ntype InfiniteScrollerState = {\r\n    hiddenIds: {[key: string]: boolean};\r\n};\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 150; //50;\r\n\r\nexport default class InfiniteScroller<T> extends React.Component<InfiniteScrollerProps<T>, InfiniteScrollerState> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n    scrollListenerEnabled = false;\r\n\r\n    constructor(props: InfiniteScrollerProps<T>) {\r\n        super(props);\r\n        this.state = {hiddenIds: {}};\r\n    }\r\n\r\n    fetchMore(): void {\r\n        const {fetching, canFetchMore, fetchMore, navigation} = this.props;\r\n        if (!fetching && canFetchMore && navigation.isFocused()) fetchMore();\r\n    }\r\n\r\n    getShownItems(): T[] {\r\n        const {items, id} = this.props;\r\n        return items.filter((it) => !this.state.hiddenIds[id(it)]);\r\n    }\r\n\r\n    hideItem(item: T): void {\r\n        const {fetchLimit, canFetchMore, id} = this.props;\r\n        this.setState({...this.state, hiddenIds: {...this.state.hiddenIds, [id(item)]: true}});\r\n        if (this.getShownItems().length < fetchLimit && canFetchMore) this.fetchMore();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        navigation.addListener(\"focus\", () => this.onFocus());\r\n        navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus(): void {\r\n        this.scrollListenerEnabled = true;\r\n\r\n        const {items, fetchLimit, fetching, refreshOnFocus, currentPage, refresh, id} = this.props;\r\n        const shown = items.filter((it) => !this.state.hiddenIds[id(it)]).length;\r\n\r\n        if (refreshOnFocus) {\r\n            // Fetch items if currentPage is 1 (because this won't be caught by 'justRefreshed' in componentDidUpdate)\r\n            if (currentPage === 1) this.fetchMore();\r\n            else refresh(); // We don't refresh if the current page is 1 because that means we haven't fetched anything yet\r\n        } else if (shown < fetchLimit && !fetching) this.fetchMore();\r\n    }\r\n\r\n    onBlur(): void {\r\n        this.scrollListenerEnabled = false;\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InfiniteScrollerProps<T>): void {\r\n        const {fetchLimit, currentPage, navigation} = this.props;\r\n\r\n        const justRefreshed = oldProps.currentPage > 1 && currentPage === 1;\r\n\r\n        if (navigation.isFocused()) {\r\n            const moreIfNeeded = () => this.getShownItems().length < fetchLimit && this.fetchMore();\r\n            // Reset the hidden profiles when the user purposedly refreshes\r\n            if (justRefreshed) this.setState({...this.state, hiddenIds: {}}, moreIfNeeded);\r\n            else moreIfNeeded();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            items,\r\n            fetching,\r\n            canFetchMore,\r\n            currentPage,\r\n            refresh,\r\n            renderItem,\r\n            noResultsComponent,\r\n            endOfItemsComponent,\r\n            itemsContainerStyle,\r\n            progressViewOffset,\r\n            horizontal,\r\n            hideScrollIndicator,\r\n            top,\r\n            keyboardShouldPersistTaps,\r\n            onScroll,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <ThemeConsumer>\r\n                    {({theme}: ThemeProps) => {\r\n                        const styles = themedStyles(theme);\r\n                        return (\r\n                            <ScrollView\r\n                                ref={this.scrollViewRef}\r\n                                style={styles.scroller}\r\n                                refreshControl={\r\n                                    <RefreshControl\r\n                                        progressViewOffset={progressViewOffset}\r\n                                        refreshing={fetching}\r\n                                        onRefresh={() => {\r\n                                            if (!fetching) refresh();\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                                    if (this.scrollListenerEnabled) {\r\n                                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                                        const distanceToStart = horizontal ? contentOffset.x : contentOffset.y;\r\n                                        const distanceToEnd = horizontal\r\n                                            ? contentSize.width - contentOffset.x - layoutMeasurement.width\r\n                                            : contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                                        if (distanceToEnd < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n\r\n                                        if (onScroll) onScroll(distanceToStart, distanceToEnd);\r\n                                    }\r\n                                }}\r\n                                horizontal={horizontal}\r\n                                // horizontal centering of noResultsContainer and loading indicator\r\n                                contentContainerStyle={horizontal && items.length == 0 && {width: \"100%\"}}\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                {...(horizontal && {showsHorizontalScrollIndicator: !hideScrollIndicator})}\r\n                                {...(!horizontal && {showsVerticalScrollIndicator: !hideScrollIndicator})}\r\n                            >\r\n                                {top}\r\n                                <View\r\n                                    style={[\r\n                                        {flexDirection: horizontal ? \"row\" : \"column\"},\r\n                                        // horizontal centering of noResultsContainer and loading indicator\r\n                                        horizontal && {width: \"100%\"},\r\n                                        itemsContainerStyle,\r\n                                    ]}\r\n                                >\r\n                                    {this.getShownItems().map((it: T) => renderItem(it, () => this.hideItem(it)))}\r\n                                    {!fetching && items.length > 0 && !canFetchMore && (\r\n                                        <View style={styles.endOfItemsContainer}>{endOfItemsComponent}</View>\r\n                                    )}\r\n                                    {!fetching && items.length == 0 && (\r\n                                        <View style={styles.noResultsContainer}>{noResultsComponent}</View>\r\n                                    )}\r\n                                    <View style={styles.loadingIndicatorContainer}>\r\n                                        {fetching && currentPage > 1 && items.length > 0 && (\r\n                                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                                        )}\r\n                                    </View>\r\n                                </View>\r\n                            </ScrollView>\r\n                        );\r\n                    }}\r\n                </ThemeConsumer>\r\n                <LocaleAware onLocaleChange={() => this.props.refresh()} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((/*theme: Theme*/) => {\r\n    return StyleSheet.create({\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginTop: 10,\r\n            marginBottom: 20, // compensate for bottom tab bar\r\n            height: 50,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            marginTop: 15,\r\n        },\r\n        endOfItemsContainer: {\r\n            marginTop: 15,\r\n            alignItems: \"center\",\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMatchRooms, refreshMatchRooms} from \"../../state/messaging/actions\";\r\nimport ChatRoomCard from \"../../components/cards/ChatRoomCard\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {TabMessagingRoot} from \"../../navigation/types\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    roomIds: state.messaging.matchRoomsOrdered,\r\n    fetchingRooms: state.messaging.matchRoomsPagination.fetching,\r\n    canFetchMore: state.messaging.matchRoomsPagination.canFetchMore,\r\n    currentPage: state.messaging.matchRoomsPagination.page,\r\n}));\r\n\r\ntype ChatRoomsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<TabMessagingRoot>;\r\n\r\nclass ChatRoomsScreen extends React.Component<ChatRoomsScreenProps> {\r\n    private fetchMore(): void {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, rooms, roomIds, fetchingRooms, canFetchMore, currentPage, navigation, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={ROOMS_FETCH_LIMIT}\r\n                    fetchMore={() => this.fetchMore()}\r\n                    fetching={fetchingRooms}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    refreshOnFocus\r\n                    refresh={() => (dispatch as MyThunkDispatch)(refreshMatchRooms())}\r\n                    items={roomIds}\r\n                    id={(roomId: string): string => roomId}\r\n                    noResultsComponent={<Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>}\r\n                    renderItem={(roomId: string) => (\r\n                        <ChatRoomCard key={`chat-room-card-${roomId}`} room={rooms[roomId]} />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n            paddingHorizontal: 50,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomsScreen));\r\n","import * as React from \"react\";\r\nimport {AvatarProps} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport GeneralAvatar from \"./GeneralAvatar\";\r\n\r\n// Component props\r\nexport type ProfileAvatarProps = {profile?: UserProfile; loading?: boolean} & AvatarProps;\r\n\r\nclass ProfileAvatar extends React.Component<ProfileAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, profile, loading, ...avatarProps} = this.props;\r\n\r\n        const name = profile ? (profile.firstName[0] + profile.lastName[0]).toUpperCase() : undefined;\r\n        const sourceProp = profile && profile.avatarUrl ? {source: {uri: profile.avatarUrl}} : {};\r\n\r\n        return (\r\n            <GeneralAvatar {...avatarProps} name={name} {...sourceProp} loading={loading}>\r\n                {children}\r\n            </GeneralAvatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport const headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            backgroundColor: theme.background,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            height: 90,\r\n            paddingBottom: 5,\r\n        },\r\n        wrapperBlur: {\r\n            backgroundColor: \"transparent\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        wrapperNoShadow: {\r\n            shadowColor: \"transparent\",\r\n            elevation: 0,\r\n        },\r\n        backButton: {\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 5,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        backButtonIcon: {\r\n            fontSize: 28,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        avatarTitle: {\r\n            color: themes.dark.text,\r\n        },\r\n        titleContainer: {\r\n            flex: 1,\r\n        },\r\n        title: {\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            fontSize: 20,\r\n        },\r\n        rightButton: {\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 50,\r\n            marginLeft: 8,\r\n        },\r\n        rightIcon: {\r\n            fontSize: 22,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {headerTitle, navigateBackOr, rootNavigate} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {BlurProps, BlurView} from \"expo-blur\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {NavigationContainerRef, Route} from \"@react-navigation/native\";\r\nimport {BLUR_HEADER_INTENSITY} from \"../../styles/general\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\nexport type HeaderButtonProps = {\r\n    buttonStyle: StyleProp<ViewStyle>;\r\n    iconStyle: StyleProp<TextStyle>;\r\n};\r\n\r\ntype AdditionalProps = {\r\n    rightButtons?: ((props: HeaderButtonProps) => JSX.Element)[];\r\n    backButton?: boolean;\r\n    noAvatar?: boolean;\r\n    noShadow?: boolean;\r\n    noSettingsButton?: boolean;\r\n    blur?: boolean;\r\n    overrideAvatar?: JSX.Element;\r\n    overrideTitle?: string;\r\n    onPressTitle?: () => void;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    titleContainerStyle?: StyleProp<ViewStyle>;\r\n    titleStyle?: StyleProp<TextStyle>;\r\n    color?: string;\r\n    buttonBackgroundColor?: string;\r\n    navigateBackFallback?: (nav: NavigationContainerRef) => void;\r\n};\r\n\r\nexport type MainHeaderStackProps = Partial<StackHeaderProps> & {route?: Route<string, undefined>};\r\n\r\n// Component props\r\nexport type MainHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps & {insets: EdgeInsets} & MainHeaderStackProps &\r\n    AdditionalProps;\r\n\r\nclass MainHeaderClass extends React.Component<MainHeaderProps> {\r\n    back(): void {\r\n        navigateBackOr(this.props.navigateBackFallback || ((nav) => nav.navigate(\"MainScreen\")));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets,\r\n            user,\r\n            rightButtons,\r\n            backButton,\r\n            noAvatar,\r\n            noShadow,\r\n            noSettingsButton,\r\n            blur,\r\n            overrideAvatar,\r\n            overrideTitle,\r\n            onPressTitle,\r\n            wrapperStyle,\r\n            titleContainerStyle,\r\n            titleStyle,\r\n            color,\r\n        } = this.props;\r\n\r\n        const styles = headerStyles(theme);\r\n\r\n        const routeName = (this.props.route || this.props.scene?.route || {name: \"undef\"}).name;\r\n        const title = headerTitle(routeName as NavigatorRoute);\r\n        const textColor = color || theme.text;\r\n        const buttonBackgroundColor = this.props.buttonBackgroundColor || theme.cardBackground;\r\n\r\n        const WrapperComponent = blur ? BlurView : View;\r\n        const blurProps: Partial<BlurProps> = blur\r\n            ? {\r\n                  tint: theme.id === \"dark\" ? \"dark\" : \"default\",\r\n                  intensity: BLUR_HEADER_INTENSITY,\r\n              }\r\n            : {};\r\n\r\n        return (\r\n            <WrapperComponent\r\n                style={[\r\n                    {paddingTop: insets.top},\r\n                    styles.wrapper,\r\n                    blur ? styles.wrapperBlur : {},\r\n                    noShadow ? styles.wrapperNoShadow : {},\r\n                    wrapperStyle,\r\n                ]}\r\n                {...blurProps}\r\n            >\r\n                {backButton && (\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => this.back()}>\r\n                        <MaterialIcons style={[styles.backButtonIcon, {color: textColor}]} name=\"arrow-back\" />\r\n                    </TouchableOpacity>\r\n                )}\r\n                {!noAvatar &&\r\n                    (overrideAvatar || (\r\n                        <ProfileAvatar\r\n                            profile={user?.profile}\r\n                            rounded\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            titleStyle={styles.avatarTitle}\r\n                            activeOpacity={0.75}\r\n                            onPress={() => rootNavigate(\"MyProfileScreen\")}\r\n                        />\r\n                    ))}\r\n                <TouchableOpacity\r\n                    style={[styles.titleContainer, {marginLeft: 12}, titleContainerStyle]}\r\n                    onPress={onPressTitle}\r\n                >\r\n                    <Text style={[styles.title, {color: textColor}, titleStyle]} numberOfLines={1}>\r\n                        {overrideTitle === undefined ? title : overrideTitle}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                {rightButtons?.map((ButtonComponent, i) => (\r\n                    <ButtonComponent\r\n                        key={`header-button-${routeName.toLowerCase()}-${i}`}\r\n                        buttonStyle={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        iconStyle={[styles.rightIcon, {color: textColor}]}\r\n                    />\r\n                ))}\r\n                {!noSettingsButton && (\r\n                    <TouchableOpacity\r\n                        style={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        onPress={() => rootNavigate(\"SettingsScreen\")}\r\n                    >\r\n                        <MaterialIcons name=\"settings\" style={styles.rightIcon} color={textColor} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </WrapperComponent>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainHeaderComp = reduxConnector(withTheme(MainHeaderClass));\r\n\r\nexport default function MainHeader(props: MainHeaderStackProps & AdditionalProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return <MainHeaderComp insets={insets} {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {getRouteParams, navigateToProfile} from \"../../navigation/utils\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport store from \"../../state/store\";\r\nimport {Route} from \"@react-navigation/native\";\r\nimport ChatUserAvatar from \"../ChatUserAvatar\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: store.getState().messaging.matchRooms,\r\n    activeRoomId: store.getState().messaging.activeRoomId,\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens> &\r\n    Omit<MainHeaderStackProps, \"route\">;\r\n\r\nclass ChatScreenHeaderClass extends React.Component<ChatScreenHeaderProps> {\r\n    private getRoomId(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {roomId} = getRouteParams(this.props.route);\r\n        return (roomId as string) || null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoomId} = this.props;\r\n        const id = activeRoomId || this.getRoomId();\r\n        return id ? rooms[id] : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profileId, ...stackProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        if (room) {\r\n            const user = room.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n            return (\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    route={stackProps.route as Route<string, undefined>}\r\n                    backButton={true}\r\n                    blur={true}\r\n                    overrideAvatar={\r\n                        <ChatUserAvatar\r\n                            containerStyle={hstyles.avatarContainer}\r\n                            user={user}\r\n                            rounded\r\n                            onPress={() => navigateToProfile(user._id, store.getState())}\r\n                        />\r\n                    }\r\n                    overrideTitle={user.name}\r\n                    titleStyle={styles.name}\r\n                    onPressTitle={() => navigateToProfile(user._id, store.getState())}\r\n                    navigateBackFallback={(nav) =>\r\n                        nav.navigate(\"MainScreen\", {screen: \"TabMessaging\", params: {screen: \"ChatRoomsScreen\"}})\r\n                    }\r\n                />\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        name: {\r\n            fontSize: 18,\r\n            fontWeight: \"600\",\r\n        },\r\n    });\r\n});\r\n\r\nconst ChatScreenHeaderComp = reduxConnector(withTheme(ChatScreenHeaderClass));\r\n\r\nexport default function ChatScreenHeader(\r\n    props: StackScreenProps<RootNavigatorScreens> & MainHeaderStackProps,\r\n): JSX.Element {\r\n    return <ChatScreenHeaderComp {...props} />;\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    Platform,\r\n    ScrollView,\r\n    ScrollViewProps,\r\n    StyleSheet,\r\n    TextStyle,\r\n    View,\r\n    FlatList,\r\n    KeyboardAvoidingView,\r\n    Text,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {\r\n    Actions,\r\n    ActionsProps,\r\n    Bubble,\r\n    BubbleProps,\r\n    Composer,\r\n    ComposerProps,\r\n    GiftedAvatar,\r\n    GiftedAvatarProps,\r\n    GiftedChat,\r\n    IMessage,\r\n    InputToolbar,\r\n    InputToolbarProps,\r\n    Message,\r\n    MessageProps,\r\n    Send,\r\n    SendProps,\r\n} from \"react-native-gifted-chat\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport chatSocket from \"../../api/chat-socket\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {\r\n    connectToChat,\r\n    fetchEarlierMessages,\r\n    fetchMatchRoom,\r\n    fetchNewMessages,\r\n    joinChatRoom,\r\n    leaveChatRoom,\r\n    sendChatMessage,\r\n} from \"../../state/messaging/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {TypingAnimation} from \"react-native-typing-animation\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport store from \"../../state/store\";\r\nimport {DEBUG_MODE, MESSAGES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {normalizeWheelEvent} from \"../../polyfills\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport {noop} from \"lodash\";\r\nimport ChatUserAvatar from \"../../components/ChatUserAvatar\";\r\nimport themes from \"../../constants/themes\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    activeRoomId: state.messaging.activeRoomId,\r\n    localChatUser: state.messaging.localChatUser,\r\n    connected: state.messaging.socketState.connected,\r\n    connecting: state.messaging.socketState.connecting,\r\n    fetchingNewMessages: state.messaging.fetchingNewMessages,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nconst MIN_INPUT_HEIGHT = 45;\r\nconst INPUT_VERTICAL_MARGIN = 10;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    ref = React.createRef<GiftedChat>();\r\n    listRef: FlatList | null = null;\r\n    removeScrollListener: () => void = noop;\r\n\r\n    private unsubscribeBlurEvent: null | (() => void) = null;\r\n    private unsubscribeFocusEvent: null | (() => void) = null;\r\n\r\n    private getRoomId(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {roomId} = getRouteParams(this.props.route);\r\n        return (roomId as string) || null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoomId} = this.props;\r\n        const id = activeRoomId || this.getRoomId();\r\n        return id ? rooms[id] || null : null;\r\n    }\r\n\r\n    private connectToRoom(): void {\r\n        const {rooms} = this.props;\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const joinRoom = (room: ChatRoom) => dispatch(joinChatRoom(room));\r\n\r\n        const roomId = this.getRoomId();\r\n        // If a roomId parameter was given\r\n        if (roomId) {\r\n            const room = rooms[roomId];\r\n            // First ensure we have that room (in storage or we fetch it) before joining it.\r\n            if (room) joinRoom(room);\r\n            else dispatch(fetchMatchRoom(roomId)).then((room) => room && joinRoom(room));\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        this.unsubscribeBlurEvent = navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.unsubscribeFocusEvent = navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeBlurEvent) this.unsubscribeBlurEvent();\r\n        if (this.unsubscribeFocusEvent) this.unsubscribeFocusEvent();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ChatScreenProps): void {\r\n        const {activeRoomId, connected} = this.props;\r\n        // If we've just connected to the chat, connect to the room\r\n        if (!oldProps.connected && connected) this.connectToRoom();\r\n        // If we've just joined the room, ensure we have the latest messages\r\n        if (!oldProps.activeRoomId && activeRoomId) this.ensureLatestMessages();\r\n    }\r\n\r\n    private onBlur(): void {\r\n        // Leave the room when navigating to another screen\r\n        const {dispatch} = this.props;\r\n        const room = this.getRoom();\r\n        if (room) (dispatch as MyThunkDispatch)(leaveChatRoom(room));\r\n    }\r\n\r\n    private onFocus(): void {\r\n        const {dispatch} = this.props;\r\n\r\n        // If we are already connected to the chat, connect to the room\r\n        if (chatSocket.isConnected()) this.connectToRoom();\r\n        // If we are not connected nor connecting to the chat, connect to the chat first\r\n        else if (!chatSocket.isConnecting()) (dispatch as MyThunkDispatch)(connectToChat());\r\n    }\r\n\r\n    /**\r\n     * Ensures that the latest n messages are loaded\r\n     */\r\n    private ensureLatestMessages(): void {\r\n        const {dispatch, fetchingNewMessages} = this.props;\r\n        const room = this.getRoom();\r\n\r\n        // Fetch all messages that are more recent than the last one we have\r\n        if (room && !fetchingNewMessages) (dispatch as MyThunkDispatch)(fetchNewMessages(room));\r\n\r\n        // Fetch earlier messages if we need to\r\n        if (room && room.messages.length < MESSAGES_FETCH_LIMIT) this.fetchEarlier();\r\n    }\r\n\r\n    private fetchEarlier(): void {\r\n        const {dispatch} = this.props;\r\n        const room = this.getRoom();\r\n        if (room && !room.messagePagination.fetching) (dispatch as MyThunkDispatch)(fetchEarlierMessages(room));\r\n    }\r\n\r\n    private setListRef(listRef: FlatList | null): void {\r\n        if (Platform.OS === \"web\") {\r\n            if (listRef === null) this.removeScrollListener();\r\n            else if (this.listRef === null) {\r\n                // fix scrolling being reversed with the mouse wheel\r\n                // taken from https://www.gitmemory.com/issue/necolas/react-native-web/995/511242048\r\n                const scrollNode = listRef.getScrollableNode();\r\n                const listener = scrollNode.addEventListener(\"wheel\", (e: WheelEvent) => {\r\n                    const r = normalizeWheelEvent(e);\r\n                    scrollNode.scrollTop -= r.pixelY * 0.15;\r\n                    e.preventDefault();\r\n                });\r\n                this.removeScrollListener = () => scrollNode.removeEventListener(\"wheel\", listener);\r\n                listRef.setNativeProps({style: {transform: \"translate3d(0,0,0) scaleY(-1)\"}});\r\n            }\r\n            this.listRef = listRef;\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localChatUser, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        let chatComponent = <></>;\r\n        if (room && localChatUser) {\r\n            const isWritingId = Object.keys(room.writing).find((id: string) => room.writing[id] === true);\r\n            const userWriting = isWritingId ? room.users.find((u) => u._id == isWritingId) : undefined;\r\n\r\n            // Store in a messageId -> user map whether each message is the last seen message of a user\r\n            const lastMessageDict: {[key: string]: ChatRoomUser[]} = {};\r\n            if (room.messages.length > 0) {\r\n                room.users.forEach((u: ChatRoomUser) => {\r\n                    if (u._id != localChatUser._id && u.lastMessageSeenId) {\r\n                        if (lastMessageDict[u.lastMessageSeenId]) lastMessageDict[u.lastMessageSeenId].push(u);\r\n                        else lastMessageDict[u.lastMessageSeenId] = [u];\r\n                    }\r\n                });\r\n            }\r\n\r\n            const otherUser = room.users.filter((p: ChatRoomUser) => p._id != localChatUser._id)[0];\r\n\r\n            const ChatEmptySvg =\r\n                room.messages.length === 0 ? getLocalSvg(\"man-holding-phone\", () => this.forceUpdate()) : null;\r\n            const chatEmptySvgHeight = 250;\r\n\r\n            chatComponent = (\r\n                <GiftedChat\r\n                    ref={this.ref}\r\n                    isKeyboardInternallyHandled={false}\r\n                    messages={room.messages}\r\n                    user={localChatUser}\r\n                    renderSend={(props: SendProps<IMessage>) => (\r\n                        <Send {...props} containerStyle={styles.sendContainer}>\r\n                            <MaterialIcons name=\"send\" style={styles.send} />\r\n                        </Send>\r\n                    )}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            renderTicks={(currentMessage: IMessage) => (\r\n                                <View style={styles.messageTicksContainer}>\r\n                                    {currentMessage.received && (\r\n                                        <MaterialIcons name=\"check\" style={styles.messageTick} />\r\n                                    )}\r\n                                    {currentMessage.sent && <MaterialIcons name=\"check\" style={styles.messageTick} />}\r\n                                </View>\r\n                            )}\r\n                            textStyle={{left: styles.bubbleTextLeft, right: styles.bubbleTextRight}}\r\n                            wrapperStyle={{left: styles.bubbleWrapperLeft, right: styles.bubbleWrapperRight}}\r\n                        />\r\n                    )}\r\n                    renderMessage={(props: MessageProps<IMessage>) => {\r\n                        const seenBy = props.currentMessage ? lastMessageDict[props.currentMessage._id] : [];\r\n                        return <ChatMessage theme={theme} seenBy={seenBy || []} messageProps={props} />;\r\n                    }}\r\n                    renderInputToolbar={(props: InputToolbarProps) => (\r\n                        <InputToolbar\r\n                            {...props}\r\n                            containerStyle={styles.inputToolbarContainer}\r\n                            primaryStyle={styles.inputToolbarPrimary}\r\n                        />\r\n                    )}\r\n                    renderChatEmpty={() => (\r\n                        <View style={styles.emptyChatContainer}>\r\n                            <Text style={styles.emptyChatText}>\r\n                                {i18n.t(\"messaging.sayHiTo\", {name: otherUser.name})}\r\n                            </Text>\r\n                            {ChatEmptySvg && (\r\n                                <ChatEmptySvg\r\n                                    style={{\r\n                                        transform: Platform.OS === \"web\" ? (\"scaleY(-1)\" as never) : [{scaleY: -1}],\r\n                                    }}\r\n                                    width={chatEmptySvgHeight * (150 / 200)}\r\n                                    height={chatEmptySvgHeight}\r\n                                    viewBox=\"0 0 150 200\"\r\n                                    preserveAspectRatio=\"xMaxYMid\"\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    )}\r\n                    renderFooter={() => <ChatFooter userWriting={userWriting} theme={theme} />}\r\n                    renderActions={(props: ActionsProps) => <ChatActions actionsProps={props} theme={theme} />}\r\n                    onInputTextChanged={(t) => {\r\n                        if (t.length > 0) chatSocket.setWriting(room);\r\n                    }}\r\n                    onSend={(messages) => {\r\n                        messages.forEach((m) =>\r\n                            (dispatch as MyThunkDispatch)(sendChatMessage(m._id + \"\", m.text, m.createdAt as Date)),\r\n                        );\r\n                    }}\r\n                    loadEarlier={room.messagePagination.canFetchMore && room.messagePagination.fetching}\r\n                    isLoadingEarlier={room.messagePagination.fetching}\r\n                    onLoadEarlier={() => {\r\n                        this.fetchEarlier();\r\n                    }}\r\n                    timeFormat={\"HH:mm\"}\r\n                    listViewProps={{\r\n                        ref: (el: unknown) => this.setListRef(el as FlatList | null),\r\n                        onEndReached: () => this.fetchEarlier(),\r\n                        renderScrollComponent: (props: ScrollViewProps) => (\r\n                            <ScrollView\r\n                                {...props}\r\n                                contentContainerStyle={[\r\n                                    props.contentContainerStyle,\r\n                                    // This is actually a paddingTop but gifted-chat flips the rendering.\r\n                                    // (compensates for the height of the transparent header)\r\n                                    {paddingBottom: 100},\r\n                                ]}\r\n                            />\r\n                        ),\r\n                    }}\r\n                    renderComposer={(props: ComposerProps) => (\r\n                        <Composer\r\n                            {...props}\r\n                            textInputProps={{\r\n                                ...props.textInputProps,\r\n                                autoFocus: false,\r\n                                style: [styles.textInput, Platform.OS === \"web\" && ({outline: \"none\"} as TextStyle)],\r\n                                multiline: true,\r\n                                ...(Platform.OS === \"web\"\r\n                                    ? {\r\n                                          onFocus: () => this.forceUpdate(), // workaround to get the ugly outline on web to disappear properly\r\n                                          onKeyPress: (ev) => {\r\n                                              const e = (ev as unknown) as KeyboardEvent;\r\n                                              if (e.key === \"Enter\" && !e.altKey && !e.shiftKey && props.text) {\r\n                                                  // The typing expects _id, createdAt and user properties, but gifted-chat creates them itself if not given\r\n                                                  this.ref.current?.onSend([{text: props.text.trim()} as never], true);\r\n                                              }\r\n                                          },\r\n                                      }\r\n                                    : {}),\r\n                            }}\r\n                        />\r\n                    )}\r\n                    minInputToolbarHeight={MIN_INPUT_HEIGHT + INPUT_VERTICAL_MARGIN * 2}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : undefined} style={styles.container}>\r\n                    {chatComponent}\r\n                </KeyboardAvoidingView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ChatFooter({userWriting, theme}: {userWriting?: ChatRoomUser; theme: Theme}): JSX.Element {\r\n    if (userWriting) {\r\n        return (\r\n            <View style={{height: 50, paddingTop: 10, marginBottom: 5}}>\r\n                <Message\r\n                    key=\"isWriting\"\r\n                    user={userWriting}\r\n                    showUserAvatar={true}\r\n                    position=\"left\"\r\n                    renderAvatar={(props: GiftedAvatarProps) => <GiftedAvatar {...props} user={userWriting} />}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            wrapperStyle={{\r\n                                left: {backgroundColor: \"transparent\"},\r\n                                right: {},\r\n                            }}\r\n                            renderCustomView={() => (\r\n                                <TypingAnimation\r\n                                    dotColor={theme.textLight}\r\n                                    dotAmplitude={3}\r\n                                    dotSpeed={0.16}\r\n                                    dotMargin={8}\r\n                                    dotRadius={4}\r\n                                    dotX={20}\r\n                                    dotY={-25}\r\n                                />\r\n                            )}\r\n                        />\r\n                    )}\r\n                ></Message>\r\n            </View>\r\n        );\r\n    } else return <></>;\r\n}\r\n\r\nfunction ChatMessage({\r\n    theme,\r\n    seenBy,\r\n    messageProps,\r\n}: {\r\n    theme: Theme;\r\n    seenBy: ChatRoomUser[];\r\n    messageProps: MessageProps<IMessage>;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <View style={messageProps.position === \"left\" ? styles.messageContainerLeft : styles.messageContainerRight}>\r\n            <Message\r\n                {...messageProps}\r\n                containerStyle={{\r\n                    left: [messageProps.containerStyle?.left],\r\n                    right: [messageProps.containerStyle?.right, {marginBottom: 2}],\r\n                }}\r\n            />\r\n            {seenBy.length > 0 && (\r\n                <View\r\n                    style={[\r\n                        messageProps.position === \"left\"\r\n                            ? styles.messageReadContainerLeft\r\n                            : styles.messageReadContainerRight,\r\n                    ]}\r\n                >\r\n                    {seenBy.map((u: ChatRoomUser) => (\r\n                        <ChatUserAvatar\r\n                            key={`read-message-${u._id}`}\r\n                            titleStyle={styles.messageReadAvatarText}\r\n                            user={u}\r\n                            size={20}\r\n                            rounded\r\n                        />\r\n                    ))}\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction ChatActions({actionsProps, theme}: {actionsProps: ActionsProps; theme: Theme}): JSX.Element {\r\n    return <></>;\r\n\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <>\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"photo-camera\" />}\r\n                    options={{\r\n                        \"Send a picture\": async () => {\r\n                            await ImagePicker.launchImageLibraryAsync({\r\n                                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                                allowsEditing: true,\r\n                                aspect: [1, 1],\r\n                                //quality: AVATAR_QUALITY,\r\n                            });\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"build\" />}\r\n                    options={{\r\n                        \"Spam Lorem Ipsum\": async () => {\r\n                            const text =\r\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dosum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\";\r\n                            const words = text.split(\" \");\r\n                            let i = 0;\r\n                            while (i < words.length) {\r\n                                const n = 1 + Math.min(Math.floor(Math.random() * 12), words.length - 1 - i);\r\n                                const msg = words.slice(i, i + n).join(\" \");\r\n                                const id = GiftedChat.defaultProps.messageIdGenerator();\r\n                                (store.dispatch as MyThunkDispatch)(sendChatMessage(id, msg, new Date()));\r\n                                i += n;\r\n                            }\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        inputToolbarContainer: {\r\n            justifyContent: \"center\",\r\n            borderTopWidth: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        inputToolbarPrimary: {\r\n            alignItems: \"flex-end\",\r\n        },\r\n        textInput: {\r\n            backgroundColor: theme.cardBackground,\r\n            borderRadius: 20,\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginHorizontal: 20,\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            fontSize: 15,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            alignSelf: \"flex-end\",\r\n            color: theme.text,\r\n        },\r\n        send: {\r\n            fontSize: 30,\r\n            color: theme.accent,\r\n        },\r\n        sendContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginRight: 10,\r\n        },\r\n        actionContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n        },\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            width: 28,\r\n            height: 28,\r\n            color: theme.text,\r\n        },\r\n        bubbleWrapperLeft: {\r\n            backgroundColor: theme.chatBubble,\r\n        },\r\n        bubbleWrapperRight: {\r\n            paddingLeft: 10,\r\n        },\r\n        bubbleTextLeft: {\r\n            color: theme.text,\r\n        },\r\n        bubbleTextRight: {\r\n            marginLeft: 0,\r\n        },\r\n        messageContainerLeft: {},\r\n        messageContainerRight: {\r\n            paddingRight: 20,\r\n        },\r\n        messageReadContainerLeft: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadContainerRight: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadAvatarText: {\r\n            fontSize: 12,\r\n        },\r\n        messageTicksContainer: {\r\n            marginRight: 4,\r\n            minWidth: 15,\r\n        },\r\n        messageTick: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        emptyChatContainer: {\r\n            width: \"100%\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 50,\r\n        },\r\n        emptyChatText: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n            transform: [{scaleY: -1}],\r\n            marginBottom: 20,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatScreen));\r\n","import {NavigatorRoute} from \"../navigation/types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\n// The navigation routes that require a connection to the chat socket.\r\nexport const CHAT_CONNECTED_ROUTES: NavigatorRoute[] = [\"ChatScreen\", \"ChatRoomsScreen\"];\r\n\r\n// Override the status bar theme for certain screens\r\nexport const STATUS_BAR_THEME_OVERRIDES: {[key in NavigatorRoute]?: ThemeKey} = {\r\n    SigninScreen: \"light\",\r\n    SignupScreen: \"light\",\r\n    ForgotPasswordScreen: \"light\",\r\n    ProfileScreen: \"light\",\r\n    MyProfileScreen: \"light\",\r\n    GroupScreen: \"light\",\r\n};\r\n\r\n// Routes that will redirect when not authenticated\r\nexport const AUTHENTICATED_ROUTES: NavigatorRoute[] = ([\r\n    \"ChatRoomsScreen\",\r\n    \"ChatScreen\",\r\n    \"DeleteAccountScreen\",\r\n    \"MainScreen\",\r\n    \"MatchFilteringScreen\",\r\n    \"MatchHistoryScreen\",\r\n    \"MyProfileScreen\",\r\n    \"OnboardingSuccessfulScreen\",\r\n    \"ProfileScreen\",\r\n    \"SettingsScreen\",\r\n    \"TabHome\",\r\n    \"TabHomeScreen\",\r\n    \"TabMatching\",\r\n    \"TabMatchingScreen\",\r\n    \"TabMessaging\",\r\n    \"TabNotifications\",\r\n    \"TabNotificationsScreen\",\r\n] as NavigatorRoute[]).concat(ONBOARDING_ORDER);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport ChatRoomsScreen from \"../screens/messaging/ChatRoomsScreen\";\r\nimport {NavigatorRoute, TabMessagingRoot} from \"./types\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport ChatScreenHeader from \"../components/headers/ChatScreenHeader\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport {AppStateStatus, AppState as RNAppState} from \"react-native\";\r\nimport chatSocket from \"../api/chat-socket\";\r\nimport {CHAT_CONNECTED_ROUTES} from \"../constants/route-settings\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {connectToChat, disconnectFromChat} from \"../state/messaging/actions\";\r\nimport store from \"../state/store\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\n\r\nclass MessagingNavigator extends React.Component {\r\n    componentDidMount(): void {\r\n        // Handle app state changes (active / inactive)\r\n        let previousAppStatus: AppStateStatus;\r\n        RNAppState.addEventListener(\"change\", (status: AppStateStatus) => {\r\n            // If the app is now active\r\n            if (previousAppStatus !== \"active\" && status === \"active\") this.onAppActive();\r\n            // If the app is no longer active\r\n            if (previousAppStatus === \"active\" && status !== \"active\") this.onAppInactive();\r\n            previousAppStatus = status;\r\n        });\r\n    }\r\n\r\n    private onAppActive(): void {\r\n        // Reconnect to chat if needed\r\n        if (!chatSocket.isConnected()) {\r\n            const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n            const isChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n            if (isChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n        }\r\n    }\r\n\r\n    private onAppInactive(): void {\r\n        // Disconnect from the chat if connected\r\n        if (chatSocket.isConnected()) store.dispatch(disconnectFromChat());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Stack.Navigator headerMode=\"screen\">\r\n                <Stack.Screen\r\n                    name=\"ChatRoomsScreen\"\r\n                    component={ChatRoomsScreen}\r\n                    options={{\r\n                        title: screenTitle(\"ChatRoomsScreen\"),\r\n                        headerShown: true,\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ChatScreen\"\r\n                    options={() => ({headerShown: false, title: screenTitle(\"ChatScreen\")})}\r\n                >\r\n                    {(props) => (\r\n                        <>\r\n                            <ChatScreen {...props} />\r\n                            <ChatScreenHeader {...props} />\r\n                        </>\r\n                    )}\r\n                </Stack.Screen>\r\n            </Stack.Navigator>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Handle connecting / disconnecting from the chat depending on the focused route.\r\n */\r\nexport function handleRouteChangeForChat(route: NavigatorRoute, previousRoute: NavigatorRoute | undefined): void {\r\n    const toChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n    const fromChat = previousRoute && CHAT_CONNECTED_ROUTES.includes(previousRoute);\r\n    if (!fromChat && toChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n    if (fromChat && !toChat) (store.dispatch as MyThunkDispatch)(disconnectFromChat());\r\n}\r\n\r\nexport default MessagingNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut?: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type TabHomeScreenProps = ThemeProps;\r\n\r\nclass TabHomeScreen extends React.Component<TabHomeScreenProps> {\r\n    private async fetchPostEmbed(shortCode: string): Promise<Response> {\r\n        // seaEuAlliance profile ID: 32204624961\r\n        // url=\r\n        const BASE_URL = \"https://graph.facebook.com/v9.0/instagram_oembed\";\r\n        const CLIENT_TOKEN = \"80cd0bc3c132ad645a15d234ccd841bd\";\r\n        const POST_URL = `https://www.instagram.com/p/${shortCode}/`;\r\n        const url = `${BASE_URL}?url=${POST_URL}&access_token=${CLIENT_TOKEN}`;\r\n\r\n        const headers: {[key: string]: string} = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        console.log(url);\r\n        const response = await fetch(url, {method: \"GET\", headers});\r\n        return response;\r\n    }\r\n\r\n    fetchEmbed() {\r\n        this.fetchPostEmbed(\"CJQ-ZX_rZb8\").then((response) => console.log(JSON.stringify(response)));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {/*<TouchableOpacity onPress={() => this.fetchEmbed()}>\r\n                        <Text style={{fontSize: 22, padding: 20}}>Fetch</Text>\r\n                    </TouchableOpacity>*/}\r\n                    <FontAwesome style={styles.icon} name=\"heart\" />\r\n                    <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                    <View style={styles.separator} />\r\n                    <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                        Found a bug or have some feedback for us or ideas for the app?\r\n                    </Text>\r\n                    <Text style={styles.alphaText}>\r\n                        Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                    </Text>\r\n                    <LogOutButton style={styles.logoutButton} />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabHomeScreen);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock?: () => void; profile: UserProfile | null};\r\n\r\nexport class BlockProfileModalClass extends React.Component<BlockProfileModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"block.title\")}\r\n                text={\r\n                    profile ? i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName}) : \"\"\r\n                }\r\n                icon={(props) => <MaterialIcons name=\"block\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"block.action\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            if (profile) (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                            if (onBlock) onBlock();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BlockProfileModalClass);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n    flagSize?: number;\r\n    flagEmoji?: boolean;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, flagSize, flagEmoji, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag\r\n                            countryCode={university.country}\r\n                            flagSize={flagSize || 18}\r\n                            withEmoji={flagEmoji || false}\r\n                        />\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleProp, Text, View, ViewStyle, StyleSheet, TextStyle, TouchableOpacity} from \"react-native\";\r\nimport {ThemeConsumer, withTheme} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ChipsProps<T> = {\r\n    items: T[];\r\n    label?: (item: T) => string;\r\n    removable?: boolean;\r\n    onRemove?: (item: T) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    chipStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nclass Chips<T> extends React.Component<ChipsProps<T>> {\r\n    render(): JSX.Element {\r\n        const {items, label, removable, onRemove, containerStyle, chipStyle, textStyle} = this.props;\r\n\r\n        return (\r\n            // Use a theme consumer instead of the withTheme() pattern because it breaks genericity\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    return (\r\n                        <View style={[styles.container, containerStyle]}>\r\n                            {items.map((it: T, i: number) => (\r\n                                <Chip\r\n                                    key={`chips-${i}-${it}`}\r\n                                    text={label ? label(it) : typeof it === \"string\" ? it : JSON.stringify(it)}\r\n                                    removable={removable}\r\n                                    onRemove={() => {\r\n                                        if (onRemove) onRemove(it);\r\n                                    }}\r\n                                    chipStyle={chipStyle}\r\n                                    textStyle={textStyle}\r\n                                />\r\n                            ))}\r\n                        </View>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\ntype ChipProps = {\r\n    text: string;\r\n    removable?: boolean;\r\n    onRemove?: () => void;\r\n    chipStyle: StyleProp<ViewStyle>;\r\n    textStyle: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nconst Chip = withTheme(\r\n    ({text, removable, onRemove, theme, chipStyle, textStyle}: ChipProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={[styles.chip, chipStyle]}>\r\n                <Text\r\n                    style={[\r\n                        styles.chipText,\r\n                        removable ? {marginRight: 20} /* depends on width of \"remove\" button */ : {},\r\n                        textStyle,\r\n                    ]}\r\n                    numberOfLines={1}\r\n                >\r\n                    {text}\r\n                </Text>\r\n                {removable && (\r\n                    <TouchableOpacity\r\n                        style={styles.chipRemoveButton}\r\n                        onPress={() => {\r\n                            if (onRemove) onRemove();\r\n                        }}\r\n                    >\r\n                        <MaterialIcons name=\"close\" style={styles.chipRemoveIcon} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        chip: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.accentSlight,\r\n            paddingVertical: 6,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 20,\r\n            marginRight: 4,\r\n            marginBottom: 4,\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: themes.light.text,\r\n        },\r\n        chipRemoveButton: {\r\n            position: \"absolute\",\r\n            right: 0,\r\n            width: 32,\r\n            height: 32,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        chipRemoveIcon: {\r\n            fontSize: 22,\r\n            color: themes.light.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default Chips;\r\n","import * as React from \"react\";\r\nimport {useFocusEffect} from \"@react-navigation/native\";\r\n\r\nexport default function FocusAware({onFocus, onBlur}: {onFocus?: () => void; onBlur?: () => void}): JSX.Element {\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            if (onFocus) onFocus();\r\n            return () => {\r\n                if (onBlur) onBlur();\r\n            };\r\n        }, []),\r\n    );\r\n    return <></>;\r\n}\r\n","import {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {StyleProp, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport FocusAware from \"./utility/FocusAware\";\r\n\r\nconst ANIMATION_AMPLITUDE = 25;\r\nconst DURATION = 400; // the animation duration (ms)\r\nconst PAUSE = 1000; // how much time to wait before looping the animation (ms)\r\n\r\n// Component props\r\nexport type SwipeTipProps = {\r\n    direction: \"horizontal\" | \"left\";\r\n    style?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nconst ICON_NAMES: {[key: string]: string} = {\r\n    horizontal: \"gesture-swipe-horizontal\",\r\n    left: \"gesture-swipe-left\",\r\n};\r\n\r\n// Component props\r\nexport type SwipeTipState = {animating: boolean};\r\n\r\nclass SwipeTip extends React.Component<SwipeTipProps, SwipeTipState> {\r\n    offset = new ReAnimated.Value(0);\r\n\r\n    constructor(props: SwipeTipProps) {\r\n        super(props);\r\n        this.state = {animating: false};\r\n    }\r\n\r\n    setAnimating(b: boolean): void {\r\n        if (b === this.state.animating) return;\r\n\r\n        this.setState({...this.state, animating: b});\r\n\r\n        if (b) {\r\n            const dir = this.props.direction;\r\n            if (dir === \"horizontal\") {\r\n                const animate = (even: boolean): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: even ? ANIMATION_AMPLITUDE / 2 : -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) {\r\n                                if (even) setTimeout(() => animate(!even), PAUSE);\r\n                                else animate(!even);\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                animate(true);\r\n            } else if (dir === \"left\") {\r\n                const animate = (): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) setTimeout(animate, PAUSE);\r\n                        });\r\n                    });\r\n                };\r\n                animate();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {direction, style, iconStyle} = this.props;\r\n\r\n        const iconName = ICON_NAMES[direction];\r\n\r\n        return (\r\n            <View style={[style]}>\r\n                <FocusAware onFocus={() => this.setAnimating(true)} onBlur={() => this.setAnimating(false)} />\r\n                <ReAnimated.View style={{left: this.offset}}>\r\n                    {iconName && <MaterialCommunityIcons name={iconName} style={iconStyle} />}\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwipeTip;\r\n","import * as React from \"react\";\r\nimport {LayoutChangeEvent, LayoutRectangle, Text, TouchableOpacity, View, StyleSheet, Platform} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile, UserProfileStudent} from \"../../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"../modals/BlockProfileModal\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {styleTextLight, styleTextThin} from \"../../styles/general\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport Chips from \"../Chips\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionContainer} from \"./SwipeableCard\";\r\nimport SwipeTip from \"../SwipeTip\";\r\n\r\n// Component props\r\nexport type MatchProfileCardProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipedLeft?: () => void;\r\n    onSwipedRight?: () => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\n// Component state\r\nexport type MatchProfileCardState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 10,\r\n    borderRadius: 20,\r\n};\r\n\r\nclass MatchProfileCard extends React.Component<MatchProfileCardProps, MatchProfileCardState> {\r\n    cardRef = React.createRef<SwipeableCardClass>();\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: MatchProfileCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: true,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_EXPANDED_HEIGHT),\r\n            });\r\n        } else {\r\n            this.setState({...this.state, animating: true});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n                duration,\r\n                easing: Easing.elastic(1.0),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n        }\r\n    }\r\n\r\n    collapse() {\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: false,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            });\r\n        } else {\r\n            const duration = 100;\r\n            this.setState({...this.state, animating: true, expanded: false});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n                duration,\r\n                easing: Easing.out(Easing.linear),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n        }\r\n    }\r\n\r\n    hide(onFinish?: () => void, right?: boolean) {\r\n        /*const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.cardRef.current?.hide();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);*/\r\n        this.cardRef.current?.collapse(onFinish, right);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, showSwipeTip} = this.props;\r\n        const {expanded, animating, height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        const chipStyleProps = {chipStyle: styles.chip};\r\n\r\n        const content = (\r\n            <>\r\n                <View style={styles.collapsedContent}>\r\n                    <View style={styles.avatarContainer}>\r\n                        <ProfileAvatar profile={profile} size={120} rounded containerStyle={styles.avatar} />\r\n                    </View>\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{fullName}</Text>\r\n                        {profile && <FormattedUniversity style={styles.infoText} university={profile.university} />}\r\n                        <Text style={styles.infoText}>\r\n                            {i18n.t(`genders.${profile.gender}`)}\r\n                            {\", \"}\r\n                            {i18n.t(`allRoles.${profile.type}`)}\r\n                            {profile.type == \"student\"\r\n                                ? ` (${i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)})`\r\n                                : \"\"}\r\n                        </Text>\r\n                        {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                    </View>\r\n                    {showSwipeTip && (\r\n                        <SwipeTip direction=\"horizontal\" style={styles.swipeTip} iconStyle={styles.swipeTipIcon} />\r\n                    )}\r\n                </View>\r\n                {(expanded || animating) && (\r\n                    <View style={styles.expandedContent}>\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <Chips\r\n                            items={profile.languages}\r\n                            label={(v: SpokenLanguageDto) =>\r\n                                `${i18n.t(`languageNames.${v.code}`)}${\r\n                                    v.level != \"native\" ? ` (${v.level.toUpperCase()})` : \"\"\r\n                                }`\r\n                            }\r\n                            {...chipStyleProps}\r\n                        />\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                        <Chips\r\n                            items={profile.profileOffers}\r\n                            label={(o: OfferValueDto) => i18n.t(`allOffers.${o.offerId}.name`)}\r\n                            {...chipStyleProps}\r\n                        />\r\n\r\n                        {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        <BlockProfileModal\r\n                            profile={profile}\r\n                            activator={(open) => (\r\n                                <TouchableOpacity style={styles.blockButton} onPress={() => open()}>\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            onBlock={() => this.hide()}\r\n                        />\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.cardRef}\r\n                looks={LOOKS}\r\n                wrapperProps={{\r\n                    onLayout: (e: LayoutChangeEvent) => {\r\n                        this.layout = e.nativeEvent.layout;\r\n                    },\r\n                }}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                leftThreshold={100}\r\n                rightThreshold={100}\r\n                onSwipeableRightWillOpen={() => {\r\n                    if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipedLeft) this.props.onSwipedLeft();\r\n                    }, false);\r\n                }}\r\n                onSwipeableLeftWillOpen={() => {\r\n                    if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipedRight) this.props.onSwipedRight();\r\n                    }, true);\r\n                }}\r\n                renderRightActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"right\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentRight}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                renderLeftActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"left\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentLeft}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                onPress={() => this.toggleExpanded()}\r\n            >\r\n                {Platform.OS !== \"web\" && (\r\n                    <ReAnimated.View style={[styles.cardContent, {height}]}>{content}</ReAnimated.View>\r\n                )}\r\n                {Platform.OS === \"web\" && (\r\n                    <View style={[styles.cardContent, {height: height[\" __value\"]}]}>{content}</View>\r\n                )}\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 150;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 360;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            padding: 20,\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        // Card content\r\n\r\n        cardContent: {\r\n            padding: 10,\r\n        },\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTip: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 5,\r\n        },\r\n        swipeTipIcon: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chip: {\r\n            //borderRadius: 6,\r\n            paddingHorizontal: 5,\r\n            paddingVertical: 2,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n        },\r\n\r\n        expandedSectionTitle: {\r\n            ...styleTextLight,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MatchProfileCard);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {makePromiseCancelable} from \"../general-utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport Button, {ButtonProps} from \"./Button\";\r\n\r\n// Component props\r\nexport type AsyncButtonProps = Omit<ButtonProps, \"onPress\"> & {\r\n    onPress: () => Promise<unknown>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    loadingIndicatorColor?: string;\r\n    loadingIndicatorSize?: number;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype AsyncButtonState = {\r\n    loading: boolean;\r\n};\r\n\r\nclass AsyncButton extends React.Component<AsyncButtonProps, AsyncButtonState> {\r\n    private cancelPressPromise: (() => void) | null = null;\r\n\r\n    constructor(props: AsyncButtonProps) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        // Reset the state to loading: false\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.cancelPressPromise) {\r\n            this.cancelPressPromise();\r\n            this.cancelPressPromise = null;\r\n        }\r\n    }\r\n\r\n    onPress(): void {\r\n        if (!this.state.loading) {\r\n            this.setState({...this.state, loading: true});\r\n            // Use a cancelable promise to avoid triggering a state update on an unmounted component\r\n            const promise = makePromiseCancelable(this.props.onPress());\r\n            promise.then(() => {\r\n                this.setState({...this.state, loading: false});\r\n                this.cancelPressPromise = null;\r\n            });\r\n            this.cancelPressPromise = promise.cancel;\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {loadingIndicatorStyle, loadingIndicatorColor, loadingIndicatorSize, theme, ...otherProps} = this.props;\r\n        const {loading} = this.state;\r\n\r\n        return (\r\n            <Button\r\n                {...otherProps}\r\n                {...{onPress: loading ? undefined : () => this.onPress()}}\r\n                contentOpacity={loading ? 0 : 1}\r\n                disabled={loading}\r\n            >\r\n                {loading && (\r\n                    <ActivityIndicator\r\n                        color={loadingIndicatorColor || theme.accentTernary}\r\n                        size={loadingIndicatorSize || 24}\r\n                        style={[\r\n                            {position: \"absolute\", top: 0, right: 0, bottom: 0, left: 0, margin: \"auto\"},\r\n                            loadingIndicatorStyle,\r\n                        ]}\r\n                    />\r\n                )}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(AsyncButton);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Svg, {Path} from \"react-native-svg\";\r\n\r\nexport type WaveProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    patternIndex?: number | number[] | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WaveState = {\r\n    wavePatternIdx: number;\r\n};\r\n\r\nconst WAVE_PATTERNS = [\r\n    \"M0,160L48,154.7C96,149,192,139,288,165.3C384,192,480,256,576,245.3C672,235,768,149,864,101.3C960,53,1056,43,1152,64C1248,85,1344,139,1392,165.3L1440,192L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,224L48,197.3C96,171,192,117,288,128C384,139,480,213,576,218.7C672,224,768,160,864,144C960,128,1056,160,1152,181.3C1248,203,1344,213,1392,218.7L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,96L48,106.7C96,117,192,139,288,160C384,181,480,203,576,213.3C672,224,768,224,864,192C960,160,1056,96,1152,85.3C1248,75,1344,117,1392,138.7L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,192L48,197.3C96,203,192,213,288,197.3C384,181,480,139,576,122.7C672,107,768,117,864,128C960,139,1056,149,1152,133.3C1248,117,1344,75,1392,53.3L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,128L48,138.7C96,149,192,171,288,160C384,149,480,107,576,122.7C672,139,768,213,864,202.7C960,192,1056,96,1152,64C1248,32,1344,64,1392,80L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,64L48,90.7C96,117,192,171,288,170.7C384,171,480,117,576,96C672,75,768,85,864,101.3C960,117,1056,139,1152,160C1248,181,1344,203,1392,213.3L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,160L48,154.7C96,149,192,139,288,122.7C384,107,480,85,576,96C672,107,768,149,864,138.7C960,128,1056,64,1152,53.3C1248,43,1344,85,1392,106.7L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,32L60,69.3C120,107,240,181,360,186.7C480,192,600,128,720,90.7C840,53,960,43,1080,48C1200,53,1320,75,1380,85.3L1440,96L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,128L60,117.3C120,107,240,85,360,64C480,43,600,21,720,64C840,107,960,213,1080,250.7C1200,288,1320,256,1380,240L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,288L60,245.3C120,203,240,117,360,101.3C480,85,600,139,720,176C840,213,960,235,1080,240C1200,245,1320,235,1380,229.3L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,96L60,117.3C120,139,240,181,360,181.3C480,181,600,139,720,138.7C840,139,960,181,1080,202.7C1200,224,1320,224,1380,224L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,160L48,181.3C96,203,192,245,288,261.3C384,277,480,267,576,224C672,181,768,107,864,106.7C960,107,1056,181,1152,202.7C1248,224,1344,192,1392,176L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n];\r\n\r\nexport const WAVE_HEADER_HEIGHT = 100;\r\n\r\nexport default class Wave extends React.Component<WaveProps, WaveState> {\r\n    constructor(props: WaveProps) {\r\n        super(props);\r\n\r\n        let patternsIndices = WAVE_PATTERNS.map((_, i) => i); // by default, random amongst all patterns\r\n\r\n        if (props.patternIndex === \"random\") {\r\n            // already default\r\n        } else if (Array.isArray(props.patternIndex)) {\r\n            const arr = props.patternIndex as number[];\r\n            if (arr.length > 0) patternsIndices = arr;\r\n        } else {\r\n            patternsIndices = [props.patternIndex as number];\r\n        }\r\n\r\n        this.state = {\r\n            wavePatternIdx: patternsIndices[Math.floor(Math.random() * patternsIndices.length)],\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown} = this.props;\r\n        const {wavePatternIdx} = this.state;\r\n\r\n        const wavePattern = WAVE_PATTERNS[wavePatternIdx];\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    {\r\n                        minWidth: 400, // fix empty space above the wave on narrow screens\r\n                        height: WAVE_HEADER_HEIGHT,\r\n                        ...(upsideDown ? {transform: [{rotate: \"180deg\"}]} : {}),\r\n                    },\r\n                    style,\r\n                ]}\r\n            >\r\n                <Svg viewBox=\"0 40 1440 320\" preserveAspectRatio=\"none\">\r\n                    <Path fill={color} d={wavePattern} />\r\n                </Svg>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {openChat, rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport AsyncButton from \"../AsyncButton\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {OfferValueDto} from \"../../api/dto\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport Button from \"../Button\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport CustomModal, {CustomModalClass} from \"./CustomModal\";\r\nimport {getMatchingOffers} from \"../../model/utils\";\r\nimport Wave from \"../Wave\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localProfile: state.profile.user?.profile,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\n// Component props\r\nexport type MatchSuccessModalProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype MatchSuccessModalState = {\r\n    profile: UserProfile | null;\r\n    roomId: string | null;\r\n    maxOffersDisplayed: number;\r\n    waveWidth: number;\r\n};\r\n\r\nconst VERTICAL_SPACE_AROUND = 0;\r\nconst MAX_WIDTH = 500;\r\n\r\nconst OFFERS_CARD_VERTICAL_PADDING = 10;\r\nconst OFFERS_CARD_LINE_HEIGHT = 20;\r\n\r\nexport class MatchSuccessModalClass extends React.Component<MatchSuccessModalProps, MatchSuccessModalState> {\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: MatchSuccessModalProps) {\r\n        super(props);\r\n        this.state = {profile: null, roomId: null, maxOffersDisplayed: 999, waveWidth: 0};\r\n    }\r\n\r\n    show(profile: UserProfile, roomId: string | null): void {\r\n        this.modalRef.current?.show();\r\n\r\n        this.setState({...this.state, profile, roomId, maxOffersDisplayed: 999});\r\n    }\r\n\r\n    hide(): void {\r\n        this.setState({...this.state, profile: null});\r\n        this.modalRef.current?.hide();\r\n    }\r\n\r\n    async chat(): Promise<void> {\r\n        const {roomId} = this.state;\r\n        this.hide();\r\n        if (roomId) openChat(roomId);\r\n        else rootNavigate(\"MainScreen\", {screen: \"TabMessaging\"});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localProfile} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {profile, maxOffersDisplayed, waveWidth} = this.state;\r\n        const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(profile.profileOffers, localProfile)\r\n                : [];\r\n\r\n        // Kept for quick testing\r\n        /*const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(\r\n                      [\r\n                          {\r\n                              offerId: \"provide-a-couch\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"grab-a-drink\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"answer-academic-questions\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"get-into-campus-life\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"cowork-on-a-project\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"share-interests\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"language-tandem\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                      ],\r\n                      localProfile,\r\n                  )\r\n                : [];*/\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                fullHeight\r\n                noBackground\r\n                backdropBlur\r\n                backdropOpacity={0}\r\n                animationType=\"fade\"\r\n                modalViewStyle={styles.modal}\r\n                renderContent={() => (\r\n                    <>\r\n                        <Wave\r\n                            color={theme.greenModalBackground}\r\n                            style={{width: waveWidth}}\r\n                            upsideDown\r\n                            patternIndex={9}\r\n                        />\r\n\r\n                        <View\r\n                            style={styles.container}\r\n                            onLayout={(layout) => {\r\n                                const {width} = layout.nativeEvent.layout;\r\n                                this.setState({...this.state, waveWidth: width});\r\n                            }}\r\n                        >\r\n                            <View style={styles.topContainer}>\r\n                                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                                <View style={styles.separator} />\r\n                            </View>\r\n\r\n                            <View style={styles.profileInfoContainer}>\r\n                                <ProfileAvatar\r\n                                    profile={profile || undefined}\r\n                                    size={150}\r\n                                    rounded\r\n                                    containerStyle={styles.avatarContainer}\r\n                                />\r\n                                <Text style={styles.name}>\r\n                                    {profile?.firstName} {profile?.lastName}\r\n                                </Text>\r\n\r\n                                {profileOffers.length > 0 && (\r\n                                    <View\r\n                                        style={[styles.offersCard, maxOffersDisplayed === 999 ? {opacity: 0} : {}]}\r\n                                        onLayout={(layout) => {\r\n                                            const height = layout.nativeEvent.layout.height;\r\n                                            const availableHeight = height - OFFERS_CARD_VERTICAL_PADDING * 2;\r\n                                            let numItems = Math.floor(availableHeight / OFFERS_CARD_LINE_HEIGHT) - 1;\r\n                                            if (numItems < profileOffers.length) numItems--; // leave space to show \"n more\"\r\n                                            if (numItems >= 0 && numItems != maxOffersDisplayed)\r\n                                                this.setState({...this.state, maxOffersDisplayed: numItems});\r\n                                        }}\r\n                                    >\r\n                                        <Text style={styles.offerText}>{i18n.t(\"matching.success.offersTitle\")}</Text>\r\n                                        {profileOffers.slice(0, maxOffersDisplayed).map((o: OfferValueDto) => (\r\n                                            <View key={`match-profile-offer-${o.offerId}`}>\r\n                                                <Text numberOfLines={1} style={styles.offerText}>\r\n                                                    - {i18n.t(`allOffers.${o.offerId}.name`)}\r\n                                                </Text>\r\n                                            </View>\r\n                                        ))}\r\n                                        {maxOffersDisplayed < profileOffers.length && (\r\n                                            <Text style={styles.offerText}>\r\n                                                {profileOffers.length - maxOffersDisplayed}{\" \"}\r\n                                                {i18n.t(\"matching.success.offersMore\")}\r\n                                            </Text>\r\n                                        )}\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                            <View style={styles.actionsContainer}>\r\n                                <AsyncButton\r\n                                    text={i18n.t(\"matching.success.chat\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    icon={<MaterialCommunityIcons name=\"chat\" style={styles.actionIcon} />}\r\n                                    style={styles.action}\r\n                                    onPress={async () => await this.chat()}\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"matching.success.continue\")}\r\n                                    icon={\r\n                                        <MaterialCommunityIcons\r\n                                            name=\"gesture-swipe-vertical\"\r\n                                            style={styles.actionIcon}\r\n                                        />\r\n                                    }\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.action, {backgroundColor: theme.actionNeutral}]}\r\n                                    onPress={() => this.hide()}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n\r\n                        <Wave color={theme.greenModalBackground} style={{width: waveWidth}} patternIndex={5} />\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: VERTICAL_SPACE_AROUND,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: MAX_WIDTH,\r\n            justifyContent: \"center\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.greenModalBackground,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n            flexShrink: 1,\r\n            // Prevents it from looking a little bit small when there are no offers to show\r\n            minHeight: Math.min(400, Dimensions.get(\"window\").height * 0.7),\r\n        },\r\n        topContainer: {\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n        },\r\n        profileInfoContainer: {\r\n            alignItems: \"center\",\r\n            flexShrink: 1,\r\n        },\r\n        actionsContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            width: \"85%\",\r\n            maxWidth: 400,\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 26,\r\n            color: themes.dark.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginTop: 10,\r\n            marginBottom: 20,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: themes.dark.text,\r\n            opacity: 0.4,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 0.5,\r\n        },\r\n        name: {\r\n            color: themes.dark.text,\r\n            fontSize: 24,\r\n            marginVertical: 5,\r\n        },\r\n        offersCard: {\r\n            backgroundColor: \"#0001\",\r\n            borderRadius: 20,\r\n            paddingVertical: OFFERS_CARD_VERTICAL_PADDING,\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n            flexShrink: 1,\r\n            overflow: \"hidden\",\r\n        },\r\n        offerText: {\r\n            color: themes.dark.text,\r\n            fontSize: 16,\r\n            lineHeight: OFFERS_CARD_LINE_HEIGHT,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            marginHorizontal: 5,\r\n        },\r\n        actionIcon: {\r\n            fontSize: 22,\r\n            color: themes.dark.text,\r\n            marginLeft: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchSuccessModalClass));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {LayoutRectangle, StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport MatchProfileCard from \"../components/cards/MatchProfileCard\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport MatchSuccessModal, {MatchSuccessModalClass} from \"../components/modals/MatchSuccessModal\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profiles: state.matching.profiles,\r\n    profileIds: state.matching.orderedProfileIds,\r\n    pagination: state.matching.profilesPagination,\r\n}));\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"TabMatchingScreen\">;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps> {\r\n    scrollerRef = React.createRef<InfiniteScroller<UserProfile>>();\r\n    successModalRef = React.createRef<MatchSuccessModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {profileIds, profiles, theme, pagination, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <InfiniteScroller\r\n                    ref={this.scrollerRef}\r\n                    navigation={navigation}\r\n                    fetchLimit={PROFILES_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchProfiles())}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    // refreshOnFocus\r\n                    items={profileIds.map((id) => profiles[id])}\r\n                    id={(profile: UserProfile): string => profile.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    endOfItemsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noMoreItems\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedProfiles())}\r\n                    renderItem={(profile: UserProfile, hide: () => void) => (\r\n                        <MatchProfileCard\r\n                            key={`match-profile-card-${profile.id}`}\r\n                            profile={profile}\r\n                            onExpand={(layout: LayoutRectangle) => {\r\n                                const scroll = this.scrollerRef.current?.scrollViewRef.current;\r\n                                if (scroll) scroll.scrollTo({y: layout.y - 100, animated: true});\r\n                            }}\r\n                            onSwipeRight={async () => {\r\n                                const response = await dispatch(likeProfile(profile));\r\n                                if (response && response.status === MatchActionStatus.Matched)\r\n                                    this.successModalRef.current?.show(profile, response.roomId);\r\n                            }}\r\n                            onSwipedLeft={() => dispatch(dislikeProfile(profile))}\r\n                            onHidden={hide}\r\n                            showSwipeTip={profile.id == profileIds[0]}\r\n                        />\r\n                    )}\r\n                    // Compensate for the header\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                    progressViewOffset={100}\r\n                />\r\n                <MatchSuccessModal ref={this.successModalRef} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            paddingTop: 100,\r\n            paddingBottom: 25,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Component props\r\nexport type MatchScreenHeaderProps = MainHeaderStackProps & {\r\n    backButton?: boolean;\r\n    blur?: boolean;\r\n};\r\n\r\nclass MatchScreenHeaderClass extends React.Component<MatchScreenHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {backButton, blur, ...stackProps} = this.props;\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton={backButton || false}\r\n                blur={blur}\r\n                rightButtons={[\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchFilteringScreen\")}>\r\n                            <FontAwesome name=\"sliders\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchHistoryScreen\")}>\r\n                            <MaterialIcons name=\"history\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default function MatchScreenHeader(props: MatchScreenHeaderProps): JSX.Element {\r\n    return <MatchScreenHeaderClass {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport Chips from \"./Chips\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    single?: boolean;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n        if (props.selected) this.tempSelected = props.selected;\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n        this.tempSelected = this.props.selected || [];\r\n    }\r\n\r\n    open() {\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        this.apply();\r\n    }\r\n\r\n    apply() {\r\n        if (this.props.onChange) this.props.onChange(this.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            single,\r\n            buttonStyleVariant,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n        const buttonStyle = getPickerButtonStyleProps(buttonStyleVariant, theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={buttonStyle.button}>\r\n                        <Text style={[buttonStyle.text, selectedItems.length == 0 ? buttonStyle.textNoneSelected : {}]}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                this.tempSelected = this.tempSelected.filter((v) => v !== item);\r\n                                this.apply();\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {this.state.open && (\r\n                    <CustomModal\r\n                        visible={this.state.open}\r\n                        onHide={() => this.close()}\r\n                        modalViewStyle={{\r\n                            height: 150 + items.length * 40,\r\n                            maxHeight: \"70%\",\r\n                            overflow: \"hidden\",\r\n                            paddingHorizontal: 0,\r\n                            paddingVertical: 0,\r\n                        }}\r\n                        renderContent={() => (\r\n                            <>\r\n                                <View\r\n                                    style={styles.dropdownWrapper}\r\n                                    onLayout={(e: LayoutChangeEvent) => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            dropdownWrapperHeight: e.nativeEvent.layout.height,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <DropDownPicker\r\n                                        items={items}\r\n                                        multiple={!single}\r\n                                        searchable={true}\r\n                                        defaultValue={selected}\r\n                                        onChangeItem={(values: string[]) => {\r\n                                            this.tempSelected = values;\r\n                                        }}\r\n                                        placeholder={placeholder}\r\n                                        multipleText={multipleText}\r\n                                        searchablePlaceholder={searchablePlaceholder}\r\n                                        scrollViewProps={{keyboardShouldPersistTaps: \"handled\"}} // ensures items are clickable even when the keyboard is open\r\n                                        isVisible={true}\r\n                                        showArrow={false}\r\n                                        dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                        // Style props\r\n                                        selectedLabelStyle={{display: \"none\"}}\r\n                                        style={styles.dropdownStyle}\r\n                                        itemStyle={styles.dropdownItemStyle}\r\n                                        activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                        activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                        labelStyle={styles.dropdownLabelStyle}\r\n                                    />\r\n                                </View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </>\r\n                        )}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\n\r\nexport type ToggleStyleVariant = \"classic\" | \"classic-rounded\" | \"no-buttons\" | \"chips\" | \"onboarding\";\r\n\r\nexport function getToggleStyleProps(variant: ToggleStyleVariant = \"classic\", theme: Theme): Partial<ButtonGroupProps> {\r\n    if (variant === \"no-buttons\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"chips\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 32,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 4,\r\n                flex: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.accentSlight,\r\n                borderRadius: 50,\r\n            },\r\n            textStyle: {\r\n                color: themes.light.text,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            selectedTextStyle: {\r\n                color: themes.dark.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"classic-rounded\") {\r\n        return {\r\n            containerStyle: {\r\n                height: 36,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderRadius: 20,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    } else if (variant === \"onboarding\") {\r\n        return {\r\n            containerStyle: {\r\n                height: 48,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.onboardingInputBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(styleVariant, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type LanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n    multiple?: boolean;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, multiple, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                single={!multiple}\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguagePicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, styleVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import * as React from \"react\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type OfferCategoryIconProps = {\r\n    category: OfferCategory;\r\n    size?: number;\r\n} & Partial<SvgProps>;\r\n\r\nclass OfferCategoryIcon extends React.Component<OfferCategoryIconProps> {\r\n    render(): JSX.Element {\r\n        const {category, size, ...svgProps} = this.props;\r\n\r\n        const SvgIcon = getLocalSvg(`offers.categories.${category}`, () => this.forceUpdate());\r\n        const iconSize = size || 75;\r\n\r\n        return <SvgIcon width={iconSize} height={iconSize} {...svgProps} />;\r\n    }\r\n}\r\n\r\nexport default OfferCategoryIcon;\r\n","import * as React from \"react\";\r\nimport {StyleProp, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SvgProps} from \"react-native-svg\";\r\nimport SemiHighlightedText from \"./SemiHighlightedText\";\r\nimport OfferCategoryIcon from \"./OfferCategoryIcon\";\r\n\r\n// Component props\r\nexport type FormattedOfferCategoryProps = {\r\n    category: OfferCategory;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconProps?: Partial<SvgProps>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconSize?: number;\r\n    fontSize?: number;\r\n    withoutIcon?: boolean;\r\n} & ThemeProps;\r\n\r\nclass FormattedOfferCategory extends React.Component<FormattedOfferCategoryProps> {\r\n    render(): JSX.Element {\r\n        const {containerStyle, category, theme, textStyle, iconProps, iconSize, fontSize, withoutIcon} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const translationKey = `onboarding.offers${category[0].toUpperCase() + category.slice(1)}.title`;\r\n\r\n        const size = iconSize || 75;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                {!withoutIcon && <OfferCategoryIcon category={category} size={size} {...iconProps} />}\r\n                <SemiHighlightedText text={i18n.t(translationKey)} textStyle={textStyle} fontSize={fontSize} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginLeft: -10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedOfferCategory);\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet, Platform} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight, webFontFamily} from \"../styles/general\";\r\nimport Chips from \"./Chips\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        else {\r\n            // This is useful for the web version; the ref won't be set because\r\n            // the element isn't mounted before opening\r\n            setTimeout(() => {\r\n                if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n            }, 250);\r\n        }\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        if (this.state.open && this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (apply) this.apply(this.state.tempSelected);\r\n    }\r\n\r\n    apply(items: string[]) {\r\n        if (this.props.onChange) this.props.onChange(items);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            buttonStyleVariant,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const {tempSelected} = this.state;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n        const buttonStyle = {...getPickerButtonStyleProps(buttonStyleVariant, theme)};\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        const select = this.state.items.get(locale) ? (\r\n            <SectionedMultiSelect\r\n                ref={this.selectRef}\r\n                items={this.state.items.get(locale)}\r\n                onSelectedItemsChange={(items) =>\r\n                    this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                }\r\n                selectedItems={tempSelected}\r\n                uniqueKey=\"id\"\r\n                displayKey=\"label\"\r\n                subKey=\"children\"\r\n                // Listeners\r\n                onCancel={() => this.close(false)}\r\n                onConfirm={() => this.close(true)}\r\n                // Dirty work-arounds to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                icons={undefined as never}\r\n                // Customization\r\n                showDropDowns={true}\r\n                readOnlyHeadings={true}\r\n                showChips={false}\r\n                showCancelButton={true}\r\n                selectedIconOnLeft={true}\r\n                animateDropDowns={false}\r\n                hideSelect={true}\r\n                noResultsComponent={<Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>}\r\n                searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                // Localization\r\n                confirmText={i18n.t(\"apply\")}\r\n                searchPlaceholderText={searchablePlaceholder}\r\n                // Styling\r\n                colors={{\r\n                    primary: theme.accent,\r\n                    cancel: theme.error,\r\n                    success: theme.okay,\r\n                    text: theme.text,\r\n                    subText: theme.textLight,\r\n                    searchPlaceholderTextColor: theme.textLight,\r\n                    selectToggleTextColor: theme.error,\r\n                    itemBackground: theme.cardBackground,\r\n                    subItemBackground: theme.cardBackground,\r\n                }}\r\n                confirmFontFamily={webFontFamily}\r\n                itemFontFamily={webFontFamily}\r\n                searchTextFontFamily={webFontFamily}\r\n                subItemFontFamily={webFontFamily}\r\n                styles={multiSelectStyles}\r\n            />\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        return (\r\n            <View {...viewProps} style={{position: \"relative\"}}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={buttonStyle.button}>\r\n                        <Text style={[buttonStyle.text, selectedItems.length == 0 ? buttonStyle.textNoneSelected : {}]}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                const selected = this.state.tempSelected.filter((v) => v !== item);\r\n                                this.setState({...this.state, tempSelected: selected});\r\n                                this.apply(selected);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {(Platform.OS === \"android\" || Platform.OS === \"ios\") && <View>{select}</View>}\r\n                {Platform.OS === \"web\" && (\r\n                    <CustomModal\r\n                        visible={this.state.open}\r\n                        noBackground\r\n                        fullWidth\r\n                        fullHeight\r\n                        renderContent={() => select}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalWrapper: {\r\n            justifyContent: \"center\",\r\n        },\r\n        container: {\r\n            backgroundColor: theme.cardBackground,\r\n            ...(Platform.OS === \"web\"\r\n                ? {\r\n                      marginVertical: 0,\r\n                      marginHorizontal: 0,\r\n                      alignSelf: \"center\",\r\n                      maxWidth: 700,\r\n                      maxHeight: \"90%\",\r\n                      boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.1)\",\r\n                  }\r\n                : {}),\r\n        },\r\n        scrollView: {paddingVertical: 10, ...(Platform.OS === \"web\" ? {overflowY: \"auto\"} : {})},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            ...styleTextLight,\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        subItemText: {\r\n            marginLeft: 5,\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * @see page 18 of {@link https://eqe.ge/res/docs/228085e.pdf}\r\n * @see page 18 of {@link http://uis.unesco.org/fr/file/1390} for french translations\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"welfare\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"care-elderly-disabled-adults\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"child-care-youth-services\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"social-work-counselling\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport SectionedMultiPicker, {SectionedMultiPickerProps} from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<SectionedMultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\nimport {StyleProp, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRoles: StaffRole[];\r\n    onChange?: (staffRoles: StaffRole[]) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    noOkUnderline?: boolean;\r\n};\r\n\r\nfunction StaffRolePicker(props: StaffRoleToggleProps & ThemeProps): JSX.Element {\r\n    const {staffRoles, multiple, atLeastOne, noOkUnderline, buttonStyle, buttonStyleVariant, onChange, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <PopUpSelector\r\n            values={STAFF_ROLES}\r\n            label={(r: string) => i18n.t(`staffRoles.${r}`)}\r\n            placeholder={i18n.t(`picker.callToAction`).replace(\"%d\", staffRoles.length + \"\")}\r\n            icon={(_, i: number) => <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.icon} />}\r\n            selected={staffRoles}\r\n            buttonStyle={buttonStyle}\r\n            buttonStyleVariant={buttonStyleVariant}\r\n            onSelect={(values: string[]) => {\r\n                if (onChange) onChange(values as StaffRole[]);\r\n            }}\r\n            multiple={multiple}\r\n            atLeastOne={atLeastOne}\r\n            noOkUnderline={noOkUnderline}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        icon: {\r\n            fontSize: 20,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(StaffRolePicker);\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport LanguagePicker from \"../components/LanguagePicker\";\r\nimport {Degree, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport FormattedOfferCategory from \"../components/FormattedOfferCategory\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport EducationFieldPicker from \"../components/EducationFieldPicker\";\r\nimport StaffRolePicker from \"../components/StaffRolePicker\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nexport const filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        // <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator />\r\n                <FormattedOfferCategory category={category} iconSize={60} fontSize={24} />\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            />\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                    <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                        <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                        <MaterialIcons name=\"refresh\" style={styles.resetButtonIcon} />\r\n                    </TouchableOpacity>\r\n                    <View style={styles.sectionContainer}>\r\n                        <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <MultiUniversityPicker\r\n                                    universities={filters.universities}\r\n                                    showChips={false}\r\n                                    onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <LanguagePicker\r\n                                    languages={filters.languages}\r\n                                    multiple\r\n                                    showChips={false}\r\n                                    onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <EducationFieldPicker\r\n                                    fields={filters.educationFields}\r\n                                    showChips={false}\r\n                                    onChange={(educationFields: string[]) => this.updateLocalFilters({educationFields})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({educationFields: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                            <RoleToggleMulti\r\n                                roles={filters.types}\r\n                                onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                                styleVariant=\"classic-rounded\"\r\n                            />\r\n                        </View>\r\n                        {filters.types.indexOf(\"student\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                                <DegreeToggleMulti\r\n                                    degrees={filters.degrees}\r\n                                    onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                    style={{width: \"100%\"}}\r\n                                    styleVariant=\"classic-rounded\"\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {filters.types.indexOf(\"staff\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"positions\")}</Text>\r\n                                <View style={styles.entryControls}>\r\n                                    <StaffRolePicker\r\n                                        staffRoles={filters.staffRoles}\r\n                                        onChange={(staffRoles: StaffRole[]) => this.updateLocalFilters({staffRoles})}\r\n                                        buttonStyle={{flex: 1}}\r\n                                        multiple\r\n                                        noOkUnderline\r\n                                    />\r\n                                    <ClearFilterButton onPress={() => this.updateLocalFilters({staffRoles: []})} />\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                    {offerSections}\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            paddingHorizontal: 40,\r\n            paddingTop: 10,\r\n            paddingBottom: 70,\r\n            width: \"100%\",\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            flex: 1,\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 50,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: themes.light.text,\r\n        },\r\n        resetButtonIcon: {\r\n            fontSize: 16,\r\n            color: themes.light.text,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {headerTitle} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {filteringScreenRef} from \"../../screens/MatchFilteringScreen\";\r\nimport {refreshFetchedProfiles} from \"../../state/matching/actions\";\r\n\r\n// Component props\r\nexport type FilteringScreenHeaderProps = ThemeProps & StackHeaderProps;\r\n\r\nclass FilteringScreenHeaderClass extends React.Component<FilteringScreenHeaderProps> {\r\n    back() {\r\n        const nav = this.props.navigation;\r\n        if (nav.canGoBack()) nav.goBack();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, insets, scene, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const title = headerTitle(scene.route.name as NavigatorRoute);\r\n\r\n        return (\r\n            <View style={[{paddingTop: insets.top}, hstyles.wrapper]}>\r\n                <TouchableOpacity style={{}} onPress={() => this.back()}>\r\n                    <MaterialIcons name=\"close\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n                <Text style={[hstyles.title, {textAlign: \"center\", flex: 1}]} numberOfLines={1}>\r\n                    {title}\r\n                </Text>\r\n                <TouchableOpacity\r\n                    style={{paddingVertical: 10}}\r\n                    onPress={() => {\r\n                        if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                        navigation.navigate(\"TabMatchingScreen\");\r\n                        store.dispatch(refreshFetchedProfiles());\r\n                    }}\r\n                >\r\n                    <MaterialIcons name=\"check\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst FilteringScreenHeaderComp = withTheme(FilteringScreenHeaderClass);\r\n\r\nexport default function FilteringScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <FilteringScreenHeaderComp {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Component props\r\nexport type FormattedMatchStatusProps = {\r\n    status: MatchActionStatus;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass FormattedMatchStatus extends React.Component<FormattedMatchStatusProps> {\r\n    render(): JSX.Element {\r\n        const {status, theme, containerStyle, textStyle, iconStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const text = i18n.t(`matching.history.status.${status}`);\r\n\r\n        let IconComponent;\r\n        let iconName;\r\n\r\n        switch (status) {\r\n            case MatchActionStatus.Blocked:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"block\";\r\n                break;\r\n            case MatchActionStatus.Declined:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-down\";\r\n                break;\r\n            case MatchActionStatus.Matched:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"people\";\r\n                break;\r\n            case MatchActionStatus.Requested:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-up\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <IconComponent style={[styles.icon, iconStyle]} name={iconName} />\r\n                <Text style={[styles.text, textStyle]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        icon: {\r\n            marginRight: 5,\r\n            paddingTop: 2,\r\n        },\r\n        text: {\r\n            fontSize: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedMatchStatus);\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport FormattedMatchStatus from \"../FormattedMatchStatus\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport BlockProfileModal, {BlockProfileModalClass} from \"../modals/BlockProfileModal\";\r\nimport {MatchActionStatus} from \"../../api/dto\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport {cancelMatchAction} from \"../../state/matching/actions\";\r\nimport SwipeTip from \"../SwipeTip\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\nexport type HistoryProfileCardProps = ThemeProps & {\r\n    item: MatchHistoryItem;\r\n    style?: ViewStyle;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 10,\r\n    borderRadius: 10,\r\n    minHeight: 100,\r\n};\r\n\r\nclass HistoryProfileCard extends React.Component<HistoryProfileCardProps> {\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    blockModalRef = React.createRef<BlockProfileModalClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {\r\n            theme,\r\n            item: {id, status},\r\n        } = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const reportButton = {\r\n            icon: \"report\",\r\n            text: i18n.t(\"matching.history.actions.report\"),\r\n            backgroundColor: theme.error,\r\n            color: themes.dark.text,\r\n            onPress: () => this.reportFormRef.current?.open(),\r\n        };\r\n        const blockButton = {\r\n            icon: \"block\",\r\n            text: i18n.t(\"matching.history.actions.block\"),\r\n            backgroundColor: theme.error,\r\n            color: themes.dark.text,\r\n            onPress: () => this.blockModalRef.current?.show(),\r\n        };\r\n        const cancelButton = {\r\n            icon: \"close\",\r\n            text: i18n.t(`matching.history.actions.cancel.${status}`),\r\n            backgroundColor: theme.accent,\r\n            color: themes.dark.text,\r\n            onPress: () => {\r\n                hideCard();\r\n                dispatch(cancelMatchAction(id));\r\n            },\r\n        };\r\n\r\n        if (status === MatchActionStatus.Blocked) return [reportButton, cancelButton];\r\n        else return [reportButton, blockButton, cancelButton];\r\n    }\r\n\r\n    render() {\r\n        const {theme, item, showSwipeTip} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const profile = item.profile;\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        return (\r\n            <>\r\n                <SwipeableCard\r\n                    ref={this.swipeableCardRef}\r\n                    looks={LOOKS}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    rightActions={(hideCard: () => void) => (\r\n                        <SwipeActionButtons\r\n                            id={`${item.profile.id}-${item.status}`}\r\n                            looks={LOOKS}\r\n                            side=\"right\"\r\n                            actions={this.getActions(hideCard)}\r\n                            buttonStyle={styles.actionButton}\r\n                        />\r\n                    )}\r\n                >\r\n                    <View style={styles.cardContent}>\r\n                        <View style={styles.avatarContainer}>\r\n                            <ProfileAvatar\r\n                                profile={profile}\r\n                                size={60}\r\n                                rounded\r\n                                containerStyle={styles.avatar}\r\n                                onPress={() => navigateToProfile(profile.id, store.getState())}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{fullName}</Text>\r\n                            {profile && (\r\n                                <FormattedUniversity\r\n                                    flagSize={14}\r\n                                    flagEmoji={true}\r\n                                    style={[styles.infoText, {marginLeft: -10}]}\r\n                                    university={profile.university}\r\n                                />\r\n                            )}\r\n                            <FormattedMatchStatus\r\n                                status={item.status}\r\n                                textStyle={styles.infoText}\r\n                                iconStyle={styles.infoText}\r\n                            />\r\n                        </View>\r\n                        {showSwipeTip && <SwipeTip direction=\"left\" iconStyle={styles.swipeTipIcon} />}\r\n                    </View>\r\n                </SwipeableCard>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={profile}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n                <BlockProfileModal\r\n                    ref={this.blockModalRef}\r\n                    profile={profile}\r\n                    onBlock={() => this.swipeableCardRef.current?.collapse()}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.8,\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 15,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTipIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 18,\r\n        },\r\n\r\n        actionButton: {\r\n            paddingHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(HistoryProfileCard);\r\n","import * as React from \"react\";\r\nimport {Platform, ViewStyle} from \"react-native\";\r\nimport {SearchBar, SearchBarProps} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BufferedSearchBarProps = {\r\n    bufferDelay: number;\r\n    onBufferedUpdate?: (text: string) => void;\r\n} & SearchBarProps;\r\n\r\nclass BufferedSearchBar extends React.Component<BufferedSearchBarProps> {\r\n    private updateTimeout: NodeJS.Timeout | null = null;\r\n\r\n    private onChange(text: string) {\r\n        const {bufferDelay, onBufferedUpdate} = this.props;\r\n\r\n        if (this.updateTimeout) clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            this.updateTimeout = null;\r\n            if (onBufferedUpdate) onBufferedUpdate(text);\r\n        }, bufferDelay);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const {bufferDelay, onBufferedUpdate, onChangeText, ...searchBarProps} = this.props;\r\n\r\n        return (\r\n            <SearchBar\r\n                onChangeText={(search: string) => {\r\n                    if (onChangeText) onChangeText(search);\r\n                    this.onChange(search);\r\n                }}\r\n                style={[Platform.OS === \"web\" && ({outline: \"none\"} as ViewStyle), searchBarProps.style]}\r\n                {...searchBarProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BufferedSearchBar;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {Button, withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {fetchHistory, refreshFetchedHistory, setHistoryFilters} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {HISTORY_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport HistoryProfileCard from \"../components/cards/HistoryProfileCard\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport {MATCH_ACTION_HISTORY_STATUSES} from \"../api/dto\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport BufferedSearchBar from \"../components/BufferedSearchBar\";\r\nimport themes from \"../constants/themes\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    historyItems: state.matching.historyItems,\r\n    fetchingHistory: state.matching.historyPagination.fetching,\r\n    canFetchMore: state.matching.historyPagination.canFetchMore,\r\n    currentPage: state.matching.historyPagination.page,\r\n    historyFilters: state.matching.historyFilters,\r\n}));\r\n\r\n// Component props\r\ntype MatchHistoryScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"MatchHistoryScreen\">;\r\n\r\n// Component state\r\ntype MatchHistoryScreenState = {\r\n    search: string;\r\n};\r\n\r\nclass MatchHistoryScreen extends React.Component<MatchHistoryScreenProps, MatchHistoryScreenState> {\r\n    private unsubscribeBlurEvent: null | (() => void) = null;\r\n\r\n    constructor(props: MatchHistoryScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    private onBlur(): void {\r\n        // This removes the previously fetched items in order to avoid a slow render\r\n        // when returning to the screen\r\n        this.props.dispatch(refreshFetchedHistory());\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.unsubscribeBlurEvent = this.props.navigation.addListener(\"blur\", () => this.onBlur());\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeBlurEvent) this.unsubscribeBlurEvent();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            historyItems,\r\n            theme,\r\n            historyFilters,\r\n            fetchingHistory,\r\n            canFetchMore,\r\n            currentPage,\r\n            navigation,\r\n        } = this.props;\r\n        const {search} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const filters = MATCH_ACTION_HISTORY_STATUSES;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.filtersContainer}>\r\n                    {filters.map((key: string) => (\r\n                        <Filter\r\n                            theme={theme}\r\n                            key={`match-history-filter-${key}`}\r\n                            filterKey={key}\r\n                            selected={historyFilters[key]}\r\n                            onPress={() => {\r\n                                dispatch(setHistoryFilters({[key]: !historyFilters[key]}));\r\n                                dispatch(refreshFetchedHistory());\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </View>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => dispatch(refreshFetchedHistory())}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={HISTORY_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchHistory(search))}\r\n                    fetching={fetchingHistory}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    items={historyItems}\r\n                    id={(it: MatchHistoryItem): string => it.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.history.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.history.noResultsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedHistory())}\r\n                    refreshOnFocus\r\n                    renderItem={(item: MatchHistoryItem, hide: () => void) => (\r\n                        <HistoryProfileCard\r\n                            key={`history-card-${item.id}-${item.status}`}\r\n                            item={item}\r\n                            onHidden={hide}\r\n                            showSwipeTip={item.id === historyItems[0].id}\r\n                        />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Filter({\r\n    theme,\r\n    selected,\r\n    filterKey,\r\n    onPress,\r\n}: {\r\n    theme: Theme;\r\n    selected: boolean;\r\n    filterKey: string;\r\n    onPress: () => void;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <Button\r\n            onPress={onPress}\r\n            title={i18n.t(`matching.history.status.${filterKey}`)}\r\n            containerStyle={styles.filterButtonContainer}\r\n            buttonStyle={[styles.filterButton, selected ? styles.filterButtonSelected : {}]}\r\n            titleStyle={[styles.filterLabel, selected ? styles.filterLabelSelected : {}]}\r\n            raised={false}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        // Filters\r\n        filtersContainer: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n            flexDirection: \"row\",\r\n        },\r\n        filterButtonContainer: {\r\n            flex: 1,\r\n            marginHorizontal: 15,\r\n            borderRadius: 25,\r\n        },\r\n        filterButton: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        filterButtonSelected: {\r\n            backgroundColor: theme.accent,\r\n        },\r\n        filterLabel: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.6,\r\n        },\r\n        filterLabelSelected: {\r\n            color: themes.dark.text,\r\n            fontWeight: \"600\",\r\n        },\r\n        filterIcon: {\r\n            fontSize: 18,\r\n            color: theme.text,\r\n            marginRight: 4,\r\n        },\r\n        filterIconSelected: {\r\n            color: themes.dark.text,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchHistoryScreen));\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {TabMatchingRoot} from \"./types\";\r\nimport TabMatchingScreen from \"../screens/TabMatchingScreen\";\r\nimport {screenTitle} from \"./utils\";\r\nimport MatchScreenHeader from \"../components/headers/MatchScreenHeader\";\r\nimport MatchFilteringScreen from \"../screens/MatchFilteringScreen\";\r\nimport FilteringScreenHeader from \"../components/headers/FilteringScreenHeader\";\r\nimport MatchHistoryScreen from \"../screens/MatchHistoryScreen\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nexport const TabMatchingNavigator = (): JSX.Element => (\r\n    <TabMatchingStack.Navigator>\r\n        <TabMatchingStack.Screen\r\n            name=\"TabMatchingScreen\"\r\n            options={() => ({\r\n                headerShown: false,\r\n                title: screenTitle(\"TabMatchingScreen\"),\r\n            })}\r\n        >\r\n            {(props) => (\r\n                <>\r\n                    <TabMatchingScreen {...props} />\r\n                    <MatchScreenHeader blur={true} {...props} />\r\n                </>\r\n            )}\r\n        </TabMatchingStack.Screen>\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchFilteringScreen\"\r\n            component={MatchFilteringScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchFilteringScreen\"),\r\n                header: FilteringScreenHeader,\r\n            }}\r\n        />\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchHistoryScreen\"\r\n            component={MatchHistoryScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchHistoryScreen\"),\r\n                header: (props: StackHeaderProps) => <MainHeader backButton={true} {...props} />,\r\n            }}\r\n        />\r\n    </TabMatchingStack.Navigator>\r\n);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Platform} from \"react-native\";\r\nimport {BottomTabBar, BottomTabBarProps} from \"@react-navigation/bottom-tabs\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {BLUR_TAB_INTENSITY} from \"../../styles/general\";\r\n\r\n// Component props\r\nexport type MainTabBarProps = ThemeProps & BottomTabBarProps & {insets: EdgeInsets};\r\n\r\nclass MainTabBarClass extends React.Component<MainTabBarProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets: {bottom},\r\n            ...tabBarProps\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <BlurView\r\n                style={styles.blurViewStyle}\r\n                tint={theme.id === \"dark\" ? \"dark\" : \"default\"}\r\n                intensity={BLUR_TAB_INTENSITY}\r\n            >\r\n                <BottomTabBar\r\n                    {...tabBarProps}\r\n                    activeTintColor={theme.accent}\r\n                    style={[styles.tabBar, {paddingBottom: bottom}]}\r\n                    tabStyle={styles.tab}\r\n                    iconStyle={styles.icon}\r\n                    showLabel={false}\r\n                />\r\n            </BlurView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        blurViewStyle:\r\n            Platform.OS === \"web\"\r\n                ? {} // On web, scrolling on certain pages breaks if the tab bar is position absolutely\r\n                : {\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      right: 0,\r\n                  },\r\n        tabBar: {\r\n            borderTopWidth: 0,\r\n            elevation: 0,\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        tab: {\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n        icon: {\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction MainTabBar(props: BottomTabBarProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <MainTabBarClass insets={insets} {...themeProps} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport type MainTabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\nexport function MainTabBarIcon({name, color}: {name: string} & MainTabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nexport default MainTabBar;\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {deleteGroupMember, setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport type GroupInviteResponseModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport class GroupInviteResponseModalClass extends React.Component<GroupInviteResponseModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const stillNeedsApproval = group.requiresApproval && group.myStatus !== GroupMemberStatus.InvitedByAdmin;\r\n        const descriptionText = group.description.length > 0 ? group.description : i18n.t(\"groups.description.none\");\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={group.name}\r\n                text={descriptionText}\r\n                justifyText\r\n                {...(stillNeedsApproval\r\n                    ? {\r\n                          additionalContent: (hide, textProps) => (\r\n                              <Text {...textProps} style={[textProps.style, {fontSize: 14}]}>\r\n                                  {i18n.t(\"groups.invite.approvalDisclaimerInvitee\")}\r\n                              </Text>\r\n                          ),\r\n                      }\r\n                    : {})}\r\n                buttons={[\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"groups.invite.decline\"),\r\n                        onPress: (hide) => {\r\n                            const localUser = store.getState().profile.user;\r\n                            if (localUser) dispatch(deleteGroupMember(group.id, localUser.id, false));\r\n                            hide();\r\n                        },\r\n                    },\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.invite.accept\"),\r\n                        onPress: (hide) => {\r\n                            const localUser = store.getState().profile.user;\r\n                            if (localUser) {\r\n                                if (stillNeedsApproval)\r\n                                    dispatch(setGroupMemberStatus(group.id, localUser.id, GroupMemberStatus.Pending));\r\n                                else dispatch(setGroupMemberStatus(group.id, localUser.id, GroupMemberStatus.Approved));\r\n                            }\r\n\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupInviteResponseModalClass);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, TouchableOpacityProps, StyleSheet, Text, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\nimport LocalImage from \"../LocalImage\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport GroupInviteResponseModal, {GroupInviteResponseModalClass} from \"../modals/GroupInviteResponseModal\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype MyGroupCardProps = {\r\n    group: Group | null;\r\n    isInvite?: boolean;\r\n} & TouchableOpacityProps &\r\n    ThemeProps;\r\n\r\nclass MyGroupCard extends React.Component<MyGroupCardProps> {\r\n    inviteResponseModalRef = React.createRef<GroupInviteResponseModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {group, theme, style, isInvite, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, group && !group.cover ? styles.containerWithoutCover : {}, style]}\r\n                activeOpacity={0.9}\r\n                onPress={() => {\r\n                    if (group) {\r\n                        if (isInvite) this.inviteResponseModalRef.current?.show();\r\n                        else navigateToGroup(group.id);\r\n                    }\r\n                }}\r\n                {...otherProps}\r\n            >\r\n                {group && (\r\n                    <>\r\n                        {group.cover && (\r\n                            <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                        )}\r\n                        {!group.cover && (\r\n                            <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                        )}\r\n                        <BlurView style={styles.textUnderlay} tint=\"dark\" intensity={5} />\r\n                        <Text style={styles.groupName} numberOfLines={3}>\r\n                            {group?.name}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n                {group && isInvite && <GroupInviteResponseModal ref={this.inviteResponseModalRef} group={group} />}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: 90,\r\n            height: 90,\r\n            borderRadius: 15,\r\n            marginRight: 10,\r\n            overflow: \"hidden\",\r\n        },\r\n        containerWithoutCover: {\r\n            borderWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        groupCover: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        textUnderlay: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        groupName: {\r\n            color: themes.dark.text,\r\n            textShadowColor: \"rgba(0, 0, 0, 0.7)\",\r\n            textShadowOffset: {width: 1, height: 1},\r\n            textShadowRadius: 10,\r\n            margin: 5,\r\n            zIndex: 1, // fix for web version\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MyGroupCard);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {fetchMyGroups, refreshFetchedMyGroups} from \"../state/groups/actions\";\r\nimport {GROUPS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {Group} from \"../model/groups\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport MyGroupCard from \"./cards/MyGroupCard\";\r\nimport Button from \"./Button\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    myGroups: state.groups.myGroups,\r\n    groupsDict: state.groups.groupsDict,\r\n    pagination: state.groups.myGroupsPagination,\r\n}));\r\n\r\n// Component props\r\nexport type MyGroupsViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {navigation: NavigationProp<never>};\r\n\r\nclass MyGroupsView extends React.Component<MyGroupsViewProps> {\r\n    render() {\r\n        const {theme, myGroups, groupsDict, pagination, navigation, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"groups.myGroups.title\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"groups.explore.button\")}\r\n                        icon={<MaterialIcons name=\"explore\" style={styles.exploreIcon} />}\r\n                        iconLeft\r\n                        style={styles.exploreButton}\r\n                        textStyle={styles.exploreButtonText}\r\n                        onPress={() =>\r\n                            rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"GroupsExploreScreen\"}})\r\n                        }\r\n                    />\r\n                </View>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => (dispatch as MyThunkDispatch)(fetchMyGroups())}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={myGroups.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    horizontal\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.myGroups.none\")}</Text>}\r\n                    refresh={() => (dispatch as MyThunkDispatch)(refreshFetchedMyGroups())}\r\n                    renderItem={(group: Group) => <MyGroupCard key={group.id} group={group} />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            marginBottom: 20,\r\n            paddingHorizontal: 15,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {paddingHorizontal: 15},\r\n\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            maxWidth: 200,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n\r\n        exploreButton: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 5,\r\n            borderRadius: 100,\r\n            backgroundColor: theme.background,\r\n            justifyContent: \"center\",\r\n        },\r\n        exploreButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        exploreIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n            marginRight: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MyGroupsView));\r\n","import React from \"react\";\r\nimport {StyleProp, View, TextInput, ViewStyle, StyleSheet, TextStyle, Platform} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport Button from \"./Button\";\r\nimport i18n from \"i18n-js\";\r\nimport {MAX_COMMENT_LENGTH, MIN_COMMENT_LENGTH} from \"../validators\";\r\n\r\nexport type CommentTextInputProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    onSend?: (text: string) => void;\r\n} & ThemeProps;\r\n\r\ntype CommentTextInputState = {\r\n    value: string;\r\n    height: number;\r\n    focused: boolean;\r\n};\r\n\r\nconst MIN_HEIGHT = 40;\r\nconst MAX_HEIGHT = 100;\r\n\r\nexport class CommentTextInputClass extends React.Component<CommentTextInputProps, CommentTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    constructor(props: CommentTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false, value: \"\", height: 0} as CommentTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    private onFocus(): void {\r\n        return;\r\n    }\r\n\r\n    private onBlur(): void {\r\n        return;\r\n    }\r\n\r\n    private send(): void {\r\n        const {onSend} = this.props;\r\n        const {value} = this.state;\r\n\r\n        this.setState({...this.state, value: \"\", height: MIN_HEIGHT});\r\n        this.inputRef.current?.blur();\r\n        if (onSend) onSend(value);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, theme} = this.props;\r\n        const {value} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const height = Math.max(MIN_HEIGHT, this.state.height);\r\n\r\n        const icons =\r\n            value.length < MIN_COMMENT_LENGTH ? (\r\n                <></>\r\n            ) : (\r\n                <Button\r\n                    style={styles.inputButton}\r\n                    onPress={() => this.send()}\r\n                    icon={<MaterialIcons name={\"send\"} style={styles.inputButtonIcon} />}\r\n                />\r\n            );\r\n\r\n        return (\r\n            <View style={[styles.wrapper, {height}, style, this.state.focused ? styles.focusedStyle : {}]}>\r\n                <TextInput\r\n                    ref={this.inputRef}\r\n                    style={[\r\n                        styles.input,\r\n                        this.state.focused && Platform.OS === \"web\" && ({outline: \"none\"} as TextStyle),\r\n                        this.state.focused && styles.inputFocusedStyle,\r\n                    ]}\r\n                    onBlur={() => {\r\n                        this.onBlur();\r\n                        this.setState({focused: false});\r\n                    }}\r\n                    onFocus={() => {\r\n                        this.onFocus();\r\n                        this.setState({focused: true});\r\n                    }}\r\n                    placeholder={i18n.t(\"groups.comments.placeholder\")}\r\n                    multiline\r\n                    numberOfLines={4}\r\n                    maxLength={MAX_COMMENT_LENGTH}\r\n                    value={value}\r\n                    placeholderTextColor={theme.textLight}\r\n                    onChangeText={(value) => this.setState({...this.state, value})}\r\n                    onContentSizeChange={(event) =>\r\n                        this.setState({height: Math.min(MAX_HEIGHT, event.nativeEvent.contentSize.height)})\r\n                    }\r\n                />\r\n                <View>{icons}</View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            borderRadius: 20,\r\n        },\r\n        focusedStyle: {\r\n            borderWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        inputFocusedStyle: {},\r\n        input: {\r\n            paddingLeft: 20,\r\n            paddingVertical: 10,\r\n            flex: 1,\r\n            height: \"100%\",\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        inputButton: {\r\n            padding: 10,\r\n        },\r\n        inputButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CommentTextInputClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, StyleProp, ViewStyle, TextStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {PostComment} from \"../model/groups\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {setVote} from \"../state/groups/actions\";\r\nimport {GroupPost, GroupVoteStatus} from \"../model/groups\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport Button from \"./Button\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\ntype GroupVoteButtonProps = {\r\n    vote: GroupVoteStatus;\r\n    currentStatus: GroupVoteStatus;\r\n    groupId: string;\r\n    post: GroupPost;\r\n    comment?: PostComment;\r\n    style?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupVoteButton extends React.Component<GroupVoteButtonProps> {\r\n    render(): JSX.Element {\r\n        const {groupId, post, comment, vote, currentStatus, theme, style, iconStyle} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const isSet = vote === currentStatus;\r\n\r\n        return (\r\n            <Button\r\n                onPress={() => {\r\n                    const val = isSet ? GroupVoteStatus.Neutral : vote;\r\n                    dispatch(setVote(groupId, post.id, comment?.id || null, val, currentStatus));\r\n                }}\r\n                icon={\r\n                    <MaterialIcons\r\n                        name={vote === GroupVoteStatus.Upvote ? \"arrow-upward\" : \"arrow-downward\"}\r\n                        style={[styles.icon, iconStyle, styles.iconOverride, isSet && styles.nonNeutralIcon]}\r\n                    />\r\n                }\r\n                style={style}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        icon: {\r\n            fontSize: 20,\r\n        },\r\n        iconOverride: {\r\n            color: themes.light.textLight,\r\n            opacity: 0.5,\r\n        },\r\n        nonNeutralIcon: {\r\n            color: theme.accent,\r\n            opacity: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupVoteButton);\r\n","import React from \"react\";\r\nimport {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {updatePostComment} from \"../../state/groups/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"../ValidatedTextInput\";\r\nimport {MAX_COMMENT_LENGTH, VALIDATOR_COMMENT_TEXT} from \"../../validators\";\r\nimport FormError from \"../forms/FormError\";\r\n\r\nexport type EditCommentModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; post: GroupPost; comment: PostComment};\r\n\r\ntype EditCommentModalState = {text: string; error?: string};\r\n\r\nexport class EditCommentModalClass extends React.Component<EditCommentModalProps, EditCommentModalState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: EditCommentModalProps) {\r\n        super(props);\r\n        this.state = {text: props.comment.text, error: undefined};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, comment, theme, ...otherProps} = this.props;\r\n        const {text, error} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const textInputStyle: Partial<ValidatedTextInputProps> = {\r\n            wrapperStyle: {flex: 1},\r\n            style: {flex: 1},\r\n            inputStyle: {\r\n                fontSize: 16,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 5,\r\n                color: theme.text,\r\n                textAlignVertical: \"top\",\r\n            },\r\n            placeholderTextColor: theme.inputPlaceholder,\r\n        };\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"groups.editComment.title\")}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        onPress: (hide) => {\r\n                            if (text != comment.text) dispatch(updatePostComment(groupId, post.id, comment.id, {text}));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={() => (\r\n                    <>\r\n                        <ValidatedTextInput\r\n                            value={text}\r\n                            onChangeText={(text) => {\r\n                                VALIDATOR_COMMENT_TEXT.validate(text)\r\n                                    .then(() => this.setState({...this.state, text, error: undefined}))\r\n                                    .catch((validation) =>\r\n                                        this.setState({...this.state, text, error: validation.errors[0] || undefined}),\r\n                                    );\r\n                            }}\r\n                            multiline\r\n                            numberOfLines={4}\r\n                            maxLength={MAX_COMMENT_LENGTH}\r\n                            {...textInputStyle}\r\n                        />\r\n                        <FormError error={error} />\r\n                    </>\r\n                )}\r\n                contentContainerStyle={styles.contentContainer}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        contentContainer: {\r\n            height: 200,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditCommentModalClass);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deletePostComment} from \"../../state/groups/actions\";\r\nimport {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\n\r\nexport type DeleteCommentConfirmModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; post: GroupPost; comment: PostComment};\r\n\r\nclass DeleteCommentConfirmModal extends React.Component<DeleteCommentConfirmModalProps> {\r\n    render() {\r\n        const {groupId, post, comment, theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"groups.deleteComment.title\")}\r\n                text={i18n.t(\"groups.deleteComment.text\")}\r\n                icon={(props) => <FontAwesome name=\"warning\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            (store.dispatch as MyThunkDispatch)(deletePostComment(groupId, post.id, comment.id));\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteCommentConfirmModal);\r\n","import * as React from \"react\";\r\nimport ReadMoreComp, {ReadMoreProps as ReadMoreCompProps} from \"react-native-read-more-text\";\r\n\r\nexport type ReadMoreProps = ReadMoreCompProps;\r\n\r\nexport class ReadMore extends React.Component<ReadMoreProps> {\r\n    render(): JSX.Element {\r\n        const {children, ...props} = this.props;\r\n        return <ReadMoreComp {...props}>{children}</ReadMoreComp>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View, Platform} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus, PostComment} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport {formatCommentDate} from \"../../model/utils\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport QuickFormReport from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport EditCommentModal from \"../modals/EditCommentModal\";\r\nimport DeleteCommentConfirmModal from \"../modals/DeleteCommentConfirmModal\";\r\nimport Button from \"../Button\";\r\nimport {ReadMore} from \"../ReadMore\";\r\nimport store from \"../../state/store\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localUser: state.profile.user,\r\n}));\r\n\r\n// Component props\r\ntype GroupCommentCardProps = {\r\n    groupId: string;\r\n    post: GroupPost | null;\r\n    comment: PostComment | null;\r\n    closeComments: () => void;\r\n    onPressReplyTo: () => void;\r\n    onExpand?: (collapse: () => void) => void;\r\n    onCollapse?: () => void;\r\n    toggleChildren: () => void;\r\n    adminView: boolean;\r\n} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype GroupCommentCardState = {\r\n    expanded: boolean;\r\n};\r\n\r\nconst EXPANDED_BOTTOM_HEIGHT = 35;\r\nconst DEPTH_OFFSET = 8;\r\nconst BORDER_LEFT_WIDTH = 4;\r\n\r\nclass GroupCommentCard extends React.Component<GroupCommentCardProps, GroupCommentCardState> {\r\n    private bottomHeight = new ReAnimated.Value<number>(0);\r\n\r\n    constructor(props: GroupCommentCardProps) {\r\n        super(props);\r\n        this.state = {expanded: false};\r\n    }\r\n\r\n    private setExpanded(expanded: boolean): void {\r\n        const {onExpand, onCollapse} = this.props;\r\n\r\n        this.setState({...this.state, expanded});\r\n        animateValue(this.bottomHeight, {\r\n            toValue: expanded ? EXPANDED_BOTTOM_HEIGHT : 0,\r\n            duration: 100,\r\n            easing: Easing.linear,\r\n        });\r\n\r\n        if (!expanded && onCollapse) onCollapse();\r\n        if (expanded && onExpand) onExpand(() => this.setExpanded(false));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            comment,\r\n            post,\r\n            groupId,\r\n            closeComments,\r\n            onPressReplyTo,\r\n            localUser,\r\n            theme,\r\n            adminView,\r\n            toggleChildren,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {expanded} = this.state;\r\n\r\n        const styles = themedStyles(expanded)(theme);\r\n        const fromLocal = comment && localUser && comment.creator.id === localUser.id;\r\n        const name = comment ? `${comment.creator.firstName} ${comment.creator.lastName}` : \"\";\r\n\r\n        const depth = comment?.depth || 0;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.outerContainer, expanded ? styles.outerContainerExpanded : {}]}\r\n                activeOpacity={0.9}\r\n                onPress={() => this.setExpanded(!this.state.expanded)}\r\n                onLongPress={() => toggleChildren()}\r\n                delayLongPress={250}\r\n                {...otherProps}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.innerContainer,\r\n                        expanded ? styles.innerContainerExpanded : {},\r\n                        {marginLeft: depth * DEPTH_OFFSET, borderLeftWidth: depth > 0 ? BORDER_LEFT_WIDTH : 0},\r\n                    ]}\r\n                >\r\n                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                        <ProfileAvatar\r\n                            profile={comment?.creator}\r\n                            size={32}\r\n                            containerStyle={styles.avatarContainer}\r\n                            rounded\r\n                            onPress={() => {\r\n                                if (comment) {\r\n                                    closeComments();\r\n                                    navigateToProfile(comment.creator.id, store.getState());\r\n                                }\r\n                            }}\r\n                        />\r\n                        <View style={styles.content}>\r\n                            <View style={{flexDirection: \"row\"}}>\r\n                                <Text style={[styles.topText, styles.name]}>{name}</Text>\r\n                                <Text style={[styles.topText, {flex: 1}]} numberOfLines={1}>\r\n                                    {comment && `, ${formatCommentDate(comment)}`}\r\n                                </Text>\r\n                                <Text style={styles.topText}>\r\n                                    {comment\r\n                                        ? comment.score === 0\r\n                                            ? i18n.t(\"groups.points.zero\")\r\n                                            : comment.score === 1\r\n                                            ? i18n.t(\"groups.points.singular\")\r\n                                            : i18n.t(\"groups.points.plural\", {num: comment.score})\r\n                                        : \"\"}\r\n                                </Text>\r\n                            </View>\r\n                            <ReadMore\r\n                                numberOfLines={3}\r\n                                renderTruncatedFooter={(handlePress) => (\r\n                                    <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                        <Text style={[styles.text, styles.textFooter]}>... {i18n.t(\"showMore\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                )}\r\n                                renderRevealedFooter={(handlePress) => (\r\n                                    <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                        <Text style={[styles.text, styles.textFooter]}>{i18n.t(\"showLess\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                )}\r\n                            >\r\n                                <Text style={styles.text}>{comment?.text}</Text>\r\n                            </ReadMore>\r\n                        </View>\r\n                    </View>\r\n                    {/* Comment footer */}\r\n                    {post && comment && (\r\n                        <ReAnimated.View\r\n                            style={[styles.bottom, {height: this.bottomHeight, opacity: expanded ? 1 : 0}]}\r\n                        >\r\n                            <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                {fromLocal && (\r\n                                    <EditCommentModal\r\n                                        groupId={groupId}\r\n                                        post={post}\r\n                                        comment={comment}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.bottomButton}\r\n                                                icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"edit\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                {(adminView || fromLocal) && (\r\n                                    <DeleteCommentConfirmModal\r\n                                        groupId={groupId}\r\n                                        post={post}\r\n                                        comment={comment}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.bottomButton}\r\n                                                icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"delete\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                {!fromLocal && (\r\n                                    <QuickFormReport\r\n                                        entityType={ReportEntityType.COMMENT_ENTITY}\r\n                                        entity={comment}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.bottomButton}\r\n                                                icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"report\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                            </View>\r\n                            <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                <Button\r\n                                    style={styles.bottomButton}\r\n                                    icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"reply\" />}\r\n                                    onPress={onPressReplyTo}\r\n                                />\r\n                                <GroupVoteButton\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    comment={comment}\r\n                                    style={styles.bottomButton}\r\n                                    currentStatus={comment.voteStatus}\r\n                                    vote={GroupVoteStatus.Upvote}\r\n                                />\r\n                                <GroupVoteButton\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    comment={comment}\r\n                                    style={styles.bottomButton}\r\n                                    currentStatus={comment.voteStatus}\r\n                                    vote={GroupVoteStatus.Downvote}\r\n                                />\r\n                            </View>\r\n                        </ReAnimated.View>\r\n                    )}\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (expanded: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            outerContainer: {\r\n                width: \"100%\",\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            outerContainerExpanded: {},\r\n            innerContainer: {\r\n                borderLeftColor: theme.componentBorder,\r\n                padding: 10,\r\n            },\r\n            innerContainerExpanded: {\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n\r\n            bottom: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"flex-end\",\r\n                justifyContent: \"space-between\",\r\n                overflow: \"hidden\",\r\n            },\r\n\r\n            avatarContainer: {\r\n                backgroundColor: theme.accentSlight,\r\n                marginRight: 8,\r\n            },\r\n            topText: {\r\n                fontSize: 13,\r\n                color: themes.light.textLight,\r\n            },\r\n            name: {\r\n                ...(Platform.OS === \"ios\" ? {fontWeight: \"600\"} : {}),\r\n            },\r\n            content: {\r\n                flex: 1,\r\n            },\r\n            text: {\r\n                fontSize: 13,\r\n                color: expanded ? themes.light.text : theme.text,\r\n            },\r\n            textFooter: {\r\n                color: theme.accent,\r\n            },\r\n\r\n            bottomButton: {\r\n                marginHorizontal: 10,\r\n            },\r\n            bottomButtonIcon: {\r\n                fontSize: 24,\r\n                color: themes.light.textLight,\r\n            },\r\n        });\r\n    });\r\n\r\nexport default reduxConnector(withTheme(GroupCommentCard));\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {STATUS_BAR_THEME_OVERRIDES} from \"../constants/route-settings\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\nimport {rootNavigationRef} from \"../navigation/utils\";\r\nimport {ThemeKey, ThemeProps} from \"../types\";\r\n\r\nexport const statusBarRef = React.createRef<ThemedStatusBarClass>();\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ThemeProps;\r\n\r\ntype ThemedStatusBarState = {style: ThemeKey};\r\n\r\nclass ThemedStatusBarClass extends React.Component<ThemedStatusBarProps, ThemedStatusBarState> {\r\n    constructor(props: ThemedStatusBarProps) {\r\n        super(props);\r\n        this.state = {style: this.getDefaultStyle()};\r\n    }\r\n\r\n    private getThemeOverride(): ThemeKey | undefined {\r\n        const routeName = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n        return STATUS_BAR_THEME_OVERRIDES[routeName];\r\n    }\r\n\r\n    private getDefaultStyle(): ThemeKey {\r\n        return this.props.theme.id == \"dark\" ? \"light\" : \"dark\";\r\n    }\r\n\r\n    setStyle(style?: ThemeKey): void {\r\n        const newStyle = style || this.getDefaultStyle();\r\n        if (newStyle !== this.state.style) {\r\n            this.setState({style: newStyle});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    getStyle(): ThemeKey {\r\n        return this.state.style;\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const nav = rootNavigationRef.current;\r\n\r\n        if (nav) {\r\n            // Ensure we update the status bar theme when needed\r\n            nav.addListener(\"state\", () => {\r\n                const override = this.getThemeOverride();\r\n                this.setStyle(override);\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style} = this.state;\r\n        return <StatusBar style={style} />;\r\n    }\r\n}\r\n\r\nexport default withTheme((props: ThemedStatusBarProps) => <ThemedStatusBarClass ref={statusBarRef} {...props} />);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Keyboard, RefreshControl, ScrollView, StyleSheet, Text, View} from \"react-native\";\r\nimport {Theme, ThemeKey, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus, PostComment} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport CustomModal, {CustomModalClass, ModalActivator} from \"./CustomModal\";\r\nimport CommentTextInput, {CommentTextInputClass} from \"../CommentTextInput\";\r\nimport store from \"../../state/store\";\r\nimport {createPostComment, fetchPostComments, fetchPostCommentsRefresh} from \"../../state/groups/actions\";\r\nimport GroupCommentCard from \"../cards/GroupCommentCard\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport Button from \"../Button\";\r\nimport {CreatePostCommentDto} from \"../../api/dto\";\r\nimport {MAX_COMMENTS_DEPTH} from \"../../constants/config\";\r\nimport Animated, {Easing} from \"react-native-reanimated\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport {statusBarRef} from \"../ThemedStatusBar\";\r\n\r\n// Component props\r\nexport type GroupPostCommentsModalProps = {\r\n    groupId: string;\r\n    post: GroupPost;\r\n    activator?: ModalActivator;\r\n    adminView: boolean;\r\n} & ThemeProps;\r\n\r\ntype GroupPostCommentsModalState = {\r\n    replyingTo: PostComment | null;\r\n};\r\n\r\nexport class GroupPostCommentsModalClass extends React.Component<\r\n    GroupPostCommentsModalProps,\r\n    GroupPostCommentsModalState\r\n> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n    commentTextInputRef = React.createRef<CommentTextInputClass>();\r\n    collapseCurrentlyExpanded: (() => void) | null = null;\r\n    initialStatusBarStyle: ThemeKey | undefined = undefined;\r\n\r\n    constructor(props: GroupPostCommentsModalProps) {\r\n        super(props);\r\n        this.state = {replyingTo: null};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n\r\n        const {theme} = this.props;\r\n        this.initialStatusBarStyle = statusBarRef.current?.getStyle();\r\n        statusBarRef.current?.setStyle(theme.id === \"dark\" ? \"light\" : \"dark\");\r\n    }\r\n\r\n    private setReplyingTo(comment: PostComment | null): void {\r\n        // If this comment would exceed the maximum depth, respond to its parent instead\r\n        if (comment && comment.parentId && comment.depth >= MAX_COMMENTS_DEPTH) {\r\n            const parent = this.props.post.comments[comment.parentId];\r\n            if (parent) {\r\n                this.setReplyingTo(parent);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({...this.state, replyingTo: comment});\r\n        if (comment !== null) this.commentTextInputRef.current?.focus();\r\n    }\r\n\r\n    private createCommentComponent = (commentId: string, hide: () => void): JSX.Element => {\r\n        const {post, groupId, adminView} = this.props;\r\n\r\n        const comment = post.comments[commentId];\r\n        const children = comment.childrenIds.map((id: string) => this.createCommentComponent(id, hide));\r\n        const childrenContainerRef = React.createRef<CommentChildrenContainer>();\r\n\r\n        return (\r\n            <React.Fragment key={`${groupId}-${post.id}-comment-${comment.id}`}>\r\n                <GroupCommentCard\r\n                    groupId={groupId}\r\n                    post={post}\r\n                    comment={comment}\r\n                    closeComments={hide}\r\n                    onPressReplyTo={() => this.setReplyingTo(comment)}\r\n                    onExpand={(collapse) => {\r\n                        if (this.collapseCurrentlyExpanded) this.collapseCurrentlyExpanded();\r\n                        this.collapseCurrentlyExpanded = collapse;\r\n                        Keyboard.dismiss();\r\n                    }}\r\n                    onCollapse={() => {\r\n                        this.collapseCurrentlyExpanded = null;\r\n                        Keyboard.dismiss();\r\n                    }}\r\n                    toggleChildren={() => childrenContainerRef.current?.toggle()}\r\n                    adminView={adminView}\r\n                />\r\n                <CommentChildrenContainer ref={childrenContainerRef}>{children}</CommentChildrenContainer>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    private fetchFirstComments(): void {\r\n        const {post} = this.props;\r\n\r\n        if (post && post.commentIds.length === 0) {\r\n            const pagination = post.commentsPagination;\r\n            if (pagination.page === 1) this.fetchMore();\r\n        }\r\n    }\r\n\r\n    private fetchMore(): void {\r\n        const {groupId, post} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        if (post && post.commentsPagination.canFetchMore && !post.commentsPagination.fetching)\r\n            dispatch(fetchPostComments(groupId, post.id));\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupPostCommentsModalProps): void {\r\n        const oldPagination = oldProps.post.commentsPagination;\r\n        const pagination = this.props.post.commentsPagination;\r\n        if (oldPagination.page > 1 && pagination.page === 1) this.fetchFirstComments();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {post, groupId, theme} = this.props;\r\n        const {replyingTo} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const pagination = post.commentsPagination;\r\n\r\n        return (\r\n            <SafeAreaInsetsContext.Consumer>\r\n                {(insets) => (\r\n                    <CustomModal\r\n                        ref={this.modalRef}\r\n                        animationType=\"slide\"\r\n                        fullHeight\r\n                        statusBarTranslucent\r\n                        modalViewStyle={{\r\n                            paddingTop: insets?.top,\r\n                            paddingBottom: insets?.bottom,\r\n                            paddingHorizontal: 0,\r\n                            width: \"100%\",\r\n                            maxWidth: 1000,\r\n                        }}\r\n                        onShow={() => this.fetchFirstComments()}\r\n                        onHide={() => {\r\n                            this.setReplyingTo(null);\r\n                            statusBarRef.current?.setStyle(this.initialStatusBarStyle);\r\n                        }}\r\n                        renderContent={(hide) => (\r\n                            <View style={styles.container}>\r\n                                <View style={styles.top}>\r\n                                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                        <Button\r\n                                            style={styles.topButton}\r\n                                            icon={<MaterialIcons name=\"close\" style={styles.topButtonIcon} />}\r\n                                            onPress={hide}\r\n                                        />\r\n                                    </View>\r\n                                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                        <Text style={styles.points}>\r\n                                            {post.score === 0\r\n                                                ? i18n.t(\"groups.points.zero\")\r\n                                                : post.score === 1\r\n                                                ? i18n.t(\"groups.points.singular\")\r\n                                                : i18n.t(\"groups.points.plural\", {num: post.score})}\r\n                                        </Text>\r\n                                        <GroupVoteButton\r\n                                            groupId={groupId}\r\n                                            post={post}\r\n                                            currentStatus={post.voteStatus}\r\n                                            vote={GroupVoteStatus.Upvote}\r\n                                            style={styles.topButton}\r\n                                            iconStyle={styles.topButtonIcon}\r\n                                        />\r\n                                        <GroupVoteButton\r\n                                            groupId={groupId}\r\n                                            post={post}\r\n                                            currentStatus={post.voteStatus}\r\n                                            vote={GroupVoteStatus.Downvote}\r\n                                            style={styles.topButton}\r\n                                            iconStyle={styles.topButtonIcon}\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                                <ScrollView\r\n                                    keyboardShouldPersistTaps=\"handled\"\r\n                                    contentContainerStyle={styles.comments}\r\n                                    refreshControl={\r\n                                        <RefreshControl\r\n                                            refreshing={pagination.fetching}\r\n                                            onRefresh={() => dispatch(fetchPostCommentsRefresh(groupId, post.id))}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    {post.commentIds.length === 0 && !pagination.fetching && (\r\n                                        <Text style={styles.noCommentsText}>{i18n.t(\"groups.comments.none\")}</Text>\r\n                                    )}\r\n                                    {post.commentIds.map(\r\n                                        // Render all parent comments (this will recursively render the children)\r\n                                        (id) => !post.comments[id].parentId && this.createCommentComponent(id, hide),\r\n                                    )}\r\n                                    {pagination.fetching && post.commentIds.length > 0 && (\r\n                                        <ActivityIndicator size=\"large\" color={theme.accent} />\r\n                                    )}\r\n                                    {pagination.canFetchMore && !pagination.fetching && (\r\n                                        <TouchableOpacity\r\n                                            style={styles.viewMoreComments}\r\n                                            onPress={() => this.fetchMore()}\r\n                                        >\r\n                                            <Text style={styles.viewMoreCommentsText}>\r\n                                                View more ({post.commentsCount - post.commentIds.length})\r\n                                            </Text>\r\n                                        </TouchableOpacity>\r\n                                    )}\r\n                                </ScrollView>\r\n                                <View style={styles.bottom}>\r\n                                    <View style={styles.replyToContainer}>\r\n                                        {replyingTo && (\r\n                                            <>\r\n                                                <Button\r\n                                                    style={styles.replyToClose}\r\n                                                    icon={\r\n                                                        <MaterialIcons name=\"close\" style={styles.replyToCloseIcon} />\r\n                                                    }\r\n                                                    onPress={() => this.setReplyingTo(null)}\r\n                                                />\r\n                                                <Text style={styles.replyToText}>\r\n                                                    {i18n.t(\"groups.comments.replyTo\", {\r\n                                                        name: `${replyingTo.creator.firstName} ${replyingTo.creator.lastName}`,\r\n                                                    })}\r\n                                                </Text>\r\n                                            </>\r\n                                        )}\r\n                                    </View>\r\n                                    <CommentTextInput\r\n                                        ref={this.commentTextInputRef}\r\n                                        onSend={(text) => {\r\n                                            const dto: CreatePostCommentDto = {\r\n                                                text,\r\n                                                parentId: replyingTo?.id || undefined,\r\n                                            };\r\n                                            dispatch(createPostComment(groupId, post.id, dto));\r\n                                            this.setState({...this.state, replyingTo: null});\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    />\r\n                )}\r\n            </SafeAreaInsetsContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentChildrenContainer extends React.Component<React.PropsWithChildren<unknown>> {\r\n    private EXTRA_HEIGHT_OFFSET = 100;\r\n    initialHeight = 0;\r\n    maxHeight = new Animated.Value<number>(1e6);\r\n    open = true;\r\n\r\n    toggle(): void {\r\n        this.open = !this.open;\r\n        const toValue = this.open ? this.initialHeight + this.EXTRA_HEIGHT_OFFSET : 0;\r\n        animateValue(this.maxHeight, {toValue, duration: 250, easing: Easing.cubic});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Animated.View\r\n                style={{maxHeight: this.maxHeight, overflow: \"hidden\"}}\r\n                onLayout={(e) => {\r\n                    const h = e.nativeEvent.layout.height;\r\n                    if (h > this.initialHeight) {\r\n                        this.initialHeight = h;\r\n                        if (this.open) this.maxHeight.setValue(this.initialHeight + this.EXTRA_HEIGHT_OFFSET);\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </Animated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            padding: 0,\r\n            marginBottom: 15,\r\n        },\r\n        top: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        comments: {\r\n            paddingBottom: 30,\r\n        },\r\n        bottom: {\r\n            justifyContent: \"space-between\",\r\n            paddingHorizontal: 20,\r\n            paddingTop: 2,\r\n            paddingBottom: 7,\r\n            borderTopWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n\r\n        points: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            marginRight: 5,\r\n        },\r\n        topButton: {\r\n            padding: 10,\r\n        },\r\n        topButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        noCommentsText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            alignSelf: \"center\",\r\n            textAlign: \"center\",\r\n            marginTop: 25,\r\n            maxWidth: 250,\r\n        },\r\n\r\n        replyToContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        replyToText: {color: theme.textLight},\r\n        replyToClose: {\r\n            padding: 5,\r\n        },\r\n        replyToCloseIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 20,\r\n        },\r\n\r\n        viewMoreComments: {\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 10,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        viewMoreCommentsText: {\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupPostCommentsModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput, FormTextInputProps} from \"./FormTextInput\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {CreateGroupPostDto, RemoteValidationErrors} from \"../../api/dto\";\r\nimport {createGroupPost, updateGroupPost} from \"../../state/groups/actions\";\r\nimport {MAX_POST_LENGTH, VALIDATOR_POST_TEXT} from \"../../validators\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {noop} from \"lodash\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\ntype FormState = {text: string};\r\n\r\n// Use Yup to create the validation schema\r\nconst EditPostFormSchema = Yup.object().shape({\r\n    text: VALIDATOR_POST_TEXT,\r\n});\r\n\r\n// Component props\r\ntype EditPostFormProps = FormProps<FormState> &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string;\r\n        post?: GroupPost; // if not given a post, one will be created instead of editing\r\n        containerStyle?: StyleProp<ViewStyle>;\r\n    };\r\n\r\n// Component state\r\ntype EditPostFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nexport class EditPostFormClass extends React.Component<EditPostFormProps, EditPostFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n    submitForm: () => void = noop;\r\n    textInputRef = React.createRef<FormTextInput>();\r\n\r\n    constructor(props: EditPostFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    private getCreationDto(values: FormState): CreateGroupPostDto {\r\n        const {text} = values;\r\n        return {type: \"simple\", text};\r\n    }\r\n\r\n    private initialState(): FormState {\r\n        const {post} = this.props;\r\n        if (post) return {text: post.text};\r\n        else return {text: \"\"};\r\n    }\r\n\r\n    private submit(values: FormState): void {\r\n        const {groupId, post, onSuccessfulSubmit} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        const dto = this.getCreationDto(values);\r\n\r\n        // Make the promise cancellable to avoid updates when the component has been unmounted\r\n        dispatch(post === undefined ? createGroupPost(groupId, dto) : updateGroupPost(groupId, post.id, dto)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    triggerSubmit(): void {\r\n        this.textInputRef.current?.blur();\r\n        this.submitForm();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, post, containerStyle, localUser} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const createMode = post === undefined;\r\n        const poster = post ? post.creator : localUser?.profile;\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.top}>\r\n                    <ProfileAvatar profile={poster} rounded size={42} containerStyle={styles.creatorAvatar} />\r\n                    <Text style={styles.creatorName}>\r\n                        {poster?.firstName} {poster?.lastName}\r\n                    </Text>\r\n                </View>\r\n                <View style={styles.formContent}>\r\n                    <Formik\r\n                        initialValues={this.initialState()}\r\n                        validationSchema={EditPostFormSchema}\r\n                        validateOnChange\r\n                        validateOnBlur={false}\r\n                        onSubmit={(values) => this.submit(values)}\r\n                    >\r\n                        {(formikProps: FormikProps<FormState>) => {\r\n                            const {\r\n                                handleSubmit,\r\n                                values,\r\n                                errors,\r\n                                touched,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                setFieldError,\r\n                            } = formikProps;\r\n                            const textInputProps: Partial<FormTextInputProps> = {\r\n                                handleChange,\r\n                                handleBlur,\r\n                                wrapperStyle: {flex: 1},\r\n                                style: {flex: 1},\r\n                                inputStyle: {\r\n                                    fontSize: 20,\r\n                                    paddingVertical: 10,\r\n                                    color: theme.text,\r\n                                    textAlignVertical: \"top\",\r\n                                },\r\n                                errorTextStyle: {textAlign: \"center\", marginBottom: 0},\r\n                                placeholderTextColor: theme.inputPlaceholder,\r\n                            };\r\n                            this.setFieldError = setFieldError;\r\n                            this.submitForm = formikProps.submitForm;\r\n\r\n                            return (\r\n                                <>\r\n                                    <Text\r\n                                        style={[\r\n                                            styles.lengthText,\r\n                                            values.text.length > MAX_POST_LENGTH ? styles.lengthTextError : {},\r\n                                        ]}\r\n                                    >\r\n                                        {values.text.length}/{MAX_POST_LENGTH}\r\n                                    </Text>\r\n\r\n                                    <FormTextInput\r\n                                        ref={this.textInputRef}\r\n                                        field=\"text\"\r\n                                        placeholder={i18n.t(\"groups.editPost.contentPlaceholder\")}\r\n                                        error={errors.text}\r\n                                        value={values.text}\r\n                                        touched={touched.text}\r\n                                        multiline\r\n                                        {...textInputProps}\r\n                                    />\r\n\r\n                                    <FormError error={generalError(remoteErrors)} />\r\n\r\n                                    <View style={styles.actionsContainer}>\r\n                                        <FormSubmitButton\r\n                                            onPress={() => handleSubmit()}\r\n                                            style={[styles.button, styles.buttonSubmit]}\r\n                                            skin=\"rounded-filled\"\r\n                                            text={i18n.t(`groups.${createMode ? \"newPost\" : \"editPost\"}.submit`)}\r\n                                            submitting={submitting}\r\n                                        />\r\n                                    </View>\r\n                                </>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        formContent: {\r\n            flex: 1,\r\n        },\r\n        creatorAvatar: {\r\n            marginRight: 10,\r\n        },\r\n        creatorName: {\r\n            color: theme.text,\r\n            fontSize: 18,\r\n        },\r\n        lengthText: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n            marginTop: 10,\r\n        },\r\n        lengthTextError: {\r\n            color: theme.error,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        button: {\r\n            flex: 1,\r\n            maxWidth: 300,\r\n        },\r\n        buttonSubmit: {},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(EditPostFormClass));\r\n","import React from \"react\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EditPostForm, {EditPostFormClass} from \"../forms/EditPostForm\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nexport type EditPostModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string; post?: GroupPost};\r\n\r\nexport class EditPostModalClass extends React.Component<EditPostModalProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n    editPostFormRef = React.createRef<EditPostFormClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, theme, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const createMode = post === undefined;\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                animationType=\"slide\"\r\n                nonDismissable\r\n                fullWidth\r\n                fullHeight\r\n                statusBarTranslucent\r\n                modalViewStyle={{paddingVertical: 0, paddingHorizontal: 0}}\r\n                renderContent={(hide) => (\r\n                    <SafeAreaInsetsContext.Consumer>\r\n                        {(insets) => (\r\n                            <>\r\n                                <View style={[styles.top, {paddingTop: insets?.top}]}>\r\n                                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                        <TouchableOpacity style={styles.topButton} onPress={hide}>\r\n                                            <MaterialIcons name=\"arrow-back\" style={styles.topButtonIcon} />\r\n                                        </TouchableOpacity>\r\n                                        <Text style={styles.title}>\r\n                                            {i18n.t(`groups.${createMode ? \"newPost\" : \"editPost\"}.title`)}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={styles.topButton}\r\n                                        onPress={() => this.editPostFormRef.current?.triggerSubmit()}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name={createMode ? \"send\" : \"check\"}\r\n                                            style={styles.topButtonIcon}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <EditPostForm\r\n                                    ref={this.editPostFormRef}\r\n                                    containerStyle={[styles.form, {paddingBottom: insets?.bottom}]}\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    onSuccessfulSubmit={hide}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </SafeAreaInsetsContext.Consumer>\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingVertical: 5,\r\n            marginBottom: 10,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        title: {\r\n            fontSize: 18,\r\n            color: themes.dark.text,\r\n        },\r\n        topButton: {\r\n            padding: 10,\r\n            marginRight: 5,\r\n        },\r\n        topButtonIcon: {\r\n            fontSize: 24,\r\n            color: themes.dark.text,\r\n        },\r\n        form: {\r\n            width: \"90%\",\r\n            flex: 1,\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditPostModalClass);\r\n","import * as React from \"react\";\r\nimport {AvatarProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = {profile?: UserProfile; loading?: boolean} & AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    showEnlarged() {\r\n        this.setState({...this.state, enlarged: true});\r\n    }\r\n\r\n    hideEnlarged() {\r\n        this.setState({...this.state, enlarged: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, profile, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.showEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <ProfileAvatar\r\n                    profile={profile}\r\n                    {...avatarProps}\r\n                    {...(avatarProps.source || profile?.avatarUrl ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </ProfileAvatar>\r\n                <CustomModal\r\n                    visible={enlarged}\r\n                    onHide={() => this.hideEnlarged()}\r\n                    fullWidth\r\n                    noBackground\r\n                    backdropOpacity={0.5}\r\n                    modalViewStyle={styles.modal}\r\n                    renderContent={() => (\r\n                        <ProfileAvatar\r\n                            profile={profile}\r\n                            source={avatarProps.source}\r\n                            containerStyle={styles.enlargedAvatarContainer}\r\n                            avatarStyle={styles.enlargedAvatar}\r\n                            activeOpacity={0.8}\r\n                            onPress={() => this.hideEnlarged()}\r\n                            rounded\r\n                        />\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            aspectRatio: 1,\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {navigateToGroup, navigateToProfile} from \"../navigation/utils\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {Group} from \"../model/groups\";\r\nimport Button from \"./Button\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport LocalImage from \"./LocalImage\";\r\nimport {GroupMemberStatus} from \"../api/dto\";\r\nimport store from \"../state/store\";\r\n\r\n// Component props\r\ntype PostHeaderProps = {\r\n    profile: UserProfile | null;\r\n    subtitle?: string | null;\r\n    group: Group | null;\r\n    isFeed?: boolean;\r\n    openPostMenu?: () => void;\r\n} & ThemeProps;\r\n\r\nclass PostHeader extends React.Component<PostHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {profile, subtitle, isFeed, group, openPostMenu, theme} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const profileName = profile ? `${profile.firstName} ${profile.lastName}` : \"\";\r\n        const name = isFeed ? (group ? group.name : \"\") : profileName;\r\n\r\n        const toGroup = () => group && group.myStatus === GroupMemberStatus.Approved && navigateToGroup(group.id);\r\n        const toProfile = () => profile && navigateToProfile(profile.id, store.getState());\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.left}>\r\n                    {isFeed ? (\r\n                        <TouchableOpacity onPress={toGroup}>\r\n                            {group && group.cover && (\r\n                                <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                            )}\r\n                            {group && !group.cover && (\r\n                                <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                            )}\r\n                        </TouchableOpacity>\r\n                    ) : (\r\n                        <EnlargeableAvatar\r\n                            profile={profile || undefined}\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            rounded\r\n                        />\r\n                    )}\r\n\r\n                    <View>\r\n                        <TouchableOpacity onPress={isFeed ? toGroup : toProfile}>\r\n                            <Text style={styles.name}>{name}</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        {isFeed && (\r\n                            <TouchableOpacity style={{flexDirection: \"row\", alignItems: \"center\"}} onPress={toProfile}>\r\n                                <EnlargeableAvatar\r\n                                    profile={profile || undefined}\r\n                                    size={20}\r\n                                    containerStyle={styles.avatarContainerSmall}\r\n                                    rounded\r\n                                />\r\n                                <Text style={styles.subtitle}>{profileName}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                        <Text style={styles.subtitle}>{subtitle}</Text>\r\n                    </View>\r\n                </View>\r\n                <Button\r\n                    style={styles.menuButton}\r\n                    icon={<MaterialCommunityIcons name=\"dots-horizontal\" style={styles.menuButtonIcon} />}\r\n                    onPress={openPostMenu}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n        },\r\n        left: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSlight,\r\n            marginRight: 10,\r\n        },\r\n        avatarContainerSmall: {\r\n            backgroundColor: theme.accentSlight,\r\n            marginRight: 5,\r\n        },\r\n        name: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 13,\r\n            color: theme.textLight,\r\n        },\r\n        menuButton: {\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n        },\r\n        menuButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        groupCover: {\r\n            width: 45,\r\n            height: 45,\r\n            borderRadius: 45,\r\n            marginRight: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PostHeader);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deleteGroupPost} from \"../../state/groups/actions\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\n\r\nexport type DeletePostConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string; post: GroupPost};\r\n\r\nexport class DeletePostConfirmModalClass extends React.Component<DeletePostConfirmModalProps> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, theme, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.deletePost.title\")}\r\n                text={i18n.t(\"groups.deletePost.text\")}\r\n                icon={(props) => <FontAwesome name=\"warning\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        // No need to hide the modal since it will be unmounted anyway\r\n                        onPress: () => dispatch(deleteGroupPost(groupId, post.id)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeletePostConfirmModalClass);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group, GroupPost} from \"../model/groups\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu, {ActionMenuClass, ActionMenuItem} from \"./ActionMenu\";\r\nimport i18n from \"i18n-js\";\r\nimport EditPostModal, {EditPostModalClass} from \"./modals/EditPostModal\";\r\nimport DeletePostConfirmModal, {DeletePostConfirmModalClass} from \"./modals/DeletePostConfirmModal\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"./forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {GroupRole} from \"../api/dto\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\nexport type GroupPostMenuProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype GroupPostMenuState = {post: GroupPost | null; group: Group | null};\r\n\r\nexport class GroupPostMenuClass extends React.Component<GroupPostMenuProps, GroupPostMenuState> {\r\n    private actionMenuRef = React.createRef<ActionMenuClass>();\r\n    private editPostModalRef = React.createRef<EditPostModalClass>();\r\n    private deletePostModalRef = React.createRef<DeletePostConfirmModalClass>();\r\n    private reportFormRef = React.createRef<QuickFormReportClass>();\r\n\r\n    constructor(props: GroupPostMenuProps) {\r\n        super(props);\r\n        this.state = {post: null, group: null};\r\n    }\r\n\r\n    show(group: Group, post: GroupPost): void {\r\n        this.actionMenuRef.current?.show();\r\n        this.setState({...this.state, group, post});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localUser} = this.props;\r\n        const {post, group} = this.state;\r\n\r\n        const isLocalUser = post && post.creator.id === localUser?.id;\r\n        const isAdmin = group && group.myRole == GroupRole.Admin;\r\n\r\n        const editAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"edit\" />,\r\n            text: i18n.t(\"groups.editPost.title\"),\r\n            onSelect: () => this.editPostModalRef.current?.show(),\r\n        };\r\n        const deleteAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"delete\" />,\r\n            text: i18n.t(\"groups.deletePost.title\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.deletePostModalRef.current?.show(),\r\n        };\r\n        const reportAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"report\" />,\r\n            text: i18n.t(\"groups.reportPost\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.reportFormRef.current?.open(),\r\n        };\r\n\r\n        const actions: ActionMenuItem[] = [];\r\n\r\n        if (isLocalUser) actions.push(editAction);\r\n        if (isLocalUser || isAdmin) actions.push(deleteAction);\r\n        if (!isLocalUser) actions.push(reportAction);\r\n        actions.push({preset: \"close\"});\r\n\r\n        return (\r\n            <>\r\n                <ActionMenu ref={this.actionMenuRef} title={i18n.t(\"groups.postMenu.title\")} actions={actions} />\r\n                {post && <EditPostModal ref={this.editPostModalRef} groupId={post.groupId} post={post} />}\r\n                {post && <DeletePostConfirmModal ref={this.deletePostModalRef} groupId={post.groupId} post={post} />}\r\n                {post && (\r\n                    <QuickFormReport ref={this.reportFormRef} entity={post} entityType={ReportEntityType.POST_ENTITY} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupPostMenuClass));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupPostCommentsModal, {GroupPostCommentsModalClass} from \"../modals/GroupPostCommentsModal\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport EditPostModal, {EditPostModalClass} from \"../modals/EditPostModal\";\r\nimport PostHeader from \"../PostHeader\";\r\nimport {formatPostDate} from \"../../model/utils\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport {fetchGroup} from \"../../state/groups/actions\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport GroupPostMenu, {GroupPostMenuClass} from \"../GroupPostMenu\";\r\nimport {ReadMore} from \"../ReadMore\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\ntype GroupPostCardProps = {post: GroupPost | null; isFeed?: boolean} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\nclass GroupPostCard extends React.Component<GroupPostCardProps> {\r\n    commentsModalRef = React.createRef<GroupPostCommentsModalClass>();\r\n    editPostModalRef = React.createRef<EditPostModalClass>();\r\n    menuRef = React.createRef<GroupPostMenuClass>();\r\n\r\n    openComments(): void {\r\n        this.commentsModalRef.current?.show();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.fetchGroupIfNeeded();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupPostCardProps): void {\r\n        const {post} = this.props;\r\n\r\n        // If the post has changed\r\n        if (post && (!oldProps.post || oldProps.post.id !== post.id)) this.fetchGroupIfNeeded();\r\n    }\r\n\r\n    private fetchGroupIfNeeded(): void {\r\n        const {post, groupsDict, dispatch} = this.props;\r\n        if (post) {\r\n            const groupId = post.groupId;\r\n            if (!groupsDict[groupId]) (dispatch as MyThunkDispatch)(fetchGroup(groupId));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {post, isFeed, groupsDict, theme} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        // const fromLocal = post && localUser && post.creator.id === localUser.id;\r\n        const groupId = post?.groupId || null;\r\n        const group = groupId ? groupsDict[groupId] || null : null;\r\n        const isAdmin = group?.myRole == GroupRole.Admin;\r\n\r\n        return (\r\n            <TouchableOpacity style={styles.container} activeOpacity={0.9}>\r\n                <View style={styles.top}>\r\n                    <PostHeader\r\n                        profile={post?.creator || null}\r\n                        subtitle={post && formatPostDate(post)}\r\n                        group={group}\r\n                        isFeed={isFeed}\r\n                        openPostMenu={() => group && post && this.menuRef.current?.show(group, post)}\r\n                    />\r\n                </View>\r\n                {post && (\r\n                    <ReadMore\r\n                        numberOfLines={5}\r\n                        renderTruncatedFooter={(handlePress) => (\r\n                            <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                <Text style={[styles.postText, styles.textFooter]}>... {i18n.t(\"showMore\")}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                        renderRevealedFooter={(handlePress) => (\r\n                            <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                <Text style={[styles.postText, styles.textFooter]}>{i18n.t(\"showLess\")}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    >\r\n                        <Text style={styles.postText}>{post?.text}</Text>\r\n                    </ReadMore>\r\n                )}\r\n                <View style={styles.bottom}>\r\n                    <TouchableOpacity onPress={() => this.openComments()}>\r\n                        <Text style={styles.bottomText}>\r\n                            {post\r\n                                ? post.score === 0\r\n                                    ? i18n.t(\"groups.points.zero\")\r\n                                    : post.score === 1\r\n                                    ? i18n.t(\"groups.points.singular\")\r\n                                    : i18n.t(\"groups.points.plural\", {num: post.score})\r\n                                : \"\"}\r\n                        </Text>\r\n                        <Text style={styles.bottomText}>\r\n                            {post &&\r\n                                i18n.t(\r\n                                    `groups.comments.${\r\n                                        post.commentsCount === 0\r\n                                            ? \"zero\"\r\n                                            : post.commentsCount === 1\r\n                                            ? \"singular\"\r\n                                            : \"plural\"\r\n                                    }`,\r\n                                    {num: post.commentsCount},\r\n                                )}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {groupId && post && (\r\n                        <View style={{flexDirection: \"row\"}}>\r\n                            <GroupVoteButton\r\n                                groupId={groupId}\r\n                                post={post}\r\n                                currentStatus={post.voteStatus}\r\n                                vote={GroupVoteStatus.Upvote}\r\n                                style={styles.bottomButton}\r\n                                iconStyle={styles.bottomButtonIcon}\r\n                            />\r\n                            <GroupVoteButton\r\n                                groupId={groupId}\r\n                                post={post}\r\n                                currentStatus={post.voteStatus}\r\n                                vote={GroupVoteStatus.Downvote}\r\n                                style={styles.bottomButton}\r\n                                iconStyle={styles.bottomButtonIcon}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {groupId && post && (\r\n                    <>\r\n                        <GroupPostCommentsModal\r\n                            ref={this.commentsModalRef}\r\n                            groupId={groupId}\r\n                            post={post}\r\n                            adminView={isAdmin}\r\n                        />\r\n                        <EditPostModal ref={this.editPostModalRef} groupId={groupId} post={post} />\r\n                    </>\r\n                )}\r\n                <GroupPostMenu ref={this.menuRef} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 10,\r\n        },\r\n        top: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        bottom: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: 10,\r\n        },\r\n\r\n        postText: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            lineHeight: 21,\r\n        },\r\n        textFooter: {\r\n            color: theme.accent,\r\n        },\r\n\r\n        bottomText: {\r\n            fontSize: 13,\r\n            color: theme.textLight,\r\n        },\r\n        bottomButton: {\r\n            marginLeft: 15,\r\n            padding: 5,\r\n        },\r\n        bottomButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupPostCard));\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme} from \"../types\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {CustomTooltipProps} from \"./CustomTooltip.native\";\r\nimport themes from \"../constants/themes\";\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity activeOpacity={0.5} onPress={() => this.modalRef.current?.show()}>\r\n                    {this.props.children}\r\n                </TouchableOpacity>\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    onHide={() => this.setState({...this.state, shown: false})}\r\n                    modalViewStyle={styles.container}\r\n                    renderContent={() => <Text style={styles.text}>{text}</Text>}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const tooltipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n            fontSize: 14,\r\n            color: themes.light.text,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            paddingHorizontal: 20,\r\n            width: 250,\r\n            paddingVertical: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {GroupPost} from \"../model/groups\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport {GROUPS_POSTS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {fetchPostsFeed, refreshFetchedMyGroups, refreshFetchedPostsFeed} from \"../state/groups/actions\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport GroupPostCard from \"./cards/GroupPostCard\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    pagination: state.groups.feedPagination,\r\n    postIds: state.groups.postsFeedIds,\r\n    posts: state.groups.postsFeed,\r\n}));\r\n\r\n// Component props\r\nexport type PostsFeedViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        navigation: NavigationProp<never>;\r\n        top?: JSX.Element;\r\n    };\r\n\r\nclass PostsFeedView extends React.Component<PostsFeedViewProps> {\r\n    render() {\r\n        const {pagination, postIds, posts, top, navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <InfiniteScroller\r\n                top={\r\n                    <>\r\n                        {top}\r\n                        <View style={styles.titleWrapper}>\r\n                            <CustomTooltip text={i18n.t(\"groups.feed.help\")}>\r\n                                <MaterialIcons style={styles.feedTooltipIcon} name=\"help-outline\" />\r\n                            </CustomTooltip>\r\n                            <Text style={styles.title}>{i18n.t(\"groups.feed.title\")}</Text>\r\n                        </View>\r\n                    </>\r\n                }\r\n                navigation={navigation}\r\n                fetchLimit={GROUPS_POSTS_FETCH_LIMIT}\r\n                fetchMore={() => dispatch(fetchPostsFeed())}\r\n                fetching={pagination.fetching}\r\n                canFetchMore={pagination.canFetchMore}\r\n                currentPage={pagination.page}\r\n                refreshOnFocus\r\n                items={postIds.map((id) => posts[id])}\r\n                id={(post: GroupPost): string => post.id}\r\n                hideScrollIndicator\r\n                endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noMorePosts\")}</Text>}\r\n                noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noPosts\")}</Text>}\r\n                refresh={() => {\r\n                    dispatch(refreshFetchedMyGroups());\r\n                    dispatch(refreshFetchedMyGroups(true));\r\n                    dispatch(refreshFetchedPostsFeed());\r\n                }}\r\n                renderItem={(post: GroupPost) => <GroupPostCard key={post.id} post={post} isFeed />}\r\n                // Compensate for the top\r\n                progressViewOffset={250}\r\n                keyboardShouldPersistTaps=\"handled\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.text,\r\n        },\r\n        noResultsText: {\r\n            color: theme.textLight,\r\n            fontSize: 16,\r\n        },\r\n        feedTooltipIcon: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(PostsFeedView));\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {fetchMyGroups, refreshFetchedMyGroups} from \"../state/groups/actions\";\r\nimport {GROUPS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {Group} from \"../model/groups\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport MyGroupCard from \"./cards/MyGroupCard\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    invites: state.groups.myGroupInvites,\r\n    groupsDict: state.groups.groupsDict,\r\n    pagination: state.groups.myGroupInvitesPagination,\r\n}));\r\n\r\n// Component props\r\nexport type GroupInvitesViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {navigation: NavigationProp<never>};\r\n\r\nclass GroupInvitesView extends React.Component<GroupInvitesViewProps> {\r\n    render() {\r\n        const {theme, invites, groupsDict, pagination, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const hasInvites = invites.length > 0;\r\n\r\n        return (\r\n            <View style={[styles.container, !hasInvites && {display: \"none\"}]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"groups.invites\")}</Text>\r\n                </View>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchMyGroups(true))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={invites.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    horizontal\r\n                    hideScrollIndicator\r\n                    refreshOnFocus\r\n                    noResultsComponent={<></>}\r\n                    refresh={() => dispatch(refreshFetchedMyGroups(true))}\r\n                    renderItem={(group: Group) => <MyGroupCard key={group.id} group={group} isInvite />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            backgroundColor: theme.cardBackground,\r\n            marginVertical: 20,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            marginBottom: 20,\r\n            paddingHorizontal: 15,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {paddingHorizontal: 15},\r\n\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            maxWidth: 200,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupInvitesView));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport {MatchSuccessModalClass} from \"../../components/modals/MatchSuccessModal\";\r\nimport MyGroupsView from \"../../components/MyGroupsView\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport PostsFeedView from \"../../components/PostsFeedView\";\r\nimport GroupInvitesView from \"../../components/GroupInvitesView\";\r\n\r\n// Component props\r\ntype TabGroupsScreenProps = StackScreenProps<TabGroupsRoot, \"TabGroupsScreen\">;\r\n\r\nclass TabGroupsScreen extends React.Component<TabGroupsScreenProps> {\r\n    scrollerRef = React.createRef<InfiniteScroller<UserProfile>>();\r\n    successModalRef = React.createRef<MatchSuccessModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const nav = (this.props.navigation as unknown) as NavigationProp<never>;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <PostsFeedView\r\n                    top={\r\n                        <>\r\n                            <MyGroupsView navigation={nav} />\r\n                            <GroupInvitesView navigation={nav} />\r\n                        </>\r\n                    }\r\n                    navigation={nav}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabGroupsScreen;\r\n","import React from \"react\";\r\nimport {TextStyle, StyleSheet, StyleProp, Text, View} from \"react-native\";\r\nimport {CheckBox, CheckBoxProps} from \"react-native-elements\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedCheckBoxProps = {\r\n    value: boolean;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n} & Partial<CheckBoxProps>;\r\n\r\nconst staticStyle = StyleSheet.create({\r\n    wrapper: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    label: {\r\n        flex: 1,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\n/**\r\n * An improved CheckBox that supports better styling and displays validation errors.\r\n */\r\nexport class ValidatedCheckBox extends React.Component<ValidatedCheckBoxProps> {\r\n    static defaultProps = {\r\n        untouched: false,\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        labelStyle: [],\r\n        errorTextStyle: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            untouched,\r\n            error,\r\n            value,\r\n            label,\r\n            wrapperStyle,\r\n            labelStyle,\r\n            errorStyle,\r\n            errorTextStyle,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={[staticStyle.wrapper, wrapperStyle, error ? errorStyle : {}]}>\r\n                    <CheckBox checked={value} {...otherProps} />\r\n                    {label && <Text style={[staticStyle.label, labelStyle]}>{label}</Text>}\r\n                </View>\r\n                {showErrorText && !untouched && error && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ValidatedCheckBox, ValidatedCheckBoxProps} from \"../ValidatedCheckBox\";\r\n\r\n// Component props\r\nexport type FormCheckBoxProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    setFieldValue: (field: string, value: boolean, shouldValidate?: boolean) => void;\r\n    setFieldTouched: (field: string, isTouched?: boolean, shouldValidate?: boolean) => void;\r\n} & ValidatedCheckBoxProps;\r\n\r\n/**\r\n * An improved CheckBox for less verbose Formik usage.\r\n */\r\nexport class FormCheckBox extends React.Component<FormCheckBoxProps> {\r\n    static defaultProps = {\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        labelStyle: [],\r\n        errorTextStyle: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {field, touched, setFieldValue, setFieldTouched, error, value, ...otherProps} = this.props;\r\n        return (\r\n            <ValidatedCheckBox\r\n                error={touched ? error : undefined}\r\n                value={value}\r\n                untouched={!touched}\r\n                {...otherProps}\r\n                onPress={() => {\r\n                    setFieldValue(field, !value);\r\n                    setFieldTouched(field, true);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"./FormTextInput\";\r\nimport {getFormCheckBoxStyleProps, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {CreateGroupDto, RemoteValidationErrors} from \"../../api/dto\";\r\nimport {createGroup} from \"../../state/groups/actions\";\r\nimport Button from \"../Button\";\r\nimport {FormCheckBox} from \"./FormCheckBox\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_GROUP_NAME} from \"../../validators\";\r\n\r\ntype FormState = {name: string; visible: boolean; requiresApproval: boolean};\r\n\r\nconst initialState = (): FormState => ({name: \"\", visible: false, requiresApproval: false});\r\n\r\n// Use Yup to create the validation schema\r\nconst CreateGroupFormSchema = Yup.object().shape({\r\n    name: VALIDATOR_GROUP_NAME,\r\n});\r\n\r\n// Component props\r\ntype CreateGroupFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>; onCancel?: () => void};\r\n\r\n// Component state\r\ntype CreateGroupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass CreateGroupForm extends React.Component<CreateGroupFormProps, CreateGroupFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: CreateGroupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    private getCreationDto(values: FormState): CreateGroupDto {\r\n        const {name, visible, requiresApproval} = values;\r\n        return {\r\n            name,\r\n            visible,\r\n            requiresApproval,\r\n            description: \"\",\r\n        };\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        const dto = this.getCreationDto(values);\r\n\r\n        (store.dispatch as MyThunkDispatch)(createGroup(dto)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle, onCancel} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.titleWrapper}>\r\n                    <MaterialIcons name=\"group\" style={styles.titleIcon} />\r\n                    <Text style={styles.title}>{i18n.t(\"groups.create.title\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={CreateGroupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                            setFieldValue,\r\n                            setFieldTouched\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        const checkboxProps = {setFieldValue, setFieldTouched, ...getFormCheckBoxStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"name\"\r\n                                    placeholder={i18n.t(\"groups.create.name\")}\r\n                                    error={errors.name}\r\n                                    value={values.name}\r\n                                    touched={touched.name}\r\n                                    label={i18n.t(\"groups.create.name\")}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormCheckBox\r\n                                    field=\"visible\"\r\n                                    error={errors.visible}\r\n                                    value={values.visible}\r\n                                    touched={touched.visible}\r\n                                    label={i18n.t(\"groups.create.visible\")}\r\n                                    {...checkboxProps}\r\n                                />\r\n                                <Text style={styles.fieldDescription}>\r\n                                    {i18n.t(`groups.create.visibleDescription.${values.visible}`)}\r\n                                </Text>\r\n\r\n                                <FormCheckBox\r\n                                    field=\"requiresApproval\"\r\n                                    error={errors.requiresApproval}\r\n                                    value={values.requiresApproval}\r\n                                    touched={touched.requiresApproval}\r\n                                    label={i18n.t(\"groups.create.requireApproval\")}\r\n                                    {...checkboxProps}\r\n                                />\r\n                                <Text style={styles.fieldDescription}>\r\n                                    {i18n.t(`groups.create.requireApprovalDescription.${values.requiresApproval}`)}\r\n                                </Text>\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            if (onCancel) onCancel();\r\n                                        }}\r\n                                        style={[styles.button, styles.buttonCancel]}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[styles.button, styles.buttonSubmit]}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"groups.create.submit\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            marginBottom: 20,\r\n        },\r\n        titleIcon: {\r\n            fontSize: 32,\r\n            color: theme.textLight,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginLeft: 10,\r\n        },\r\n        fieldDescription: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            marginBottom: 20,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 30,\r\n        },\r\n        button: {flex: 1},\r\n        buttonCancel: {marginRight: 10},\r\n        buttonSubmit: {marginLeft: 10},\r\n    });\r\n});\r\n\r\nexport default withTheme(CreateGroupForm);\r\n","import React from \"react\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport CreateGroupForm from \"../forms/CreateGroupForm\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\n\r\nexport type CreateGroupModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nexport class CreateGroupModalClass extends React.Component<CreateGroupModalProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {...otherProps} = this.props;\r\n\r\n        return (\r\n            <SafeAreaInsetsContext.Consumer>\r\n                {(insets) => (\r\n                    <CustomModal\r\n                        ref={this.modalRef}\r\n                        animationType=\"slide\"\r\n                        nonDismissable\r\n                        fullWidth\r\n                        fullHeight\r\n                        statusBarTranslucent\r\n                        modalViewStyle={{\r\n                            paddingTop: 30 + (insets?.top || 0),\r\n                            paddingBottom: 30 + (insets?.bottom || 0),\r\n                            paddingHorizontal: 30,\r\n                        }}\r\n                        renderContent={(hide) => <CreateGroupForm onCancel={hide} onSuccessfulSubmit={hide} />}\r\n                        {...otherProps}\r\n                    />\r\n                )}\r\n            </SafeAreaInsetsContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CreateGroupModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type GroupJoinRequestSentModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nexport class GroupJoinRequestSentModalClass extends React.Component<GroupJoinRequestSentModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.joinRequestSent.title\")}\r\n                text={i18n.t(\"groups.joinRequestSent.text\")}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[{preset: \"confirm\"}]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupJoinRequestSentModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\n\r\nexport type GroupJoinedModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport class GroupJoinedModalClass extends React.Component<GroupJoinedModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.groupJoined.title\")}\r\n                text={i18n.t(\"groups.groupJoined.text\", {name: group.name})}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[\r\n                    {preset: \"confirm\"},\r\n                    {\r\n                        backgroundColor: theme.accent,\r\n                        text: i18n.t(\"groups.groupJoined.viewGroup\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            navigateToGroup(group.id);\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupJoinedModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport type GroupDescriptionModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {group: Group; onJoinGroup: () => void};\r\n\r\nexport class GroupDescriptionModalClass extends React.Component<GroupDescriptionModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, onJoinGroup, ...otherProps} = this.props;\r\n\r\n        const descriptionText = group.description.length > 0 ? group.description : i18n.t(\"groups.description.none\");\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={group.name}\r\n                text={descriptionText}\r\n                additionalContent={(hide, textProps) => (\r\n                    <>\r\n                        {group.requiresApproval && (\r\n                            <Text {...textProps}>{i18n.t(\"groups.create.requireApproval\")}</Text>\r\n                        )}\r\n                    </>\r\n                )}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        backgroundColor: theme.accent,\r\n                        text: i18n.t(\"groups.join\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            onJoinGroup();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupDescriptionModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport store from \"../../state/store\";\r\nimport {joinGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport GroupJoinRequestSentModal, {GroupJoinRequestSentModalClass} from \"../modals/GroupJoinRequestSentModal\";\r\nimport GroupJoinedModal, {GroupJoinedModalClass} from \"../modals/GroupJoinedModal\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeableLooks, SwipeActionContainer} from \"./SwipeableCard\";\r\nimport GroupDescriptionModal, {GroupDescriptionModalClass} from \"../modals/GroupDescriptionModal\";\r\nimport LocalImage from \"../LocalImage\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype GroupExploreCardProps = {\r\n    group: Group | null;\r\n    style?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupExploreCard extends React.Component<GroupExploreCardProps> {\r\n    descriptionModalRef = React.createRef<GroupDescriptionModalClass>();\r\n    requestSentModalRef = React.createRef<GroupJoinRequestSentModalClass>();\r\n    joinedModalRef = React.createRef<GroupJoinedModalClass>();\r\n    cardRef = React.createRef<SwipeableCardClass>();\r\n\r\n    private join(): void {\r\n        const {group} = this.props;\r\n\r\n        if (group) {\r\n            (store.dispatch as MyThunkDispatch)(joinGroup(group));\r\n\r\n            if (group.requiresApproval) this.requestSentModalRef.current?.show();\r\n            else this.joinedModalRef.current?.show();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const looks: Partial<SwipeableLooks> = {verticalSpacing: 5, sideMargin: 15};\r\n        const status = group?.myStatus;\r\n        const statusTextKey = \"groups.explore.statusText\";\r\n\r\n        const canRequestJoin =\r\n            status !== GroupMemberStatus.Approved &&\r\n            status !== GroupMemberStatus.Banned &&\r\n            status !== GroupMemberStatus.Pending;\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.cardRef}\r\n                looks={looks}\r\n                renderRightActions={() => <SwipeActionContainer side=\"right\" looks={looks} fullCardWidth />}\r\n                style={styles.card}\r\n                {...(canRequestJoin ? {onPress: () => this.descriptionModalRef.current?.show()} : {})}\r\n            >\r\n                {group && group.cover && (\r\n                    <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                )}\r\n                {(!group || !group.cover) && (\r\n                    <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                )}\r\n                <BlurView style={styles.blurView} tint=\"dark\" intensity={10} />\r\n\r\n                <View style={styles.innerContent}>\r\n                    {group && (\r\n                        <Text style={styles.groupName} numberOfLines={2}>\r\n                            {group.name}\r\n                        </Text>\r\n                    )}\r\n                    <View style={styles.subtitleContainer}>\r\n                        {status === GroupMemberStatus.Pending ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.pending`)}</Text>\r\n                                <MaterialIcons name=\"check\" style={styles.statusSpecificIcon} />\r\n                            </>\r\n                        ) : status === GroupMemberStatus.Banned ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.banned`)}</Text>\r\n                                <MaterialIcons name=\"block\" style={[styles.statusSpecificIcon, {color: theme.error}]} />\r\n                            </>\r\n                        ) : status === GroupMemberStatus.Invited || status === GroupMemberStatus.InvitedByAdmin ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.invited`)}</Text>\r\n                                <MaterialIcons name=\"person-add\" style={styles.statusSpecificIcon} />\r\n                            </>\r\n                        ) : (\r\n                            group &&\r\n                            group.description.length > 0 && (\r\n                                <Text style={styles.groupDescription} numberOfLines={1}>\r\n                                    {group.description}\r\n                                </Text>\r\n                            )\r\n                        )}\r\n                    </View>\r\n                </View>\r\n\r\n                <GroupJoinRequestSentModal\r\n                    ref={this.requestSentModalRef}\r\n                    onHide={() => this.cardRef.current?.collapse()}\r\n                />\r\n                {group && (\r\n                    <>\r\n                        <GroupDescriptionModal\r\n                            ref={this.descriptionModalRef}\r\n                            group={group}\r\n                            onJoinGroup={() => this.join()}\r\n                        />\r\n                        <GroupJoinedModal\r\n                            ref={this.joinedModalRef}\r\n                            group={group}\r\n                            onHide={() => this.cardRef.current?.collapse()}\r\n                        />\r\n                    </>\r\n                )}\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        card: {\r\n            backgroundColor: theme.cardBackground,\r\n            height: 75,\r\n        },\r\n        blurView: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        groupCover: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        innerContent: {\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 10,\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n        },\r\n        groupName: {\r\n            color: themes.dark.text,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 16,\r\n        },\r\n        subtitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        groupDescription: {\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n        },\r\n        statusSpecific: {\r\n            fontFamily: \"RalewaySemiBold\",\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n        },\r\n        statusSpecificIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupExploreCard);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport {GROUPS_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport BufferedSearchBar from \"../../components/BufferedSearchBar\";\r\nimport {fetchGroups} from \"../../state/groups/actions\";\r\nimport {Group} from \"../../model/groups\";\r\nimport GroupExploreCard from \"../../components/cards/GroupExploreCard\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    pagination: state.groups.pagination,\r\n    groups: state.groups.groups,\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\ntype GroupsExploreScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabGroupsRoot, \"GroupsExploreScreen\">;\r\n\r\n// Component state\r\ntype GroupsExploreScreenState = {\r\n    search: string;\r\n};\r\n\r\nclass GroupsExploreScreen extends React.Component<GroupsExploreScreenProps, GroupsExploreScreenState> {\r\n    constructor(props: GroupsExploreScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groups, groupsDict, pagination, navigation} = this.props;\r\n        const {search} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => dispatch(fetchGroups(search, true))}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchGroups(search))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={groups.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.explore.none\")}</Text>}\r\n                    endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.explore.noMore\")}</Text>}\r\n                    refresh={() => dispatch(fetchGroups(search, true))}\r\n                    refreshOnFocus\r\n                    renderItem={(group: Group) => <GroupExploreCard key={group.id} group={group} />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingBottom: 40,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupsExploreScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport PopUpSelector, {PopUpSelectorActivator} from \"./PopUpSelector\";\r\nimport {PostSortingOrder, POST_SORTING_ORDERS} from \"../model/groups\";\r\n\r\n// Component props\r\nexport type PostSortingOrderPickerProps = {\r\n    order: PostSortingOrder;\r\n    onChange?: (order: PostSortingOrder) => void;\r\n    activator?: PopUpSelectorActivator;\r\n};\r\n\r\nclass PostSortingOrderPicker extends React.Component<PostSortingOrderPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, order, activator} = this.props;\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={POST_SORTING_ORDERS}\r\n                label={(l: string) => i18n.t(`groups.postsSorting.${l}`)}\r\n                selected={order ? [order] : []}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as PostSortingOrder);\r\n                }}\r\n                activator={activator}\r\n                atLeastOne\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostSortingOrderPicker;\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Group, GroupPost, PostSortingOrder} from \"../model/groups\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport EditPostModal from \"./modals/EditPostModal\";\r\nimport InfiniteScroller, {OnScroll} from \"./InfiniteScroller\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport {GROUPS_POSTS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {AppState, MyThunkDispatch, PaginatedState} from \"../state/types\";\r\nimport {fetchGroupPosts, refreshFetchedGroupPosts, setPostSortingOrder} from \"../state/groups/actions\";\r\nimport GroupPostCard from \"./cards/GroupPostCard\";\r\nimport PostSortingOrderPicker from \"./PostSortingOrderPicker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Button from \"./Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    sortOrder: state.groups.postsSortOrder,\r\n}));\r\n\r\n// Component props\r\nexport type GroupPostsViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        group: Group | null;\r\n        titleContainerStyle?: StyleProp<ViewStyle>;\r\n        navigation: NavigationProp<never>;\r\n        top?: JSX.Element;\r\n        onRefresh?: () => void;\r\n        onScroll?: OnScroll;\r\n    };\r\n\r\nclass GroupPostsView extends React.Component<GroupPostsViewProps> {\r\n    render(): JSX.Element {\r\n        const {group, top, navigation, titleContainerStyle, sortOrder, onRefresh, onScroll, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const pagination: PaginatedState = group\r\n            ? group.postsPagination\r\n            : {canFetchMore: true, fetching: true, page: 1};\r\n\r\n        return (\r\n            <>\r\n                <InfiniteScroller\r\n                    top={\r\n                        <>\r\n                            {top}\r\n                            <View style={[styles.titleWrapper, titleContainerStyle]}>\r\n                                <Text style={styles.title}>{i18n.t(\"groups.posts\")}</Text>\r\n                                <View style={styles.buttons}>\r\n                                    {group && (\r\n                                        <EditPostModal\r\n                                            groupId={group.id}\r\n                                            activator={(show) => (\r\n                                                <Button\r\n                                                    style={styles.button}\r\n                                                    icon={<MaterialIcons style={styles.buttonIcon} name=\"add\" />}\r\n                                                    onPress={show}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    <PostSortingOrderPicker\r\n                                        order={sortOrder}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.button}\r\n                                                icon={<MaterialIcons style={styles.buttonIcon} name=\"sort\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                        onChange={(order: PostSortingOrder) => {\r\n                                            dispatch(setPostSortingOrder(order));\r\n                                            if (group) dispatch(refreshFetchedGroupPosts(group.id));\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </>\r\n                    }\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_POSTS_FETCH_LIMIT}\r\n                    fetchMore={() => group && dispatch(fetchGroupPosts(group.id))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={group ? group.postIds.map((id) => group.posts[id]) : []}\r\n                    id={(post: GroupPost): string => post.id}\r\n                    hideScrollIndicator\r\n                    endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noMorePosts\")}</Text>}\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noPosts\")}</Text>}\r\n                    refresh={() => {\r\n                        if (group) {\r\n                            dispatch(refreshFetchedGroupPosts(group.id));\r\n                            if (onRefresh) onRefresh();\r\n                        }\r\n                    }}\r\n                    renderItem={(post: GroupPost) => <GroupPostCard key={post.id} post={post} />}\r\n                    progressViewOffset={350} // Compensate for the header\r\n                    keyboardShouldPersistTaps=\"handled\"\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                    onScroll={onScroll}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst CONTENT_MAX_WIDTH = 800;\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n            maxWidth: CONTENT_MAX_WIDTH,\r\n            alignSelf: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        buttons: {\r\n            flexDirection: \"row\",\r\n        },\r\n        button: {\r\n            width: 32,\r\n            height: 32,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginHorizontal: 4,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 24,\r\n            color: theme.text,\r\n        },\r\n        noResultsText: {\r\n            color: theme.textLight,\r\n            fontSize: 16,\r\n        },\r\n        itemsContainer: {\r\n            maxWidth: CONTENT_MAX_WIDTH,\r\n            width: \"100%\",\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupPostsView));\r\n","import * as React from \"react\";\r\nimport {\r\n    StyleProp,\r\n    Text,\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    ActivityIndicator,\r\n} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type EditableTextProps = {\r\n    nonEditable?: boolean;\r\n    text: string;\r\n    placeholder?: string;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    fontSize?: number;\r\n    numberOfLines?: number;\r\n    maxLength?: number;\r\n    onSubmit?: (value: string) => void;\r\n    iconColor?: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype EditableTextState = {editing: boolean; value: string};\r\n\r\nclass EditableText extends React.Component<EditableTextProps, EditableTextState> {\r\n    constructor(props: EditableTextProps) {\r\n        super(props);\r\n        this.state = {editing: false, value: props.text};\r\n    }\r\n\r\n    private edit(): void {\r\n        const {text} = this.props;\r\n        this.setState({...this.state, editing: true, value: text});\r\n    }\r\n\r\n    private submit(): void {\r\n        const {onSubmit} = this.props;\r\n        this.setState({...this.state, editing: false});\r\n        if (onSubmit) onSubmit(this.state.value);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: EditableTextProps): void {\r\n        const {text} = this.props;\r\n        const {value} = this.state;\r\n        if (oldProps.text !== text && text !== value) this.setState({...this.state, value: text});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            nonEditable,\r\n            containerStyle,\r\n            text,\r\n            placeholder,\r\n            fontSize,\r\n            numberOfLines,\r\n            maxLength,\r\n            iconColor,\r\n            theme,\r\n        } = this.props;\r\n        const {editing, value} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const submitting = !editing && value !== text;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                {!editing && (\r\n                    <Text\r\n                        numberOfLines={numberOfLines}\r\n                        style={[styles.text, {fontSize}, text.length === 0 ? styles.textPlaceholder : {}]}\r\n                    >\r\n                        {submitting ? value : text.length === 0 ? placeholder : text}\r\n                    </Text>\r\n                )}\r\n                {editing && (\r\n                    <TextInput\r\n                        style={[styles.input, {fontSize}]}\r\n                        value={value}\r\n                        placeholder={placeholder}\r\n                        autoFocus\r\n                        onChangeText={(v: string) => this.setState({...this.state, value: v})}\r\n                        onSubmitEditing={() => this.submit()}\r\n                        onBlur={() => this.submit()}\r\n                        maxLength={maxLength}\r\n                    />\r\n                )}\r\n                {submitting && (\r\n                    <View style={styles.button}>\r\n                        <ActivityIndicator size=\"small\" color={theme.text} />\r\n                    </View>\r\n                )}\r\n                {!submitting && (\r\n                    <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                            if (!nonEditable) {\r\n                                if (editing) this.submit();\r\n                                else this.edit();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!nonEditable && (\r\n                            <MaterialIcons\r\n                                style={[styles.buttonIcon, {color: iconColor || theme.textLight}]}\r\n                                name={editing ? \"check\" : \"edit\"}\r\n                            />\r\n                        )}\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            flex: 1,\r\n        },\r\n        textPlaceholder: {\r\n            color: theme.textLight,\r\n        },\r\n        input: {\r\n            flex: 1,\r\n            fontSize: 16,\r\n        },\r\n        button: {\r\n            width: 32,\r\n            height: 32,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 22,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditableText);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleProp, StyleSheet, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\n\r\n// Component props\r\nexport type ImageEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n    style?: StyleProp<ViewStyle>;\r\n    quality?: number;\r\n    aspect?: [number, number];\r\n};\r\n\r\nclass ImageEditButton extends React.Component<ImageEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            const {quality, aspect} = this.props;\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect,\r\n                    quality,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity style={[styles.button, style]} onPress={() => this.showPicker()}>\r\n                <MaterialIcons style={styles.buttonIcon} name=\"edit\" />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {width: 0, height: 1},\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 1.41,\r\n            elevation: 2,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ImageEditButton);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Image, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Group} from \"../model/groups\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport ImageEditButton from \"./ImageEditButton\";\r\nimport {GROUP_COVER_ASPECT, GROUP_COVER_QUALITY} from \"../constants/config\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {setGroupCover} from \"../state/groups/actions\";\r\nimport {GroupRole} from \"../api/dto\";\r\n\r\n// Component props\r\nexport type GroupCoverProps = ThemeProps & {group: Group | null};\r\n\r\nexport const GROUP_COVER_HEIGHT = 250;\r\n\r\nclass GroupCover extends React.Component<GroupCoverProps> {\r\n    render() {\r\n        const {theme, group} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const showLoading = group?.uploadingCover;\r\n        const showPlaceholder = !showLoading && (!group || !group.cover);\r\n        const allowEditing = group !== null && group.myRole === GroupRole.Admin;\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                {group && group.cover && <Image style={styles.image} source={{uri: group.cover}} resizeMode=\"cover\" />}\r\n                {showPlaceholder && <FontAwesome style={styles.placeholderIcon} name=\"picture-o\" />}\r\n                {showLoading && <ActivityIndicator style={styles.loading} size={42} color={theme.text} />}\r\n                {allowEditing && (\r\n                    <ImageEditButton\r\n                        style={styles.editButton}\r\n                        quality={GROUP_COVER_QUALITY}\r\n                        aspect={GROUP_COVER_ASPECT}\r\n                        onPictureSelected={(imageInfo: ImageInfo) =>\r\n                            group && (store.dispatch as MyThunkDispatch)(setGroupCover(group.id, imageInfo))\r\n                        }\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: \"#0001\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: GROUP_COVER_HEIGHT,\r\n            borderBottomWidth: StyleSheet.hairlineWidth,\r\n            borderBottomColor: theme.componentBorder,\r\n        },\r\n        image: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        placeholderIcon: {\r\n            fontSize: 32,\r\n            color: theme.textLight,\r\n            marginTop: 50,\r\n        },\r\n        editButton: {\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n        },\r\n        loading: {\r\n            opacity: 0.25,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupCover);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Wave from \"../Wave\";\r\n\r\nexport type WavyHeaderProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    wavePatternIndex?: number | number[] | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WavyHeaderState = {\r\n    headerWidth: number;\r\n    waveTop: number;\r\n};\r\n\r\nexport default class WavyHeader extends React.Component<WavyHeaderProps, WavyHeaderState> {\r\n    constructor(props: WavyHeaderProps) {\r\n        super(props);\r\n        this.state = {\r\n            headerWidth: 0,\r\n            waveTop: props.upsideDown ? 1 : -1,\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown, children, wavePatternIndex} = this.props;\r\n        const {headerWidth, waveTop} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <View\r\n                    style={[{backgroundColor: color, width: \"100%\", zIndex: 10}, style]}\r\n                    onLayout={(layout) => {\r\n                        const {y, height, width} = layout.nativeEvent.layout;\r\n                        this.setState({...this.state, headerWidth: width, waveTop: y + height});\r\n                    }}\r\n                >\r\n                    {children}\r\n                </View>\r\n                {waveTop !== -1 && (\r\n                    <Wave\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: waveTop + (upsideDown ? 1 : -1),\r\n                            width: headerWidth,\r\n                            zIndex: 10,\r\n                        }}\r\n                        color={color}\r\n                        patternIndex={wavePatternIndex || \"random\"}\r\n                        upsideDown={upsideDown}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {fetchGroup} from \"../../state/groups/actions\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\nexport type GroupProviderProps = ConnectedProps<typeof reduxConnector> & {\r\n    groupId?: string | null;\r\n    onGroupReady?: (group: Group) => void;\r\n    children: (props: {group: Group | null}) => React.ReactElement | null;\r\n    redirectIfNotApproved?: boolean;\r\n};\r\n\r\n/**\r\n * This provider receives a group ID and loads the group if needed, passing it to its child.\r\n */\r\nclass GroupProvider extends React.Component<GroupProviderProps> {\r\n    private redirect(): void {\r\n        rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n    }\r\n\r\n    private setGroupReady(group: Group) {\r\n        const {onGroupReady, redirectIfNotApproved} = this.props;\r\n\r\n        if (onGroupReady) onGroupReady(group);\r\n\r\n        if (redirectIfNotApproved) {\r\n            // Redirect away if we're not supposed to be on this group\r\n            if (group.myStatus !== GroupMemberStatus.Approved) this.redirect();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupProviderProps): void {\r\n        const {groupsDict, groupId} = this.props;\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        if (groupId && oldProps.groupId !== groupId) {\r\n            const isGroupLoaded = groupsDict[groupId];\r\n            if (isGroupLoaded) this.setGroupReady(groupsDict[groupId]);\r\n            else {\r\n                dispatch(fetchGroup(groupId)).then((group) => {\r\n                    if (group) this.setGroupReady(group);\r\n                    else this.redirect();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {children, groupId, groupsDict} = this.props;\r\n        const group = groupId ? groupsDict[groupId] || null : null;\r\n        return children({group}) || <></>;\r\n    }\r\n}\r\n\r\nexport default reduxConnector(GroupProvider);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {leaveGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {Text, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type LeaveGroupConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string};\r\n\r\nexport type LeaveGroupConfirmModalState = {deleteData: boolean};\r\n\r\nexport class LeaveGroupConfirmModalClass extends React.Component<\r\n    LeaveGroupConfirmModalProps,\r\n    LeaveGroupConfirmModalState\r\n> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: LeaveGroupConfirmModalProps) {\r\n        super(props);\r\n        this.state = {deleteData: false};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, theme, ...otherProps} = this.props;\r\n        const {deleteData} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.leave.title\")}\r\n                text={i18n.t(\"groups.leave.text\")}\r\n                icon={(props) => <MaterialIcons name=\"exit-to-app\" color={theme.text} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        text: i18n.t(\"ok\"),\r\n                        preset: \"delete\",\r\n                        onPress: async (hide) => {\r\n                            const success = await dispatch(leaveGroup(groupId, deleteData));\r\n                            if (success) hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={(hide, textProps) => (\r\n                    <TouchableOpacity\r\n                        style={styles.checkboxTouchable}\r\n                        onPress={() => this.setState({...this.state, deleteData: !deleteData})}\r\n                    >\r\n                        <CheckBox\r\n                            containerStyle={styles.checkboxContainer}\r\n                            checked={deleteData}\r\n                            onPress={() => this.setState({...this.state, deleteData: !deleteData})}\r\n                        />\r\n                        <Text {...textProps} style={[textProps.style, {fontSize: 14, flex: 1}]}>\r\n                            {i18n.t(\"groups.leave.deleteData\")}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        checkboxTouchable: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LeaveGroupConfirmModalClass);\r\n","import React from \"react\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deleteGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Group} from \"../../model/groups\";\r\nimport ValidatedTextInput from \"../ValidatedTextInput\";\r\n\r\nexport type DeleteGroupConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\ntype DeleteGroupConfirmModalState = {inputValue: string; inputCorrect: boolean};\r\n\r\nexport class DeleteGroupConfirmModalClass extends React.Component<\r\n    DeleteGroupConfirmModalProps,\r\n    DeleteGroupConfirmModalState\r\n> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: DeleteGroupConfirmModalProps) {\r\n        super(props);\r\n        this.state = {inputValue: \"\", inputCorrect: false};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n        this.setInput(\"\");\r\n    }\r\n\r\n    private setInput(value: string) {\r\n        const {group} = this.props;\r\n        const inputCorrect = value === group.name;\r\n        this.setState({...this.state, inputValue: value, inputCorrect});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, theme, ...otherProps} = this.props;\r\n        const {inputValue, inputCorrect} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.delete.title\")}\r\n                text={i18n.t(\"groups.delete.text\")}\r\n                icon={(props) => <MaterialIcons name=\"delete-forever\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        text: i18n.t(\"ok\"),\r\n                        preset: \"delete\",\r\n                        disabled: !inputCorrect,\r\n                        onPress: (hide) => {\r\n                            dispatch(deleteGroup(group.id));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={() => (\r\n                    <ValidatedTextInput\r\n                        value={inputValue}\r\n                        onChangeText={(value) => this.setInput(value)}\r\n                        placeholder={group.name}\r\n                        style={styles.input}\r\n                        errorStyle={styles.inputIncorrect}\r\n                        placeholderTextColor={theme.inputPlaceholder}\r\n                        error={inputCorrect ? undefined : \"error\"}\r\n                        showErrorText={false}\r\n                    />\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        input: {\r\n            width: \"100%\",\r\n            height: 42,\r\n            borderRadius: 10,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            fontSize: 16,\r\n            paddingHorizontal: 15,\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        inputIncorrect: {\r\n            borderBottomColor: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteGroupConfirmModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalButton, ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {ValidatedCheckBox} from \"../ValidatedCheckBox\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {getFormCheckBoxStyleProps} from \"../../styles/forms\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {updateGroup} from \"../../state/groups/actions\";\r\n\r\nexport type GroupSettingsModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport type GroupSettingsModalState = {visible: boolean; requiresApproval: boolean};\r\n\r\nexport class GroupSettingsModalClass extends React.Component<GroupSettingsModalProps, GroupSettingsModalState> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: GroupSettingsModalProps) {\r\n        super(props);\r\n        this.state = {visible: false, requiresApproval: false};\r\n    }\r\n\r\n    private setStateFromGroup(): void {\r\n        const group = this.props.group;\r\n        this.setState({visible: group.visible, requiresApproval: group.requiresApproval});\r\n    }\r\n\r\n    show(): void {\r\n        this.setStateFromGroup();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupSettingsModalProps): void {\r\n        const group = this.props.group;\r\n        if (group.id !== oldProps.group.id) this.setStateFromGroup();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const isAdmin = group.myRole === GroupRole.Admin;\r\n        const checkboxProps = getFormCheckBoxStyleProps(theme);\r\n\r\n        const buttons: ConfirmationModalButton[] = [];\r\n\r\n        if (isAdmin) {\r\n            buttons.push({preset: \"cancel\"});\r\n            buttons.push({\r\n                backgroundColor: theme.accent,\r\n                text: i18n.t(\"apply\"),\r\n                onPress: (hide) => {\r\n                    hide();\r\n                    dispatch(\r\n                        updateGroup(group.id, {\r\n                            visible: this.state.visible,\r\n                            requiresApproval: this.state.requiresApproval,\r\n                        }),\r\n                    );\r\n                },\r\n            });\r\n        } else {\r\n            buttons.push({preset: \"cancel\", text: i18n.t(\"ok\")});\r\n        }\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.settings.title\")}\r\n                additionalContent={() => (\r\n                    <>\r\n                        <TouchableOpacity\r\n                            onPress={() => isAdmin && this.setState({visible: !this.state.visible})}\r\n                            activeOpacity={0.75}\r\n                        >\r\n                            <ValidatedCheckBox\r\n                                value={this.state.visible}\r\n                                label={i18n.t(\"groups.create.visible\")}\r\n                                onPress={() => isAdmin && this.setState({visible: !this.state.visible})}\r\n                                {...checkboxProps}\r\n                                {...(isAdmin ? {} : {disabled: true})} // this is not in the docs but there is a disabled prop on RNE's CheckBox\r\n                            />\r\n                            <Text style={styles.fieldDescription}>\r\n                                {i18n.t(`groups.create.visibleDescription.${this.state.visible}`)}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity\r\n                            onPress={() => isAdmin && this.setState({requiresApproval: !this.state.requiresApproval})}\r\n                            activeOpacity={0.75}\r\n                        >\r\n                            <ValidatedCheckBox\r\n                                value={this.state.requiresApproval}\r\n                                label={i18n.t(\"groups.create.requireApproval\")}\r\n                                onPress={() =>\r\n                                    isAdmin && this.setState({requiresApproval: !this.state.requiresApproval})\r\n                                }\r\n                                {...checkboxProps}\r\n                                {...(isAdmin ? {} : {disabled: true})}\r\n                            />\r\n                            <Text style={styles.fieldDescription}>\r\n                                {i18n.t(`groups.create.requireApprovalDescription.${this.state.requiresApproval}`)}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    </>\r\n                )}\r\n                justifyText\r\n                buttons={buttons}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        fieldDescription: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            marginBottom: 20,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupSettingsModalClass);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../model/groups\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu, {ActionMenuClass, ActionMenuItem} from \"./ActionMenu\";\r\nimport i18n from \"i18n-js\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"./forms/QuickFormReport\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {GroupRole} from \"../api/dto\";\r\nimport LeaveGroupConfirmModal, {LeaveGroupConfirmModalClass} from \"./modals/LeaveGroupConfirmModal\";\r\nimport DeleteGroupConfirmModal, {DeleteGroupConfirmModalClass} from \"./modals/DeleteGroupConfirmModal\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport GroupSettingsModal, {GroupSettingsModalClass} from \"./modals/GroupSettingsModal\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\nexport type GroupSettingsMenuProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype GroupSettingsMenuState = {group: Group | null; actions: ActionMenuItem[]};\r\n\r\nexport class GroupSettingsMenuClass extends React.Component<GroupSettingsMenuProps, GroupSettingsMenuState> {\r\n    private actionMenuRef = React.createRef<ActionMenuClass>();\r\n    private leaveModalRef = React.createRef<LeaveGroupConfirmModalClass>();\r\n    private deleteGroupModalRef = React.createRef<DeleteGroupConfirmModalClass>();\r\n    private reportFormRef = React.createRef<QuickFormReportClass>();\r\n    private settingsModalRef = React.createRef<GroupSettingsModalClass>();\r\n\r\n    constructor(props: GroupSettingsMenuProps) {\r\n        super(props);\r\n        this.state = {group: null, actions: []};\r\n    }\r\n\r\n    show(group: Group): void {\r\n        this.actionMenuRef.current?.show();\r\n        this.setState({...this.state, group});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {group} = this.state;\r\n\r\n        const isAdmin = group && group.myRole == GroupRole.Admin;\r\n\r\n        const leaveAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"exit-to-app\" />,\r\n            text: i18n.t(\"groups.leave.title\"),\r\n            onSelect: () => this.leaveModalRef.current?.show(),\r\n        };\r\n        const manageBansAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"block\" />,\r\n            text: i18n.t(\"groups.members.manageBanned\"),\r\n            onSelect: () =>\r\n                group &&\r\n                rootNavigate(\"TabGroups\", {\r\n                    screen: \"GroupBannedMembersScreen\",\r\n                    params: {groupId: group.id},\r\n                }),\r\n        };\r\n        const manageMembersAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"group\" />,\r\n            text: i18n.t(\"groups.members.manage\"),\r\n            onSelect: () =>\r\n                group &&\r\n                rootNavigate(\"TabGroups\", {\r\n                    screen: \"GroupMembersScreen\",\r\n                    params: {groupId: group.id},\r\n                }),\r\n        };\r\n        const settingsAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"settings\" />,\r\n            text: i18n.t(\"groups.settings.title\"),\r\n            onSelect: () => this.settingsModalRef.current?.show(),\r\n        };\r\n        const deleteAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"delete\" />,\r\n            text: i18n.t(\"groups.delete.title\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.deleteGroupModalRef.current?.show(),\r\n        };\r\n        const reportAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"report\" />,\r\n            text: i18n.t(\"groups.reportPost\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.reportFormRef.current?.open(),\r\n        };\r\n\r\n        const actions: ActionMenuItem[] = [];\r\n\r\n        if (isAdmin) actions.push(manageMembersAction);\r\n        if (isAdmin) actions.push(manageBansAction);\r\n        actions.push(settingsAction);\r\n        actions.push(leaveAction);\r\n        if (isAdmin) actions.push(deleteAction);\r\n        actions.push(reportAction);\r\n        actions.push({preset: \"close\"});\r\n\r\n        return (\r\n            <>\r\n                <ActionMenu ref={this.actionMenuRef} title={i18n.t(\"groups.group\")} actions={actions} />\r\n                {group && (\r\n                    <>\r\n                        <LeaveGroupConfirmModal ref={this.leaveModalRef} groupId={group.id} />\r\n                        <DeleteGroupConfirmModal ref={this.deleteGroupModalRef} group={group} />\r\n                        <GroupSettingsModal ref={this.settingsModalRef} group={group} />\r\n                        <QuickFormReport\r\n                            ref={this.reportFormRef}\r\n                            entity={group}\r\n                            entityType={ReportEntityType.GROUP_ENTITY}\r\n                        />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupSettingsMenuClass));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport GroupSettingsMenu, {GroupSettingsMenuClass} from \"../GroupSettingsMenu\";\r\nimport {statusBarRef} from \"../ThemedStatusBar\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        groupsDict: state.groups.groupsDict,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\n// Component props\r\nexport type GroupScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n    };\r\n\r\ntype GroupScreenHeaderState = {transparent: boolean};\r\n\r\nexport class GroupScreenHeaderClass extends React.Component<GroupScreenHeaderProps, GroupScreenHeaderState> {\r\n    settingsMenuRef = React.createRef<GroupSettingsMenuClass>();\r\n\r\n    constructor(props: GroupScreenHeaderProps) {\r\n        super(props);\r\n        this.state = {transparent: true};\r\n    }\r\n\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    toggleTransparentMode(transparent: boolean): void {\r\n        if (this.state.transparent !== transparent) {\r\n            this.setState({transparent});\r\n            statusBarRef.current?.setStyle(transparent ? \"light\" : undefined); // setting undefined will use the default depending on the theme\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...stackProps} = this.props;\r\n        const {transparent} = this.state;\r\n\r\n        const group = this.getGroup();\r\n\r\n        return (\r\n            <>\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    backButton\r\n                    noAvatar\r\n                    noShadow\r\n                    noSettingsButton\r\n                    wrapperStyle={[\r\n                        {\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            zIndex: 10,\r\n                        },\r\n                        transparent && {backgroundColor: \"transparent\"},\r\n                    ]}\r\n                    color={transparent ? themes.dark.text : theme.text}\r\n                    buttonBackgroundColor=\"transparent\"\r\n                    overrideTitle={transparent ? \"\" : group?.name || \"\"}\r\n                    navigateBackFallback={(nav) =>\r\n                        nav.navigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}})\r\n                    }\r\n                    rightButtons={\r\n                        group\r\n                            ? [\r\n                                  ({buttonStyle, iconStyle}) => (\r\n                                      <TouchableOpacity\r\n                                          style={buttonStyle}\r\n                                          onPress={() => this.settingsMenuRef.current?.show(group)}\r\n                                      >\r\n                                          <MaterialCommunityIcons\r\n                                              name=\"dots-horizontal\"\r\n                                              style={[iconStyle, {fontSize: 30}]}\r\n                                          />\r\n                                      </TouchableOpacity>\r\n                                  ),\r\n                              ]\r\n                            : []\r\n                    }\r\n                />\r\n                <GroupSettingsMenu ref={this.settingsMenuRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupScreenHeaderClass));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {getRouteParams, rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {fetchGroupMembers, fetchGroupMembersRefresh, updateGroup} from \"../../state/groups/actions\";\r\nimport GroupPostsView from \"../../components/GroupPostsView\";\r\nimport EditableText from \"../../components/EditableText\";\r\nimport GroupCover, {GROUP_COVER_HEIGHT} from \"../../components/GroupCover\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport Button from \"../../components/Button\";\r\nimport WavyHeader from \"../../components/headers/WavyHeader\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\nimport store from \"../../state/store\";\r\nimport GroupScreenHeader, {GroupScreenHeaderClass} from \"../../components/headers/GroupScreenHeader\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype GroupScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype GroupScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nconst APPROBATION_REQ_INDICATOR_SIZE = 12;\r\n\r\nclass GroupScreen extends React.Component<GroupScreenProps, GroupScreenState> {\r\n    headerRef = React.createRef<GroupScreenHeaderClass>();\r\n\r\n    constructor(props: GroupScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    private fetchFirstGroupMembers(group: Group, refresh = false): void {\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        if (refresh) {\r\n            dispatch(fetchGroupMembersRefresh(group.id, GroupMemberStatus.Approved));\r\n            dispatch(fetchGroupMembersRefresh(group.id, GroupMemberStatus.Pending));\r\n        }\r\n        dispatch(fetchGroupMembers(group.id, GroupMemberStatus.Approved));\r\n        dispatch(fetchGroupMembers(group.id, GroupMemberStatus.Pending));\r\n    }\r\n\r\n    private renderTop(group: Group | null): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const pendingMemberIds = group ? group.memberIds[GroupMemberStatus.Pending] : [];\r\n        const isAdmin = group && group.myRole === GroupRole.Admin;\r\n        const numApprovedMembers = group?.numApprovedMembers;\r\n\r\n        return (\r\n            <View style={styles.top}>\r\n                <GroupCover group={group} />\r\n                <WavyHeader color={theme.cardBackground} wavePatternIndex={[2, 4, 6, 7]}>\r\n                    <View style={styles.topInfo}>\r\n                        <EditableText\r\n                            text={group ? group.name : \"\"}\r\n                            nonEditable={!isAdmin}\r\n                            fontSize={22}\r\n                            numberOfLines={1}\r\n                            maxLength={30}\r\n                            onSubmit={(name: string) => group && dispatch(updateGroup(group.id, {name}))}\r\n                        />\r\n                        <EditableText\r\n                            text={group ? group.description : \"\"}\r\n                            placeholder={group ? i18n.t(`groups.description.${isAdmin ? \"placeholder\" : \"none\"}`) : \"\"}\r\n                            nonEditable={!isAdmin}\r\n                            fontSize={16}\r\n                            numberOfLines={4}\r\n                            maxLength={150}\r\n                            onSubmit={(description: string) => group && dispatch(updateGroup(group.id, {description}))}\r\n                        />\r\n                        <View style={styles.members}>\r\n                            <Text style={styles.groupInfo}>\r\n                                {numApprovedMembers === null || numApprovedMembers === undefined\r\n                                    ? \"\"\r\n                                    : numApprovedMembers === 0\r\n                                    ? i18n.t(\"groups.members.zero\")\r\n                                    : numApprovedMembers === 1\r\n                                    ? i18n.t(\"groups.members.singular\")\r\n                                    : i18n.t(\"groups.members.plural\", {num: numApprovedMembers})}\r\n                            </Text>\r\n                            <Button\r\n                                style={styles.membersButton}\r\n                                icon={\r\n                                    <MaterialCommunityIcons\r\n                                        style={styles.membersButtonIcon}\r\n                                        name=\"dots-horizontal-circle-outline\"\r\n                                    />\r\n                                }\r\n                                onPress={() =>\r\n                                    groupId &&\r\n                                    rootNavigate(\"TabGroups\", {screen: \"GroupMembersScreen\", params: {groupId}})\r\n                                }\r\n                            />\r\n                            <Button\r\n                                style={styles.membersButton}\r\n                                icon={\r\n                                    <MaterialCommunityIcons\r\n                                        style={styles.membersButtonIcon}\r\n                                        name=\"account-plus-outline\"\r\n                                    />\r\n                                }\r\n                                onPress={() =>\r\n                                    groupId &&\r\n                                    rootNavigate(\"TabGroups\", {screen: \"GroupInviteScreen\", params: {groupId}})\r\n                                }\r\n                            />\r\n                            {isAdmin && (\r\n                                <Button\r\n                                    style={styles.membersButton}\r\n                                    icon={\r\n                                        <>\r\n                                            <MaterialIcons\r\n                                                style={styles.membersButtonIcon}\r\n                                                name={pendingMemberIds.length > 0 ? \"person\" : \"person-outline\"}\r\n                                            />\r\n                                            {pendingMemberIds.length > 0 && (\r\n                                                <View style={styles.approbationRequestIndicatorContainer}>\r\n                                                    <FontAwesome\r\n                                                        size={APPROBATION_REQ_INDICATOR_SIZE - 4}\r\n                                                        name=\"exclamation\"\r\n                                                        color={themes.dark.text}\r\n                                                    />\r\n                                                </View>\r\n                                            )}\r\n                                        </>\r\n                                    }\r\n                                    onPress={() =>\r\n                                        groupId &&\r\n                                        rootNavigate(\"TabGroups\", {\r\n                                            screen: \"GroupMembersApprovalScreen\",\r\n                                            params: {groupId},\r\n                                        })\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                </WavyHeader>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <GroupProvider\r\n                    groupId={groupId}\r\n                    onGroupReady={(group) =>\r\n                        group.myStatus === GroupMemberStatus.Approved && this.fetchFirstGroupMembers(group)\r\n                    }\r\n                    redirectIfNotApproved\r\n                >\r\n                    {({group}) => (\r\n                        <GroupPostsView\r\n                            top={this.renderTop(group)}\r\n                            navigation={navigation as never}\r\n                            group={group}\r\n                            titleContainerStyle={styles.postsTitle}\r\n                            onRefresh={() => group && this.fetchFirstGroupMembers(group, true)}\r\n                            onScroll={(y) => this.headerRef.current?.toggleTransparentMode(y <= GROUP_COVER_HEIGHT)}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n                <GroupScreenHeader ref={this.headerRef} groupId={getRouteParams(this.props.route).groupId as string} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            marginBottom: 30,\r\n        },\r\n        topInfo: {\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n            paddingBottom: 5,\r\n        },\r\n        members: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        groupInfo: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        postsTitle: {\r\n            marginTop: 10,\r\n        },\r\n        membersButton: {\r\n            padding: 4,\r\n        },\r\n        membersButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n        approbationRequestIndicatorContainer: {\r\n            position: \"absolute\",\r\n            backgroundColor: theme.error,\r\n            width: APPROBATION_REQ_INDICATOR_SIZE,\r\n            height: APPROBATION_REQ_INDICATOR_SIZE,\r\n            borderRadius: APPROBATION_REQ_INDICATOR_SIZE,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            left: 16,\r\n            bottom: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MyThunkDispatch, PaginatedState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {GROUP_MEMBERS_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../constants/config\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport BufferedSearchBar from \"../components/BufferedSearchBar\";\r\nimport {fetchGroupMembers, fetchGroupMembersRefresh} from \"../state/groups/actions\";\r\nimport {Group, GroupMember} from \"../model/groups\";\r\nimport {GroupMemberStatus} from \"../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport store from \"../state/store\";\r\n\r\n// Component props\r\ntype GroupMembersViewProps = {\r\n    group: Group | null;\r\n    status: GroupMemberStatus;\r\n    navigation: NavigationProp<never>;\r\n    renderItem: (member: GroupMember) => JSX.Element;\r\n    noResultsText?: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype GroupMembersViewState = {\r\n    search: string;\r\n};\r\n\r\nclass GroupMembersView extends React.Component<GroupMembersViewProps, GroupMembersViewState> {\r\n    constructor(props: GroupMembersViewProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, status, renderItem, noResultsText, navigation} = this.props;\r\n        const {search} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const pagination: PaginatedState = group\r\n            ? group.membersPaginations[status]\r\n            : {canFetchMore: true, fetching: true, page: 1};\r\n        const memberIds = group ? group.memberIds[status] : [];\r\n        const members = group ? memberIds.map((id) => group.members[id]) : [];\r\n\r\n        const numApproved = group?.numApprovedMembers;\r\n\r\n        return (\r\n            <>\r\n                {numApproved !== null && numApproved !== undefined && numApproved > 0 && (\r\n                    <BufferedSearchBar\r\n                        onBufferedUpdate={() => group && dispatch(fetchGroupMembersRefresh(group.id, status))}\r\n                        bufferDelay={SEARCH_BUFFER_DELAY}\r\n                        placeholder={i18n.t(\"search\")}\r\n                        onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                        value={search}\r\n                        containerStyle={styles.searchBarContainer}\r\n                        inputContainerStyle={styles.searchBarInputContainer}\r\n                        inputStyle={styles.searchBarInput}\r\n                    />\r\n                )}\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUP_MEMBERS_FETCH_LIMIT}\r\n                    fetchMore={() => group && dispatch(fetchGroupMembers(group.id, status, search))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={members}\r\n                    id={(member: GroupMember): string => member.profile.id}\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{noResultsText}</Text>}\r\n                    refresh={() => group && dispatch(fetchGroupMembersRefresh(group.id, status))}\r\n                    refreshOnFocus\r\n                    renderItem={(member: GroupMember) => renderItem(member)}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupMembersView);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport {deleteGroupMember} from \"../../state/groups/actions\";\r\n\r\nexport type DeleteGroupMemberModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile | null; pending?: boolean};\r\n\r\nexport class DeleteGroupMemberModalClass extends React.Component<DeleteGroupMemberModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, pending, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const translationRoot = pending ? \"groups.deletePendingMember\" : \"groups.deleteMember\";\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(`${translationRoot}.title`)}\r\n                text={\r\n                    profile ? i18n.t(`${translationRoot}.text`, {name: `${profile.firstName} ${profile.lastName}`}) : \"\"\r\n                }\r\n                justifyText\r\n                icon={(props) => <MaterialCommunityIcons name=\"account-remove\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(`${translationRoot}.action`),\r\n                        // No need to hide the modal since it will be unmounted anyway\r\n                        onPress: () => profile && dispatch(deleteGroupMember(groupId, profile.id, true)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteGroupMemberModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\n\r\nexport type BanGroupMemberModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile | null; pending?: boolean};\r\n\r\nexport class BanGroupMemberModalClass extends React.Component<BanGroupMemberModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, pending, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const translationRoot = pending ? \"groups.banPendingMember\" : \"groups.banMember\";\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(`${translationRoot}.title`)}\r\n                text={\r\n                    profile ? i18n.t(`${translationRoot}.text`, {name: `${profile.firstName} ${profile.lastName}`}) : \"\"\r\n                }\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"block\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(`${translationRoot}.action`),\r\n                        onPress: async (hide) => {\r\n                            if (profile) {\r\n                                const success = await dispatch(\r\n                                    setGroupMemberStatus(groupId, profile.id, GroupMemberStatus.Banned),\r\n                                );\r\n                                if (success) hide();\r\n                            }\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BanGroupMemberModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport store from \"../../state/store\";\r\nimport {setGroupMemberRole} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {GroupRole} from \"../../api/dto\";\r\n\r\nexport type GroupPromoteAdminModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile};\r\n\r\nexport class GroupPromoteAdminModalClass extends React.Component<GroupPromoteAdminModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.promoteToAdmin.title\")}\r\n                text={i18n.t(\"groups.promoteToAdmin.text\", {name: `${profile.firstName} ${profile.lastName}`})}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.promoteToAdmin.action\"),\r\n                        onPress: (hide) => {\r\n                            dispatch(setGroupMemberRole(groupId, profile.id, GroupRole.Admin));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupPromoteAdminModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport DeleteGroupMemberModal from \"../modals/DeleteGroupMemberModal\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport BanGroupMemberModal from \"../modals/BanGroupMemberModal\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {deleteGroupMember, setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport GroupPromoteAdminModal from \"../modals/GroupPromoteAdminModal\";\r\nimport store from \"../../state/store\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localUserId: state.profile.user?.id,\r\n}));\r\n\r\n// Component props\r\ntype GroupMemberCardProps = {\r\n    groupId: string;\r\n    member: GroupMember | null;\r\n    style?: StyleProp<ViewStyle>;\r\n    adminView: boolean;\r\n} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\nclass GroupMemberCard extends React.Component<GroupMemberCardProps> {\r\n    render(): JSX.Element {\r\n        const {theme, groupId, localUserId, member, adminView, style, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n        const isLocalUser = member && localUserId === member.profile.id;\r\n        const isMemberAdmin = member && member.role === GroupRole.Admin;\r\n\r\n        const deleteMemberButton = member && (\r\n            <DeleteGroupMemberModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={\r\n                            <MaterialCommunityIcons\r\n                                name=\"account-remove\"\r\n                                style={[styles.controlIcon, {color: theme.error}]}\r\n                            />\r\n                        }\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n                pending={member.status === GroupMemberStatus.Pending}\r\n            />\r\n        );\r\n        const banMemberButton = member && (\r\n            <BanGroupMemberModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={<MaterialIcons name=\"block\" style={[styles.controlIcon, {color: theme.error}]} />}\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n                pending={member.status === GroupMemberStatus.Pending}\r\n            />\r\n        );\r\n        const promoteAdminButton = member && (\r\n            <GroupPromoteAdminModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={\r\n                            <MaterialCommunityIcons\r\n                                name=\"account-star\"\r\n                                style={[styles.controlIcon, {color: theme.accentTernary}]}\r\n                            />\r\n                        }\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n            />\r\n        );\r\n        const acceptMemberButton = member && (\r\n            <Button\r\n                style={styles.controlButton}\r\n                icon={<MaterialIcons name=\"person-add\" style={[styles.controlIcon, {color: theme.accent}]} />}\r\n                onPress={() => dispatch(setGroupMemberStatus(groupId, member.profile.id, GroupMemberStatus.Approved))}\r\n            />\r\n        );\r\n        const unbanMemberButton = member && member.status === GroupMemberStatus.Banned && (\r\n            <Button\r\n                style={styles.controlButton}\r\n                icon={<MaterialIcons name=\"cancel\" style={[styles.controlIcon, {color: theme.accent}]} />}\r\n                onPress={() => dispatch(deleteGroupMember(groupId, member.profile.id, false))}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, style]}\r\n                onPress={() => member && navigateToProfile(member.profile.id, store.getState())}\r\n                {...otherProps}\r\n            >\r\n                {member && (\r\n                    <>\r\n                        <EnlargeableAvatar\r\n                            profile={member.profile}\r\n                            size={50}\r\n                            rounded\r\n                            containerStyle={styles.avatarContainer}\r\n                        />\r\n                        <View style={{flexDirection: \"column\", flex: 1}}>\r\n                            <Text style={styles.name} numberOfLines={2}>\r\n                                {member.profile.firstName} {member.profile.lastName}\r\n                            </Text>\r\n                            {member.role !== \"basic\" && (\r\n                                <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                    {member.role === \"admin\" && (\r\n                                        <MaterialIcons name=\"verified-user\" style={styles.roleIcon} />\r\n                                    )}\r\n                                    <Text style={styles.role}>{i18n.t(`groups.roles.${member.role}`)}</Text>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n                        <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                            {adminView &&\r\n                                member.status === GroupMemberStatus.Approved &&\r\n                                !isLocalUser &&\r\n                                !isMemberAdmin && (\r\n                                    <>\r\n                                        {promoteAdminButton}\r\n                                        {deleteMemberButton}\r\n                                        {banMemberButton}\r\n                                    </>\r\n                                )}\r\n                            {adminView && member.status === GroupMemberStatus.Banned && <>{unbanMemberButton}</>}\r\n                            {adminView && member.status === GroupMemberStatus.Pending && (\r\n                                <>\r\n                                    {acceptMemberButton}\r\n                                    {deleteMemberButton}\r\n                                    {banMemberButton}\r\n                                </>\r\n                            )}\r\n                        </View>\r\n                    </>\r\n                )}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 10,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n        avatarContainer: {\r\n            marginRight: 10,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        name: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        role: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n        roleIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 20,\r\n            marginRight: 3,\r\n        },\r\n        controlButton: {\r\n            padding: 6,\r\n        },\r\n        controlIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 24,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMemberCard));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupMembersScreenProps = StackScreenProps<TabGroupsRoot, \"GroupMembersScreen\">;\r\n\r\n// Component state\r\ntype GroupMembersScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupMembersScreen extends React.Component<GroupMembersScreenProps, GroupMembersScreenState> {\r\n    constructor(props: GroupMembersScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Approved}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.approved.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupMembersScreen;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {navigateToGroup, rootNavigate} from \"../../navigation/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\nexport type GroupMembersScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n        keepScreenTitle?: boolean;\r\n        noInviteButton?: boolean;\r\n    };\r\n\r\nclass GroupMembersScreenHeaderClass extends React.Component<GroupMembersScreenHeaderProps> {\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {keepScreenTitle, noInviteButton, groupId, ...stackProps} = this.props;\r\n\r\n        const group = this.getGroup();\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton\r\n                noAvatar\r\n                noShadow\r\n                {...(!keepScreenTitle ? {overrideTitle: group ? group.name : \"\"} : {})}\r\n                titleStyle={{fontSize: 18}}\r\n                navigateBackFallback={groupId ? () => navigateToGroup(groupId) : undefined}\r\n                rightButtons={\r\n                    group && !noInviteButton\r\n                        ? [\r\n                              ({buttonStyle, iconStyle}) => (\r\n                                  <TouchableOpacity\r\n                                      style={buttonStyle}\r\n                                      onPress={() =>\r\n                                          group &&\r\n                                          rootNavigate(\"TabGroups\", {\r\n                                              screen: \"GroupInviteScreen\",\r\n                                              params: {groupId: group.id},\r\n                                          })\r\n                                      }\r\n                                  >\r\n                                      <MaterialCommunityIcons name=\"account-plus-outline\" style={iconStyle} />\r\n                                  </TouchableOpacity>\r\n                              ),\r\n                          ]\r\n                        : []\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(\r\n    withTheme((props: GroupMembersScreenHeaderProps) => <GroupMembersScreenHeaderClass {...props} />),\r\n);\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity} from \"react-native\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport i18n from \"i18n-js\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\nexport type GroupInviteScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n    };\r\n\r\nclass GroupInviteScreenHeaderClass extends React.Component<GroupInviteScreenHeaderProps> {\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, ...stackProps} = this.props;\r\n\r\n        // const group = this.getGroup();\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton\r\n                noAvatar\r\n                noShadow\r\n                noSettingsButton\r\n                overrideTitle={i18n.t(\"groups.inviteNew\")}\r\n                navigateBackFallback={groupId ? () => navigateToGroup(groupId) : undefined}\r\n                rightButtons={[\r\n                    () => (\r\n                        <TouchableOpacity style={{padding: 5}} onPress={() => stackProps.navigation?.goBack()}>\r\n                            <Text style={{fontSize: 16, color: theme.text}}>{i18n.t(\"apply\")}</Text>\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(\r\n    withTheme((props: GroupInviteScreenHeaderProps) => <GroupInviteScreenHeaderClass {...props} />),\r\n);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {inviteToGroup} from \"../../state/groups/actions\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport {Text} from \"react-native\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {Group} from \"../../model/groups\";\r\n\r\nexport type GroupInviteModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group; profile: UserProfile};\r\n\r\nexport class GroupInviteModalClass extends React.Component<GroupInviteModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, profile, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const adminView = group.myRole === GroupRole.Admin;\r\n        const stillNeedsApproval = group.requiresApproval && !adminView;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.invite.title\")}\r\n                text={i18n.t(\"groups.invite.text\", {name: `${profile.firstName}`})}\r\n                justifyText\r\n                {...(stillNeedsApproval\r\n                    ? {\r\n                          additionalContent: (hide, textProps) => (\r\n                              <Text {...textProps} style={[textProps.style, {fontSize: 14}]}>\r\n                                  {i18n.t(\"groups.invite.approvalDisclaimerInviter\", {name: `${profile.firstName}`})}\r\n                              </Text>\r\n                          ),\r\n                      }\r\n                    : {})}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.invite.invite\"),\r\n                        onPress: (hide) => {\r\n                            dispatch(inviteToGroup(group.id, profile));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupInviteModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport GroupInviteModal from \"../modals/GroupInviteModal\";\r\nimport store from \"../../state/store\";\r\n\r\n// Component props\r\ntype GroupProfileInviteCardProps = {\r\n    group: Group;\r\n    profile: UserProfile;\r\n    style?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupProfileInviteCard extends React.Component<GroupProfileInviteCardProps> {\r\n    render(): JSX.Element {\r\n        const {theme, group, profile, style, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, style]}\r\n                onPress={() => navigateToProfile(profile.id, store.getState())}\r\n                {...otherProps}\r\n            >\r\n                <EnlargeableAvatar profile={profile} size={50} rounded containerStyle={styles.avatarContainer} />\r\n                <View style={{flexDirection: \"column\", flex: 1}}>\r\n                    <Text style={styles.name} numberOfLines={2}>\r\n                        {profile.firstName} {profile.lastName}\r\n                    </Text>\r\n                </View>\r\n                <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                    <GroupInviteModal\r\n                        activator={(show) => (\r\n                            <Button\r\n                                style={styles.controlButton}\r\n                                icon={\r\n                                    <MaterialIcons\r\n                                        name=\"person-add\"\r\n                                        style={[styles.controlIcon, {color: theme.accent}]}\r\n                                    />\r\n                                }\r\n                                onPress={show}\r\n                            />\r\n                        )}\r\n                        group={group}\r\n                        profile={profile}\r\n                    />\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 10,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        avatarContainer: {\r\n            marginRight: 10,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        name: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        controlButton: {\r\n            padding: 6,\r\n        },\r\n        controlIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 24,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupProfileInviteCard);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport GroupProfileInviteCard from \"../../components/cards/GroupProfileInviteCard\";\r\nimport {fetchAvailableMatches} from \"../../state/groups/actions\";\r\nimport BufferedSearchBar from \"../../components/BufferedSearchBar\";\r\nimport {SEARCH_BUFFER_DELAY} from \"../../constants/config\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\nimport store from \"../../state/store\";\r\n\r\n// Component props\r\ntype GroupInviteScreenProps = ThemeProps & StackScreenProps<TabGroupsRoot, \"GroupInviteScreen\">;\r\n\r\n// Component state\r\ntype GroupInviteScreenState = {\r\n    search: string;\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupInviteScreen extends React.Component<GroupInviteScreenProps, GroupInviteScreenState> {\r\n    constructor(props: GroupInviteScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\", groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    private fetch(): void {\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const {groupId, search} = this.state;\r\n        if (groupId) dispatch(fetchAvailableMatches(groupId, search));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {search, groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => this.fetch()}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) =>\r\n                        group && (\r\n                            <InfiniteScroller\r\n                                navigation={navigation}\r\n                                fetchLimit={1}\r\n                                fetchMore={() => this.fetch()}\r\n                                fetching={group.availableMatches.fetching}\r\n                                canFetchMore={group.availableMatches.profiles === null}\r\n                                currentPage={1}\r\n                                items={group.availableMatches.profiles || []}\r\n                                id={(p: UserProfile): string => p.id}\r\n                                hideScrollIndicator\r\n                                noResultsComponent={\r\n                                    <Text style={styles.noResultsText}>{i18n.t(\"groups.invite.nobodyToInvite\")}</Text>\r\n                                }\r\n                                refresh={() => this.fetch()}\r\n                                refreshOnFocus\r\n                                renderItem={(p: UserProfile) => (\r\n                                    <GroupProfileInviteCard key={`invite-${p.id}`} group={group} profile={p} />\r\n                                )}\r\n                                itemsContainerStyle={styles.itemsContainer}\r\n                            />\r\n                        )\r\n                    }\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            marginVertical: 5,\r\n            textAlign: \"center\",\r\n            maxWidth: 300,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupInviteScreen);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupMembersApprovalScreenProps = StackScreenProps<TabGroupsRoot, \"GroupMembersApprovalScreen\">;\r\n\r\n// Component state\r\ntype GroupMembersApprovalScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupMembersApprovalScreen extends React.Component<\r\n    GroupMembersApprovalScreenProps,\r\n    GroupMembersApprovalScreenState\r\n> {\r\n    constructor(props: GroupMembersApprovalScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Pending}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group?.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.approval.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupMembersApprovalScreen;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupBannedMembersScreenProps = StackScreenProps<TabGroupsRoot, \"GroupBannedMembersScreen\">;\r\n\r\n// Component state\r\ntype GroupBannedMembersScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupBannedMembersScreen extends React.Component<GroupBannedMembersScreenProps, GroupBannedMembersScreenState> {\r\n    constructor(props: GroupBannedMembersScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Banned}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.banned.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupBannedMembersScreen;\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {TabGroupsRoot} from \"./types\";\r\nimport {getRouteParams, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport TabGroupsScreen from \"../screens/groups/TabGroupsScreen\";\r\nimport {CustomModalClass} from \"../components/modals/CustomModal\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {useRef} from \"react\";\r\nimport CreateGroupModal from \"../components/modals/CreateGroupModal\";\r\nimport GroupsExploreScreen from \"../screens/groups/GroupsExploreScreen\";\r\nimport GroupScreen from \"../screens/groups/GroupScreen\";\r\nimport GroupMembersScreen from \"../screens/groups/GroupMembersScreen\";\r\nimport GroupMembersScreenHeader from \"../components/headers/GroupMembersScreenHeader\";\r\nimport GroupInviteScreenHeader from \"../components/headers/GroupInviteScreenHeader\";\r\nimport GroupInviteScreen from \"../screens/groups/GroupInviteScreen\";\r\nimport GroupMembersApprovalScreen from \"../screens/groups/GroupMembersApprovalScreen\";\r\nimport GroupBannedMembersScreen from \"../screens/groups/GroupBannedMembersScreen\";\r\n\r\nconst GroupsStack = createStackNavigator<TabGroupsRoot>();\r\n\r\nexport const GroupsNavigator = (): JSX.Element => {\r\n    const createGroupModalRef = useRef<CustomModalClass>(null);\r\n    const header = (props: StackHeaderProps) => (\r\n        <MainHeader\r\n            {...props}\r\n            rightButtons={[\r\n                (props) => (\r\n                    <TouchableOpacity style={props.buttonStyle} onPress={() => createGroupModalRef.current?.show()}>\r\n                        <MaterialIcons name=\"add\" style={props.iconStyle} />\r\n                    </TouchableOpacity>\r\n                ),\r\n            ]}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupsStack.Navigator headerMode=\"screen\">\r\n                <GroupsStack.Screen\r\n                    name=\"TabGroupsScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"TabGroupsScreen\"),\r\n                        header,\r\n                    })}\r\n                    component={TabGroupsScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupsExploreScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"GroupsExploreScreen\"),\r\n                        header: (headerProps) => <MainHeader {...headerProps} noAvatar backButton />,\r\n                    })}\r\n                    component={GroupsExploreScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"GroupScreen\"),\r\n                        headerShown: false,\r\n                    })}\r\n                    component={GroupScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupMembersScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupMembersScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupMembersScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupBannedMembersScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupBannedMembersScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                keepScreenTitle\r\n                                noInviteButton\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupBannedMembersScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupMembersApprovalScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupMembersApprovalScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupMembersApprovalScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupInviteScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupInviteScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupInviteScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupInviteScreen}\r\n                />\r\n            </GroupsStack.Navigator>\r\n            <CreateGroupModal ref={createGroupModalRef} />\r\n        </>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {MainTabBarIcon} from \"./MainTabBar\";\r\nimport {View, StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect(({messaging}: AppState) => ({\r\n    firstRoom:\r\n        messaging.matchRoomsOrdered.length > 0 ? messaging.matchRooms[messaging.matchRoomsOrdered[0]] : undefined,\r\n    localChatUser: messaging.localChatUser,\r\n}));\r\n\r\nconst INDICATOR_SIZE = 16;\r\n\r\nexport type MessagingTabIconProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps & {focused: boolean; color: string; size: number};\r\n\r\nclass MessagingTabIcon extends React.Component<MessagingTabIconProps> {\r\n    render(): JSX.Element {\r\n        const {firstRoom, localChatUser, theme, ...props} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = firstRoom && firstRoom.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const lastMessage = firstRoom?.lastMessage;\r\n\r\n        // Check if there is an unread message\r\n        // Since we keep rooms ordered by most recent activity, if there is an unread message it will be on the first room\r\n        const isNotRead =\r\n            lastMessage &&\r\n            localUser &&\r\n            lastMessage.user._id !== localUser._id &&\r\n            ((localUser.lastMessageSeenDate !== null && localUser.lastMessageSeenDate < lastMessage.createdAt) ||\r\n                localUser.lastMessageSeenId != lastMessage._id);\r\n\r\n        const icon = <MainTabBarIcon name=\"message\" {...props} />;\r\n        let indicator = <></>;\r\n\r\n        if (isNotRead) {\r\n            indicator = (\r\n                <View style={styles.indicatorContainer}>\r\n                    <FontAwesome size={INDICATOR_SIZE - 4} name=\"exclamation\" color={themes.dark.text} />\r\n                </View>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View>\r\n                {icon}\r\n                {indicator}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        indicatorContainer: {\r\n            position: \"absolute\",\r\n            backgroundColor: theme.error,\r\n            width: INDICATOR_SIZE,\r\n            height: INDICATOR_SIZE,\r\n            borderRadius: INDICATOR_SIZE,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            left: 18,\r\n            bottom: 15,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MessagingTabIcon));\r\n","/* eslint-disable react/display-name */\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {MainNavigatorTabs, RootNavigatorScreens, TabHomeRoot} from \"../navigation/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {BottomTabBarButtonProps, BottomTabBarProps} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {TabMatchingNavigator} from \"./TabMatchingNavigator\";\r\nimport MainTabBar, {MainTabBarIcon} from \"../components/tabs/MainTabBar\";\r\nimport {getFocusedRouteNameFromRoute} from \"@react-navigation/native\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {GroupsNavigator} from \"./GroupsNavigator\";\r\nimport MessagingTabIcon from \"../components/tabs/MessagingTabIcon\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent(): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabMatching\"\r\n            tabBar={(props: BottomTabBarProps) => <MainTabBar {...props} />}\r\n        >\r\n            {/*<TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />*/}\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabGroups\"\r\n                component={GroupsNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"group\" {...props} />,\r\n                    // Override the button to make sure we redirect to the first screen instead of a nested one\r\n                    tabBarButton: (props: BottomTabBarButtonProps) => (\r\n                        <TouchableOpacity\r\n                            {...props}\r\n                            activeOpacity={1}\r\n                            onPress={() => rootNavigate(\"TabGroups\", {screen: \"TabGroupsScreen\"})}\r\n                        />\r\n                    ),\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={({route}) => ({\r\n                    tabBarVisible: getFocusedRouteNameFromRoute(route) !== \"ChatScreen\",\r\n                    tabBarIcon: (props) => <MessagingTabIcon {...props} />,\r\n                    // Override the button to make sure we redirect to the rooms screen instead of a previously open conversation\r\n                    tabBarButton: (props: BottomTabBarButtonProps) => (\r\n                        <TouchableOpacity\r\n                            {...props}\r\n                            activeOpacity={1}\r\n                            onPress={() => rootNavigate(\"TabMessaging\", {screen: \"ChatRoomsScreen\"})}\r\n                        />\r\n                    ),\r\n                })}\r\n            />\r\n            {/*\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n            */}\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\n/*\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n*/\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, StyleProp, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport {animateValue} from \"../polyfills\";\r\n\r\nexport type OnboardingProgressBarProps = {\r\n    index: number;\r\n    style?: StyleProp<ViewStyle>;\r\n    foregroundStyle?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass OnboardingProgressBar extends React.Component<OnboardingProgressBarProps> {\r\n    containerWidth = 0;\r\n    width = new ReAnimated.Value<number>(0);\r\n\r\n    componentDidMount() {\r\n        this.setIndex(this.props.index);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: OnboardingProgressBarProps): void {\r\n        const {index} = this.props;\r\n        if (oldProps.index !== index) this.setIndex(index);\r\n    }\r\n\r\n    private setIndex(index: number) {\r\n        const progress = (index + 1) / ONBOARDING_ORDER.length;\r\n        const targetWidth = progress * this.containerWidth;\r\n\r\n        animateValue(this.width, {\r\n            toValue: targetWidth,\r\n            duration: 150,\r\n            easing: Easing.sin,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, foregroundStyle, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <SafeAreaInsetsContext.Consumer>\r\n                {(insets) => (\r\n                    <View\r\n                        style={[styles.background, {bottom: (insets?.bottom || 0) + 15}, style]}\r\n                        onLayout={(layout) => {\r\n                            this.containerWidth = layout.nativeEvent.layout.width;\r\n                            this.setIndex(this.props.index);\r\n                        }}\r\n                    >\r\n                        <ReAnimated.View style={[styles.foreground, {width: this.width}, foregroundStyle]} />\r\n                    </View>\r\n                )}\r\n            </SafeAreaInsetsContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme, isWideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        background: {\r\n            position: \"absolute\",\r\n            left: isWideDevice ? \"55%\" : \"10%\",\r\n\r\n            width: isWideDevice ? \"40%\" : \"80%\",\r\n            height: 8,\r\n            borderRadius: 8,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        foreground: {\r\n            borderRadius: 8,\r\n            backgroundColor: theme.accent,\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingProgressBar);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport Button from \"./Button\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    settingsModalRef = React.createRef<CustomModalClass>();\r\n\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <View style={styles.titleLeft}>\r\n                        <CheckBox\r\n                            checked={isSomethingSelected}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                            containerStyle={styles.checkboxContainer}\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={styles.offerNameTouchable}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        >\r\n                            <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View style={{flexDirection: \"row\"}}>\r\n                        <TouchableOpacity\r\n                            style={styles.sideButton}\r\n                            onPress={() => this.settingsModalRef.current?.show()}\r\n                        >\r\n                            <FontAwesome style={styles.sideButtonIcon} name=\"gear\" />\r\n                        </TouchableOpacity>\r\n                        <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                            <MaterialIcons style={[styles.sideButton, styles.sideButtonIcon]} name=\"help\" />\r\n                        </CustomTooltip>\r\n                    </View>\r\n                </View>\r\n                {/*isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )*/}\r\n                <CustomModal\r\n                    ref={this.settingsModalRef}\r\n                    modalViewStyle={styles.settingsModal}\r\n                    renderContent={(hide: () => void) => (\r\n                        <>\r\n                            {offer.allowChooseGender && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.genders\")}</InputLabel>\r\n                                    <GenderToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        genders={genders}\r\n                                        onSelect={(selected: Gender[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowFemale: selected.indexOf(\"female\") != -1,\r\n                                                allowMale: selected.indexOf(\"male\") != -1,\r\n                                                allowOther: selected.indexOf(\"other\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n\r\n                            {offer.allowChooseProfileType && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.roles\")}</InputLabel>\r\n                                    <RoleToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        roles={roles}\r\n                                        onSelect={(selected: Role[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                                allowStudent: selected.indexOf(\"student\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            <Button\r\n                                style={styles.settingsModalButton}\r\n                                textStyle={styles.settingsModalButtonText}\r\n                                skin=\"rounded-filled\"\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={hide}\r\n                            />\r\n                        </>\r\n                    )}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        titleLeft: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        offerNameTouchable: {\r\n            flex: 1,\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        sideButton: {\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 5,\r\n        },\r\n        sideButtonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n\r\n        settingsModal: {\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 15,\r\n            alignItems: \"flex-start\",\r\n        },\r\n        settingsModalTargetType: {\r\n            width: \"100%\",\r\n            marginBottom: 10,\r\n        },\r\n        settingsModalButton: {\r\n            height: 38,\r\n            marginHorizontal: 5,\r\n            marginVertical: 0,\r\n            marginTop: 20,\r\n        },\r\n        settingsModalButtonText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {Theme} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n    theme: Theme,\r\n): JSX.Element {\r\n    const styles = onboardingOffersStyle(theme);\r\n    return (\r\n        <>\r\n            <Text style={styles.offerControlPreText}>{i18n.t(\"offersPreText\")}</Text>\r\n            {offers\r\n                .filter((offer: OfferDto) => offer.category == category)\r\n                .map((offer: OfferDto, i: number) => (\r\n                    <OfferControl\r\n                        key={i}\r\n                        offer={offer}\r\n                        value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                        onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                        style={styles.offerControl}\r\n                    />\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.type!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds.map((id) => ({id})),\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.type == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.type == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRoles: Object.keys(onboardingState.staffRoles)\r\n                .filter((k) => onboardingState.staffRoles[k])\r\n                .map((id: string) => ({id})),\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ScrollView, KeyboardAvoidingView, ViewStyle, StyleProp, Alert, Platform} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {logout} from \"../../state/auth/actions\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n    noKeyboardAvoidance?: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string | JSX.Element;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    background?: JSX.Element;\r\n    illustration?: JSX.Element;\r\n    textColor?: string;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nfunction ButtonSpacer(): JSX.Element {\r\n    return <View style={{width: 10, height: 1}}></View>;\r\n}\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            title,\r\n            subtitle,\r\n            index,\r\n            hideNavNext,\r\n            hasNext,\r\n            handleSubmit,\r\n            next,\r\n            containerStyle,\r\n            background,\r\n            illustration,\r\n            textColor,\r\n            noKeyboardAvoidance,\r\n            theme,\r\n        } = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        const wide = layout.isWideDevice;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth containerStyle={styles.root}>\r\n                {wide ? <View style={styles.wideDeviceLeftPanel}>{illustration}</View> : <></>}\r\n                <View style={styles.slideWrapper}>\r\n                    {background}\r\n                    <ScrollView\r\n                        style={styles.slideScrollView}\r\n                        contentContainerStyle={[containerStyle, styles.slideContentWrapper]}\r\n                    >\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"position\"\r\n                            keyboardVerticalOffset={70}\r\n                            enabled={!noKeyboardAvoidance}\r\n                            style={styles.slideContentContainer}\r\n                        >\r\n                            <View style={styles.header}>\r\n                                {title && typeof title === \"string\" && (\r\n                                    <Text style={[styles.title, textColor ? {color: textColor} : {}]}>{title}</Text>\r\n                                )}\r\n                                {title && typeof title !== \"string\" && title}\r\n                                {subtitle && (\r\n                                    <Text style={[styles.subtitle, textColor ? {color: textColor} : {}]}>\r\n                                        {subtitle}\r\n                                    </Text>\r\n                                )}\r\n                            </View>\r\n                            {!wide && illustration}\r\n                            {this.props.children}\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                    <SafeAreaInsetsContext.Consumer>\r\n                        {(insets) => (\r\n                            <View style={[styles.slideNavWrapper, {marginBottom: (insets?.bottom || 0) + 40}]}>\r\n                                <View style={styles.slideNavButtons}>\r\n                                    {hasPrevious && (\r\n                                        <Button\r\n                                            style={[styles.navButton, styles.navButtonBack]}\r\n                                            skin=\"rounded-hollow\"\r\n                                            text={i18n.t(\"onboarding.back\")}\r\n                                            onPress={() => this.props.previous()}\r\n                                        />\r\n                                    )}\r\n                                    {!hasPrevious && (\r\n                                        <Button\r\n                                            style={[styles.navButton, styles.navButtonBack]}\r\n                                            skin=\"rounded-hollow\"\r\n                                            text={i18n.t(\"onboarding.leave\")}\r\n                                            onPress={() => this.quitOnboarding()}\r\n                                        />\r\n                                    )}\r\n                                    {!hideNavNext && hasNext && (\r\n                                        <>\r\n                                            <ButtonSpacer />\r\n                                            <Button\r\n                                                style={styles.navButton}\r\n                                                skin=\"rounded-filled\"\r\n                                                text={i18n.t(\"onboarding.next\")}\r\n                                                onPress={navigateRight}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                    {!hasNext && (\r\n                                        <>\r\n                                            <ButtonSpacer />\r\n                                            <Button\r\n                                                style={styles.navButton}\r\n                                                skin=\"rounded-filled\"\r\n                                                text={i18n.t(\"onboarding.submit\")}\r\n                                                onPress={() => {\r\n                                                    if (handleSubmit) handleSubmit();\r\n                                                    finishOnboarding(store.getState().auth.onboarding);\r\n                                                }}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    </SafeAreaInsetsContext.Consumer>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n\r\n    quitOnboarding() {\r\n        const quit = () => store.dispatch(logout());\r\n\r\n        if (Platform.OS === \"web\") {\r\n            quit(); // no alerts on web\r\n        } else {\r\n            Alert.alert(i18n.t(\"onboarding.quit.title\"), i18n.t(\"onboarding.quit.text\"), [\r\n                {\r\n                    text: i18n.t(\"onboarding.quit.cancel\"),\r\n                    style: \"cancel\",\r\n                },\r\n                {text: i18n.t(\"onboarding.quit.yes\"), onPress: quit, style: \"destructive\"},\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard, View} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/forms/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    lastNameInputRef = React.createRef<FormTextInput>();\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <FormTextInput\r\n                                {...textInputProps(\"firstname\")}\r\n                                label={i18n.t(\"firstname\")}\r\n                                placeholder={i18n.t(\"firstname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"next\"\r\n                                blurOnSubmit={false}\r\n                                onSubmitEditing={() => this.lastNameInputRef.current?.focus()}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                {...textInputProps(\"lastname\")}\r\n                                ref={this.lastNameInputRef}\r\n                                label={i18n.t(\"lastname\")}\r\n                                placeholder={i18n.t(\"lastname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"done\"\r\n                                onSubmitEditing={() => handleSubmit()}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgWidth = wide ? 600 : 380;\r\n    const svgHeight = wide ? 350 : 200;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg1 = getLocalSvg(\"woman-holding-phone-2\", () => forceUpdate());\r\n    const Svg2 = getLocalSvg(\"man-holding-phone\", () => forceUpdate());\r\n    const Blob1 = getLocalSvg(\"blob-4\", () => forceUpdate());\r\n    const Blob2 = getLocalSvg(\"blob-5\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                width: svgWidth,\r\n                height: svgHeight,\r\n                alignSelf: \"center\",\r\n            }}\r\n        >\r\n            <Blob1\r\n                style={{position: \"absolute\", left: 0, top: 0}}\r\n                width={svgHeight * (260 / 250)}\r\n                height={svgHeight}\r\n                viewBox=\"0 0 260 250\" // necessary for web\r\n                preserveAspectRatio=\"xMinYMid\"\r\n            />\r\n            <Svg1\r\n                style={{position: \"absolute\", left: svgWidth * 0.15, top: svgHeight * 0.1}}\r\n                width={svgHeight * 0.8 * (140 / 200)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 140 200\"\r\n                preserveAspectRatio=\"xMinYMid\"\r\n            />\r\n            <Blob2\r\n                style={{position: \"absolute\", right: 0}}\r\n                width={svgHeight * (250 / 275)}\r\n                height={svgHeight}\r\n                viewBox=\"0 0 250 275\"\r\n                preserveAspectRatio=\"xMaxYMid\"\r\n            />\r\n            <Svg2\r\n                style={{position: \"absolute\", right: svgWidth * 0.12, top: svgHeight * 0.1}}\r\n                width={svgHeight * 0.8 * (150 / 200)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 150 200\"\r\n                preserveAspectRatio=\"xMaxYMid\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n    disabled?: boolean;\r\n    styleVariant?: ToggleStyleVariant;\r\n};\r\n\r\nfunction GenderToggle(props: GenderToggleProps & ThemeProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender, disabled, styleVariant, theme} = props;\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            disabled={disabled}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggle);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {\r\n    Country,\r\n    CountryCode,\r\n    DARK_THEME,\r\n    DEFAULT_THEME,\r\n    TranslationLanguageCode,\r\n} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onSelect} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (onSelect) onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n                theme={theme.id === \"dark\" ? DARK_THEME : DEFAULT_THEME}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet, StyleProp, ViewStyle, Text} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonValidStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, buttonStyle, buttonValidStyle, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, buttonStyle, nationality ? [styles.buttonOk, buttonValidStyle] : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {!nationality && <Text style={styles.placeholder}>{i18n.t(\"nationalityPicker.placeholder\")}</Text>}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        placeholder: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        //const day = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const day = date.getDate() + \"\";\r\n        const formattedDate = `${day} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {TextInput, TextInputProps, View, StyleSheet, StyleProp, TextStyle, ViewStyle, Platform} from \"react-native\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type DateInputProps = {\r\n    date?: Date;\r\n    onChange?: (date?: Date, error?: string) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputStyleFocused?: StyleProp<TextStyle>;\r\n    inputStyleValid?: StyleProp<TextStyle>;\r\n    minimumDate?: Date;\r\n    maximumDate?: Date;\r\n    autoFocus?: boolean;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype DateInputState = {\r\n    year: string;\r\n    month: string;\r\n    day: string;\r\n    touched: boolean;\r\n    error: string | undefined;\r\n    focused1: boolean;\r\n    focused2: boolean;\r\n    focused3: boolean;\r\n};\r\n\r\nconst dateInputProps = (\r\n    ref: React.RefObject<TextInput>,\r\n    value: string,\r\n    maxLength: number,\r\n    next?: React.RefObject<TextInput>,\r\n    onChange?: (v: string) => void,\r\n): TextInputProps => ({\r\n    autoCorrect: false,\r\n    clearTextOnFocus: true,\r\n    keyboardType: \"number-pad\",\r\n    returnKeyType: next ? \"next\" : \"done\",\r\n    value,\r\n    maxLength,\r\n    onSubmitEditing: () => {\r\n        if (next) next.current?.focus();\r\n    },\r\n    onChangeText: (text: string) => {\r\n        text = text.replace(/\\D+/g, \"\"); // only keep numbers\r\n        if (onChange) onChange(text);\r\n        if (text.length == maxLength) {\r\n            if (next) next.current?.focus();\r\n            else ref.current?.blur();\r\n        }\r\n    },\r\n});\r\n\r\nexport class DateInputClass extends React.Component<DateInputProps, DateInputState> {\r\n    constructor(props: DateInputProps) {\r\n        super(props);\r\n        this.state = this.deriveStateFromDate(props.date);\r\n    }\r\n\r\n    input1Ref = React.createRef<TextInput>();\r\n    input2Ref = React.createRef<TextInput>();\r\n    input3Ref = React.createRef<TextInput>();\r\n\r\n    componentDidUpdate(oldProps: DateInputProps): void {\r\n        if (this.props.date != oldProps.date) {\r\n            this.setState({...this.state, ...this.deriveStateFromDate(this.props.date)});\r\n        }\r\n    }\r\n\r\n    focus(): void {\r\n        this.input1Ref.current?.focus();\r\n    }\r\n\r\n    private validDate(): {date?: Date; error?: string} {\r\n        const {year, month, day} = this.state;\r\n        const parsable = year.length >= 4 && month.length > 0 && day.length > 0;\r\n\r\n        if (parsable) {\r\n            try {\r\n                const pyear = parseInt(year);\r\n                const pmonth = parseInt(month) - 1;\r\n                const pday = parseInt(day);\r\n                // Verify that all individual parts of the date are correct.\r\n                if (pyear > 0 && pmonth >= 0 && pmonth < 12 && pday > 0 && pday <= 31) {\r\n                    const date = new Date(pyear, pmonth, pday);\r\n                    const error = this.getError(date);\r\n                    if (error) return {error};\r\n                    else return {date};\r\n                }\r\n            } catch (e) {}\r\n            return {error: \"validation.date.invalid\"};\r\n        } else if (this.state.touched) return {error: \"validation.date.invalid\"};\r\n\r\n        // If one of the fields is empty, we only output an error if the input was touched\r\n        // i.e. it was completed before\r\n        return {};\r\n    }\r\n\r\n    private getError(date: Date): string | undefined {\r\n        const {minimumDate, maximumDate} = this.props;\r\n        if (maximumDate && date > maximumDate) return \"validation.date.tooYoung\";\r\n        else if (minimumDate && date < minimumDate) return \"validation.date.invalid\";\r\n        else return undefined;\r\n    }\r\n\r\n    deriveStateFromDate(date?: Date): DateInputState {\r\n        const year = date?.getFullYear();\r\n        const month = date?.getMonth();\r\n        const day = date?.getDate();\r\n\r\n        return {\r\n            year: year === undefined ? \"\" : year + \"\",\r\n            month: month === undefined ? \"\" : month + 1 + \"\",\r\n            day: day === undefined ? \"\" : day + \"\",\r\n            touched: date !== undefined,\r\n            error: date ? this.getError(date) : undefined,\r\n            focused1: this.state ? this.state.focused1 : false,\r\n            focused2: this.state ? this.state.focused2 : false,\r\n            focused3: this.state ? this.state.focused3 : false,\r\n        };\r\n    }\r\n\r\n    set(values: Partial<DateInputState>): void {\r\n        const {onChange} = this.props;\r\n        this.setState({...this.state, ...values}, () => {\r\n            if (onChange) {\r\n                const {date, error} = this.validDate();\r\n                if (date || error) {\r\n                    onChange(date, error);\r\n                    this.setState({...this.state, touched: true, error});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {inputStyle, containerStyle, autoFocus, theme} = this.props;\r\n        const {year, month, day, touched, error, focused1, focused2, focused3} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const valid = touched && !error;\r\n        const inputStyleValid = valid ? this.props.inputStyleValid : {};\r\n        const inputStyleFocused = [Platform.OS === \"web\" ? {outline: \"none\"} : {}, this.props.inputStyleFocused];\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <View style={styles.containerDay}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input1Ref, day, 2, this.input2Ref, (day) => this.set({day}))}\r\n                        ref={this.input1Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputDay,\r\n                            inputStyle,\r\n                            focused1 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        blurOnSubmit={false}\r\n                        returnKeyType=\"next\"\r\n                        placeholder={i18n.t(\"dateInput.dayPlaceholder\")}\r\n                        autoFocus={autoFocus}\r\n                        onBlur={() => this.setState({focused1: false})}\r\n                        onFocus={() => this.setState({focused1: true})}\r\n                    />\r\n                </View>\r\n                <View style={styles.containerMonth}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input2Ref, month, 2, this.input3Ref, (month) => this.set({month}))}\r\n                        ref={this.input2Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputMonth,\r\n                            inputStyle,\r\n                            focused2 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        blurOnSubmit={false}\r\n                        onSubmitEditing={() => this.input3Ref.current?.focus()}\r\n                        returnKeyType=\"next\"\r\n                        placeholder={i18n.t(\"dateInput.monthPlaceholder\")}\r\n                        onBlur={() => this.setState({focused2: false})}\r\n                        onFocus={() => this.setState({focused2: true})}\r\n                    />\r\n                </View>\r\n                <View style={styles.containerYear}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input3Ref, year, 4, undefined, (year) => this.set({year}))}\r\n                        ref={this.input3Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputYear,\r\n                            inputStyle,\r\n                            focused3 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        returnKeyType=\"done\"\r\n                        placeholder={i18n.t(\"dateInput.yearPlaceholder\")}\r\n                        onBlur={() => this.setState({focused3: false})}\r\n                        onFocus={() => this.setState({focused3: true})}\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        input: {\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n            paddingHorizontal: 6,\r\n            textAlign: \"center\",\r\n        },\r\n        containerDay: {flex: 1},\r\n        containerMonth: {flex: 1, paddingLeft: 10},\r\n        containerYear: {flex: 2, paddingLeft: 10},\r\n        inputDay: {},\r\n        inputMonth: {},\r\n        inputYear: {},\r\n    });\r\n});\r\n\r\nexport default withTheme(DateInputClass);\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateInput, {DateInputClass, DateInputProps} from \"./DateInput\";\r\n\r\n// Component props\r\nexport type BirthDateInputProps = Omit<Omit<DateInputProps, \"minimumDate\">, \"maximumDate\">;\r\n\r\nconst minDate = new Date(1920, 0, 0);\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nexport class BirthDateInputClass extends React.Component<BirthDateInputProps> {\r\n    dateInputRef = React.createRef<DateInputClass>();\r\n\r\n    focus(): void {\r\n        this.dateInputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const dateInputProps = this.props;\r\n        return <DateInput ref={this.dateInputRef} minimumDate={minDate} maximumDate={maxDate} {...dateInputProps} />;\r\n    }\r\n}\r\n\r\nexport default withTheme(BirthDateInputClass);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport GenderToggle from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {FormattedDate} from \"../../components/FormattedDate\";\r\nimport BirthDateInput from \"../../components/BirthDateInput\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"../../styles/onboarding\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingProfileScreen1Props = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingProfile1FormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen1 extends React.Component<OnboardingProfileScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingProfileScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingProfile1FormState) {\r\n        if (values.birthdate && values.gender && values.nationality && values.educationFields) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                    educationFields: values.educationFields,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n\r\n        const spacing = 30;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile1FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile1FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile1FormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        setFieldTouched,\r\n                    } = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile1.title\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            noKeyboardAvoidance={true}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateInput\r\n                                inputStyle={styles.dateTextInput}\r\n                                inputStyleFocused={styles.dateTextInputFocused}\r\n                                inputStyleValid={styles.dateTextInputValid}\r\n                                onChange={(date, error) => {\r\n                                    if (error) setFieldError(\"birthdate\", error);\r\n                                    else setFieldValue(\"birthdate\", date);\r\n                                    setFieldTouched(\"birthdate\", true);\r\n                                }}\r\n                            />\r\n                            {values.birthdate && !errors.birthdate && (\r\n                                <FormattedDate style={styles.birthdateText} date={values.birthdate} />\r\n                            )}\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                buttonStyle={styles.nationalityButton}\r\n                                buttonValidStyle={styles.nationalityButtonValid}\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                                styleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showChips={true}\r\n                                buttonStyleVariant=\"onboarding\"\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        dateTextInput: {\r\n            height: 48,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            paddingHorizontal: 10,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        dateTextInputFocused: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        dateTextInputValid: {\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        birthdateText: {\r\n            textAlign: \"right\",\r\n            marginTop: 4,\r\n            fontSize: 12,\r\n        },\r\n        nationalityButton: {\r\n            height: 48,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            paddingHorizontal: 10,\r\n            borderBottomWidth: 0,\r\n        },\r\n        nationalityButtonValid: {},\r\n    });\r\n});\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 400 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-3\", forceUpdate);\r\n    const Blob = getLocalSvg(\"blob-6\", forceUpdate);\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -200,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (350 / 360)} height={svgHeight} viewBox=\"0 0 350 360\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.075, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.1, top: svgHeight * 0.28}),\r\n                }}\r\n                width={svgHeight * (wide ? 0.9 : 0.7) * (275 / 385)}\r\n                height={svgHeight * (wide ? 0.9 : 0.7)}\r\n                viewBox=\"0 0 275 385\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingProfileScreen1));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level?: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, level, theme, buttonStyle, buttonStyleVariant} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={LANGUAGE_LEVELS}\r\n                label={(l: string) => i18n.t(`languageLevels.${l}`)}\r\n                placeholder={i18n.t(\"languageLevelPicker.placeholder\")}\r\n                selected={level ? [level] : []}\r\n                buttonStyle={[styles.button, buttonStyle]}\r\n                buttonStyleVariant={buttonStyleVariant}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as LanguageLevel);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            width: 70,\r\n            height: 32,\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LanguageLevelPicker);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle, Text, Alert, TouchableOpacity} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"../styles/onboarding\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n    pickerButtonStyleVariant?: PickerButtonStyleVariant;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {languages};\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        this.setState({...this.state, languages});\r\n        const hasErrors = languages.filter((l) => !l.level).length > 0;\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length)\r\n            this.onChange(this.state.languages.filter((v, i) => i !== idx));\r\n    }\r\n\r\n    setLanguages(codes: string[]) {\r\n        const levelDict = new Map(this.state.languages.map((l) => [l.code, l.level]));\r\n        const languages = codes.map((code: string) => ({code, level: levelDict.get(code)}));\r\n        this.onChange(languages);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            languages,\r\n        });\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.map((l, i) => (i === idx ? {...l, level} : l));\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style, pickerButtonStyleVariant} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            return (\r\n                <View\r\n                    key={`spoken-languages-input-${sl.code}`}\r\n                    style={[styles.rowContainer, i === 0 ? styles.firstRowContainer : {}]}\r\n                >\r\n                    <View style={styles.languageLabelContainer}>\r\n                        <Text style={styles.languageLabel} numberOfLines={1}>\r\n                            {i18n.t(`languageNames.${sl.code}`)}\r\n                        </Text>\r\n                    </View>\r\n                    <LanguageLevelPicker\r\n                        level={sl.level}\r\n                        buttonStyle={styles.levelPicker}\r\n                        onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                        buttonStyleVariant={pickerButtonStyleVariant}\r\n                    />\r\n                    <TouchableOpacity style={styles.deleteIconContainer} onPress={() => this.removeRow(i)}>\r\n                        <MaterialIcons style={styles.deleteIcon} name=\"close\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <View style={style}>\r\n                <LanguagePicker\r\n                    multiple={true}\r\n                    languages={languages.map((l) => l.code || \"\")}\r\n                    style={styles.languagePicker}\r\n                    onChange={(languageCodes: string[]) => {\r\n                        if (languageCodes.length > MAX_SPOKEN_LANGUAGES)\r\n                            Alert.alert(`You cannot select more than ${MAX_SPOKEN_LANGUAGES} languages`);\r\n                        this.setLanguages(languageCodes.slice(0, MAX_SPOKEN_LANGUAGES));\r\n                    }}\r\n                    showChips={false}\r\n                    buttonStyleVariant={pickerButtonStyleVariant}\r\n                />\r\n                {rows}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: 32,\r\n            marginVertical: 3,\r\n        },\r\n        firstRowContainer: {\r\n            marginTop: 10,\r\n        },\r\n        deleteIconContainer: {\r\n            width: 30,\r\n            height: 30,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.error,\r\n            borderRadius: 100,\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 16,\r\n            color: themes.dark.text,\r\n        },\r\n        languagePicker: {},\r\n        languageLabelContainer: {\r\n            flex: 1,\r\n            paddingHorizontal: 10,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n        },\r\n        languageLabel: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        levelPicker: {\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS, VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\nimport layout from \"../../constants/layout\";\r\nimport {View} from \"react-native\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingProfileScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingProfileScreen2State = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingProfile2FormState = {\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen2 extends React.Component<OnboardingProfileScreen2Props, OnboardingProfileScreen2State> {\r\n    constructor(props: OnboardingProfileScreen2Props) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    submit(values: OnboardingProfile2FormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages, interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const {hasErrors} = this.state;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile2FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile2FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile2FormState>) => {\r\n                    const {handleSubmit, values, touched, setFieldValue, errors} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile2.title\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                                pickerButtonStyleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.languages && hasErrors && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.specifyLevel\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n                            {touched.languages && !hasErrors && values.languages.length == 0 && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.atLeastOne\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[]) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                }}\r\n                                showChips={true}\r\n                                buttonStyleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds} />}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 400 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-3\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-6\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -220,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (350 / 360)} height={svgHeight} viewBox=\"0 0 350 360\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.075, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.1, top: svgHeight * 0.28}),\r\n                }}\r\n                width={svgHeight * (wide ? 0.9 : 0.7) * (275 / 385)}\r\n                height={svgHeight * (wide ? 0.9 : 0.7)}\r\n                viewBox=\"0 0 275 385\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(OnboardingProfileScreen2);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, TouchableOpacity, View, Dimensions} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingRoleScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    type: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const StudentBlob = getLocalSvg(\"blob-9\", () => this.forceUpdate());\r\n        const StudentSvg = getLocalSvg(\"student\", () => this.forceUpdate());\r\n        const StaffBlob = getLocalSvg(\"blob-8\", () => this.forceUpdate());\r\n        const StaffSvg = getLocalSvg(\"staff\", () => this.forceUpdate());\r\n\r\n        let illustration = <></>;\r\n        if (layout.isWideDevice)\r\n            illustration = <LinearGradient style={{width: \"100%\", height: \"100%\"}} colors={[\"#007AC2\", \"#18ADB5\"]} />;\r\n\r\n        const svgHeight = (Dimensions.get(\"window\").height - 280) / 2;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.role.title\")}\r\n                hideNavNext={true}\r\n                illustration={illustration}\r\n                {...this.props}\r\n            >\r\n                <View style={[styles.buttonsContainer, {maxWidth: svgHeight * 1.3}]}>\r\n                    <TouchableOpacity\r\n                        style={{alignSelf: \"flex-start\"}}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.submit({type: \"student\"})}\r\n                    >\r\n                        <StudentBlob width={svgHeight * (300 / 280)} height={svgHeight} viewBox=\"0 0 300 280\" />\r\n                        <StudentSvg\r\n                            style={{position: \"absolute\", left: svgHeight * 0.26, top: svgHeight * 0.1}}\r\n                            width={svgHeight * 0.85 * (200 / 240)}\r\n                            height={svgHeight * 0.85}\r\n                            viewBox=\"0 0 200 240\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={{alignSelf: \"flex-end\", marginTop: -20}}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.submit({type: \"staff\"})}\r\n                    >\r\n                        <StaffBlob width={svgHeight * (290 / 305)} height={svgHeight} viewBox=\"0 0 290 305\" />\r\n                        <StaffSvg\r\n                            style={{position: \"absolute\", right: svgHeight * 0.1, top: svgHeight * 0.12}}\r\n                            width={svgHeight * 0.82 * (210 / 235)}\r\n                            height={svgHeight * 0.82}\r\n                            viewBox=\"0 0 210 235\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        buttonsContainer: {\r\n            width: \"100%\",\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleScreen));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Discover;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen1));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Collaborate;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen2));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Meet;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen3));\r\n","import * as React from \"react\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, theme, styleVariant} = this.props;\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                {...getToggleStyleProps(styleVariant, theme)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DegreeToggle);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet, Switch, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            illustration={<StudentIllustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                                styleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme, onboardingState, dispatch} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n        const staffRoles = onboardingState.staffRoles;\r\n        const atLeastOne = Object.values(staffRoles).some((v) => v === true);\r\n\r\n        const setValue = (sr: StaffRole, b: boolean) =>\r\n            dispatch(setOnboardingValues({staffRoles: {...staffRoles, [sr]: b}}));\r\n\r\n        const buttons = STAFF_ROLES.map((sr: StaffRole, i: number) => (\r\n            <TouchableOpacity\r\n                key={i}\r\n                style={styles.button}\r\n                activeOpacity={0.6}\r\n                onPress={() => setValue(sr, !staffRoles[sr])}\r\n            >\r\n                <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.buttonIcon} />\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n                <Switch\r\n                    value={staffRoles[sr]}\r\n                    thumbColor={theme.accent}\r\n                    trackColor={{true: theme.accentTernary, false: theme.accentSlight}}\r\n                    onValueChange={(b: boolean) => setValue(sr, b)}\r\n                />\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.roleSpecific1.staff.title\")}\r\n                illustration={<StaffIllustration />}\r\n                hideNavNext={!atLeastOne}\r\n                {...this.props}\r\n            >\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        return (\r\n            <>\r\n                {onboardingState.type === \"student\" && this.studentRender()}\r\n                {onboardingState.type === \"staff\" && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nfunction StudentIllustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 500 : 275;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-4\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-10\", () => forceUpdate());\r\n\r\n    return (\r\n        <View style={[{height: svgHeight}, !wide && {marginLeft: svgHeight * 0.4}]}>\r\n            <Blob width={svgHeight * (405 / 365)} height={svgHeight} viewBox=\"0 0 405 365\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.25, top: svgHeight * 0.1}\r\n                        : {right: -svgHeight * 0.22, top: svgHeight * 0.12}),\r\n                }}\r\n                width={svgHeight * 0.85 * (225 / 320)}\r\n                height={svgHeight * 0.85}\r\n                viewBox=\"0 0 225 320\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction StaffIllustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 500 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-4\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-11\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -120,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (415 / 450)} height={svgHeight} viewBox=\"0 0 415 450\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.11, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.12, top: svgHeight * 0.06}),\r\n                }}\r\n                width={svgHeight * 0.8 * (225 / 320)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 225 320\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"legal.modal.title\")}\r\n                text={i18n.t(\"legal.modal.disclaimer\")}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"legal.decline\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            });\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {TERMS_AND_CONDITIONS_URL} from \"../../constants/config\";\r\nimport {Linking} from \"expo\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\nimport layout from \"../../constants/layout\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype OnboardingLegalSlideProps = ThemeProps &\r\n    OnboardingScreenProps & {title: string; text: string; specialBackground?: boolean};\r\n\r\nclass OnboardingLegalSlide extends React.Component<OnboardingLegalSlideProps> {\r\n    render(): JSX.Element {\r\n        const {theme, title, text, specialBackground, next, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const wide = layout.isWideDevice;\r\n        const gradient = <LinearGradient style={styles.background} colors={[theme.accent, \"#862ADF\"]} />;\r\n        const textColor = specialBackground && !wide ? themes.dark.text : theme.textLight;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={title}\r\n                hideNavNext={true}\r\n                next={next}\r\n                {...(specialBackground && !wide\r\n                    ? {\r\n                          background: gradient,\r\n                          textColor: themes.dark.text,\r\n                      }\r\n                    : {})}\r\n                illustration={wide ? gradient : <></>}\r\n                {...otherProps}\r\n            >\r\n                <Text style={[styles.legalText, {color: textColor}]}>{text}</Text>\r\n                <Text style={[styles.readMoreText, {color: textColor}]}>\r\n                    {i18n.t(\"legal.readMore\")[0]}\r\n                    <TextLink\r\n                        onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                        text={i18n.t(\"legal.readMore\")[1]}\r\n                        style={{fontWeight: \"bold\"}}\r\n                    />\r\n                    {i18n.t(\"legal.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TOSDeclinedModal\r\n                        activator={(show) => (\r\n                            <TouchableOpacity style={[styles.actionButton, styles.actionButtonDecline]} onPress={show}>\r\n                                <Text style={styles.actionButtonText}>{i18n.t(\"legal.decline\")}</Text>\r\n                                <MaterialIcons name=\"close\" style={styles.actionButtonText} />\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    />\r\n                    <TouchableOpacity style={[styles.actionButton, styles.actionButtonAccept]} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonText}>{i18n.t(\"legal.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonText} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst buttonsRadius = 100;\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        background: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: buttonsRadius,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {width: 0, height: 5},\r\n            shadowOpacity: 0.34,\r\n            shadowRadius: 6.27,\r\n            elevation: 10,\r\n        },\r\n        actionButton: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 14,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n            borderTopLeftRadius: buttonsRadius,\r\n            borderBottomLeftRadius: buttonsRadius,\r\n        },\r\n        actionButtonAccept: {\r\n            backgroundColor: theme.okay,\r\n            borderTopRightRadius: buttonsRadius,\r\n            borderBottomRightRadius: buttonsRadius,\r\n        },\r\n        actionButtonText: {\r\n            fontSize: 18,\r\n            paddingHorizontal: 2,\r\n            color: themes.dark.text,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginVertical: 30,\r\n            letterSpacing: 0.4,\r\n        },\r\n        legalText: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            lineHeight: 22,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingLegalSlide);\r\n","import OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingProfileScreen1 from \"./OnboardingProfileScreen1\";\r\nimport OnboardingProfileScreen2 from \"./OnboardingProfileScreen2\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingLegalScreen1 from \"./OnboardingLegalScreen1\";\r\nimport OnboardingLegalScreen2 from \"./OnboardingLegalScreen2\";\r\nimport OnboardingLegalScreen3 from \"./OnboardingLegalScreen3\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingProfileScreen1,\r\n    OnboardingProfileScreen2,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingLegalScreen1,\r\n    OnboardingLegalScreen2,\r\n    OnboardingLegalScreen3,\r\n};\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal1.title\")}\r\n                text={i18n.t(\"onboarding.legal1.text\")}\r\n                specialBackground={true}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal2.title\")}\r\n                text={i18n.t(\"onboarding.legal2.text\")}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal3.title\")}\r\n                text={i18n.t(\"onboarding.legal3.text\")}\r\n                specialBackground={true}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {screenTitle} from \"./utils\";\r\nimport OnboardingProgressBar from \"../components/OnboardingProgressBar\";\r\nimport {nextOnboardingSlide, previousOnboardingSlide} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {ONBOARDING_SCREENS} from \"../screens/onboarding/screens\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => hasNext && store.dispatch(nextOnboardingSlide());\r\n    const previous = () => i > 0 && store.dispatch(previousOnboardingSlide());\r\n\r\n    const ComponentClass = ONBOARDING_SCREENS[name] as typeof React.Component;\r\n    function Wrapper(): JSX.Element {\r\n        return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={Wrapper} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingIndex: state.auth.onboardingIndex,\r\n}));\r\n\r\nfunction OnboardingNavigator({onboardingIndex}: {onboardingIndex: number}): JSX.Element {\r\n    return (\r\n        <>\r\n            <OnboardingStack.Navigator\r\n                initialRouteName={ONBOARDING_ORDER[onboardingIndex]}\r\n                tabBarOptions={{showLabel: false, showIcon: false}}\r\n                tabBar={() => <></>}\r\n                springConfig={{\r\n                    stiffness: 500,\r\n                    damping: 2000,\r\n                    mass: 5,\r\n                }}\r\n                swipeEnabled={false}\r\n                lazy={true}\r\n                lazyPreloadDistance={0}\r\n            >\r\n                {screens}\r\n            </OnboardingStack.Navigator>\r\n            <OnboardingProgressBar index={onboardingIndex} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(OnboardingNavigator);\r\n","import * as React from \"react\";\r\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\nimport {DEBUG_MODE} from \"../../constants/config\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const BackgroundSvg = getLocalSvg(\"large-wave-bg\", () => this.forceUpdate());\r\n        const ForegroundSvg = getLocalSvg(\"woman-holding-phone\", () => this.forceUpdate());\r\n\r\n        const width = Dimensions.get(\"window\").width;\r\n        const height = Dimensions.get(\"window\").height;\r\n        const svgHeight = width * (700 / 450);\r\n        const offset = Math.max(250, height - svgHeight + 30);\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <View style={styles.root}>\r\n                    {layout.isWideDevice ? (\r\n                        <View style={styles.wideDeviceLeftPanel}>\r\n                            <LinearGradient\r\n                                style={styles.gradient}\r\n                                colors={[\"#32C5FF\", \"#B620E0\", \"#F7B500\"]}\r\n                                locations={[0.0, 0.6, 1.0]}\r\n                                start={{x: 1, y: 0}}\r\n                                end={{x: 0.3, y: 0.6}}\r\n                            />\r\n                            <View style={{position: \"absolute\", bottom: -150, left: -100, width: \"100%\"}}>\r\n                                <ForegroundSvg />\r\n                            </View>\r\n                        </View>\r\n                    ) : (\r\n                        <>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    top: offset,\r\n                                }}\r\n                            >\r\n                                <BackgroundSvg width={width} height={width * (700 / 450)} viewBox=\"0 0 450 700\" />\r\n                            </View>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    top: offset + 100,\r\n                                    left: -100,\r\n                                }}\r\n                            >\r\n                                <ForegroundSvg width={width} height={width * (750 / 500)} viewBox=\"0 0 500 750\" />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                    <View style={styles.container}>\r\n                        <View>\r\n                            <Text style={styles.title}>{i18n.t(\"onboarding.success.title\")}</Text>\r\n                            <Text style={styles.subtitle}>{i18n.t(\"onboarding.success.subtitle\")}</Text>\r\n                            {layout.isWideDevice && (\r\n                                /* Hey, you have found an easter egg...plant */\r\n                                <Text style={styles.wideDeviceIcon}>{DEBUG_MODE ? \"🍆\" : \"🚀\"}</Text>\r\n                            )}\r\n                        </View>\r\n                        <Button\r\n                            text={i18n.t(\"onboarding.success.button\")}\r\n                            onPress={() => rootNavigate(\"MainScreen\")}\r\n                            skin=\"rounded-filled\"\r\n                            style={{opacity: 0.9}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        root: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        wideDeviceLeftPanel: {\r\n            width: \"50%\",\r\n        },\r\n        gradient: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        container: {\r\n            width: wideDevice ? \"50%\" : \"100%\",\r\n            height: \"100%\",\r\n            paddingTop: wideDevice ? 150 : 100,\r\n            paddingBottom: 100,\r\n            paddingHorizontal: 60,\r\n            justifyContent: \"space-between\",\r\n            alignItems: wideDevice ? \"center\" : \"flex-start\",\r\n        },\r\n        title: {\r\n            fontSize: 36,\r\n            letterSpacing: 0.5,\r\n            lineHeight: 40,\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            maxWidth: wideDevice ? 9999 : 200,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 18,\r\n            marginTop: 20,\r\n            color: theme.text,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        wideDeviceIcon: {\r\n            fontSize: 80,\r\n            textAlign: \"center\",\r\n            marginVertical: 100,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ResetPasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ResetPasswordFormProps = {token?: string; containerStyle?: StyleProp<ViewStyle>} & FormProps<FormState> &\r\n    ThemeProps;\r\n\r\n// Component state\r\ntype ResetPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ResetPasswordForm extends React.Component<ResetPasswordFormProps, ResetPasswordFormState> {\r\n    pwdRepeatRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ResetPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: ValidatedActionReturn) => {\r\n                    this.setState({remoteErrors: errors, submitting: false});\r\n                    if (errors && errors.fields) {\r\n                        const f = errors.fields;\r\n                        Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                    }\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({remoteErrors: {general: \"error.reset_password_no_token\", fields: {}}, submitting: false});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ResetPasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdRepeatRef.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdRepeatRef}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"resetPassword.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        title: {\r\n            width: \"100%\",\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ResetPasswordForm from \"../components/forms/ResetPasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype ResetPasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ResetPasswordScreenState = {token?: string};\r\n\r\nclass ResetPasswordScreen extends React.Component<ResetPasswordScreenProps, ResetPasswordScreenState> {\r\n    constructor(props: ResetPasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {token} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <ResetPasswordForm token={token} containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ResetPasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>{i18n.t(\"resetPassword.instructions\")}</Text>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordEmailSentScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport Button from \"../components/Button\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"resetPassword.success\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"login\")}\r\n                        icon={<MaterialCommunityIcons name=\"login\" style={styles.buttonIcon} />}\r\n                        onPress={() => {\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            });\r\n                        }}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...styleProps}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_ASPECT, AVATAR_QUALITY} from \"../constants/config\";\r\nimport ImageEditButton from \"./ImageEditButton\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, onPictureSelected} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ImageEditButton\r\n                style={[styles.button, style]}\r\n                quality={AVATAR_QUALITY}\r\n                aspect={AVATAR_ASPECT}\r\n                onPictureSelected={onPictureSelected}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {ArraySchema, Schema, ValidationError} from \"yup\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\n// Component props\r\ntype ValueCardProps<T> = {\r\n    label: string;\r\n    icon?: JSX.Element;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T, error?: string | null) => void) => JSX.Element;\r\n    validator?: Schema<unknown> | ArraySchema<unknown>;\r\n    initialValue?: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n    oneLine?: boolean;\r\n    onPress?: () => void;\r\n    onModalShown?: () => void;\r\n    blank?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype ValueCardState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T | undefined;\r\n};\r\n\r\nclass ValueCard<T> extends React.Component<ValueCardProps<T>, ValueCardState<T>> {\r\n    constructor(props: ValueCardProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        const {initialValue} = this.props;\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T, error?: string | null): void {\r\n        if (error === undefined) error = this.state.error;\r\n        this.setState({...this.state, value, error}, () => this.validate());\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            if (this.props.apply && this.state.value) this.props.apply(this.state.value);\r\n            this.setModal(false);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (theme: Theme): JSX.Element => {\r\n        const {label, renderInput, oneLine} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        const styles = themedStyles(oneLine)(theme);\r\n\r\n        return (\r\n            <>\r\n                <Text style={styles.modalLabel}>{label}</Text>\r\n                {renderInput && value ? (\r\n                    renderInput(value, error, (value: T, error?: string | null) => this.onChange(value, error))\r\n                ) : (\r\n                    <></>\r\n                )}\r\n                <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                <View style={styles.modalButtonsContainer}>\r\n                    <Button\r\n                        onPress={() => this.apply()}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"apply\")}\r\n                        skin=\"rounded-filled\"\r\n                    />\r\n                    <Button\r\n                        onPress={() => this.setModal(false)}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"cancel\")}\r\n                        skin=\"rounded-hollow\"\r\n                    />\r\n                </View>\r\n            </>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            label,\r\n            icon,\r\n            display,\r\n            overrideModal,\r\n            noModal,\r\n            style,\r\n            locked,\r\n            oneLine,\r\n            blank,\r\n            onPress,\r\n            onModalShown,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        const onShow = () => {\r\n            if (onModalShown) onModalShown();\r\n        };\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(oneLine)(theme);\r\n                    return (\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={[styles.cardWrapper, style]}\r\n                                activeOpacity={0.9}\r\n                                disabled={noModal && !onPress}\r\n                                onPress={() => {\r\n                                    if (!noModal) {\r\n                                        if (!locked) this.setModal(true);\r\n                                    } else if (onPress) onPress();\r\n                                }}\r\n                                {...otherProps}\r\n                            >\r\n                                <View style={styles.cardContent}>\r\n                                    <View style={styles.cardLabelContainer}>\r\n                                        {!blank && icon}\r\n                                        <Text style={styles.cardLabel}>{!blank && label}</Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        {!blank && display !== undefined && display}\r\n                                        {!blank && display === undefined && this.props.children}\r\n                                    </View>\r\n                                </View>\r\n                                {!noModal && (\r\n                                    <View style={styles.rightIconContainer}>\r\n                                        <MaterialIcons\r\n                                            name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                            size={locked ? 30 : 40}\r\n                                            style={styles.rightIcon}\r\n                                        />\r\n                                    </View>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                            {!noModal && (\r\n                                <>\r\n                                    {overrideModal !== undefined &&\r\n                                        modalOpen &&\r\n                                        overrideModal(() => this.setModal(false))}\r\n                                    {overrideModal === undefined && modalOpen && (\r\n                                        <CustomModal\r\n                                            visible={modalOpen}\r\n                                            modalViewStyle={styles.modalContent}\r\n                                            animationType=\"slide\"\r\n                                            renderContent={() => this.renderModalContent(theme)}\r\n                                            onShow={onShow}\r\n                                            onHide={() => this.setModal(false)}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (oneLine?: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            modalContent: {\r\n                alignItems: \"flex-start\",\r\n                paddingHorizontal: 20,\r\n            },\r\n            modalErrorText: {\r\n                fontSize: 12,\r\n                color: theme.error,\r\n            },\r\n            modalLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1.5,\r\n                fontSize: 13,\r\n                marginBottom: 12,\r\n            },\r\n            modalButtonsContainer: {\r\n                flexDirection: \"column\",\r\n                width: \"100%\",\r\n            },\r\n            modalButton: {\r\n                marginVertical: 0,\r\n                marginTop: 15,\r\n            },\r\n            cardWrapper: {\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                backgroundColor: theme.cardBackground,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"space-evenly\",\r\n                paddingVertical: 15,\r\n                minHeight: oneLine ? 0 : 80,\r\n                borderRadius: 10,\r\n            },\r\n            cardContent: {\r\n                flex: 1,\r\n                flexDirection: oneLine ? \"row\" : \"column\",\r\n                ...(oneLine ? {alignItems: \"center\"} : {}),\r\n                justifyContent: \"space-between\",\r\n            },\r\n            cardLabelContainer: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginBottom: oneLine ? 0 : 10,\r\n            },\r\n            cardLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1,\r\n                fontSize: 11,\r\n            },\r\n            rightIconContainer: {justifyContent: \"center\"},\r\n            rightIcon: {color: theme.textLight},\r\n        });\r\n    });\r\n\r\nexport default ValueCard;\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Text, View, ScrollView} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRolePicker from \"../StaffRolePicker\";\r\nimport GenderToggle from \"../GenderToggle\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport ValueCard from \"../cards/ValueCard\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Chips from \"../Chips\";\r\nimport WavyHeader from \"../headers/WavyHeader\";\r\nimport BirthDateInput, {BirthDateInputClass} from \"../BirthDateInput\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    uploadingAvatar: state.profile.uploadingAvatar,\r\n}));\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        user: User | null;\r\n        onChange?: (fields: Partial<UserProfile>) => void;\r\n    };\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    birthDateInputRef = React.createRef<BirthDateInputClass>();\r\n\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user, uploadingAvatar} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        const profile = user?.profile;\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={user?.profile}\r\n                        size={140}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                        loading={uploadingAvatar}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {profile && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={profile.university}\r\n                        />\r\n                    )}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                    {!user && <ActivityIndicator size=\"large\" style={styles.loadingIndicator} color={theme.accent} />}\r\n\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user?.email}\r\n                        display={(user && <Text style={styles.cardText}>{user.email}</Text>) || undefined}\r\n                        locked={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile?.birthdate}\r\n                        display={profile && <FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        renderInput={(value: Date, _error, onChange) => (\r\n                            <BirthDateInput\r\n                                ref={this.birthDateInputRef}\r\n                                date={value}\r\n                                containerStyle={styles.birthdateInputContainer}\r\n                                inputStyle={styles.birthdateInput}\r\n                                onChange={(birthdate?: Date, inputError?: string) => {\r\n                                    onChange(birthdate || value, inputError || null);\r\n                                }}\r\n                            />\r\n                        )}\r\n                        onModalShown={() => this.birthDateInputRef.current?.focus()}\r\n                        apply={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile?.nationality}\r\n                        display={\r\n                            profile && (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            )\r\n                        }\r\n                        overrideModal={\r\n                            profile &&\r\n                            ((hide: () => void) => (\r\n                                <NationalityPicker\r\n                                    nationality={profile.nationality}\r\n                                    onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                    onHide={hide}\r\n                                />\r\n                            ))\r\n                        }\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile?.gender}\r\n                        display={\r\n                            profile && (\r\n                                <GenderToggle\r\n                                    gender={profile.gender}\r\n                                    onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile?.type}\r\n                        display={\r\n                            profile && (\r\n                                <>\r\n                                    <RoleToggle role={profile.type} disabled={true} />\r\n                                    {profile.type == \"staff\" && (\r\n                                        <StaffRolePicker\r\n                                            staffRoles={(profile as UserProfileStaff).staffRoles}\r\n                                            onChange={(staffRoles: StaffRole[]) => this.onFieldChanged({staffRoles})}\r\n                                            multiple={true}\r\n                                            atLeastOne={true}\r\n                                            buttonStyle={styles.staffRoleButton}\r\n                                        />\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <DegreeToggle\r\n                                            degree={(profile as UserProfileStudent).degree}\r\n                                            onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile?.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile?.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                                showChips={true}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile?.interests}\r\n                        display={\r\n                            profile && (\r\n                                <InterestsPicker\r\n                                    interests={profile.interests}\r\n                                    onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                                    showChips={true}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile?.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            profile && (\r\n                                <Chips\r\n                                    items={profile?.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            )\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <SpokenLanguagesInput\r\n                                languages={value}\r\n                                onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst offerReduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | undefined;\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n    theme: Theme;\r\n} & ConnectedProps<typeof offerReduxConnector>;\r\n\r\nconst OfferCategoryRow = offerReduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n        const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n        return (\r\n            <ValueCard\r\n                blank={!profileOffers}\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={\r\n                    items.length > 0 ? (\r\n                        <Chips\r\n                            items={items}\r\n                            label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                        />\r\n                    ) : (\r\n                        <Text style={{color: theme.textLight}}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                    )\r\n                }\r\n                renderInput={(value: OfferValueDto[], error, onChange) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10, width: \"100%\"}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        // Header-related styles\r\n        header: {\r\n            alignItems: \"center\",\r\n            paddingBottom: 10,\r\n        },\r\n        name: {\r\n            fontSize: 28,\r\n            color: themes.dark.text,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            top: 70,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n            width: \"100%\",\r\n        },\r\n\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n        staffRoleButton: {\r\n            marginTop: 10,\r\n        },\r\n        birthdateInputContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n        },\r\n        birthdateInput: {\r\n            height: 50,\r\n            fontSize: 16,\r\n            borderRadius: 10,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(EditProfileForm));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype MyProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens, \"MyProfileScreen\">;\r\n\r\nclass MyProfileScreen extends React.Component<MyProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {user, dispatch} = this.props;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MyProfileScreen));\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextProps, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender} from \"../constants/profile-constants\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type FormattedGenderProps = {\r\n    gender: Gender;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & TextProps &\r\n    ThemeProps;\r\n\r\nclass FormattedGender extends React.Component<FormattedGenderProps> {\r\n    render(): JSX.Element {\r\n        const {gender, containerStyle, iconStyle, theme, ...otherProps} = this.props;\r\n\r\n        const icon = gender === \"female\" ? \"female\" : gender === \"male\" ? \"male\" : undefined;\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {icon && <FontAwesome name={icon} size={24} color={theme.textLight} style={iconStyle} />}\r\n                <Text {...otherProps} style={[{marginLeft: icon ? 10 : 0}, otherProps.style]}>\r\n                    {i18n.t(`genders.${gender}`)}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormattedGender);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ScrollView} from \"react-native\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../model/user-profile\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {StaffRole} from \"../constants/profile-constants\";\r\nimport ValueCard from \"./cards/ValueCard\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {OfferCategory, OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport FormattedGender from \"./FormattedGender\";\r\nimport Chips from \"./Chips\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport WavyHeader from \"./headers/WavyHeader\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\nexport type ProfileViewProps = ThemeProps & {\r\n    profile: UserProfile | null;\r\n    actionBar?: JSX.Element;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass ProfileView extends React.Component<ProfileViewProps> {\r\n    render() {\r\n        const {theme, profile, actionBar} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile ? profile.firstName + \" \" + profile.lastName : \"\";\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={profile || undefined}\r\n                        size={120}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    />\r\n                    {!profile && (\r\n                        <ActivityIndicator size=\"large\" color={themes.dark.text} style={styles.loadingIndicator} />\r\n                    )}\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    <FormattedUniversity\r\n                        containerStyle={styles.universityContainer}\r\n                        style={styles.university}\r\n                        university={profile?.university || null}\r\n                    />\r\n                    {actionBar}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        display={profile ? <FormattedDate style={styles.cardText} date={profile.birthdate} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"nationality\")}\r\n                        display={\r\n                            profile ? (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"gender\")}\r\n                        display={profile ? <FormattedGender style={styles.cardText} gender={profile.gender} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"profileType\")}\r\n                        display={\r\n                            profile ? (\r\n                                <>\r\n                                    <Text style={styles.cardText}>{i18n.t(`allRoles.${profile.type}`)}</Text>\r\n                                    {profile.type == \"staff\" && (\r\n                                        <>\r\n                                            {(profile as UserProfileStaff).staffRoles.map((sr: StaffRole) => (\r\n                                                <Text key={`profile-staff-role-${sr}`}>\r\n                                                    {i18n.t(`staffRoles.${sr}`)}\r\n                                                </Text>\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <Text style={styles.cardText}>\r\n                                            {i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)}\r\n                                        </Text>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.educationFields}\r\n                                    label={(item: string) => i18n.t(`educationFields.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"interests\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.interests}\r\n                                    label={(item: string) => i18n.t(`interestNames.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Meet} profileOffers={profile?.profileOffers || null} />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | null;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    withTheme(\r\n        ({category, profileOffers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n            const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n            const styles = themedStyles(theme);\r\n\r\n            return (\r\n                <ValueCard\r\n                    blank={!profileOffers}\r\n                    label={i18n.t(`offerCategories.${category}`)}\r\n                    display={\r\n                        items.length > 0 ? (\r\n                            <Chips\r\n                                items={items}\r\n                                label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                            />\r\n                        ) : (\r\n                            <Text style={styles.cardText}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                        )\r\n                    }\r\n                    noModal={true}\r\n                />\r\n            );\r\n        },\r\n    ),\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        header: {\r\n            alignItems: \"center\",\r\n        },\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 140,\r\n        },\r\n        name: {\r\n            fontSize: 24,\r\n            color: themes.dark.text,\r\n            marginTop: 10,\r\n            height: 30,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        universityContainer: {\r\n            height: 25,\r\n            marginTop: 5,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 1,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileView);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile, cancelMatchAction} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type UnmatchProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {\r\n        onSubmit?: (block: boolean) => void;\r\n        profile: UserProfile | null;\r\n        matchId: string | null;\r\n    };\r\n\r\ntype UnmatchProfileModalState = {block: boolean};\r\n\r\nclass UnmatchProfileModal extends React.Component<UnmatchProfileModalProps, UnmatchProfileModalState> {\r\n    constructor(props: UnmatchProfileModalProps) {\r\n        super(props);\r\n        this.state = {block: false};\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, matchId, onSubmit, ...otherProps} = this.props;\r\n        const {block} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"unmatch.title\")}\r\n                text={profile ? i18n.t(\"unmatch.text\", {firstname: profile.firstName, lastname: profile.lastName}) : \"\"}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons {...props} name=\"delete-sweep\" color={theme.error} />}\r\n                additionalContent={(hide, textProps) => (\r\n                    <>\r\n                        <Text {...textProps}>\r\n                            {profile\r\n                                ? i18n.t(\"unmatch.blockQuestion\", {\r\n                                      firstname: profile.firstName,\r\n                                      lastname: profile.lastName,\r\n                                  })\r\n                                : \"\"}\r\n                        </Text>\r\n                        <TouchableOpacity\r\n                            style={styles.blockTouchable}\r\n                            onPress={() => this.setState({...this.state, block: !block})}\r\n                        >\r\n                            <CheckBox\r\n                                containerStyle={styles.checkboxContainer}\r\n                                checked={block}\r\n                                onPress={() => this.setState({...this.state, block: !block})}\r\n                            />\r\n                            <Text {...textProps}>{i18n.t(\"block.action\")}</Text>\r\n                        </TouchableOpacity>\r\n                    </>\r\n                )}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"unmatch.action\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            if (matchId) (store.dispatch as MyThunkDispatch)(cancelMatchAction(matchId, true));\r\n                            if (profile && block) (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                            if (onSubmit) onSubmit(block);\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        blockTouchable: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(UnmatchProfileModal);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport QuickFormReport from \"./forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport UnmatchProfileModal from \"./modals/UnmatchProfileModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {navigateBack, openChat} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ProfileActionBarProps = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n} & ThemeProps;\r\n\r\nfunction ProfileActionBar(props: ProfileActionBarProps): JSX.Element {\r\n    const {profile, isMatched, roomId, matchId, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    let buttons;\r\n\r\n    const buttonBlock = (\r\n        <BlockProfileModal\r\n            profile={profile}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.block\")} icon=\"block\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    const buttonReport = (\r\n        <QuickFormReport\r\n            entity={profile}\r\n            entityType={ReportEntityType.PROFILE_ENTITY}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.report\")} icon=\"report\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    if (isMatched) {\r\n        const buttonChat = (\r\n            <ActionButton\r\n                blank={!profile}\r\n                text={i18n.t(\"profile.action.chat\")}\r\n                icon=\"chat\"\r\n                onPress={() => roomId && openChat(roomId)}\r\n            />\r\n        );\r\n\r\n        // TODO implement chat mute\r\n        /*const buttonMute = (\r\n            <ActionButton blank={!profile} text={i18n.t(\"profile.action.mute\")} icon=\"notifications-off\" />\r\n        );*/\r\n        const buttonMute = <></>;\r\n\r\n        const buttonUnmatch = (\r\n            <UnmatchProfileModal\r\n                profile={profile}\r\n                matchId={matchId}\r\n                onSubmit={(block: boolean) => {\r\n                    if (block) navigateBack();\r\n                }}\r\n                activator={(open) => (\r\n                    <ActionButton\r\n                        blank={!profile}\r\n                        text={i18n.t(\"profile.action.unmatch\")}\r\n                        icon=\"close\"\r\n                        onPress={open}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n\r\n        buttons = (\r\n            <>\r\n                {buttonChat}\r\n                {buttonMute}\r\n                {buttonUnmatch}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    } else {\r\n        buttons = (\r\n            <>\r\n                {buttonBlock}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return <View style={styles.container}>{buttons}</View>;\r\n}\r\n\r\ntype ActionButtonProps = ThemeProps & {\r\n    text: string;\r\n    icon?: string;\r\n    onPress?: () => void;\r\n    blank?: boolean;\r\n};\r\n\r\nconst ActionButton = withTheme(\r\n    ({text, icon, onPress, blank, theme}: ActionButtonProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity style={styles.button} activeOpacity={0.75} onPress={blank ? undefined : onPress}>\r\n                {icon && (\r\n                    <View style={[styles.buttonTop, blank ? styles.buttonTopBlank : {}]}>\r\n                        {!blank && <MaterialIcons name={icon} style={styles.buttonTopIcon} />}\r\n                    </View>\r\n                )}\r\n                <Text style={styles.buttonText}>{text}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        button: {\r\n            width: 75,\r\n            marginHorizontal: 10,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonText: {\r\n            fontSize: 12,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.5,\r\n            color: themes.dark.text,\r\n            textAlign: \"center\",\r\n            ...styleTextLight,\r\n        },\r\n        buttonTop: {\r\n            fontSize: 24,\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 60,\r\n            marginBottom: 5,\r\n            backgroundColor: \"#fff4\",\r\n        },\r\n        buttonTopBlank: {\r\n            opacity: 0.4,\r\n            backgroundColor: \"transparent\",\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 1,\r\n        },\r\n        buttonTopIcon: {\r\n            fontSize: 24,\r\n            color: theme.textInverted,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileActionBar);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ProfileView from \"../components/ProfileView\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../model/user-profile\";\r\nimport {fetchProfile} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ProfileActionBar from \"../components/ProfileActionBar\";\r\nimport {getRouteParams} from \"../navigation/utils\";\r\n\r\nconst reduxConnector = connect(() => ({}));\r\n\r\n// Component props\r\ntype ProfileScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype ProfileScreenState = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n};\r\n\r\nclass ProfileScreen extends React.Component<ProfileScreenProps, ProfileScreenState> {\r\n    constructor(props: ProfileScreenProps) {\r\n        super(props);\r\n        this.state = {profile: null, isMatched: false, roomId: null, matchId: null};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const {id} = getRouteParams(route);\r\n            if (id && (!this.state.profile || this.state.profile.id !== id)) {\r\n                (dispatch as MyThunkDispatch)(fetchProfile(id as string)).then(\r\n                    (profileWithMatchInfo: UserProfileWithMatchInfo | null) => {\r\n                        if (profileWithMatchInfo) {\r\n                            const {profile, isMatched, roomId, matchingId} = profileWithMatchInfo;\r\n                            this.setState({...this.state, profile, isMatched, roomId, matchId: matchingId});\r\n                        } else {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                profile: null,\r\n                                isMatched: false,\r\n                                roomId: null,\r\n                                matchId: null,\r\n                            });\r\n                        }\r\n                    },\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profile, isMatched, roomId, matchId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <ProfileView\r\n                    profile={profile}\r\n                    actionBar={\r\n                        <ProfileActionBar profile={profile} isMatched={isMatched} roomId={roomId} matchId={matchId} />\r\n                    }\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(ProfileScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {SupportedLocale, SUPPORTED_LOCALES} from \"../localization\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type LocalePickerProps = {\r\n    locale?: SupportedLocale;\r\n    onChange?: (locale: SupportedLocale) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass LocalePicker extends React.Component<LocalePickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, locale, theme, buttonStyle, valueStyle, buttonStyleVariant} = this.props;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={SUPPORTED_LOCALES}\r\n                label={(l: string) => i18n.t(`locales.${l}`)}\r\n                selected={locale ? [locale] : []}\r\n                valueStyle={valueStyle}\r\n                buttonStyle={buttonStyle}\r\n                buttonStyleVariant={buttonStyleVariant}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as SupportedLocale);\r\n                }}\r\n                noOkUnderline\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({});\r\n});\r\n\r\nexport default withTheme(LocalePicker);\r\n","import {SupportedLocale} from \"../localization\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nexport type CookiesPreferences = {\r\n    auth: boolean;\r\n    cache: boolean;\r\n    settings: boolean;\r\n};\r\n\r\nexport const COOKIES_PREFERENCES_KEYS = [\"auth\", \"cache\", \"settings\"];\r\n\r\nexport type UserSettings = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    cookies: CookiesPreferences;\r\n    cookieConsentDate: Date | null;\r\n};\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {AppState} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CookiesPreferences, COOKIES_PREFERENCES_KEYS} from \"../../model/user-settings\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {saveCookiesPreferences} from \"../../state/settings/actions\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n}));\r\n\r\n// Component props\r\nexport type CustomizeCookiesModalProps = ThemeProps & Partial<CustomModalProps> & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CustomizeCookiesModalState = {cookies: CookiesPreferences};\r\n\r\nclass CustomizeCookiesModal extends React.Component<CustomizeCookiesModalProps, CustomizeCookiesModalState> {\r\n    constructor(props: CustomizeCookiesModalProps) {\r\n        super(props);\r\n        this.state = {cookies: props.cookies};\r\n    }\r\n\r\n    private onShow(): void {\r\n        const storeCookies = this.props.cookies as {[key: string]: boolean};\r\n        const localCookies = this.state.cookies as {[key: string]: boolean};\r\n\r\n        // Update component cookies state with the state from the store if it is different\r\n        const changed = Object.keys(storeCookies).some((key: string) => storeCookies[key] != localCookies[key]);\r\n        if (changed) this.setState({...this.state, cookies: this.props.cookies});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...otherProps} = this.props;\r\n        const {cookies} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const cookieDict = this.state.cookies as {[key: string]: boolean};\r\n\r\n        const toggleCookie = (key: string) =>\r\n            this.setState({...this.state, cookies: {...cookies, [key]: !cookieDict[key]}});\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"cookies.title\")}\r\n                text={i18n.t(\"cookies.preferences.text\")}\r\n                justifyText\r\n                additionalContent={() => (\r\n                    <>\r\n                        {COOKIES_PREFERENCES_KEYS.map((k) => (\r\n                            <View style={styles.preferenceRow} key={`cookie-preference-${k}`}>\r\n                                <TouchableOpacity style={styles.preferenceRowButton} onPress={() => toggleCookie(k)}>\r\n                                    <CheckBox\r\n                                        checked={cookieDict[k]}\r\n                                        containerStyle={styles.checkBoxContainer}\r\n                                        onPress={() => toggleCookie(k)}\r\n                                    />\r\n                                    <Text style={styles.preferenceName}>{i18n.t(`cookies.preferences.${k}.name`)}</Text>\r\n                                </TouchableOpacity>\r\n                                <Text style={styles.preferenceDescription}>\r\n                                    {i18n.t(`cookies.preferences.${k}.description`)}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                buttons={[\r\n                    {\r\n                        preset: \"cancel\",\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            this.setState({...this.state, cookies: this.props.cookies});\r\n                        },\r\n                    },\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"save\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            store.dispatch(saveCookiesPreferences(cookies));\r\n                        },\r\n                    },\r\n                ]}\r\n                onShow={() => {\r\n                    this.onShow();\r\n                    if (otherProps.onShow) otherProps.onShow();\r\n                }}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        preferenceRow: {\r\n            marginBottom: 10,\r\n        },\r\n        preferenceRowButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkBoxContainer: {\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        preferenceName: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        preferenceDescription: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CustomizeCookiesModal));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Alert, Dimensions, Platform, ScrollView, StyleSheet, Switch, Text, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ValueCard from \"../components/cards/ValueCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {AppState} from \"../state/types\";\r\nimport {setLocale, setTheme} from \"../state/settings/actions\";\r\nimport LocalePicker from \"../components/LocalePicker\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {APP_VERSION, BUG_REPORT_EMAIL_ADDRESS, TERMS_AND_CONDITIONS_URL} from \"../constants/config\";\r\nimport LocalImage from \"../components/LocalImage\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport CustomizeCookiesModal from \"../components/modals/CustomizeCookiesModal\";\r\nimport Button from \"../components/Button\";\r\nimport * as Linking from \"expo-linking\";\r\nimport store from \"../state/store\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    settings: state.settings.userSettings,\r\n}));\r\n\r\n// Component props\r\ntype SettingsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nlet versionClickCount = 0;\r\n\r\nclass SettingsScreen extends React.Component<SettingsScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, settings, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.container}>\r\n                    <Section theme={theme} title={i18n.t(\"settings.sections.general\")}>\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.language\")}\r\n                            icon={<FontAwesome name=\"language\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <LocalePicker\r\n                                    locale={settings.locale}\r\n                                    onChange={(l: SupportedLocale) => dispatch(setLocale(l))}\r\n                                    buttonStyle={styles.localeButton}\r\n                                    valueStyle={styles.localButtonValue}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.darkTheme\")}\r\n                            icon={<MaterialCommunityIcons name=\"theme-light-dark\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))}\r\n                            display={\r\n                                <Switch\r\n                                    value={settings.theme === \"dark\"}\r\n                                    onValueChange={() =>\r\n                                        dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))\r\n                                    }\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.logOut\")}\r\n                            icon={<MaterialCommunityIcons name=\"logout\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.logOut\")}\r\n                                    onPress={() => dispatch(logout())}\r\n                                    skin=\"rounded-filled\"\r\n                                    textStyle={styles.cardButtonText}\r\n                                    style={[styles.oneLineCardButton, styles.redBackground]}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.customizeCookies\")}\r\n                            icon={<MaterialCommunityIcons name=\"cookie\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            overrideModal={(hide) => <CustomizeCookiesModal visible={true} onHide={hide} />}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.about\")}\r\n                        icon={{name: \"info\", color: theme.accent}}\r\n                    >\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.version\")}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                // Easter-egg trigger\r\n                                versionClickCount++;\r\n                                if (versionClickCount === 7) {\r\n                                    versionClickCount = 0;\r\n                                    Alert.alert(\"Insert easter egg here\");\r\n                                }\r\n                                setTimeout(() => (versionClickCount = Math.max(0, versionClickCount - 1)), 3000);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{APP_VERSION}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.termsOfService\")}\r\n                            oneLine={true}\r\n                            onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.reportABug\")}\r\n                            icon={<MaterialIcons name=\"bug-report\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                const {width, height} = Dimensions.get(\"window\");\r\n                                const fromEmail = store.getState().profile.user?.email;\r\n                                let text = \"\";\r\n                                text += `Platform: ${Platform.OS} (${Platform.Version})\\n`;\r\n                                text += `Dimensions: ${Math.round(width)} x ${Math.round(height)}\\n`;\r\n                                text += `App version: ${APP_VERSION}\\n`;\r\n                                text += `User: ${fromEmail}\\n`;\r\n                                text += `_______________________\\n\\n`;\r\n                                text += `${i18n.t(\"bugReport.mailTitle\")}\\n\\n`;\r\n\r\n                                const subject = i18n.t(\"bugReport.mailSubject\");\r\n                                Linking.openURL(`mailto:${BUG_REPORT_EMAIL_ADDRESS}?subject=${subject}&body=${text}`);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.danger\")}\r\n                        icon={{name: \"warning\", color: theme.warn}}\r\n                    >\r\n                        <ValueCard\r\n                            style={[styles.card, {height: 100}]}\r\n                            label={i18n.t(\"settings.deleteAccount\")}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.deleteMyAccount\")}\r\n                                    onPress={() => rootNavigate(\"DeleteAccountScreen\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.cardButton, styles.redBackground]}\r\n                                    textStyle={styles.cardButtonText}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <View style={styles.logosContainer}>\r\n                        <LocalImage\r\n                            imageKey=\"logos.sea-eu-around.small\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoSeaEuAround]}\r\n                        />\r\n                        <LocalImage\r\n                            imageKey=\"logos.erasmusLeft\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoErasmus]}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\ntype SectionProps = {\r\n    theme: Theme;\r\n    title: string;\r\n    icon?: {name: string; color: string};\r\n};\r\n\r\nclass Section extends React.Component<SectionProps> {\r\n    render(): JSX.Element {\r\n        const {title, icon, theme, children} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.section}>\r\n                <View style={styles.sectionTitleContainer}>\r\n                    {icon && <MaterialIcons name={icon.name} color={icon.color} style={styles.sectionIcon} />}\r\n                    <Text style={styles.sectionTitle}>{title}</Text>\r\n                </View>\r\n                {children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            maxWidth: 700,\r\n            alignSelf: \"center\",\r\n            paddingTop: 10,\r\n            paddingBottom: 50,\r\n            paddingHorizontal: 20,\r\n        },\r\n        section: {\r\n            paddingVertical: 10,\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        sectionTitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        sectionTitle: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n        },\r\n        sectionIcon: {\r\n            fontSize: 16,\r\n            marginRight: 5,\r\n        },\r\n        card: {\r\n            marginVertical: 6,\r\n            height: 60,\r\n        },\r\n        cardIcon: {\r\n            marginRight: 6,\r\n            padding: 0,\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        localeButton: {\r\n            height: 30,\r\n        },\r\n        localButtonValue: {\r\n            fontSize: 14,\r\n            marginHorizontal: 10,\r\n        },\r\n        cardButton: {\r\n            height: 42,\r\n            marginVertical: 0,\r\n        },\r\n        oneLineCardButton: {\r\n            width: 140,\r\n            height: 40,\r\n            marginVertical: 0,\r\n        },\r\n        cardButtonText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n\r\n        infoText: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        logosContainer: {},\r\n        logo: {\r\n            marginTop: 30,\r\n            width: \"100%\",\r\n        },\r\n        logoErasmus: {height: 40},\r\n        logoSeaEuAround: {height: 60},\r\n        /*logoJA: {height: 40},\r\n        developedBy: {\r\n            textTransform: \"uppercase\",\r\n            textAlign: \"center\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n            marginTop: 40,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SettingsScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport Button from \"../components/Button\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype DeleteAccountSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountSuccessScreen extends React.Component<DeleteAccountSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success1\")}</Text>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success2\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"deleteAccount.leave\")}\r\n                        icon={<MaterialCommunityIcons name=\"logout\" style={styles.buttonIcon} />}\r\n                        onPress={() => rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"})}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 25,\r\n            marginTop: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n            backgroundColor: theme.error,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n            marginLeft: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {deleteAccount} from \"../../state/auth/actions\";\r\n\r\ntype FormState = {password: string};\r\n\r\nconst initialState = (): FormState => ({password: \"\"});\r\n\r\n// Use Yup to create the validation schema\r\nconst DeleteAccountFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Component props\r\ntype DeleteAccountFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype DeleteAccountFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass DeleteAccountForm extends React.Component<DeleteAccountFormProps, DeleteAccountFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: DeleteAccountFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(deleteAccount(values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"deleteAccount.title\")}</Text>\r\n                    <MaterialIcons name=\"warning\" style={styles.warningIcon} />\r\n                    <Text style={styles.warning}>{i18n.t(\"deleteAccount.warning\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={DeleteAccountFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    label={i18n.t(\"deleteAccount.inputLabel\")}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"deleteAccount.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        warning: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        warningIcon: {\r\n            color: theme.warn,\r\n            fontSize: 32,\r\n            marginTop: 20,\r\n        },\r\n        button: {\r\n            backgroundColor: theme.error,\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport DeleteAccountForm from \"../components/forms/DeleteAccountForm\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype DeleteAccountScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountScreen extends React.Component<DeleteAccountScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <DeleteAccountForm containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteAccountScreen);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport AsyncButton from \"../components/AsyncButton\";\r\nimport {connectToBackend} from \"../hooks/useCachedResources\";\r\nimport {getInitialRoute, rootNavigate} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type BackendUnreachableScreenProps = StackScreenProps<RootNavigatorScreens, \"BackendUnreachableScreen\"> &\r\n    ThemeProps;\r\n\r\nclass BackendUnreachableScreen extends React.Component<BackendUnreachableScreenProps> {\r\n    private async retry(): Promise<void> {\r\n        const {reachable, userLoggedInFromCache} = await connectToBackend();\r\n        if (reachable)\r\n            rootNavigate(getInitialRoute(!!userLoggedInFromCache, userLoggedInFromCache?.onboarded || false));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth containerStyle={{justifyContent: \"center\"}}>\r\n                <View style={styles.iconBanner}>\r\n                    <MaterialCommunityIcons name=\"server-network-off\" style={styles.icon} />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>{i18n.t(\"backendUnreachable.title\")}</Text>\r\n                    <Text style={styles.subtitle}>{i18n.t(\"backendUnreachable.subtitle\")}</Text>\r\n                    <AsyncButton\r\n                        style={styles.retryButton}\r\n                        icon={<MaterialIcons style={styles.retryIcon} name=\"refresh\" />}\r\n                        onPress={async () => await this.retry()}\r\n                        loadingIndicatorColor={theme.text}\r\n                        loadingIndicatorStyle={styles.retryLoading}\r\n                        loadingIndicatorSize={36}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: 40,\r\n        },\r\n        iconBanner: {\r\n            width: \"100%\",\r\n            height: 80,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.error,\r\n        },\r\n        icon: {\r\n            fontSize: 48,\r\n            color: themes.dark.text,\r\n        },\r\n        title: {\r\n            fontSize: 36,\r\n            maxWidth: 450,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 18,\r\n            maxWidth: 400,\r\n            marginTop: 40,\r\n            marginBottom: 20,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n        retryButton: {\r\n            padding: 10,\r\n        },\r\n        retryIcon: {\r\n            fontSize: 48,\r\n            color: theme.text,\r\n        },\r\n        retryLoading: {\r\n            marginTop: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BackendUnreachableScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SemiHighlightedText from \"../components/SemiHighlightedText\";\r\nimport Button from \"../components/Button\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {getRouteParams, rootNavigate} from \"../navigation/utils\";\r\nimport AsyncButton from \"../components/AsyncButton\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {requestSendVerificationEmail} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ResendVerifyEmailScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResendVerifyEmailScreen extends React.Component<ResendVerifyEmailScreenProps> {\r\n    private getLoginEmail(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {email} = getRouteParams(this.props.route);\r\n        return (email as string) || null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper containerStyle={styles.container}>\r\n                <View style={styles.topContainer}>\r\n                    <SemiHighlightedText\r\n                        text={i18n.t(\"resendVerifyScreen.title\")}\r\n                        fontSize={28}\r\n                        textStyle={styles.title}\r\n                    />\r\n                    <Text style={styles.infoText}>{i18n.t(\"resendVerifyScreen.text\")}</Text>\r\n                </View>\r\n\r\n                <View style={styles.actionsContainer}>\r\n                    <AsyncButton\r\n                        text={i18n.t(\"resendVerifyScreen.send\")}\r\n                        onPress={() => {\r\n                            // There should always be an email here\r\n                            const email = this.getLoginEmail();\r\n                            if (email) return dispatch(requestSendVerificationEmail(email));\r\n                            else return new Promise<void>((resolve) => resolve());\r\n                        }}\r\n                        skin=\"rounded-filled\"\r\n                        icon={\r\n                            <MaterialIcons\r\n                                name=\"mail-outline\"\r\n                                style={{color: themes.dark.text, fontSize: 24, marginLeft: 10}}\r\n                            />\r\n                        }\r\n                    />\r\n                    <Button\r\n                        text={i18n.t(\"cancel\")}\r\n                        onPress={() =>\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            })\r\n                        }\r\n                        skin=\"rounded-hollow\"\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            maxWidth: \"85%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        topContainer: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewayBold\",\r\n        },\r\n        infoText: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 18,\r\n            lineHeight: 22,\r\n            textAlign: \"justify\",\r\n            marginTop: 25,\r\n            maxWidth: 500,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResendVerifyEmailScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {NavigationContainer, DefaultTheme, DarkTheme, NavigationState} from \"@react-navigation/native\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {NavigatorRoute, RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle, unauthorizedRedirect} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\nimport MyProfileScreen from \"../screens/MyProfileScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport {AUTHENTICATED_ROUTES} from \"../constants/route-settings\";\r\nimport store from \"../state/store\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport DeleteAccountSuccessScreen from \"../screens/DeleteAccountSuccessScreen\";\r\nimport DeleteAccountScreen from \"../screens/DeleteAccountScreen\";\r\nimport {handleRouteChangeForChat} from \"./MessagingNavigator\";\r\nimport {DEBUG_FORCE_INITIAL_ROUTE, DEBUG_MODE} from \"../constants/config\";\r\nimport {BackHandler} from \"react-native\";\r\nimport BackendUnreachableScreen from \"../screens/BackendUnreachableScreen\";\r\nimport ResendVerifyEmailScreen from \"../screens/ResendVerifyEmailScreen\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype RootNavigationProps = React.PropsWithRef<ThemeProps & {initialRoute?: keyof RootNavigatorScreens}> & {\r\n    onReady?: () => void;\r\n};\r\n\r\n// The root stack navigator\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\nlet consumedInitialRoute = false;\r\nlet previousRoute: NavigatorRoute | undefined = undefined;\r\nlet prePreviousRoute: NavigatorRoute | undefined = undefined;\r\nlet savedNavigationState: NavigationState | undefined = undefined;\r\n\r\n// Handle route changes\r\nfunction onStateChange(state: NavigationState | undefined) {\r\n    if (state) savedNavigationState = state;\r\n    const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute | undefined;\r\n    if (route) {\r\n        // Handle redirecting when not authenticated\r\n        if (!DEBUG_MODE) {\r\n            if (!store.getState().auth.authenticated && AUTHENTICATED_ROUTES.includes(route)) unauthorizedRedirect();\r\n        }\r\n\r\n        handleRouteChangeForChat(route, previousRoute);\r\n\r\n        prePreviousRoute = previousRoute;\r\n        previousRoute = route;\r\n    }\r\n}\r\n\r\nfunction Navigation({theme, initialRoute, onReady}: RootNavigationProps): JSX.Element {\r\n    // Ensure we do not go back to the initial route when the navigation container updates (e.g. on theme change)\r\n    let initialRouteName = consumedInitialRoute ? (previousRoute as keyof RootNavigatorScreens) : initialRoute;\r\n    consumedInitialRoute = true;\r\n\r\n    if (DEBUG_MODE && DEBUG_FORCE_INITIAL_ROUTE !== undefined)\r\n        initialRouteName = DEBUG_FORCE_INITIAL_ROUTE as keyof RootNavigatorScreens;\r\n\r\n    const reactNavigationTheme = {\r\n        dark: theme.id === \"dark\",\r\n        colors: {\r\n            ...(theme.id === \"dark\" ? DarkTheme : DefaultTheme).colors,\r\n            background: theme.background,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            initialState={savedNavigationState}\r\n            linking={LinkingConfiguration}\r\n            theme={reactNavigationTheme}\r\n            onReady={() => {\r\n                onStateChange(undefined);\r\n                // Prevent going back to a screen where the user shouldn't go\r\n                BackHandler.addEventListener(\"hardwareBackPress\", () => {\r\n                    if (prePreviousRoute) {\r\n                        const toAuthRoute = AUTHENTICATED_ROUTES.indexOf(prePreviousRoute) !== -1;\r\n                        const authenticated = store.getState().auth.authenticated;\r\n                        if (toAuthRoute && !authenticated) return true;\r\n                        if (!toAuthRoute && authenticated) return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (onReady) onReady();\r\n            }}\r\n            onStateChange={onStateChange}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={initialRouteName}>\r\n                <Stack.Screen name=\"LoginRoot\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordScreen\"\r\n                    component={ResetPasswordScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen\r\n                    name=\"MyProfileScreen\"\r\n                    component={MyProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"MyProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noAvatar={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={themes.dark.text}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ProfileScreen\"\r\n                    component={ProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"ProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={themes.dark.text}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"SettingsScreen\"\r\n                    component={SettingsScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"SettingsScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader {...props} backButton={true} noSettingsButton={true} />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountScreen\"\r\n                    component={DeleteAccountScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"DeleteAccountScreen\"),\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} backButton={true} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountSuccessScreen\"\r\n                    component={DeleteAccountSuccessScreen}\r\n                    options={{title: screenTitle(\"DeleteAccountSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"BackendUnreachableScreen\"\r\n                    component={BackendUnreachableScreen}\r\n                    options={{title: screenTitle(\"BackendUnreachableScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResendVerifyEmailScreen\"\r\n                    component={ResendVerifyEmailScreen}\r\n                    options={{title: screenTitle(\"ResendVerifyEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.userSettings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {acceptAllCookies} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport CustomizeCookiesModal from \"./modals/CustomizeCookiesModal\";\r\nimport {hasUserGivenCookieConsent} from \"../state/static-storage-middleware\";\r\nimport Button from \"./Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n    consentDate: state.settings.userSettings.cookieConsentDate,\r\n}));\r\n\r\n// Component props\r\nexport type CookieBannerProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CookieBannerState = {showCustomize: boolean};\r\n\r\nclass CookieBanner extends React.Component<CookieBannerProps, CookieBannerState> {\r\n    constructor(props: CookieBannerProps) {\r\n        super(props);\r\n        this.state = {showCustomize: false};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, consentDate} = this.props;\r\n        const {showCustomize} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        if (hasUserGivenCookieConsent(consentDate)) return <></>;\r\n\r\n        return (\r\n            <>\r\n                <CustomModal\r\n                    visible={!showCustomize}\r\n                    animationType=\"slide\"\r\n                    fullWidth\r\n                    bottom\r\n                    nonDismissable\r\n                    modalViewStyle={styles.modalView}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <Text style={styles.cookieText}>{i18n.t(\"cookies.bannerText\")}</Text>\r\n                            <View style={styles.actions}>\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.acceptAll\")}\r\n                                    onPress={() => (store.dispatch as MyThunkDispatch)(acceptAllCookies())}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-filled\"\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.customize\")}\r\n                                    onPress={() => this.setState({...this.state, showCustomize: true})}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-hollow\"\r\n                                />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                />\r\n                <CustomizeCookiesModal\r\n                    visible={showCustomize}\r\n                    onHide={() => this.setState({...this.state, showCustomize: false})}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalView: {\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            justifyContent: \"center\",\r\n        },\r\n        cookieText: {\r\n            fontSize: 14,\r\n            lineHeight: 20,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        actions: {\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            maxWidth: 350,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            height: 40,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CookieBanner));\r\n","import * as React from \"react\";\r\n\r\nexport default class BottomSheetModalProvider extends React.Component<React.PropsWithChildren<unknown>> {\r\n    render(): JSX.Element {\r\n        return <>{this.props.children}</>;\r\n    }\r\n}\r\n","import {registerRootComponent} from \"expo\";\r\nimport React, {useState} from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\nimport {configureNotifications} from \"./notifications\";\r\nimport {initPolyfills} from \"./polyfills\";\r\nimport CookieBanner from \"./components/CookieBanner\";\r\nimport BottomSheetModalProvider from \"./components/bottom-sheet/BottomSheetModalProvider\";\r\n\r\nfunction App() {\r\n    initPolyfills();\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n    configureNotifications();\r\n\r\n    const [navigationReady, setNavigationReady] = useState<boolean>(false);\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <BottomSheetModalProvider>\r\n                            <Navigation onReady={() => setNavigationReady(true)} initialRoute={initialRoute} />\r\n                            {navigationReady && <ThemedStatusBar />}\r\n                        </BottomSheetModalProvider>\r\n                        <CookieBanner />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n","import * as Notifications from \"expo-notifications\";\r\nimport {Platform} from \"react-native\";\r\nimport {openChat, rootNavigate} from \"./navigation/utils\";\r\nimport {ResponseChatMessageDto} from \"./api/dto\";\r\nimport {receiveChatMessage} from \"./state/messaging/actions\";\r\nimport {areNotificationsSupported, getNotificationData} from \"./notifications-utils\";\r\nimport store from \"./state/store\";\r\nimport {DEBUG_MODE} from \"./constants/config\";\r\n\r\nexport function configureNotifications(): void {\r\n    if (!areNotificationsSupported()) return;\r\n\r\n    Notifications.setNotificationHandler({\r\n        handleNotification: async () => ({\r\n            shouldShowAlert: true,\r\n            shouldPlaySound: true,\r\n            shouldSetBadge: false,\r\n        }),\r\n    });\r\n\r\n    Notifications.addNotificationReceivedListener((notification) => {\r\n        const data = getNotificationData(notification);\r\n\r\n        if (DEBUG_MODE) {\r\n            console.log(\"Notification received:\");\r\n            console.log(data);\r\n        }\r\n\r\n        if (data.roomId && data.text) {\r\n            const message = data as ResponseChatMessageDto;\r\n            store.dispatch(receiveChatMessage(message));\r\n            /*\r\n                Since we shouldn't receive notifications when we're connected to the chat,\r\n                we don't have to take care of informing the server we've read the message here\r\n                (if we're receiving a notification, we're not on a screen where the message\r\n                is read on reception)\r\n            */\r\n        }\r\n    });\r\n\r\n    Notifications.addNotificationResponseReceivedListener((response) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const data = response.notification ? getNotificationData(response.notification) : (response as any).body;\r\n\r\n        if (data.roomId) {\r\n            openChat(data.roomId as string);\r\n\r\n            Notifications.getPresentedNotificationsAsync().then((notifs: Notifications.Notification[]) => {\r\n                // Dismiss all notifications of the same room\r\n                notifs\r\n                    .filter((n) => getNotificationData(n).roomId === data.roomId)\r\n                    .map((n) => n.request.identifier)\r\n                    .forEach(Notifications.dismissNotificationAsync);\r\n            });\r\n        }\r\n\r\n        if (data.groupId) rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n    });\r\n\r\n    if (Platform.OS === \"android\") {\r\n        Notifications.setNotificationChannelAsync(\"default\", {\r\n            name: \"default\",\r\n            importance: Notifications.AndroidImportance.MAX,\r\n            vibrationPattern: [0, 250, 250, 250],\r\n            lightColor: \"#FF231F7C\",\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}