{"version":3,"sources":["web-build/register-service-worker.js","assets/fonts/Raleway-Regular.ttf","assets/fonts/Raleway-Thin.ttf","assets/fonts/Raleway-Light.ttf","assets/fonts/Raleway-SemiBold.ttf","assets/fonts/Raleway-Bold.ttf","src/constants/config.ts","src/navigation/utils.ts","src/constants/http-status.ts","src/api/utils.ts","src/state/types.ts","src/model/groups.ts","src/constants/universities.ts","src/api/converters.ts","src/state/profile/actions.ts","src/state/persistent-storage/static.ts","src/api/media-upload.ts","src/state/auth/actions.ts","src/api/errors.ts","src/state/persistent-storage/auth.ts","src/state/settings/actions.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/reducer.ts","src/api/dto.ts","src/state/profile/reducer.ts","src/state/matching/actions.ts","src/general-utils.ts","src/state/matching/reducer.ts","src/api/chat-socket.ts","src/state/messaging/actions.ts","src/state/messaging/reducer.ts","src/state/notifications/reducer.ts","src/state/groups/actions.ts","src/state/reports/reducer.ts","src/state/groups/helpers.ts","src/state/groups/reducer.ts","src/screens/onboarding/index.ts","src/state/static-storage-middleware.ts","src/state/auth-storage-middleware.ts","src/state/notifications/actions.ts","src/notifications-utils.ts","src/state/store.ts","src/state/navigation-middleware.ts","src/state/notifications-middleware.ts","src/state/messaging-middleware.ts","src/hooks/useCachedResources.ts","src/constants/layout.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/ScreenWrapper.tsx","src/styles/general.ts","src/components/Button.tsx","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/forms/FormTextInput.tsx","src/styles/onboarding.ts","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/FormSubmitButton.tsx","src/components/modals/ModalImpl.native.tsx","src/components/modals/ModalImpl.tsx","src/components/modals/CustomModal.tsx","src/components/modals/ConfirmationModal.tsx","src/components/modals/RecoverAccountModal.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/components/forms/ScrollFormWrapper.tsx","src/components/forms/SignupForm.tsx","src/components/SvgPlaceholder.tsx","src/assets.ts","src/polyfills.ts","src/components/headers/LoginHeader.tsx","src/screens/LoginScreens.tsx","src/components/SemiHighlightedText.tsx","src/components/LocalImage.tsx","src/components/MobileStoreButton.tsx","src/screens/WelcomeScreen.tsx","src/components/bottom-sheet/BottomSheet.tsx","src/components/bottom-sheet/BottomSheetTouchableOpacity.tsx","src/components/ActionMenu.tsx","src/components/DebugMenu.tsx","src/components/VersionInfo.tsx","src/navigation/LoginNavigator.tsx","src/components/cards/SwipeableCard.tsx","src/styles/picker.ts","src/constants/reports.ts","src/components/PopUpSelector.tsx","src/state/reports/actions.ts","src/components/forms/QuickForm.tsx","src/components/forms/QuickFormReport.tsx","src/components/GeneralAvatar.tsx","src/components/ChatUserAvatar.tsx","src/components/cards/ChatRoomCard.tsx","src/components/utility/LocaleAware.tsx","src/components/InfiniteScroller.tsx","src/screens/messaging/ChatRoomsScreen.tsx","src/components/ProfileAvatar.tsx","src/styles/headers.ts","src/components/headers/MainHeader.tsx","src/components/headers/ChatScreenHeader.tsx","src/screens/messaging/ChatScreen.tsx","src/constants/route-settings.ts","src/navigation/MessagingNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabHomeScreen.tsx","src/components/modals/BlockProfileModal.tsx","src/components/FormattedUniversity.tsx","src/components/Chips.tsx","src/components/utility/FocusAware.tsx","src/components/SwipeTip.tsx","src/components/cards/MatchProfileCard.tsx","src/components/AsyncButton.tsx","src/components/Wave.tsx","src/components/modals/MatchSuccessModal.tsx","src/screens/TabMatchingScreen.tsx","src/components/headers/MatchScreenHeader.tsx","src/components/MultiPicker.tsx","src/components/MultiUniversityPicker.tsx","src/styles/toggles.ts","src/components/DegreeToggleMulti.tsx","src/components/LanguagePicker.tsx","src/components/RoleToggleMulti.tsx","src/components/OfferCategoryIcon.tsx","src/components/FormattedOfferCategory.tsx","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/StaffRolePicker.tsx","src/screens/MatchFilteringScreen.tsx","src/components/headers/FilteringScreenHeader.tsx","src/components/FormattedMatchStatus.tsx","src/components/cards/HistoryProfileCard.tsx","src/components/BufferedSearchBar.tsx","src/screens/MatchHistoryScreen.tsx","src/navigation/TabMatchingNavigator.tsx","src/components/tabs/MainTabBar.tsx","src/components/modals/GroupInviteResponseModal.tsx","src/components/cards/MyGroupCard.tsx","src/components/MyGroupsView.tsx","src/components/CommentTextInput.tsx","src/components/GroupVoteButton.tsx","src/components/modals/EditCommentModal.tsx","src/components/modals/DeleteCommentConfirmModal.tsx","src/components/ReadMore.tsx","src/components/cards/GroupCommentCard.tsx","src/components/ThemedStatusBar.tsx","src/components/modals/GroupPostCommentsModal.tsx","src/components/forms/EditPostForm.tsx","src/components/modals/EditPostModal.tsx","src/components/EnlargeableAvatar.tsx","src/components/PostHeader.tsx","src/components/modals/DeletePostConfirmModal.tsx","src/components/GroupPostMenu.tsx","src/components/cards/GroupPostCard.tsx","src/components/CustomTooltip.tsx","src/components/PostsFeedView.tsx","src/components/GroupInvitesView.tsx","src/screens/groups/TabGroupsScreen.tsx","src/components/ValidatedCheckBox.tsx","src/components/forms/FormCheckBox.tsx","src/components/forms/CreateGroupForm.tsx","src/components/modals/CreateGroupModal.tsx","src/components/modals/GroupJoinRequestSentModal.tsx","src/components/modals/GroupJoinedModal.tsx","src/components/modals/GroupDescriptionModal.tsx","src/components/cards/GroupExploreCard.tsx","src/screens/groups/GroupsExploreScreen.tsx","src/components/PostSortingOrderPicker.tsx","src/components/GroupPostsView.tsx","src/components/EditableText.tsx","src/components/ImageEditButton.tsx","src/components/GroupCover.tsx","src/components/headers/WavyHeader.tsx","src/components/providers/GroupProvider.tsx","src/components/modals/LeaveGroupConfirmModal.tsx","src/components/modals/DeleteGroupConfirmModal.tsx","src/components/modals/GroupSettingsModal.tsx","src/components/GroupSettingsMenu.tsx","src/components/headers/GroupScreenHeader.tsx","src/screens/groups/GroupScreen.tsx","src/components/GroupMembersView.tsx","src/components/modals/DeleteGroupMemberModal.tsx","src/components/modals/BanGroupMemberModal.tsx","src/components/modals/GroupPromoteAdminModal.tsx","src/components/cards/GroupMemberCard.tsx","src/screens/groups/GroupMembersScreen.tsx","src/components/headers/GroupMembersScreenHeader.tsx","src/components/headers/GroupInviteScreenHeader.tsx","src/components/modals/GroupInviteModal.tsx","src/components/cards/GroupProfileInviteCard.tsx","src/screens/groups/GroupInviteScreen.tsx","src/screens/groups/GroupMembersApprovalScreen.tsx","src/screens/groups/GroupBannedMembersScreen.tsx","src/navigation/GroupsNavigator.tsx","src/components/tabs/MessagingTabIcon.tsx","src/navigation/MainNavigator.tsx","src/components/OnboardingProgressBar.tsx","src/components/GenderToggleMulti.tsx","src/components/OfferControl.tsx","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/GenderToggle.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/NationalityControl.tsx","src/components/FormattedDate.tsx","src/components/DateInput.tsx","src/components/BirthDateInput.tsx","src/screens/onboarding/OnboardingProfileScreen1.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/InterestsPicker.tsx","src/screens/onboarding/OnboardingProfileScreen2.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/components/DegreeToggle.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingLegalSlide.tsx","src/screens/onboarding/screens.tsx","src/screens/onboarding/OnboardingLegalScreen1.tsx","src/screens/onboarding/OnboardingLegalScreen2.tsx","src/screens/onboarding/OnboardingLegalScreen3.tsx","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/components/forms/ResetPasswordForm.tsx","src/screens/ResetPasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/components/RoleToggle.tsx","src/components/AvatarEditButton.tsx","src/components/cards/ValueCard.tsx","src/components/forms/EditProfileForm.tsx","src/screens/MyProfileScreen.tsx","src/components/FormattedGender.tsx","src/components/ProfileView.tsx","src/components/modals/UnmatchProfileModal.tsx","src/components/ProfileActionBar.tsx","src/screens/ProfileScreen.tsx","src/components/LocalePicker.tsx","src/model/user-settings.ts","src/components/modals/CustomizeCookiesModal.tsx","src/screens/SettingsScreen.tsx","src/screens/DeleteAccountSuccessScreen.tsx","src/components/forms/DeleteAccountForm.tsx","src/screens/DeleteAccountScreen.tsx","src/screens/BackendUnreachableScreen.tsx","src/screens/ResendVerifyEmailScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/CookieBanner.tsx","src/components/bottom-sheet/BottomSheetModalProvider.tsx","src/App.tsx","src/notifications.ts"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports","Environment","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_HOST","SERVER_URL","AVATAR_ASPECT","GROUP_COVER_ASPECT","TERMS_AND_CONDITIONS_URL","rootNavigationRef","React","rootNavigate","route","params","current","navigate","navigateBack","fallback","nav","canGoBack","goBack","getRouteParams","getInitialRoute","loggedIn","onboarded","screenTitle","i18n","t","headerTitle","openChat","roomId","screen","navigateToGroup","groupId","navigateToProfile","profileId","state","profile","user","id","HttpStatusCode","encodeRequestParams","args","str","Object","keys","filter","key","undefined","map","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","length","requestBackend","endpoint","a","async","method","body","authToken","verbose","completelySilent","headers","Accept","Alert","alert","errorType","description","status","Authorization","accessToken","formattedParams","response","log","JSON","stringify","fetch","json","data","NO_CONTENT","OK","INTERNAL_SERVER_ERROR","PostSortingOrder","PARTNER_UNIVERSITIES","country","GroupVoteStatus","POST_SORTING_ORDERS","Newest","Oldest","Popular","GROUP_VOTE_VALUES","Upvote","Downvote","Neutral","stripSuperfluousOffers","offers","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","complete","common","avatarUrl","avatar","birthdate","Date","educationFields","profileOffers","interests","i","languages","university","find","u","type","staffDto","staffRoles","r","studentDto","degree","convertPartialProfileToCreateDto","toJSON","staff","student","convertDtoToUser","convertDtoToRoom","users","profiles","p","_id","name","firstName","lastName","lastMessageSeenId","lastMessageSeenDate","lastMessage","msg","sender","senderId","convertDtoToChatMessage","messages","writing","messagePagination","page","canFetchMore","fetching","createdAt","updatedAt","convertDtoToHistoryItem","date","convertDtoToGroup","membersPaginations","approved","banned","pending","invited","memberIds","members","posts","postIds","postsPagination","uploadingCover","myRole","isMember","role","myStatus","numApprovedMembers","availableMatches","convertDtoToGroupMember","convertDtoToGroupPost","creator","comments","commentIds","commentsPagination","score","upVotesCount","downVotesCount","voteStatus","isVoted","voteType","convertDtoToPostComments","parentId","depth","comment","text","childrenIds","children","c","allChildren","flatMap","childDto","concat","PROFILE_ACTION_TYPES","storeStaticData","cookieConsent","storageObject","AsyncStorage","setItem","clearStaticData","s","multiRemove","readCachedStaticData","getItem","raw","parse","uploadImage","token","image","onFailure","mimeType","payload","fileName","s3Url","uri","blob","imageBlob","AUTH_ACTION_TYPES","setProfileFieldsSuccess","fields","PROFILE_SET_FIELDS_SUCCESS","createProfileSuccess","PROFILE_CREATE_SUCCESS","createProfile","dispatch","getState","auth","CREATED","loadProfileOffersSuccess","fromCache","LOAD_PROFILE_OFFERS_SUCCESS","loadProfileInterestsSuccess","LOAD_PROFILE_INTERESTS_SUCCESS","fetchUserSuccess","FETCH_USER_SUCCESS","fetchProfileSuccess","FETCH_PROFILE_SUCCESS","localizeError","err","defaultValue","extractError","code","gatherValidationErrors","resp","output","general","UNPROCESSABLE_ENTITY","errors","forEach","e","property","codes","generalError","storeAuthInformation","email","toStore","discardAuthInformation","removeItem","readCachedCredentials","SETTINGS_ACTION_TYPES","registerBegin","password","REGISTER_BEGIN","requestRegister","locale","settings","userSettings","registerSuccess","success","registerFailure","REGISTER_SUCCESS","REGISTER_FAILURE","loginSuccess","usingCachedCredentials","LOG_IN_SUCCESS","loginFailure","needsRecovery","needsVerify","LOG_IN_FAILURE","requestLogin","recover","FORBIDDEN","logout","redirect","LOG_OUT","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","sendVerificationEmailSuccess","SEND_VERIFICATION_EMAIL_SUCCESS","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","deleteAccountSuccess","DELETE_ACCOUNT_SUCCESS","beginOnboarding","BEGIN_ONBOARDING","setOnboardingValues","values","SET_ONBOARDING_VALUES","setTheme","theme","SET_THEME","setLocale","SET_LOCALE","loadCookiesPreferences","preferences","consentDate","LOAD_COOKIES_PREFERENCES","saveCookiesPreferences","SAVE_COOKIES_PREFERENCES","loadVersionInfo","LOAD_VERSION_INFO","extractNamesFromEmail","splitName","split","capitalize","toUpperCase","slice","firstname","lastname","formatDateAgo","time","getTime","DAY","timespans","unit","duration","day","getDate","month","getMonth","year","getFullYear","amount","Math","round","formatPostDate","isEdit","createdAgo","updatedAgo","ago","initialState","authenticated","validated","registerEmail","validatedEmail","accountNeedsRecovery","onboarding","gender","nationality","offerValues","interestIds","onboardingIndex","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","STAFF_ROLE_ICONS","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","trim","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","VALIDATOR_GROUP_NAME","max","VALIDATOR_POST_TEXT","VALIDATOR_COMMENT_TEXT","en","locales","fr","appName","search","send","cancel","close","delete","ok","save","noResultsFound","apply","logOut","showMore","showLess","picker","callToAction","dateInput","dayPlaceholder","monthPlaceholder","yearPlaceholder","nationalityPicker","placeholder","login","emailAddress","passwordRepeat","forgotPassword","forgotPasswordExplanation","newPassword","signupWelcome","createAccount","emailValidation","validating","sent","legal","modal","title","disclaimer","decline","accept","readMore","validation","atLeastOne","addAtLeastOne","invalid","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","language","specifyLevel","tooYoung","group","tooLong","post","error_user_not_verified","user_not_found","email_or_password_incorrect","reset_password_no_token","unique","is_email","is_sea_email_constraint","myProfile","countryPickerLanguageCode","profileType","profileTypes","positions","allRoles","teaching","research","administration","technical","other","genders","male","female","dateOfBirth","dateUnits","singular","second","minute","hour","week","plural","dateRelative","precise","months","0","1","2","3","4","5","6","7","8","9","10","11","spokenLanguages","languageLevels","a1","a2","b1","b2","c1","c2","native","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","fieldsOfEducation","educationFieldsPicker","searchPlaceholder","multiple","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","notFoundScreen","subtitle","backendUnreachable","resendVerifyScreen","universities","universitiesPicker","profile1","profile2","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","legal1","legal2","legal3","back","next","leave","submit","button","quit","yes","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","activism","art","astrology","baking","bbq","blogging","brunch","climbing","coffee","comedy","cooking","couchsurfing","crossfit","cycling","dancing","diy","environmentalism","esports","expositions","fashion","festivals","fishing","foodie","football","gamer","gardening","golf","guitar","hiking","instagram","investing","karaoke","movies","museum","music","netflix","outdoors","parties","photography","piano","picnicking","podcasts","politics","reading","running","sailing","shopping","skateboarder","skiing","sneakers","snowboarding","spirituality","surfing","swimming","tango","tattoos","tea","tennis","theater","travel","trivia","vegan","vegetarian","volunteering","walking","wine","writer","yoga","offersPreText","offerCategories","meet","discover","collaborate","offerSettings","roles","allOffers","help","unmatch","blockQuestion","action","block","warning","welcomeScreen","signIn","signUp","loginForm","titleFirstLaunch","logIn","cookies","bannerText","acceptAll","customize","cache","bugReport","mailSubject","mailTitle","report","what","commentFrom","postFrom","why","typePlaceholder","types","violence","nudity","harassment","confirmationTitle","confirmation","failureTitle","failure","resetPassword","instructions","deleteAccount","success1","success2","inputLabel","recoverAccount","messaging","noMatches","sayHi","sayHiTo","groups","create","visible","requireApproval","visibleDescription","true","false","requireApprovalDescription","newPost","editPost","contentPlaceholder","deletePost","editComment","deleteComment","zero","replyTo","viewMore","none","joinRequestSent","groupJoined","viewGroup","myGroups","explore","noMore","statusText","invites","inviteNew","invite","approvalDisclaimerInvitee","approvalDisclaimerInviter","nobodyToInvite","postMenu","manage","manageBanned","approval","noResults","deleteMember","deletePendingMember","banMember","banPendingMember","promoteToAdmin","admin","basic","reportPost","noMorePosts","noPosts","justPosted","justCommented","justEdited","edited","editedAgo","postsSorting","newest","oldest","popular","points","feed","deleteData","matching","noMoreItems","noItemsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","offersTitle","offersMore","chat","continue","history","requested","declined","blocked","actions","noResultsAdvice","mute","noOffersSelected","screenTitles","suffix","WelcomeScreen","SigninScreen","ForgotPasswordScreen","SignupScreen","OnboardingNameScreen","OnboardingProfileScreen1","OnboardingProfileScreen2","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingLegalScreen1","OnboardingLegalScreen2","OnboardingLegalScreen3","ChatRoomsScreen","ChatScreen","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","MatchHistoryScreen","TabGroupsScreen","GroupsExploreScreen","GroupScreen","GroupMembersScreen","GroupBannedMembersScreen","GroupMembersApprovalScreen","GroupInviteScreen","TabNotificationsScreen","MyProfileScreen","ProfileScreen","SettingsScreen","DeleteAccountScreen","DeleteAccountSuccessScreen","ValidationEmailSentScreen","ValidateEmailScreen","ResetPasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","BackendUnreachableScreen","ForgotPasswordEmailSentScreen","ResendVerifyEmailScreen","sections","danger","about","darkTheme","deleteMyAccount","termsOfService","reportABug","customizeCookies","mo","SUPPORTED_LOCALES","getDefaultLocale","Localization","substr","LANGUAGES_CODES","getLocalizedLanguageItems","dict","translations","label","value","OfferCategory","cookieConsentDate","previousVersion","isFirstLaunch","localizedLanguageItems","MatchActionStatus","initOfferValue","val","genderVal","allowChooseGender","typeVal","allowChooseProfileType","offerId","GroupRole","GroupMemberStatus","MATCH_ACTION_HISTORY_STATUSES","Declined","Blocked","Requested","MATCHING_ACTION_TYPES","offerIdToCategory","Map","uploadingAvatar","arrayWithIdsToDict","arr","reduce","arrayWithIdMapperToDict","fetchProfilesFailure","FETCH_PROFILES_FAILURE","fetchProfilesSuccess","items","FETCH_PROFILES_SUCCESS","refreshFetchedProfiles","FETCH_PROFILES_REFRESH","likeProfileSuccess","matchStatus","LIKE_PROFILE_SUCCESS","likeProfile","toProfileId","dislikeProfileSuccess","DISLIKE_PROFILE_SUCCESS","blockProfileSuccess","BLOCK_PROFILE_SUCCESS","blockProfile","fetchHistorySuccess","FETCH_HISTORY_SUCCESS","refreshFetchedHistory","FETCH_HISTORY_REFRESH","cancelActionFailure","historyItemId","ACTION_CANCEL_FAILURE","cancelActionSuccess","isMatch","ACTION_CANCEL_SUCCESS","cancelMatchAction","matchingEntityId","filters","orderedProfileIds","profilesPagination","historyPagination","historyFilters","k","initialHistoryFilters","historyItems","myMatches","myMatchesPagination","MESSAGING_ACTION_TYPES","SOCKET_LOCATION","this","socket","connectCallbacks","writingTimeout","lastSentWritingState","lastSentWritingStateRoom","connectTimeout","connectedState","f","listeners","on","clearTimeout","consumeConnectCallbacks","m","onMessageReceived","onMessageRead","onWritingStateChange","emit","room","setTimeout","sendWritingState","callback","push","retry","isConnected","addConnectCallback","isConnecting","connect","query","authorization","reconnection","registerListeners","noop","readMessage","messageId","refreshWritingTimeout","disconnect","connected","beginFetchMatchRooms","FETCH_MATCH_ROOMS_BEGIN","fetchMatchRoomsFailure","FETCH_MATCH_ROOMS_FAILURE","fetchMatchRoomsSuccess","refresh","FETCH_MATCH_ROOMS_SUCCESS","fetchMatchRooms","pagination","matchRoomsPagination","limit","rooms","paginated","meta","currentPage","totalPages","connectToChat","fail","CONNECT_TO_CHAT_FAILURE","chatSocket","CONNECT_TO_CHAT_BEGIN","activeRoomId","receiveChatMessage","readChatMessage","receiveChatWriting","hasConnected","CONNECT_TO_CHAT_SUCCESS","disconnectFromChat","DISCONNECT_FROM_CHAT","joinChatRoomBegin","JOIN_CHAT_ROOM_BEGIN","joinChatRoomFailure","JOIN_CHAT_ROOM_FAILURE","joinChatRoomSuccess","JOIN_CHAT_ROOM_SUCCESS","sendChatMessageSuccess","message","SEND_MESSAGE_SUCCESS","sendChatMessage","localChatUser","sendMessage","SEND_MESSAGE_FAILURE","RECEIVE_MESSAGE","RECEIVE_WRITING_STATE","READ_MESSAGE","fetchEarlierMessagesBegin","FETCH_EARLIER_MESSAGES_BEGIN","fetchEarlierMessagesFailure","FETCH_EARLIER_MESSAGES_FAILURE","fetchEarlierMessagesSuccess","FETCH_EARLIER_MESSAGES_SUCCESS","fetchNewMessagesBegin","FETCH_NEW_MESSAGES_BEGIN","fetchNewMessagesFailure","FETCH_NEW_MESSAGES_FAILURE","fetchNewMessagesSuccess","FETCH_NEW_MESSAGES_SUCCESS","fetchMatchRoomSuccess","FETCH_MATCH_ROOM_SUCCESS","matchRooms","matchRoomsOrdered","socketState","connecting","fetchingNewMessages","toLocalChatUser","updateRoom","setAsFirst","otherRooms","GROUP_ACTION_TYPES","findPost","postId","groupsDict","postsFeed","findComment","commentId","createGroupSuccess","CREATE_SUCCESS","updateGroupSuccess","UPDATE_SUCCESS","updateGroup","responseGroup","UPDATE_FAILURE","leaveGroupSuccess","LEAVE_SUCCESS","leaveGroup","cascade","beginFetchGroups","FETCH_GROUPS_BEGIN","fetchGroupsSuccess","FETCH_GROUPS_SUCCESS","fetchGroupsFailure","FETCH_GROUPS_FAILURE","fetchGroups","statuses","Invited","InvitedByAdmin","Pending","fetchGroupSuccess","FETCH_GROUP_SUCCESS","fetchGroup","fetchPostsFeedBegin","FETCH_POSTS_FEED_BEGIN","fetchPostsFeedSuccess","FETCH_POSTS_FEED_SUCCESS","fetchPostsFeedFailure","FETCH_POSTS_FEED_FAILURE","refreshFetchedPostsFeed","fetchPostsFeed","feedPagination","fetchGroupPostsBegin","FETCH_GROUP_POSTS_BEGIN","fetchGroupPostsSuccess","FETCH_GROUP_POSTS_SUCCESS","fetchGroupPostsFailure","FETCH_GROUP_POSTS_FAILURE","refreshFetchedGroupPosts","fetchGroupPosts","postsSortOrder","g","fetchPostCommentsBegin","FETCH_POST_COMMENTS_BEGIN","fetchPostCommentsSuccess","FETCH_POST_COMMENTS_SUCCESS","fetchPostCommentsFailure","FETCH_POST_COMMENTS_FAILURE","fetchGroupMembersBegin","memberStatus","FETCH_GROUP_MEMBERS_BEGIN","fetchGroupMembersSuccess","totalItems","FETCH_GROUP_MEMBERS_SUCCESS","fetchGroupMembersFailure","FETCH_GROUP_MEMBERS_FAILURE","fetchGroupMembersRefresh","FETCH_GROUP_MEMBERS_REFRESH","fetchGroupMembers","deleteGroupMemberSuccess","isLocalUser","DELETE_GROUP_MEMBER_SUCCESS","deleteGroupMember","setGroupMemberStatusSuccess","SET_GROUP_MEMBER_STATUS_SUCCESS","setGroupMemberStatus","Banned","setGroupMemberRoleSuccess","SET_GROUP_MEMBER_ROLE_SUCCESS","inviteToGroupSuccess","INVITE_TO_GROUP_SUCCESS","beginFetchMyGroups","FETCH_MYGROUPS_BEGIN","fetchMyGroupsSuccess","FETCH_MYGROUPS_SUCCESS","fetchMyGroupsFailure","FETCH_MYGROUPS_FAILURE","refreshFetchedMyGroups","fetchMyGroups","myGroupsPagination","myGroupInvitesPagination","Approved","joinGroupSuccess","localUser","JOIN_GROUP_SUCCESS","createGroupPostBegin","CREATE_POST_BEGIN","createGroupPostSuccess","CREATE_POST_SUCCESS","updateGroupPostSuccess","UPDATE_POST_SUCCESS","deletePostSuccess","DELETE_POST_SUCCESS","createPostCommentBegin","CREATE_COMMENT_BEGIN","createPostCommentSuccess","CREATE_COMMENT_SUCCESS","updatePostCommentSuccess","UPDATE_COMMENT_SUCCESS","deletePostCommentSuccess","DELETE_COMMENT_SUCCESS","setGroupCoverBegin","SET_COVER_BEGIN","setGroupCoverSuccess","url","SET_COVER_SUCCESS","setGroupCoverFailure","SET_COVER_FAILURE","setPostVoteBegin","SET_POST_VOTE_BEGIN","setPostVoteSuccess","SET_POST_VOTE_SUCCESS","setCommentVoteBegin","SET_COMMENT_VOTE_BEGIN","setCommentVoteSuccess","SET_COMMENT_VOTE_SUCCESS","fetchAvailableMatchesBegin","FETCH_AVAILABLE_MATCHES_BEGIN","fetchAvailableMatchesSuccess","FETCH_AVAILABLE_MATCHES_SUCCESS","fetchAvailableMatchesFailure","FETCH_AVAILABLE_MATCHES_FAILURE","myGroupInvites","postsFeedIds","setOrUpdateGroup","update","updated","updatePost","updateMemberStatus","fallbackMember","previousStatus","wasInvite","isNowInvite","myPreviousStatus","member","wasApproved","isApproved","Basic","ONBOARDING_ORDER","hasUserGivenCookieConsent","Platform","OS","now","NOTIFICATIONS_ACTION_TYPES","areNotificationsSupported","isDevice","getNotificationData","notif","request","content","registerNotificationTokenSuccess","REGISTER_TOKEN_SUCCESS","deleteNotificationTokenSuccess","DELETE_TOKEN_SUCCESS","rootReducer","combineReducers","verificationToken","names","LOG_IN_RECOVER_CANCEL","PREVIOUS_ONBOARDING_SLIDE","NEXT_ONBOARDING_SLIDE","SET_ONBOARDING_OFFER_VALUE","TOGGLE_THEME","collab","category","Collaborate","sort","b","disco","Discover","Meet","SET_AVATAR_BEGIN","SET_AVATAR_FAILURE","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","SET_FILTERS","FETCH_PROFILES_BEGIN","ids","indexOf","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","FETCH_MY_MATCHES_REFRESH","FETCH_HISTORY_BEGIN","FETCH_HISTORY_FAILURE","SET_HISTORY_FILTERS","LEAVE_ROOM","existingMessage","filteredMessages","ma","some","mb","findIndex","notifications","reports","newState","gposts","gpostIds","pcomments","FETCH_POST_COMMENTS_REFRESH","commentsCount","parent","currentComments","updatedComments","paginationKey","itemsKey","cover","SET_POST_SORTING_ORDER","order","combinedMiddleware","applyMiddleware","thunk","store","oldCookies","DELETE_SUCCESS","Permissions","Notifications","askForPushNotificationToken","pushToken","registerNotificationToken","createStore","loggedInFromCache","isBackendReachable","connectToBackend","Promise","all","cacheIsGood","credentials","userLoggedInFromCache","reachable","width","Dimensions","get","height","isSmallDevice","isWideDevice","light","textLight","textInverted","background","cardBackground","accent","themeAwareAccent","accentSlight","accentSecondary","accentTernary","actionNeutral","okay","warn","componentBorder","buttonGroupBorder","greenModalBackground","chatBubble","inputPlaceholder","onboardingInputBackground","dark","preTheme","generator","styles","wideDevice","layout","themes","ScreenWrapper","props","forceFullWidth","wrapperStyle","containerStyle","themedStyles","View","style","wrapper","container","maxWidth","StyleSheet","flex","justifyContent","flexDirection","overflow","alignItems","withTheme","styleTextThin","fontFamily","fontWeight","styleTextLight","webFontFamily","BLUR_HEADER_INTENSITY","BLUR_TAB_INTENSITY","BLUR_MODAL_INTENSITY","BUTTON_SKINS","marginVertical","borderRadius","backgroundColor","paddingHorizontal","fontSize","letterSpacing","color","borderColor","borderWidth","Button","onPress","icon","skin","textStyle","iconLeft","contentOpacity","disabled","skinStyles","TouchableComponent","TouchableOpacity","accessibilityRole","accessibilityLabel","opacity","Text","navigation","replace","redirectButton","padding","textAlign","marginTop","marginBottom","reduxConnector","Staging","ActivityIndicator","size","successText","routeName","fallbackRoute","link","location","attemptRedirectToApp","lineHeight","FontAwesome","mailIcon","infoText","actionsContainer","config","prefixes","Linking","screens","LoginRoot","LoginScreens","MainScreen","TabHome","TabMatching","TabGroups","TabMessaging","TabNotifications","ValidateEmailSentScreen","OnboardingScreen","InputLabel","otherProps","textTransform","InputErrorText","errorStr","ValidatedTextInput","inputRef","createRef","focused","showSecureEntry","focus","blur","showErrorText","untouched","secureTextEntry","inputStyle","inputFocusedStyle","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","showPasswordButtonStyle","showPasswordIconStyle","placeholderTextColor","onBlur","onFocus","showError","isSecureEntry","position","paddingBottom","TextInput","ref","outline","setState","Component","defaultProps","emailProps","keyboardType","autoCompleteType","textContentType","autoCapitalize","autoCorrect","passwordProps","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","isEmail","isPassword","onboardingStyle","root","wideDeviceLeftPanel","slideWrapper","header","slideScrollView","slideContentWrapper","paddingTop","flexGrow","slideContentContainer","slideNavWrapper","slideNavButtons","navButton","marginHorizontal","navButtonBack","navButtonIcon","finishButtonText","onboardingOffersStyle","categoryTitleText","offerControl","offerControlPreText","formStyles","inputFieldIcon","marginRight","inputFieldIconFocused","getLoginTextInputsStyleProps","wrapperVerticalMargin","borderBottomWidth","borderBottomColor","getFormCheckBoxStyleProps","commonStyle","checkboxWrapper","checkboxContainer","marginLeft","checkboxLabel","FormError","FormSubmitButton","submitting","loadingIndicatorStyle","ModalImpl","modalVisible","oldProps","setModalVisible","onHide","onShow","modalViewStyle","animationType","bottom","fullWidth","fullHeight","nonDismissable","noBackground","backdropOpacity","backdropBlur","statusBarTranslucent","backdropColor","backdrop","activeOpacity","modalView","margin","elevation","shadowRadius","shadowColor","shadowOffset","shadowOpacity","renderContent","finalStatusBarTranslucent","Modal","transparent","onRequestClose","KeyboardAvoidingView","enabled","behavior","tint","intensity","paddingVertical","ModalImplClass","document","createElement","zIndex","appendChild","fixedFullSize","left","top","cursor","right","transform","boxShadow","ReactDOM","createPortal","CustomModalClass","modalRef","activator","activatorElement","show","ConfirmationModalClass","preset","hide","justifyText","buttons","additionalContent","contentContainerStyle","buttonDefaults","CustomModal","modalStyle","contentContainer","contentText","actionsWrapper","buttonParams","getPreset","actionDisabledOverlay","actionText","borderTopWidth","hairlineWidth","RecoverAccountModal","ConfirmationModal","LoginFormSchema","shape","LoginForm","pwdInputRef","setFieldValue","remoteErrors","onSuccessfulSubmit","setFieldError","fstyles","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","returnKeyType","blurOnSubmit","onSubmitEditing","MaterialIcons","Keyboard","dismiss","forgotPwdLink","forgotPasswordText","MaterialCommunityIcons","loginButtonIcon","separatorContainer","separatorHbar","separatorText","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","formikCfg","ScrollFormWrapper","keyboardShown","notKeyboardReactive","addListener","contentStyle","ScrollView","keyboardShouldPersistTaps","scrollView","scrollViewContent","minHeight","onLayout","nativeEvent","keyboardAvoidingView","SignupFormSchema","SignupForm","pwdField1Ref","pwdField2Ref","resetForm","validateOnChange","SvgPlaceholder","loaded","assetDictEn","assetDictFr","getLocalImage","onLoad","finish","default","assetDictCommon","getLocalSvg","animateValue","node","setValue","toValue","ReAnimated","timing","start","LoginHeaderClass","Value","getFullHeight","imageTop","getImageHeight","insets","imageTopVal","getCollapsedHeight","heightVal","easing","Easing","cubic","Image","forceUpdate","viewBox","navigationButton","navigationIcon","aspectRatio","SVG_VIEWBOX_W","useSafeAreaInsets","themeProps","SigninScreenClass","wide","form","formContainer","screenWrapper","screenContainer","ForgotPasswordScreenClass","SignupScreenClass","SemiHighlightedText","underlineHeight","underlineSides","textContainer","underline","textShadowColor","textShadowOffset","textShadowRadius","LocalImage","imageKey","img","source","MobileStoreButton","linkStyle","linkProps","Svg","scale","openURL","fill","WelcomeImage","storeButtonWidth","imageAndTextContainer","imageContainer","mobileStoresContainer","alignSelf","BottomSheetClass","webModalRef","BottomSheetTouchableOpacity","ActionMenuClass","sheetRef","noChevron","snapPoints","BottomSheet","bottomDivider","listItemContainer","Content","Title","titleItem","item","onSelect","persistMenu","listItemWrapper","Chevron","DebugMenu","ActionMenu","n","random","level","versionInfoContainer","versionText","versionDisclaimerIcon","SigninRoot","createMaterialTopTabNavigator","Tab","LoginNavigator","Navigator","swipeEnabled","tabBar","Screen","component","options","initialRouteName","DEFAULT_LOOKS","sideMargin","verticalSpacing","SwipeableCardClass","swipeableRef","hideTimeout","looks","hidden","onHidden","onFinish","ease","leftActions","rightActions","wrapperProps","touchableStyle","swipeableProps","hideCard","noAnimation","collapse","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","useNativeAnimations","friction","renderLeftActions","renderRightActions","touchable","flexBasis","display","oneSidedBorderRadius","side","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","SwipeActionButton","buttonStyles","swipeActionButton","swipeActionButtonIcon","swipeActionButtonText","SwipeActionButtons","buttonStyle","SwipeActionContainer","properties","first","last","isExteriorButton","isInteriorButton","interiorFiller","fullCardWidth","swipeActionsContainer","paddingRight","paddingLeft","swipeActionsContent","swipeActionText","pickerStyles","overlay","maxHeight","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","chipContainer","getPickerButtonStyleProps","variant","textNoneSelected","ReportType","PopUpSelector","valueDict","selected","fromSelectedProp","newValue","noOkUnderline","valueStyle","buttonStyleVariant","pstyles","buttonStyleProps","buttonOk","numberOfLines","scroll","scrollContent","index","rowContainer","toggleValue","checked","checkedIcon","uncheckedIcon","ReportEntityType","REPORT_ACTION_TYPES","REPORT_TYPES","VIOLENCE","NUDITY","HARASSMENT","UNDESIRABLE_CONTENT","HATE_SPEECH","VULGAR_CONTENT","OTHER","reportEntitySuccess","reportType","entityType","entityId","REPORT_ENTITY_SUCCESS","reportEntityFailure","REPORT_ENTITY_FAILURE","reportEntity","QuickFormClass","confirmationOpen","failureOpen","hideSubmit","titleIcon","submitText","confirmationText","failureText","sheetHeight","modalMode","wrapperSheet","containerSheet","titleContainer","actionButton","actionButtonText","open","feedbackModal","containerModal","feedbackTitle","feedbackText","QuickFormReportClass","quickFormRef","selectedType","entity","PROFILE_ENTITY","POST_ENTITY","COMMENT_ENTITY","GROUP_ENTITY","getEntityInfo","QuickForm","inputItem","selectorValue","GeneralAvatar","loading","avatarProps","ChatUserAvatar","sourceProp","LOOKS","ChatRoomCard","reportFormRef","swipeableCardRef","lastMessageComponent","isRead","pad","num","padStart","lastMessageText","lastMessageTextNew","lastMessageTime","getHours","getMinutes","noMessageText","SwipeableCard","rightThreshold","overshootRight","getActions","cardContent","avatarContainer","rounded","infoContainer","QuickFormReport","resetSwipe","onLocaleChange","InfiniteScroller","scrollViewRef","scrollListenerEnabled","hiddenIds","fetchMore","isFocused","fetchLimit","getShownItems","refreshOnFocus","shown","justRefreshed","moreIfNeeded","renderItem","noResultsComponent","endOfItemsComponent","itemsContainerStyle","progressViewOffset","horizontal","hideScrollIndicator","onScroll","scroller","refreshControl","RefreshControl","refreshing","onRefresh","layoutMeasurement","contentOffset","contentSize","distanceToStart","x","y","distanceToEnd","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","hideItem","endOfItemsContainer","noResultsContainer","loadingIndicatorContainer","roomIds","fetchingRooms","noMatchesText","itemsContainer","ProfileAvatar","headerStyles","wrapperBlur","wrapperNoShadow","backButton","backButtonIcon","avatarTitle","rightButton","rightIcon","MainHeaderClass","navigateBackOr","navigateBackFallback","rightButtons","noAvatar","noShadow","noSettingsButton","overrideAvatar","overrideTitle","onPressTitle","titleContainerStyle","titleStyle","scene","textColor","buttonBackgroundColor","WrapperComponent","BlurView","blurProps","ButtonComponent","toLowerCase","iconStyle","MainHeaderComp","MainHeader","ChatScreenHeaderClass","getRoomId","stackProps","hstyles","getRoom","ChatScreenHeaderComp","ChatScreenHeader","listRef","removeScrollListener","unsubscribeBlurEvent","unsubscribeFocusEvent","joinRoom","joinChatRoom","fetchMatchRoom","connectToRoom","ensureLatestMessages","leaveRoom","leaveChatRoom","afterDate","fetchPage","convertDto","fetchNewMessages","fetchEarlier","beforeDate","fetchEarlierMessages","scrollNode","getScrollableNode","listener","PAGE_HEIGHT","sY","pY","detail","wheelDelta","wheelDeltaY","deltaY","deltaMode","spinY","pixelY","normalizeWheelEvent","scrollTop","preventDefault","removeEventListener","setNativeProps","chatComponent","isWritingId","userWriting","lastMessageDict","otherUser","ChatEmptySvg","isKeyboardInternallyHandled","renderSend","sendContainer","renderBubble","renderTicks","currentMessage","messageTicksContainer","received","messageTick","bubbleTextLeft","bubbleTextRight","bubbleWrapperLeft","bubbleWrapperRight","renderMessage","seenBy","ChatMessage","messageProps","renderInputToolbar","inputToolbarContainer","primaryStyle","inputToolbarPrimary","renderChatEmpty","emptyChatContainer","emptyChatText","scaleY","chatEmptySvgHeight","preserveAspectRatio","renderFooter","ChatFooter","renderActions","ChatActions","actionsProps","onInputTextChanged","setWriting","onSend","loadEarlier","isLoadingEarlier","onLoadEarlier","timeFormat","listViewProps","setListRef","onEndReached","renderScrollComponent","renderComposer","autoFocus","textInput","multiline","onKeyPress","ev","altKey","shiftKey","minInputToolbarHeight","MIN_INPUT_HEIGHT","showUserAvatar","renderAvatar","renderCustomView","dotColor","dotAmplitude","dotSpeed","dotMargin","dotRadius","dotX","dotY","messageContainerLeft","messageContainerRight","messageReadContainerLeft","messageReadContainerRight","messageReadAvatarText","actionContainer","actionIcon","minWidth","CHAT_CONNECTED_ROUTES","STATUS_BAR_THEME_OVERRIDES","AUTHENTICATED_ROUTES","Stack","createStackNavigator","MessagingNavigator","previousAppStatus","RNAppState","onAppActive","onAppInactive","getCurrentRoute","includes","headerMode","headerShown","LogOutButton","onLogOut","shortCode","BASE_URL","fetchPostEmbed","separator","alphaText","logoutButton","BlockProfileModalClass","onBlock","FormattedUniversity","flagSize","flagEmoji","countryCode","withEmoji","Chips","removable","onRemove","chipStyle","Chip","chip","chipText","chipRemoveButton","chipRemoveIcon","flexWrap","FocusAware","useFocusEffect","ICON_NAMES","SwipeTip","offset","animating","dir","direction","animate","even","ANIMATION_AMPLITUDE","inOut","circle","linear","iconName","setAnimating","MatchProfileCard","cardRef","expanded","PROFILE_PREVIEW_COLLAPSED_HEIGHT","PROFILE_PREVIEW_EXPANDED_HEIGHT","elastic","out","expand","onExpand","showSwipeTip","fullName","chipStyleProps","collapsedContent","swipeTip","swipeTipIcon","expandedContent","expandedSectionTitle","BlockProfileModal","blockButton","blockButtonIcon","leftThreshold","onSwipeableRightWillOpen","onSwipeLeft","onSwipedLeft","onSwipeableLeftWillOpen","onSwipeRight","onSwipedRight","swipeActionContentRight","swipeActionContentLeft","toggleExpanded","flexShrink","AsyncButton","cancelPressPromise","promise","hasCanceled","wrappedPromise","resolve","reject","canceled","makePromiseCancelable","loadingIndicatorColor","loadingIndicatorSize","WAVE_PATTERNS","Wave","patternsIndices","_","patternIndex","wavePatternIdx","floor","upsideDown","wavePattern","rotate","d","localProfile","forwardRef","MatchSuccessModalClass","maxOffersDisplayed","waveWidth","getMatchingOffers","topContainer","profileInfoContainer","offersCard","availableHeight","OFFERS_CARD_VERTICAL_PADDING","numItems","offerText","profileIds","scrollerRef","successModalRef","notEmpty","filterParams","noResultsText1","noResultsText2","scrollTo","animated","Matched","dislikeProfile","MatchSuccessModal","MatchScreenHeaderClass","MatchScreenHeader","MultiPicker","tempSelected","dropdownWrapperHeight","has","set","genLabel","updateItems","onChange","multipleText","searchablePlaceholder","showChips","single","viewProps","selectedItems","toString","searchable","onChangeItem","scrollViewProps","isVisible","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","showSelected","MultiUniversityPicker","uni","univKey","getToggleStyleProps","innerBorderStyle","buttonContainerStyle","selectedButtonStyle","selectedTextStyle","disabledStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonLabels","styleVariant","styleProps","idx","selectMultiple","selectedIndexes","LanguagePicker","languageId","OfferCategoryIcon","svgProps","SvgIcon","iconSize","FormattedOfferCategory","iconProps","withoutIcon","translationKey","SectionedMultiPicker","selectRef","section","genSectionLabel","_toggleSelector","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","select","onSelectedItemsChange","uniqueKey","displayKey","subKey","onCancel","onConfirm","IconRenderer","icons","showDropDowns","readOnlyHeadings","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","confirmFontFamily","itemFontFamily","searchTextFontFamily","subItemFontFamily","EducationFieldCategory","modalWrapper","overflowY","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","subItemText","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","entryContainer","entryLabel","Switch","onValueChange","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","resetButtonIcon","sectionTitle","entryControls","ClearFilterButton","twoLineEntryContainer","FilteringScreenHeaderClass","applyFilters","FilteringScreenHeaderComp","FilteringScreenHeader","FormattedMatchStatus","IconComponent","HistoryProfileCard","blockModalRef","reportButton","cancelButton","BufferedSearchBar","updateTimeout","bufferDelay","onBufferedUpdate","searchBarProps","fetchingHistory","filtersContainer","Filter","filterKey","setHistoryFilters","searchBarContainer","inputContainerStyle","searchBarInputContainer","searchBarInput","fetchHistory","filterButtonContainer","filterButton","filterButtonSelected","filterLabel","filterLabelSelected","raised","topBar","headerContainer","filterIcon","filterIconSelected","TabMatchingStack","TabMatchingNavigator","MainTabBarClass","tabBarProps","blurViewStyle","BottomTabBar","activeTintColor","tabStyle","tab","showLabel","MainTabBarIcon","MainTabBar","GroupInviteResponseModalClass","stillNeedsApproval","requiresApproval","descriptionText","textProps","MyGroupCard","inviteResponseModalRef","isInvite","containerWithoutCover","groupCover","resizeMode","textUnderlay","groupName","GroupInviteResponseModal","MyGroupsView","exploreIcon","exploreButton","exploreButtonText","CommentTextInputClass","inputButton","inputButtonIcon","input","maxLength","onContentSizeChange","event","GroupVoteButton","vote","currentStatus","isSet","isComment","setVote","iconOverride","nonNeutralIcon","EditCommentModalClass","textInputStyle","textAlignVertical","updatePostComment","validate","DeleteCommentConfirmModal","deletePostComment","ReadMore","GroupCommentCard","bottomHeight","onCollapse","setExpanded","closeComments","onPressReplyTo","adminView","toggleChildren","openReportForm","fromLocal","outerContainer","outerContainerExpanded","onLongPress","delayLongPress","innerContainer","innerContainerExpanded","borderLeftWidth","topText","formatCommentDate","renderTruncatedFooter","handlePress","textFooter","renderRevealedFooter","EditCommentModal","bottomButton","bottomButtonIcon","borderLeftColor","statusBarRef","ThemedStatusBarClass","getDefaultStyle","newStyle","override","getThemeOverride","setStyle","StatusBar","GroupPostCommentsModalClass","formReportRef","commentTextInputRef","collapseCurrentlyExpanded","initialStatusBarStyle","createCommentComponent","childrenContainerRef","setReplyingTo","toggle","reporting","replyingTo","getStyle","fetchPostComments","oldPagination","fetchFirstComments","Consumer","topButton","topButtonIcon","commentsScrollView","fetchPostCommentsRefresh","noCommentsText","viewMoreComments","viewMoreCommentsText","replyToContainer","replyToClose","replyToCloseIcon","replyToText","CommentTextInput","CREATE_COMMENT_FAILURE","createPostComment","CommentChildrenContainer","EXTRA_HEIGHT_OFFSET","initialHeight","Animated","h","EditPostFormSchema","EditPostFormClass","submitForm","textInputRef","getCreationDto","CREATE_POST_FAILURE","createGroupPost","updateGroupPost","createMode","poster","creatorAvatar","creatorName","formContent","lengthText","lengthTextError","buttonSubmit","EditPostModalClass","editPostFormRef","triggerSubmit","EditPostForm","EnlargeableAvatar","enlarged","showEnlarged","hideEnlarged","enlargedAvatarContainer","avatarStyle","enlargedAvatar","PostHeader","isFeed","openPostMenu","profileName","toGroup","toProfile","avatarContainerSmall","menuButton","menuButtonIcon","DeletePostConfirmModalClass","deleteGroupPost","GroupPostMenuClass","actionMenuRef","editPostModalRef","deletePostModalRef","isAdmin","Admin","editAction","deleteAction","reportAction","EditPostModal","DeletePostConfirmModal","GroupPostCard","commentsModalRef","menuRef","fetchGroupIfNeeded","postText","openComments","bottomText","GroupPostCommentsModal","GroupPostMenu","CustomTooltip","tooltipStyles","alignContent","PostsFeedView","feedTooltipIcon","GroupInvitesView","hasInvites","staticStyle","ValidatedCheckBox","Fragment","FormCheckBox","setFieldTouched","CreateGroupFormSchema","CreateGroupForm","createdGroup","CREATE_FAILURE","checkboxProps","fieldDescription","buttonCancel","CreateGroupModalClass","GroupJoinRequestSentModalClass","GroupJoinedModalClass","GroupDescriptionModalClass","onJoinGroup","GroupExploreCard","descriptionModalRef","requestSentModalRef","joinedModalRef","joinGroup","canRequestJoin","card","blurView","innerContent","subtitleContainer","statusSpecific","statusTextKey","statusSpecificIcon","groupDescription","GroupJoinRequestSentModal","GroupDescriptionModal","GroupJoinedModal","PostSortingOrderPicker","l","sortOrder","GroupPostsView","buttonIcon","setPostSortingOrder","EditableText","editing","nonEditable","iconColor","textPlaceholder","edit","ImageEditButton","ensurePermission","showPicker","quality","aspect","ImagePicker","mediaTypes","Images","allowsEditing","result","cancelled","onPictureSelected","GroupCover","showLoading","showPlaceholder","allowEditing","placeholderIcon","editButton","imageInfo","WavyHeader","headerWidth","waveTop","wavePatternIndex","onGroupReady","redirectIfNotApproved","setGroupReady","LeaveGroupConfirmModalClass","checkboxTouchable","DeleteGroupConfirmModalClass","inputValue","inputCorrect","setInput","DELETE_FAILURE","inputIncorrect","GroupSettingsModalClass","setStateFromGroup","GroupSettingsMenuClass","leaveModalRef","deleteGroupModalRef","settingsModalRef","leaveAction","manageBansAction","manageMembersAction","settingsAction","LeaveGroupConfirmModal","DeleteGroupConfirmModal","GroupSettingsModal","GroupScreenHeaderClass","settingsMenuRef","getGroup","GroupSettingsMenu","headerRef","pendingMemberIds","topInfo","groupInfo","membersButton","membersButtonIcon","approbationRequestIndicatorContainer","APPROBATION_REQ_INDICATOR_SIZE","fetchFirstGroupMembers","renderTop","postsTitle","toggleTransparentMode","GroupScreenHeader","GroupMembersView","numApproved","DeleteGroupMemberModalClass","translationRoot","BanGroupMemberModalClass","GroupPromoteAdminModalClass","setGroupMemberRole","localUserId","GroupMemberCard","isMemberAdmin","deleteMemberButton","DeleteGroupMemberModal","controlButton","controlIcon","banMemberButton","BanGroupMemberModal","promoteAdminButton","GroupPromoteAdminModal","acceptMemberButton","unbanMemberButton","roleIcon","GroupMembersScreenHeaderClass","keepScreenTitle","noInviteButton","GroupInviteScreenHeaderClass","GroupInviteModalClass","inviteToGroup","GroupProfileInviteCard","GroupInviteModal","fetchAvailableMatches","GroupsStack","GroupsNavigator","createGroupModalRef","useRef","headerProps","screenProps","GroupMembersScreenHeader","GroupInviteScreenHeader","CreateGroupModal","firstRoom","MessagingTabIcon","isNotRead","indicator","indicatorContainer","INDICATOR_SIZE","TabNavigator","createBottomTabNavigator","tabBarIcon","tabBarButton","tabBarVisible","getFocusedRouteNameFromRoute","OnboardingProgressBar","containerWidth","setIndex","targetWidth","sin","foregroundStyle","foreground","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","titleLeft","setAllValues","offerNameTouchable","offerName","sideButton","sideButtonIcon","settingsModal","settingsModalTargetType","settingsModalButton","settingsModalButtonText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","ButtonSpacer","OnboardingSlide","hideNavNext","hasNext","illustration","noKeyboardAvoidance","hasPrevious","navigateRight","keyboardVerticalOffset","previous","quitOnboarding","VALIDATION_SCHEMA","lastNameInputRef","nextProps","prev","getOnboardingTextInputsStyleProps","Illustration","enablesReturnKeyAutomatically","svgWidth","svgHeight","useState","Svg1","Svg2","Blob1","Blob2","selectedIndex","NationalityPicker","showModal","hideModal","filterProps","withFlag","withFilter","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","DARK_THEME","DEFAULT_THEME","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","NationalityControl","buttonValidStyle","FormattedDate","localizedMonth","formattedDate","dateInputProps","clearTextOnFocus","DateInputClass","input1Ref","input2Ref","input3Ref","deriveStateFromDate","pyear","parseInt","pmonth","pday","getError","minimumDate","maximumDate","focused1","focused2","focused3","validDate","inputStyleValid","inputStyleFocused","containerDay","inputDay","containerMonth","inputMonth","containerYear","inputYear","minDate","maxDate","setFullYear","BirthDateInputClass","dateInputRef","DateInput","BirthDateInput","dateTextInput","dateTextInputFocused","dateTextInputValid","birthdateText","nationalityButton","nationalityButtonValid","Blob","LanguageLevelPicker","SpokenLanguagesInput","hasErrors","levelDict","pickerButtonStyleVariant","rows","firstRowContainer","languageLabelContainer","languageLabel","levelPicker","setLanguageLevel","deleteIconContainer","removeRow","deleteIcon","languageCodes","setLanguages","allInterests","updateValues","interest","interestId","StudentBlob","StudentSvg","StaffBlob","StaffSvg","LinearGradient","buttonsContainer","OnboardingOfferScreen1","OnboardingOfferScreen2","OnboardingOfferScreen3","DegreeToggle","onUpdate","studentThemedStyles","StudentIllustration","staffThemedStyles","buttonText","thumbColor","trackColor","StaffIllustration","studentRender","staffRender","TOSDeclinedModal","TextLink","OnboardingLegalSlide","specialBackground","gradient","legalText","readMoreText","actionButtonDecline","actionButtonAccept","ONBOARDING_SCREENS","OnboardingStack","ComponentClass","tabBarOptions","showIcon","springConfig","stiffness","damping","mass","lazy","lazyPreloadDistance","BackgroundSvg","ForegroundSvg","locations","end","wideDeviceIcon","ResetPasswordFormSchema","ResetPasswordForm","pwdRepeatRef","AvatarEditButton","ValueCard","renderModalContent","renderInput","oneLine","modalLabel","modalErrorText","modalButtonsContainer","modalButton","setModal","modalOpen","initialValue","validator","validateSync","setError","overrideModal","noModal","locked","blank","onModalShown","cardWrapper","cardLabelContainer","cardLabel","rightIconContainer","modalContent","Spacer","EditProfileForm","birthDateInputRef","rootScroll","overScrollMode","universityContainer","loadingIndicator","cardText","_error","birthdateInputContainer","birthdateInput","inputError","onFieldChanged","cc","staffRoleButton","OfferCategoryRow","onApply","offerReduxConnector","offerVal","updatedVal","avatarAccessory","PROFILE_SET_FIELDS_FAILURE","setProfileFields","FormattedGender","ProfileView","actionBar","UnmatchProfileModal","matchId","blockTouchable","ActionButton","buttonTop","buttonTopBlank","buttonTopIcon","isMatched","buttonBlock","buttonReport","buttonChat","buttonMute","buttonUnmatch","profileWithMatchInfo","fetchProfile","matchingId","LocalePicker","COOKIES_PREFERENCES_KEYS","CustomizeCookiesModal","storeCookies","localCookies","cookieDict","toggleCookie","preferenceRow","preferenceRowButton","checkBoxContainer","preferenceName","preferenceDescription","versionClickCount","cardIcon","localeButton","localButtonValue","cardButtonText","oneLineCardButton","redBackground","fromEmail","Version","subject","cardButton","logosContainer","logo","logoSeaEuAround","logoErasmus","Section","sectionTitleContainer","sectionIcon","DeleteAccountFormSchema","DeleteAccountForm","warningIcon","iconBanner","retryButton","retryIcon","retryLoading","getLoginEmail","requestSendVerificationEmail","consumedInitialRoute","previousRoute","prePreviousRoute","savedNavigationState","onStateChange","toChat","fromChat","handleRouteChangeForChat","initialRoute","onReady","reactNavigationTheme","DarkTheme","DefaultTheme","NavigationContainer","linking","LinkingConfiguration","BackHandler","toAuthRoute","screenOptions","MainNavigator","OnboardingNavigator","currentTheme","CookieBanner","showCustomize","cookieText","BottomSheetModalProvider","registerRootComponent","platform","web","secondary","grey","searchBg","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","Raleway","require","RalewayThin","RalewayLight","RalewaySemiBold","RalewayBold","loadResourcesAndDataAsync","useCachedResources","fallbacks","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","notification","notifs","identifier","importance","MAX","vibrationPattern","lightColor","navigationReady","setNavigationReady","ThemedStatusBar"],"mappings":"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","file":"static/js/app.a0ed58cc.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Thin.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-SemiBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Bold.ttf\";","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport Constants from \"expo-constants\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = Constants.manifest.version!;\r\nexport const APP_SCHEME: string = Constants.manifest.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const SERVER_HOST: string = extra.SERVER_HOST;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/*\r\n// These settings allow connection to the production environment in dev mode (risky)\r\nexport const ENVIRONMENT = Environment.Production;\r\nexport const DEBUG_MODE = true;\r\nexport const CLIENT_URL = `${\"https\"}://${\"sea-eu-around.univ-brest.fr\"}`;\r\nexport const SERVER_HOST = \"api.sea-eu-around.univ-brest.fr\";\r\nexport const BACKEND_URL = `https://${SERVER_HOST}`;\r\n*/\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\nexport const GROUP_COVER_QUALITY = 0.8;\r\n\r\n/**\r\n * Aspect ratios of various media.\r\n */\r\nexport const AVATAR_ASPECT: [number, number] = [1, 1];\r\nexport const GROUP_COVER_ASPECT: [number, number] = [2, 1];\r\n\r\n/**\r\n * The number of resources fetched per request when scrolling in infinite scrolling containers.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8; // Matching tab\r\nexport const ROOMS_FETCH_LIMIT = 10; // Messaging tab\r\nexport const MESSAGES_FETCH_LIMIT = 15; // Chat\r\nexport const HISTORY_FETCH_LIMIT = 12; // Match history tab\r\nexport const GROUPS_FETCH_LIMIT = 8;\r\nexport const GROUPS_POSTS_FETCH_LIMIT = 6;\r\nexport const POSTS_FEED_FETCH_LIMIT = 6;\r\nexport const GROUP_MEMBERS_FETCH_LIMIT = 15;\r\nexport const POST_COMMENTS_FETCH_LIMIT = 20;\r\n\r\n/**\r\n * The maximum depth for comments.\r\n * Depth indexing starts at 0 : for example 3 means that there will be 4 indentation levels.\r\n */\r\nexport const MAX_COMMENTS_DEPTH = 3;\r\n\r\n/**\r\n * The buffer delay before sending a remote request when typing in a search bar (ms).\r\n */\r\nexport const SEARCH_BUFFER_DELAY = 250;\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n\r\n/**\r\n * The time before we ask the user to consent for cookies again.\r\n */\r\nexport const COOKIE_CONSENT_DURATION = 365 * 24 * 60 * 60;\r\n\r\n/**\r\n * The amount of time before we fall back to the web version when trying to\r\n * redirect to the app.\r\n */\r\nexport const WEB_TO_APP_TIMEOUT = 5000;\r\n\r\n/**\r\n * URL of the complete Terms & Conditions.\r\n */\r\nexport const TERMS_AND_CONDITIONS_URL =\r\n    \"https://sea-eu.org/wp-content/uploads/2021/01/SEA-EU-Around_Termsconditions-v2.pdf\";\r\n\r\n/**\r\n * The email address to which bug reports should be sent.\r\n */\r\nexport const BUG_REPORT_EMAIL_ADDRESS = \"sea-eu.around@univ-brest.fr\";\r\n\r\n/**\r\n * Set this to force the initial route for debug purposes.\r\n */\r\nexport const DEBUG_FORCE_INITIAL_ROUTE: NavigatorRoute | undefined = undefined;\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef, Route} from \"@react-navigation/native\";\r\nimport {NavigatorRoute, RootNavigatorScreens} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME, WEB_TO_APP_TIMEOUT} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype RouteParams = Record<string, string | object | undefined | null>;\r\n\r\nexport function rootNavigate(route: NavigatorRoute, params?: RouteParams): void {\r\n    rootNavigationRef.current?.navigate(route as string, params);\r\n}\r\n\r\nexport function navigateBack(fallback?: NavigatorRoute): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else if (fallback) nav.navigate(fallback);\r\n    }\r\n}\r\n\r\nexport function navigateBackOr(fallback: (nac: NavigationContainerRef) => void): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else fallback(nav);\r\n    }\r\n}\r\n\r\nexport function getRouteParams(route: Route<string>): {[key: string]: unknown} {\r\n    const params = route.params;\r\n    return params ? (params as {[key: string]: unknown}) : {};\r\n}\r\n\r\nexport function attemptRedirectToApp(routeName: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS === \"web\") {\r\n        const link = `${APP_SCHEME}://${routeName}`;\r\n        window.location.replace(link);\r\n\r\n        // TODO look at Linking.openURL and Linking.canOpenURL\r\n        setTimeout(() => {\r\n            console.log(\r\n                `Failed to redirect to ${link} (perhaps app is not installed on this device) - Staying on web version`,\r\n            );\r\n            fallback();\r\n        }, WEB_TO_APP_TIMEOUT);\r\n    } else fallback();\r\n}\r\n\r\nexport function unauthorizedRedirect(): void {\r\n    rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n}\r\n\r\nexport function getInitialRoute(loggedIn: boolean, onboarded: boolean): keyof RootNavigatorScreens {\r\n    return loggedIn ? (onboarded ? \"MainScreen\" : \"OnboardingScreen\") : \"LoginRoot\";\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n\r\nexport function headerTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`);\r\n}\r\n\r\nexport function openChat(roomId: string): void {\r\n    rootNavigate(\"MainScreen\", {screen: \"TabMessaging\", params: {screen: \"ChatScreen\", params: {roomId}}});\r\n}\r\n\r\nexport function navigateToGroup(groupId: string): void {\r\n    rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"GroupScreen\", params: {groupId}}});\r\n}\r\n\r\nexport function navigateToProfile(profileId: string, state: AppState): void {\r\n    const isLocalUser = state.profile.user?.id === profileId;\r\n    if (isLocalUser) rootNavigate(\"MyProfileScreen\");\r\n    else rootNavigate(\"ProfileScreen\", {id: profileId});\r\n}\r\n","/**\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n * @see {@link https://gist.github.com/scokmen/f813c904ef79022e84ab2409574d1b45}\r\n */\r\nexport enum HttpStatusCode {\r\n    /**\r\n     * The server has received the request headers and the client should proceed to send the request body\r\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n     */\r\n    CONTINUE = 100,\r\n\r\n    /**\r\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n     */\r\n    SWITCHING_PROTOCOLS = 101,\r\n\r\n    /**\r\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n     * This prevents the client from timing out and assuming the request was lost.\r\n     */\r\n    PROCESSING = 102,\r\n\r\n    /**\r\n     * Standard response for successful HTTP requests.\r\n     * The actual response will depend on the request method used.\r\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n     */\r\n    OK = 200,\r\n\r\n    /**\r\n     * The request has been fulfilled, resulting in the creation of a new resource.\r\n     */\r\n    CREATED = 201,\r\n\r\n    /**\r\n     * The request has been accepted for processing, but the processing has not been completed.\r\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n     */\r\n    ACCEPTED = 202,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The server is a transforming proxy that received a 200 OK from its origin,\r\n     * but is returning a modified version of the origin's response.\r\n     */\r\n    NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n    /**\r\n     * The server successfully processed the request and is not returning any content.\r\n     */\r\n    NO_CONTENT = 204,\r\n\r\n    /**\r\n     * The server successfully processed the request, but is not returning any content.\r\n     * Unlike a 204 response, this response requires that the requester reset the document view.\r\n     */\r\n    RESET_CONTENT = 205,\r\n\r\n    /**\r\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n     * or split a download into multiple simultaneous streams.\r\n     */\r\n    PARTIAL_CONTENT = 206,\r\n\r\n    /**\r\n     * The message body that follows is an XML message and can contain a number of separate response codes,\r\n     * depending on how many sub-requests were made.\r\n     */\r\n    MULTI_STATUS = 207,\r\n\r\n    /**\r\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n     * and are not being included again.\r\n     */\r\n    ALREADY_REPORTED = 208,\r\n\r\n    /**\r\n     * The server has fulfilled a request for the resource,\r\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n     */\r\n    IM_USED = 226,\r\n\r\n    /**\r\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n     * For example, this code could be used to present multiple video format options,\r\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n     */\r\n    MULTIPLE_CHOICES = 300,\r\n\r\n    /**\r\n     * This and all future requests should be directed to the given URI.\r\n     */\r\n    MOVED_PERMANENTLY = 301,\r\n\r\n    /**\r\n     * This is an example of industry practice contradicting the standard.\r\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n     * use the 302 status code as if it were the 303.\r\n     */\r\n    FOUND = 302,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The response to the request can be found under another URI using a GET method.\r\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n     * the server has received the data and should issue a redirect with a separate GET message.\r\n     */\r\n    SEE_OTHER = 303,\r\n\r\n    /**\r\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n     */\r\n    NOT_MODIFIED = 304,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n     */\r\n    USE_PROXY = 305,\r\n\r\n    /**\r\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n     */\r\n    SWITCH_PROXY = 306,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n     * For example, a POST request should be repeated using another POST request.\r\n     */\r\n    TEMPORARY_REDIRECT = 307,\r\n\r\n    /**\r\n     * The request and all future requests should be repeated using another URI.\r\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n     */\r\n    PERMANENT_REDIRECT = 308,\r\n\r\n    /**\r\n     * The server cannot or will not process the request due to an apparent client error\r\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n     */\r\n    BAD_REQUEST = 400,\r\n\r\n    /**\r\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n     */\r\n    UNAUTHORIZED = 401,\r\n\r\n    /**\r\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n     */\r\n    PAYMENT_REQUIRED = 402,\r\n\r\n    /**\r\n     * The request was valid, but the server is refusing action.\r\n     * The user might not have the necessary permissions for a resource.\r\n     */\r\n    FORBIDDEN = 403,\r\n\r\n    /**\r\n     * The requested resource could not be found but may be available in the future.\r\n     * Subsequent requests by the client are permissible.\r\n     */\r\n    NOT_FOUND = 404,\r\n\r\n    /**\r\n     * A request method is not supported for the requested resource;\r\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n     */\r\n    METHOD_NOT_ALLOWED = 405,\r\n\r\n    /**\r\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n     */\r\n    NOT_ACCEPTABLE = 406,\r\n\r\n    /**\r\n     * The client must first authenticate itself with the proxy.\r\n     */\r\n    PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n    /**\r\n     * The server timed out waiting for the request.\r\n     * According to HTTP specifications:\r\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n     */\r\n    REQUEST_TIMEOUT = 408,\r\n\r\n    /**\r\n     * Indicates that the request could not be processed because of conflict in the request,\r\n     * such as an edit conflict between multiple simultaneous updates.\r\n     */\r\n    CONFLICT = 409,\r\n\r\n    /**\r\n     * Indicates that the resource requested is no longer available and will not be available again.\r\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n     * Clients such as search engines should remove the resource from their indices.\r\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n     */\r\n    GONE = 410,\r\n\r\n    /**\r\n     * The request did not specify the length of its content, which is required by the requested resource.\r\n     */\r\n    LENGTH_REQUIRED = 411,\r\n\r\n    /**\r\n     * The server does not meet one of the preconditions that the requester put on the request.\r\n     */\r\n    PRECONDITION_FAILED = 412,\r\n\r\n    /**\r\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n     */\r\n    PAYLOAD_TOO_LARGE = 413,\r\n\r\n    /**\r\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n     * in which case it should be converted to a POST request.\r\n     * Called \"Request-URI Too Long\" previously.\r\n     */\r\n    URI_TOO_LONG = 414,\r\n\r\n    /**\r\n     * The request entity has a media type which the server or resource does not support.\r\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n     */\r\n    UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n    /**\r\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n     * Called \"Requested Range Not Satisfiable\" previously.\r\n     */\r\n    RANGE_NOT_SATISFIABLE = 416,\r\n\r\n    /**\r\n     * The server cannot meet the requirements of the Expect request-header field.\r\n     */\r\n    EXPECTATION_FAILED = 417,\r\n\r\n    /**\r\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n     */\r\n    I_AM_A_TEAPOT = 418,\r\n\r\n    /**\r\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n     */\r\n    MISDIRECTED_REQUEST = 421,\r\n\r\n    /**\r\n     * The request was well-formed but was unable to be followed due to semantic errors.\r\n     */\r\n    UNPROCESSABLE_ENTITY = 422,\r\n\r\n    /**\r\n     * The resource that is being accessed is locked.\r\n     */\r\n    LOCKED = 423,\r\n\r\n    /**\r\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n     */\r\n    FAILED_DEPENDENCY = 424,\r\n\r\n    /**\r\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n     */\r\n    UPGRADE_REQUIRED = 426,\r\n\r\n    /**\r\n     * The origin server requires the request to be conditional.\r\n     * Intended to prevent \"the 'lost update' problem, where a client\r\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n     */\r\n    PRECONDITION_REQUIRED = 428,\r\n\r\n    /**\r\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n     */\r\n    TOO_MANY_REQUESTS = 429,\r\n\r\n    /**\r\n     * The server is unwilling to process the request because either an individual header field,\r\n     * or all the header fields collectively, are too large.\r\n     */\r\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n    /**\r\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n     */\r\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n    /**\r\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n     */\r\n    INTERNAL_SERVER_ERROR = 500,\r\n\r\n    /**\r\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n     */\r\n    NOT_IMPLEMENTED = 501,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n     */\r\n    BAD_GATEWAY = 502,\r\n\r\n    /**\r\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n     * Generally, this is a temporary state.\r\n     */\r\n    SERVICE_UNAVAILABLE = 503,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n     */\r\n    GATEWAY_TIMEOUT = 504,\r\n\r\n    /**\r\n     * The server does not support the HTTP protocol version used in the request\r\n     */\r\n    HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n    /**\r\n     * Transparent content negotiation for the request results in a circular reference.\r\n     */\r\n    VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n    /**\r\n     * The server is unable to store the representation needed to complete the request.\r\n     */\r\n    INSUFFICIENT_STORAGE = 507,\r\n\r\n    /**\r\n     * The server detected an infinite loop while processing the request.\r\n     */\r\n    LOOP_DETECTED = 508,\r\n\r\n    /**\r\n     * Further extensions to the request are required for the server to fulfill it.\r\n     */\r\n    NOT_EXTENDED = 510,\r\n\r\n    /**\r\n     * The client needs to authenticate to gain network access.\r\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n     */\r\n    NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL, DEBUG_MODE} from \"../constants/config\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {RequestResponse, TokenDto} from \"./dto\";\r\n\r\n// Request-related types\r\ntype Primitive = string | number | boolean | Primitive[] | undefined | null;\r\ntype URLParams = {[key: string]: Primitive};\r\ntype URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    authToken: TokenDto | null | undefined = undefined,\r\n    verbose = false,\r\n    completelySilent = false,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (authToken !== undefined) {\r\n        if (authToken === null) {\r\n            if (!completelySilent) console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {errorType: \"error.no-auth\", description: \"Endpoint requires authentication\", status: 401};\r\n        } else headers.Authorization = `Bearer ${authToken.accessToken}`;\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n    let response: Response | null = null;\r\n\r\n    try {\r\n        if (verbose && !completelySilent && DEBUG_MODE) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        let json = {status: response.status, data: {}};\r\n        if (response.status !== HttpStatusCode.NO_CONTENT) {\r\n            // Attempt to parse response JSON\r\n            try {\r\n                json = {...json, ...(await response.json())};\r\n            } catch (error) {\r\n                if (json.status === HttpStatusCode.OK) json.status = HttpStatusCode.INTERNAL_SERVER_ERROR;\r\n                if (!completelySilent) console.error(\"Unable to parse server response as JSON.\");\r\n            }\r\n        }\r\n\r\n        if (verbose && !completelySilent && DEBUG_MODE) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        if (!completelySilent) {\r\n            console.error(\r\n                `An unexpected error occured with a request to ${endpoint}. ` +\r\n                    `Method = ${method}, authToken = ${authToken}, params=${JSON.stringify(params)}, ` +\r\n                    `body=${JSON.stringify(body)}`,\r\n            );\r\n            console.error(error);\r\n            console.error(\"Response received from server:\", response);\r\n        }\r\n        return {errorType: \"error.unknown\", description: \"A client-side exception was raised.\", status: 400};\r\n    }\r\n}\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {\r\n    InterestDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    RemoteValidationErrors,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {ChatRoom, ChatRoomUser} from \"../model/chat-room\";\r\nimport {UserSettings} from \"../model/user-settings\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport {Group, GroupPost, PostSortingOrder} from \"../model/groups\";\r\n\r\nexport type FailableActionReturn = {success: boolean; errors?: string[]};\r\nexport type FailableThunkAction = AppThunk<Promise<FailableActionReturn>>;\r\nexport type ValidatedActionReturn = {success: boolean; errors?: RemoteValidationErrors};\r\nexport type ValidatedThunkAction = AppThunk<Promise<ValidatedActionReturn>>;\r\n\r\nexport type PaginatedState = {page: number; canFetchMore: boolean; fetching: boolean};\r\nexport const initialPaginatedState = (): PaginatedState => ({page: 1, canFetchMore: true, fetching: false});\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    type: Role | null;\r\n    degree: Degree | null;\r\n    staffRoles: {[key: string]: boolean};\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    accountNeedsRecovery: boolean;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n    onboardingIndex: number;\r\n};\r\n\r\nexport type SettingsState = {\r\n    userSettings: UserSettings;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n    previousVersion: string | null;\r\n    isFirstLaunch: boolean;\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n    uploadingAvatar: boolean;\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    educationFields: string[];\r\n    staffRoles: StaffRole[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    profiles: {[key: string]: UserProfile};\r\n    orderedProfileIds: string[];\r\n    profilesPagination: PaginatedState;\r\n    historyPagination: PaginatedState;\r\n    historyFilters: {[key: string]: boolean};\r\n    historyItems: MatchHistoryItem[];\r\n    myMatches: UserProfile[];\r\n    myMatchesPagination: PaginatedState;\r\n};\r\n\r\nexport type MessagingState = {\r\n    socketState: {connecting: boolean; connected: boolean};\r\n    matchRooms: {[key: string]: ChatRoom}; // store by id for faster access\r\n    matchRoomsOrdered: string[];\r\n    matchRoomsPagination: PaginatedState;\r\n    activeRoomId: string | null;\r\n    localChatUser: ChatRoomUser | null;\r\n    fetchingNewMessages: boolean;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type NotificationsState = {};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type ReportsState = {};\r\n\r\nexport type GroupsState = {\r\n    groupsDict: {[key: string]: Group};\r\n    pagination: PaginatedState;\r\n    groups: string[];\r\n    myGroupsPagination: PaginatedState;\r\n    myGroups: string[];\r\n    myGroupInvitesPagination: PaginatedState;\r\n    myGroupInvites: string[];\r\n    postsSortOrder: PostSortingOrder;\r\n    feedPagination: PaginatedState;\r\n    postsFeed: {[key: string]: GroupPost};\r\n    postsFeedIds: string[];\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n    messaging: MessagingState;\r\n    notifications: NotificationsState;\r\n    reports: ReportsState;\r\n    groups: GroupsState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n\r\n// Common action types\r\nexport type PaginatedFetchBeginAction = {type: string};\r\nexport type PaginatedFetchFailureAction = {type: string};\r\nexport type PaginatedFetchSuccessAction<T> = {\r\n    type: string;\r\n    items: T[];\r\n    canFetchMore: boolean;\r\n};\r\nexport type PaginatedFetchSuccessActionRefreshable<T> = {\r\n    type: string;\r\n    items: T[];\r\n    canFetchMore: boolean;\r\n    refresh: boolean;\r\n};\r\nexport type PaginatedFetchRefreshAction = {type: string};\r\n","import {GroupMemberStatus, GroupRole} from \"../api/dto\";\r\nimport {PaginatedState} from \"../state/types\";\r\nimport {UserProfile} from \"./user-profile\";\r\n\r\nexport type Group = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n    cover: string | null;\r\n    uploadingCover: boolean;\r\n    members: {[key: string]: GroupMember};\r\n    membersPaginations: {[key in GroupMemberStatus]: PaginatedState};\r\n    memberIds: {[key in GroupMemberStatus]: string[]};\r\n    posts: {[key: string]: GroupPost};\r\n    postIds: string[];\r\n    postsPagination: PaginatedState;\r\n    myRole: GroupRole | null;\r\n    myStatus: GroupMemberStatus | null;\r\n    numApprovedMembers: number | null;\r\n    availableMatches: {\r\n        fetching: boolean;\r\n        profiles: UserProfile[] | null;\r\n    };\r\n};\r\n\r\nexport type GroupMember = {\r\n    profile: UserProfile;\r\n    role: GroupRole;\r\n    status: GroupMemberStatus;\r\n};\r\n\r\nexport type GroupPost = {\r\n    id: string;\r\n    groupId: string;\r\n    type: string;\r\n    status: string;\r\n    text: string;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    creator: UserProfile;\r\n    score: number;\r\n    voteStatus: GroupVoteStatus;\r\n    comments: {[key: string]: PostComment};\r\n    commentsCount: number; // total number of comments on the post\r\n    commentIds: string[];\r\n    commentsPagination: PaginatedState;\r\n};\r\n\r\nexport type PostComment = {\r\n    id: string;\r\n    text: string;\r\n    score: number;\r\n    voteStatus: GroupVoteStatus;\r\n    creator: UserProfile;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    childrenIds: string[];\r\n    parentId: string | null;\r\n    depth: number;\r\n};\r\n\r\nexport enum PostSortingOrder {\r\n    Newest = \"newest\",\r\n    Oldest = \"oldest\",\r\n    Popular = \"popular\",\r\n}\r\n\r\nexport const POST_SORTING_ORDERS = [PostSortingOrder.Newest, PostSortingOrder.Oldest, PostSortingOrder.Popular];\r\n\r\nexport enum GroupVoteStatus {\r\n    Upvote = \"up\",\r\n    Downvote = \"down\",\r\n    Neutral = \"neutral\",\r\n}\r\nexport const GROUP_VOTE_VALUES = {\r\n    [GroupVoteStatus.Upvote]: 1,\r\n    [GroupVoteStatus.Downvote]: -1,\r\n    [GroupVoteStatus.Neutral]: 0,\r\n};\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {\r\n    ChatRoomProfileDto,\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    MatchHistoryItemDto,\r\n    OfferValueDto,\r\n    ResponseChatMessageDto,\r\n    ResponseProfileDto,\r\n    ResponseProfileDtoStaff,\r\n    ResponseProfileDtoStudent,\r\n    ResponseRoomDto,\r\n    ResponseUserDto,\r\n    ResponseProfileWithMatchInfoDto,\r\n    ResponseGroupDto,\r\n    ResponseGroupMemberDto,\r\n    ResponseGroupPostDto,\r\n    ResponsePostCommentDto,\r\n} from \"./dto\";\r\nimport {\r\n    UserProfile,\r\n    UserProfileCommon,\r\n    UserProfileStaff,\r\n    UserProfileStudent,\r\n    UserProfileWithMatchInfo,\r\n} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../model/chat-room\";\r\nimport {initialPaginatedState} from \"../state/types\";\r\nimport {Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport {PARTNER_UNIVERSITIES} from \"../constants/universities\";\r\nimport {Group, GroupMember, GroupPost, PostComment, GroupVoteStatus} from \"../model/groups\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    const common: UserProfileCommon = {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: (dto.interests || []).map((i) => i.id),\r\n        languages: dto.languages || [],\r\n        university: PARTNER_UNIVERSITIES.find((u) => u.key === dto.university) || PARTNER_UNIVERSITIES[0],\r\n    };\r\n\r\n    let complete: UserProfile;\r\n    if (dto.type === \"staff\") {\r\n        const staffDto = dto as ResponseProfileDtoStaff;\r\n        complete = {...common, staffRoles: (staffDto.staffRoles || []).map((r) => r.id as StaffRole)};\r\n    } else {\r\n        const studentDto = dto as ResponseProfileDtoStudent;\r\n        complete = {...common, degree: studentDto.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        interests: profile.interests.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    let complete: CreateProfileDto;\r\n    if (profile.type === \"staff\") {\r\n        const staff = profile as UserProfileStaff;\r\n        complete = {...common, staffRoles: staff.staffRoles.map((id: string) => ({id}))};\r\n    } else {\r\n        const student = profile as UserProfileStudent;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(\r\n    profile: Partial<UserProfile>,\r\n    type?: Role,\r\n): Partial<CreateProfileDto> {\r\n    const common: Partial<CreateProfileDtoCommon> = {\r\n        ...profile,\r\n        type,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        interests: profile.interests?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n\r\n    let complete: Partial<CreateProfileDto>;\r\n    if (type === \"staff\") {\r\n        const staff = profile as Partial<UserProfileStaff>;\r\n        complete = {...common, staffRoles: staff.staffRoles ? staff.staffRoles.map((id: string) => ({id})) : undefined};\r\n    } else {\r\n        const student = profile as Partial<UserProfileStudent>;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToRoom(dto: ResponseRoomDto): ChatRoom {\r\n    const users: ChatRoomUser[] = dto.profiles.map((p: ChatRoomProfileDto) => ({\r\n        _id: p.id,\r\n        name: `${p.firstName} ${p.lastName}`,\r\n        avatar: p.avatar || \"\",\r\n        lastMessageSeenId: p.lastMessageSeenId,\r\n        lastMessageSeenDate: p.lastMessageSeenDate ? new Date(p.lastMessageSeenDate) : null,\r\n    }));\r\n\r\n    // Try to find the sender of the last message in the list of users that are in the room\r\n    let lastMessage = null;\r\n    if (dto.lastMessage) {\r\n        const msg: ResponseChatMessageDto = dto.lastMessage;\r\n        const sender = users.find((u) => u._id == msg.senderId);\r\n        if (sender) lastMessage = convertDtoToChatMessage(sender, msg);\r\n    }\r\n\r\n    return {\r\n        ...dto,\r\n        users,\r\n        messages: [],\r\n        lastMessage,\r\n        writing: {},\r\n        messagePagination: initialPaginatedState(),\r\n    };\r\n}\r\n\r\nexport function convertDtoToChatMessage(user: ChatRoomUser, dto: ResponseChatMessageDto): ChatRoomMessage {\r\n    return {\r\n        ...dto,\r\n        _id: dto.id,\r\n        createdAt: new Date(dto.updatedAt),\r\n        user,\r\n    };\r\n}\r\n\r\nexport function convertDtoToHistoryItem(dto: MatchHistoryItemDto): MatchHistoryItem {\r\n    return {\r\n        profile: convertDtoToProfile(dto.profile),\r\n        status: dto.status,\r\n        date: new Date(dto.date),\r\n        id: dto.id,\r\n    };\r\n}\r\n\r\nexport function convertDtoToProfileWithMatchInfo(dto: ResponseProfileWithMatchInfoDto): UserProfileWithMatchInfo {\r\n    return {...dto, profile: convertDtoToProfile(dto.profile)};\r\n}\r\n\r\nexport function convertDtoToGroup(dto: ResponseGroupDto): Group {\r\n    return {\r\n        ...dto,\r\n        description: dto.description || \"\",\r\n        membersPaginations: {\r\n            approved: initialPaginatedState(),\r\n            banned: initialPaginatedState(),\r\n            pending: initialPaginatedState(),\r\n            \"invited-by-admin\": initialPaginatedState(),\r\n            invited: initialPaginatedState(),\r\n        },\r\n        memberIds: {\r\n            approved: [],\r\n            banned: [],\r\n            pending: [],\r\n            \"invited-by-admin\": [],\r\n            invited: [],\r\n        },\r\n        members: {},\r\n        posts: {},\r\n        postIds: [],\r\n        postsPagination: initialPaginatedState(),\r\n        uploadingCover: false,\r\n        myRole: dto.isMember ? dto.role : null,\r\n        myStatus: dto.status || null,\r\n        numApprovedMembers: null,\r\n        availableMatches: {\r\n            fetching: false,\r\n            profiles: null,\r\n        },\r\n    };\r\n}\r\n\r\nexport function convertDtoToGroupMember(dto: ResponseGroupMemberDto): GroupMember {\r\n    return {...dto, profile: convertDtoToProfile(dto.profile)};\r\n}\r\n\r\nexport function convertDtoToGroupPost(dto: ResponseGroupPostDto, creator?: UserProfile): GroupPost {\r\n    return {\r\n        ...dto,\r\n        comments: {},\r\n        commentIds: [],\r\n        commentsPagination: initialPaginatedState(),\r\n        createdAt: new Date(dto.createdAt),\r\n        updatedAt: new Date(dto.updatedAt),\r\n        creator: creator && !dto.creator ? creator : convertDtoToProfile(dto.creator),\r\n        score: dto.upVotesCount - dto.downVotesCount,\r\n        voteStatus: dto.isVoted\r\n            ? dto.voteType === \"up\"\r\n                ? GroupVoteStatus.Upvote\r\n                : dto.voteType === \"down\"\r\n                ? GroupVoteStatus.Downvote\r\n                : GroupVoteStatus.Neutral\r\n            : GroupVoteStatus.Neutral,\r\n    };\r\n}\r\n\r\nexport function convertDtoToPostComments(\r\n    dto: ResponsePostCommentDto,\r\n    parentId: string | null = null,\r\n    depth = 0,\r\n    creator?: UserProfile,\r\n): PostComment[] {\r\n    const comment: PostComment = {\r\n        id: dto.id,\r\n        text: dto.text,\r\n        createdAt: new Date(dto.createdAt),\r\n        updatedAt: new Date(dto.updatedAt),\r\n        creator: creator && !dto.creator ? creator : convertDtoToProfile(dto.creator),\r\n        score: dto.upVotesCount - dto.downVotesCount,\r\n        voteStatus: dto.isVoted\r\n            ? dto.voteType === \"up\"\r\n                ? GroupVoteStatus.Upvote\r\n                : dto.voteType === \"down\"\r\n                ? GroupVoteStatus.Downvote\r\n                : GroupVoteStatus.Neutral\r\n            : GroupVoteStatus.Neutral,\r\n        childrenIds: dto.children?.map((c) => c.id) || [],\r\n        parentId,\r\n        depth,\r\n    };\r\n\r\n    if (dto.children && dto.children.length > 0) {\r\n        // Get all children, including nested\r\n        const allChildren = dto.children.flatMap((childDto) =>\r\n            convertDtoToPostComments(childDto, comment.id, depth + 1, creator),\r\n        );\r\n        return [comment].concat(allChildren);\r\n    } else return [comment];\r\n}\r\n","import {AppThunk} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    RequestResponse,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n    SuccessfulRequestResponse,\r\n    ResponseProfileWithMatchInfoDto,\r\n} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    convertDtoToProfile,\r\n    convertDtoToProfileWithMatchInfo,\r\n    convertDtoToUser,\r\n    convertPartialProfileToCreateDto,\r\n} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {readCachedStaticData} from \"../persistent-storage/static\";\r\nimport {uploadImage} from \"../../api/media-upload\";\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_FAILURE = \"PROFILE/SET_FIELDS_FAILURE\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    FETCH_PROFILE_SUCCESS = \"PROFILE/FETCH_PROFILE_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_BEGIN = \"PROFILE/SET_AVATAR_BEGIN\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\nexport type SetProfileFieldsFailureAction = {\r\n    type: string;\r\n};\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {type: string};\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {type: string};\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type FetchProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfileWithMatchInfo;\r\n};\r\n\r\nexport type SetAvatarBeginAction = {type: string};\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\nexport type SetAvatarFailureAction = {type: string};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | SetProfileFieldsFailureAction\r\n    | SetProfileFieldsSuccessAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | FetchProfileSuccessAction\r\n    | SetAvatarBeginAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\nconst setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nconst setProfileFieldsFailure = (): SetProfileFieldsFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_FAILURE,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const type = getState().profile.user?.profile?.type;\r\n\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields, type);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(setProfileFieldsSuccess(fields));\r\n    else dispatch(setProfileFieldsFailure());\r\n};\r\n\r\nconst createProfileSuccess = (profile: UserProfile): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profile = convertDtoToProfile(payload as ResponseProfileDto);\r\n        dispatch(createProfileSuccess(profile));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    let fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n    if (!Array.isArray(fromCache)) fromCache = false; // fix corrupt cache\r\n\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"offers\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const offers = payload as OfferDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = offers.length == 0;\r\n                dispatch(loadProfileOffersSuccess(cacheIsGood ? fromCache.data : offers, cacheIsGood));\r\n            } else dispatch(loadProfileOffersSuccess(offers));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    let fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n    if (!Array.isArray(fromCache)) fromCache = false; // fix corrupt cache\r\n\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"interests\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const interests = payload as InterestDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = interests.length == 0;\r\n                dispatch(loadProfileInterestsSuccess(cacheIsGood ? fromCache.data : interests, cacheIsGood));\r\n            } else dispatch(loadProfileInterestsSuccess(interests));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const user = convertDtoToUser(payload as ResponseUserDto);\r\n        dispatch(fetchUserSuccess(user));\r\n    }\r\n};\r\n\r\nconst fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const fetchProfile = (id: string): AppThunk<Promise<UserProfileWithMatchInfo | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(`profiles/${id}`, \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseProfileWithMatchInfoDto;\r\n        const profileWithMatchInfo = convertDtoToProfileWithMatchInfo(payload);\r\n        dispatch(fetchProfileSuccess(profileWithMatchInfo));\r\n        return profileWithMatchInfo;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst fetchProfileSuccess = (profile: UserProfileWithMatchInfo): FetchProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nconst setAvatarBegin = (): SetAvatarBeginAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_BEGIN,\r\n});\r\n\r\nconst setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nconst setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {uploadingAvatar},\r\n    } = getState();\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (!token || uploadingAvatar) {\r\n        fail();\r\n        return;\r\n    }\r\n\r\n    dispatch(setAvatarBegin());\r\n\r\n    const fileName = await uploadImage(token, image, fail);\r\n\r\n    if (fileName) {\r\n        // Submit the filename to the server\r\n        const response = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, token);\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const {avatar} = (response as SuccessfulRequestResponse).data as AvatarSuccessfulUpdatedDto;\r\n            dispatch(setAvatarSuccess(avatar));\r\n        } else fail();\r\n    }\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {DEBUG_MODE} from \"../../constants/config\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n * @param cookieConsent - Whether or not the user has agreed to storing this type of data. This is here so we don't forget.\r\n */\r\nexport function storeStaticData<T>(key: string, data: T, cookieConsent: boolean): void {\r\n    if (cookieConsent) {\r\n        if (DEBUG_MODE) console.log(`Updating static storage '${key}'.`);\r\n\r\n        // Store the data along with the date\r\n        const storageObject = {\r\n            updatedAt: new Date().toJSON(),\r\n            data,\r\n        };\r\n\r\n        AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n    }\r\n}\r\n\r\n/**\r\n * Clear the data at the given keys from persistent storage.\r\n * @param keys - The keys to clear.\r\n */\r\nexport function clearStaticData<T>(...keys: string[]): void {\r\n    if (DEBUG_MODE) console.log(`Clearing static storage: ${keys.map((s) => `'${s}'`).join(\", \")}.`);\r\n    AsyncStorage.multiRemove(keys);\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {SignedUrlResponseDto, SuccessfulRequestResponse, TokenDto} from \"./dto\";\r\nimport {requestBackend} from \"./utils\";\r\n\r\nexport async function uploadImage(token: TokenDto, image: ImageInfo, onFailure: () => void): Promise<string | null> {\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {fileName, s3Url} = payload as SignedUrlResponseDto;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(s3Url, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/octet-stream\",\r\n                },\r\n                body: imageBlob,\r\n            });\r\n\r\n            return fileName;\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            onFailure();\r\n            return null;\r\n        }\r\n    } else {\r\n        onFailure();\r\n        return null;\r\n    }\r\n}\r\n","import {AppThunk, OnboardingState, ValidatedThunkAction} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, SuccessfulRequestResponse, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {readCachedCredentials} from \"../persistent-storage/auth\";\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_IN_RECOVER_CANCEL = \"AUTH/LOG_IN_RECOVER_CANCEL\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SEND_VERIFICATION_EMAIL_SUCCESS = \"AUTH/SEND_VERIFICATION_EMAIL_SUCCESS\",\r\n    BEGIN_ONBOARDING = \"AUTH/BEGIN_ONBOARDING\",\r\n    NEXT_ONBOARDING_SLIDE = \"AUTH/NEXT_ONBOARDING_SLIDE\",\r\n    PREVIOUS_ONBOARDING_SLIDE = \"AUTH/PREVIOUS_ONBOARDING_SLIDE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n    DELETE_ACCOUNT_SUCCESS = \"AUTH/DELETE_ACCOUNT_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\nexport type RegisterSuccessAction = {type: string; user: User};\r\nexport type RegisterFailureAction = {type: string};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\nexport type LogInFailureAction = {type: string; email?: string; needsRecovery: boolean; needsVerify: boolean};\r\nexport type LogInRecoverCancelAction = {type: string};\r\n\r\nexport type LogOutAction = {type: string; redirect: boolean};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\nexport type ValidateAccountFailureAction = {type: string};\r\n\r\nexport type SendVerificationEmailSuccess = {type: string};\r\n\r\nexport type BeginOnboardingAction = {type: string};\r\nexport type NextOnboardingSlideAction = {type: string};\r\nexport type PreviousOnboardingSlideAction = {type: string};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {type: string};\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {type: string};\r\n\r\nexport type DeleteAccountSuccessAction = {type: string};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogInRecoverCancelAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SendVerificationEmailSuccess\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction\r\n    | DeleteAccountSuccessAction;\r\n\r\n// Register actions\r\n\r\nconst registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = getState().settings.userSettings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const successResp = response as SuccessfulRequestResponse;\r\n        dispatch(registerSuccess(successResp.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nconst registerFailure = (): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n});\r\n\r\n// Log in actions\r\n\r\nconst loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nconst loginFailure = (email?: string, needsRecovery = false, needsVerify = false): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n    email,\r\n    needsRecovery,\r\n    needsVerify,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<User | undefined>> => async (\r\n    dispatch,\r\n): Promise<User | undefined> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n\r\n        if (response.status == HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data as ResponseUserDto;\r\n            const user = convertDtoToUser(payload);\r\n            dispatch(loginSuccess(token, user, true));\r\n            return user;\r\n        } else dispatch(loginFailure()); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return undefined;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string, recover = false): ValidatedThunkAction => async (\r\n    dispatch,\r\n) => {\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password, recover});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, convertDtoToUser(payload.user), false));\r\n        return {success: true};\r\n    } else {\r\n        let needsRecovery = false;\r\n        let needsVerify = false;\r\n        if (response.status === HttpStatusCode.FORBIDDEN) {\r\n            needsRecovery = response.errorType === \"error.user_being_deleted\";\r\n            needsVerify = response.errorType === \"error.user_not_verified\";\r\n        }\r\n        dispatch(loginFailure(email, needsRecovery, needsVerify));\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const cancelLoginRecovery = (): LogInRecoverCancelAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_RECOVER_CANCEL,\r\n});\r\n\r\nexport const logout = (redirect = true): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n    redirect,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {email} = payload as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure());\r\n    }\r\n};\r\n\r\nconst validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst validateAccountFailure = (): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n});\r\n\r\nexport const requestSendVerificationEmail = (email: string): AppThunk<Promise<boolean>> => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify/resend\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(sendVerificationEmailSuccess());\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst sendVerificationEmailSuccess = (): SendVerificationEmailSuccess => ({\r\n    type: AUTH_ACTION_TYPES.SEND_VERIFICATION_EMAIL_SUCCESS,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(forgotPasswordFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst forgotPasswordFailure = (): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const deleteAccount = (password: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"users\", \"DELETE\", {}, {password}, token);\r\n\r\n    if (response.status == HttpStatusCode.NO_CONTENT) {\r\n        dispatch(logout(false));\r\n        dispatch(deleteAccountSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deleteAccountSuccess = (): DeleteAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const beginOnboarding = (): BeginOnboardingAction => ({\r\n    type: AUTH_ACTION_TYPES.BEGIN_ONBOARDING,\r\n});\r\n\r\nexport const nextOnboardingSlide = (): NextOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const previousOnboardingSlide = (): PreviousOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch, getState) => {\r\n    const n = Math.round(1e3 * Math.random());\r\n    const email = `test${n}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"staff\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + n,\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [{id: \"baking\"}, {id: \"art\"}, {id: \"brunch\"}],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"answer-academic-questions\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [{id: \"education-science\"}, {id: \"music-performing-arts\"}],\r\n                //degree: \"m2\",\r\n                staffRoles: [{id: \"research\"}, {id: \"teaching\"}],\r\n            }),\r\n        );\r\n    }\r\n};\r\n\r\n/**\r\n * Verifies that the server is alive and reachable by the client.\r\n */\r\nexport const verifyBackendConnection = (): AppThunk<Promise<boolean>> => async () => {\r\n    const response = await requestBackend(\"ping\", \"GET\", {}, {}, undefined, false, true);\r\n\r\n    if (response.status == HttpStatusCode.OK) return true;\r\n    else return false;\r\n};\r\n","import i18n from \"i18n-js\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {ErrorRequestResponse, RemoteValidationErrors, RequestResponse, UnprocessableEntityRequestResponse} from \"./dto\";\r\n\r\nexport const localizeError = (err: string): string => i18n.t(err, {defaultValue: err});\r\n\r\nconst extractError = ({code, description}: {code: string; description: string}): string => {\r\n    const isMissingLocalization = i18n.t(code, {defaultValue: \"missing\"}) == \"missing\";\r\n    return isMissingLocalization ? description : code;\r\n};\r\n\r\nexport function gatherValidationErrors(resp: RequestResponse): RemoteValidationErrors | undefined {\r\n    if (resp.status == HttpStatusCode.OK) return undefined;\r\n    else {\r\n        const {errorType, description} = resp as ErrorRequestResponse;\r\n        const output: RemoteValidationErrors = {general: extractError({code: errorType, description}), fields: {}};\r\n        if (resp.status == HttpStatusCode.UNPROCESSABLE_ENTITY) {\r\n            const {errors} = resp as UnprocessableEntityRequestResponse;\r\n            //errors.forEach((e) => (output.fields[e.property] = e.codes.map(extractError)));\r\n            // Only keep the first error (makes displaying errors a lot easier)\r\n            errors.forEach((e) => (output.fields[e.property] = extractError(e.codes[0])));\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the non-specific error field from remote errors. If field-specific errors are available, yields undefined instead.\r\n * @param errors - Remote validation errors.\r\n */\r\nexport function generalError(errors?: RemoteValidationErrors): string | undefined {\r\n    if (!errors) return undefined;\r\n    else if (Object.keys(errors.fields).length > 0) return undefined;\r\n    else return errors.general;\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {TokenDto} from \"../../api/dto\";\r\nimport {CredentialsStorageObject} from \"../../types\";\r\n\r\n/**\r\n * Override auth information in secure.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nexport function storeAuthInformation(email: string, token: TokenDto): void {\r\n    const toStore: CredentialsStorageObject = {email, token};\r\n    AsyncStorage.setItem(\"auth\", JSON.stringify(toStore));\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from storage.\r\n */\r\nexport function discardAuthInformation(): void {\r\n    AsyncStorage.removeItem(\"auth\");\r\n}\r\n\r\n/**\r\n * Read auth information from storage.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const raw = await AsyncStorage.getItem(\"auth\");\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\nimport {CookiesPreferences} from \"../../model/user-settings\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n    LOAD_COOKIES_PREFERENCES = \"SETTINGS/LOAD_COOKIES_PREFERENCES\",\r\n    SAVE_COOKIES_PREFERENCES = \"SETTINGS/SAVE_COOKIES_PREFERENCES\",\r\n    LOAD_VERSION_INFO = \"SETTINGS/LOAD_VERSION_INFO\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type LoadCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n    consentDate: Date;\r\n};\r\n\r\nexport type SaveCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n};\r\n\r\nexport type LoadVersionInfoAction = {\r\n    type: string;\r\n    version: string | null;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction | LoadCookiesPreferencesAction | LoadVersionInfoAction;\r\n\r\nexport const setTheme = (theme: ThemeKey, fromCache?: boolean): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme, fromCache} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale, fromCache?: boolean): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_LOCALE, locale, fromCache} as SetLocaleAction;\r\n};\r\n\r\nexport const loadCookiesPreferences = (\r\n    preferences: CookiesPreferences,\r\n    consentDate: Date,\r\n): LoadCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES,\r\n    preferences,\r\n    consentDate,\r\n});\r\n\r\nexport const saveCookiesPreferences = (preferences: CookiesPreferences): SaveCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES,\r\n    preferences,\r\n});\r\n\r\nexport const loadVersionInfo = (version: string | null): LoadVersionInfoAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO,\r\n    version,\r\n});\r\n\r\nexport const acceptAllCookies = (): AppThunk => async (dispatch) => {\r\n    dispatch(saveCookiesPreferences({auth: true, cache: true, settings: true}));\r\n};\r\n","import {OfferValueDto} from \"../api/dto\";\r\nimport {GroupPost, PostComment} from \"./groups\";\r\nimport {UserProfile} from \"./user-profile\";\r\nimport i18n from \"i18n-js\";\r\nimport {capitalize} from \"lodash\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Filter only the offers that match a given profile.\r\n * @param offers A list of offer values.\r\n * @param profile A profile\r\n * @returns the offers that target the given profile.\r\n */\r\nexport function getMatchingOffers(offers: OfferValueDto[], profile: UserProfile): OfferValueDto[] {\r\n    return offers.filter((o: OfferValueDto) => {\r\n        if (\r\n            (!o.allowFemale && profile.gender === \"female\") ||\r\n            (!o.allowMale && profile.gender === \"male\") ||\r\n            (!o.allowOther && profile.gender === \"other\") ||\r\n            (!o.allowStaff && profile.type === \"staff\") ||\r\n            (!o.allowStudent && profile.type === \"student\")\r\n        )\r\n            return false;\r\n        return true;\r\n    });\r\n}\r\n\r\nexport function formatDateAgo(date: Date): string | 0 {\r\n    const time = new Date().getTime() - date.getTime();\r\n\r\n    const SECOND = 1000;\r\n    const MINUTE = 60 * SECOND;\r\n    const HOUR = 60 * MINUTE;\r\n    const DAY = 24 * HOUR;\r\n\r\n    const timespans = [\r\n        {unit: \"minute\", duration: MINUTE},\r\n        {unit: \"hour\", duration: HOUR},\r\n        {unit: \"day\", duration: DAY},\r\n        {unit: \"week\", duration: DAY * 7},\r\n        {unit: \"month\", duration: DAY * 30},\r\n    ];\r\n\r\n    let i = 0;\r\n    while (i < timespans.length && time >= timespans[i].duration) i++;\r\n    i--;\r\n\r\n    if (i === -1) return 0;\r\n    if (i === timespans.length - 1) {\r\n        return i18n.t(\"dateRelative.precise\", {\r\n            day: date.getDate(),\r\n            month: i18n.t(`months.${date.getMonth()}`),\r\n            year: date.getFullYear(),\r\n        });\r\n    } else {\r\n        const t = timespans[i];\r\n        const amount = Math.round(time / t.duration);\r\n        return i18n.t(\"dateRelative.ago\", {\r\n            amount,\r\n            unit: i18n.t(`dateUnits.${amount === 1 ? \"singular\" : \"plural\"}.${t.unit}`),\r\n        });\r\n    }\r\n}\r\n\r\nexport function formatPostDate({createdAt, updatedAt}: GroupPost): string {\r\n    /*const tests: Partial<GroupPost>[] = [\r\n        {\r\n            createdAt: new Date(\"1998-11-01T17:33:55.978Z\"),\r\n            updatedAt: new Date(\"1998-12-01T17:33:55.978Z\"),\r\n        },\r\n        {createdAt: new Date(\"2020-11-08T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-01-01T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-03T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-08T17:33:55.978Z\")},\r\n        {createdAt: new Date(\"2021-02-10T23:33:55.978Z\")},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 61)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 60)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 60 * 59)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 61)},\r\n        {createdAt: new Date(new Date().getTime() - 1000 * 40)},\r\n    ];\r\n    post = {...post, ...tests[10]};*/\r\n\r\n    const isEdit = updatedAt.getTime() != createdAt.getTime();\r\n\r\n    const createdAgo = formatDateAgo(createdAt);\r\n    let text = createdAgo === 0 ? i18n.t(\"groups.justPosted\") : `${capitalize(createdAgo)}`;\r\n\r\n    if (isEdit) {\r\n        const updatedAgo = formatDateAgo(updatedAt);\r\n        text += ` (${updatedAgo === 0 ? i18n.t(\"groups.justEdited\") : i18n.t(\"groups.editedAgo\", {ago: updatedAgo})})`;\r\n    }\r\n    return text;\r\n}\r\n\r\nexport function formatCommentDate({createdAt, updatedAt}: PostComment): string {\r\n    const isEdit = updatedAt.getTime() != createdAt.getTime();\r\n\r\n    const createdAgo = formatDateAgo(createdAt);\r\n    let text = createdAgo === 0 ? i18n.t(\"groups.justCommented\") : `${createdAgo}`;\r\n\r\n    if (isEdit) {\r\n        /*const updatedAgo = formatDateAgo(updatedAt);\r\n        text += ` (${updatedAgo === 0 ? i18n.t(\"groups.justEdited\") : i18n.t(\"groups.editedAgo\", {ago: updatedAgo})})`;*/\r\n        text += ` (${i18n.t(\"groups.edited\")})`;\r\n    }\r\n    return text;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {AuthState, OnboardingState} from \"../types\";\r\nimport {\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n    LogInFailureAction,\r\n} from \"./actions\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    type: null,\r\n    degree: null,\r\n    staffRoles: {},\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    accountNeedsRecovery: false,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n    onboardingIndex: 0,\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = action as RegisterBeginAction;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = action as RegisterSuccessAction;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = action as ValidateAccountSuccessAction;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = action as LogInSuccessAction;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                accountNeedsRecovery: false,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            const {needsRecovery, email} = action as LogInFailureAction;\r\n            return {\r\n                ...state,\r\n                registerEmail: email || state.registerEmail, // change the registerEmail if one is provided\r\n                accountNeedsRecovery: needsRecovery,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_RECOVER_CANCEL: {\r\n            return {...state, accountNeedsRecovery: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                accountNeedsRecovery: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            return {...state, onboardingIndex: 0};\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex - 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex + 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = action as SetOnboardingValuesAction;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = action as SetOnboardingOfferValueAction;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole = \"teaching\" | \"research\" | \"administration\" | \"technical\" | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\"teaching\", \"research\", \"administration\", \"technical\", \"other\"];\r\n\r\n// MaterialIcons\r\nexport const STAFF_ROLE_ICONS = [\"school\", \"library-books\", \"account-balance\", \"build\", \"help\"];\r\n// \"verified-user\" icon for ambassadors?\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 16;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\nexport const MIN_POST_LENGTH = 5;\r\nexport const MAX_POST_LENGTH = 3000;\r\nexport const MIN_COMMENT_LENGTH = 2;\r\nexport const MAX_COMMENT_LENGTH = 1200;\r\nexport const MIN_GROUP_NAME_LENGTH = 4;\r\nexport const MAX_GROUP_NAME_LENGTH = 60;\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&^\\\\/\\-_+=()[\\]|\"'~<>:;§.])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().nullable().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n\r\nexport const VALIDATOR_GROUP_NAME = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_GROUP_NAME_LENGTH, \"validation.group.name.tooShort\")\r\n    .max(MAX_GROUP_NAME_LENGTH, \"validation.group.name.tooLong\");\r\n\r\nexport const VALIDATOR_POST_TEXT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_POST_LENGTH, \"validation.post.tooShort\")\r\n    .max(MAX_POST_LENGTH, \"validation.post.tooLong\");\r\n\r\nexport const VALIDATOR_COMMENT_TEXT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_COMMENT_LENGTH, \"validation.comment.tooShort\")\r\n    .max(MAX_COMMENT_LENGTH, \"validation.comment.tooLong\");\r\n","import {\r\n    MAX_COMMENT_LENGTH,\r\n    MAX_GROUP_NAME_LENGTH,\r\n    MAX_POST_LENGTH,\r\n    MIN_COMMENT_LENGTH,\r\n    MIN_GROUP_NAME_LENGTH,\r\n    MIN_PASSWORD_LENGTH,\r\n    MIN_POST_LENGTH,\r\n} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        locales: {\r\n            en: \"English\",\r\n            fr: \"French\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Search\",\r\n        send: \"Send\",\r\n        cancel: \"Cancel\",\r\n        close: \"Close\",\r\n        delete: \"Delete\",\r\n        ok: \"OK\",\r\n        save: \"Save\",\r\n        noResultsFound: \"No results found\",\r\n        apply: \"Apply\",\r\n        logOut: \"Log out\",\r\n        showMore: \"Show more\",\r\n        showLess: \"Show less\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n        dateInput: {\r\n            dayPlaceholder: \"DD\",\r\n            monthPlaceholder: \"MM\",\r\n            yearPlaceholder: \"YYYY\",\r\n        },\r\n        nationalityPicker: {\r\n            placeholder: \"Select a nationality\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Log in\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        forgotPassword: \"Forgot Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        newPassword: \"New Password\",\r\n        signupWelcome: \"We can't wait for you to join our community!\",\r\n        createAccount: \"Create account\",\r\n        // Email validation screens\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            sent: \"To validate your account, click the link in the email we just sent to\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                title: \"Terms of service\",\r\n                disclaimer:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\\n\\nDeclining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms & conditions \", \"here\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Please select at least one language.\",\r\n                specifyLevel: \"Please specify a level for your languages.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"You must be 16 or older to join this platform.\",\r\n                invalid: \"Please enter a valid date.\",\r\n            },\r\n            group: {\r\n                name: {\r\n                    tooShort: `The name should have at least ${MIN_GROUP_NAME_LENGTH} characters.`,\r\n                    tooLong: `The length of the name cannot exceed ${MAX_GROUP_NAME_LENGTH} characters.`,\r\n                },\r\n            },\r\n            post: {\r\n                tooShort: `A post should contain at least ${MIN_POST_LENGTH} characters.`,\r\n                tooLong: `The length of a post cannot exceed ${MAX_POST_LENGTH} characters.`,\r\n            },\r\n            comment: {\r\n                tooShort: `A comment should contain at least ${MIN_COMMENT_LENGTH} characters.`,\r\n                tooLong: `The length of a comment cannot exceed ${MAX_COMMENT_LENGTH} characters.`,\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"This account's email address has not been verified yet.\",\r\n            user_not_found: \"User not found.\",\r\n            email_or_password_incorrect: \"Incorrect email or password.\",\r\n            reset_password_no_token: \"Could not fulfill this request.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"This email address is already in use.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Please provide a valid email address.\",\r\n                    is_sea_email_constraint: \"Your email address must match one of our partner universities.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"My Profile\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offers\",\r\n        positions: \"Positions\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            research: \"Research\",\r\n            administration: \"Administration\",\r\n            technical: \"Technical\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        dateUnits: {\r\n            singular: {\r\n                second: \"second\",\r\n                minute: \"minute\",\r\n                hour: \"hour\",\r\n                day: \"day\",\r\n                week: \"week\",\r\n                month: \"month\",\r\n                year: \"year\",\r\n            },\r\n            plural: {\r\n                second: \"seconds\",\r\n                minute: \"minutes\",\r\n                hour: \"hours\",\r\n                day: \"days\",\r\n                week: \"weeks\",\r\n                month: \"months\",\r\n                year: \"years\",\r\n            },\r\n        },\r\n        dateRelative: {\r\n            precise: \"{{month}} {{day}}, {{year}}\",\r\n            ago: \"{{amount}} {{unit}} ago\",\r\n        },\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Native\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Fields of education\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"care-elderly-disabled-adults\": \"Care of the elderly and of disabled adults\",\r\n            \"child-care-youth-services\": \"Child care and youth services\",\r\n            \"social-work-counselling\": \"Social work and counselling\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page not found.\",\r\n            subtitle: \"This page doesn't exist.\",\r\n            redirect: \"Go to home screen\",\r\n        },\r\n        // Backend unreachable\r\n        backendUnreachable: {\r\n            title: \"Unable to reach the server\",\r\n            subtitle: \"This can be caused by your network or by the application server itself.\",\r\n        },\r\n        // Resend verify email screen\r\n        resendVerifyScreen: {\r\n            title: \"Account Verification\",\r\n            text:\r\n                \"This account is not verified yet. You should have received an email from us with a validation link. If not, click the button below to send it again.\",\r\n            send: \"Send Again\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profile\",\r\n            },\r\n            profile2: {\r\n                title: \"Languages & Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff roles\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            legal1: {\r\n                title: \"Terms & Conditions\",\r\n                text:\r\n                    \"As explained in details in our Terms & Conditions, you agree to use «SEA-EU Around» and its services only to be put into contact, on a non-business and non-profit basis, with people wishing to meet, collaborate and interact online or in the frame of a mobility. You commit to carry out respectful exchanges with other members. Your name and surname will be visible by other members.\",\r\n            },\r\n            legal2: {\r\n                title: \"Data Policy\",\r\n                text:\r\n                    \"In the context of your use of SEA-EU Around, you will provide some personal data to create your profile as further explained in our Terms & Conditions. This data is collected and processed by UBO through SEA-EU Around in order to enable matching among Members, according to needs/offers and interests defined by Members of SEA-EU Around. Your data will be visible only by  other Members.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"I acknowledge that cookies might be used. The information is kept only for application purposes and does not permit to identify the Member except for the cookie enabling UBO to re-authenticate the Member on its arrival on SEA-EU Around, saving the Member from having to re-enter their password at each connection.\",\r\n            },\r\n            back: \"Back\",\r\n            next: \"Next\",\r\n            leave: \"Leave\",\r\n            submit: \"Submit\",\r\n            success: {\r\n                title: \"Nice to meet you!\",\r\n                subtitle: \"Your profile is now created.\",\r\n                button: \"Get Started\",\r\n            },\r\n            quit: {\r\n                title: \"Quit on-boarding\",\r\n                text: \"Do you really wish to leave? You can resume later.\",\r\n                cancel: \"Cancel\",\r\n                yes: \"Yes\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activism\",\r\n            art: \"Art\",\r\n            astrology: \"Astrology\",\r\n            baking: \"Baking\",\r\n            bbq: \"BBQ\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Board games\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n            climbing: \"Climbing\",\r\n            coffee: \"Coffee\",\r\n            comedy: \"Comedy\",\r\n            cooking: \"Cooking\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Cycling\",\r\n            dancing: \"Dancing\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            environmentalism: \"Environmentalism\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            foodie: \"Foodie\",\r\n            football: \"Football\",\r\n            gamer: \"Gamer\",\r\n            gardening: \"Gardening\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            guitar: \"Guitar\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Hiking\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investing\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Language exchange\",\r\n            movies: \"Movies\",\r\n            museum: \"Museum\",\r\n            music: \"Music\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Outdoors\",\r\n            parties: \"Parties\",\r\n            photography: \"Photography\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Picnicking\",\r\n            \"playing-music\": \"Playing music\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politics\",\r\n            reading: \"Reading\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Running\",\r\n            sailing: \"Sailing\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboarding\",\r\n            skiing: \"Skiing\",\r\n            sneakers: \"Sneakers\",\r\n            snowboarding: \"Snowboarding\",\r\n            spirituality: \"Spirituality\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surfing\",\r\n            swimming: \"Swimming\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tattoos\",\r\n            tea: \"Tea\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Theater\",\r\n            travel: \"Travel\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Vegetarian\",\r\n            volunteering: \"Volunteering\",\r\n            walking: \"Walking\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            wine: \"Wine\",\r\n            \"working-out\": \"Working out\",\r\n            writer: \"Writing\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"I am open to...\",\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Target genders\",\r\n            roles: \"Target positions\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Host you for some time\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Get into campus life\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Co-work on a project\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Answer academic questions\",\r\n                help: \"I can give information about my university or answer to general academic questions.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Share interests\",\r\n                help: \"I would like to chat with other users about common interests.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Join a language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            title: \"Unmatch user?\",\r\n            text: \"Are you sure you want to unmatch {{firstname}}? You will not be able to communicate anymore.\",\r\n            blockQuestion: \"If you don't want {{firstname}} to be able to find you anymore, you can also block them:\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            title: \"Block user?\",\r\n            warning: \"You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            subtitle: \"Join an alliance united around the values of European identity.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Welcome Back!\",\r\n            titleFirstLaunch: \"Welcome!\",\r\n            logIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            or: \"or\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"We use cookies to provide you with the best possible user experience.\\nOur usage of cookies includes caching data for faster loading, storing your preferences and authentication. We do not collect any information that could be used for tracking or advertising.\",\r\n            acceptAll: \"Accept cookies\",\r\n            customize: \"Customize\",\r\n            preferences: {\r\n                text:\r\n                    \"We offer you the ability to choose what information will be stored on your device when using SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentication\",\r\n                    description: \"Store information used to sign-in automatically when starting the app.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Store some data on your device (less than 1MB) for faster loading.\",\r\n                },\r\n                settings: {name: \"Settings\", description: \"Store your settings (e.g. theme and locale).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Bug report from the app\",\r\n            mailTitle: \"Description of the bug (with steps to reproduce it if possible):\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Report\",\r\n            send: \"Send\",\r\n            cancel: \"Cancel\",\r\n            what: \"What / who?\",\r\n            commentFrom: \"Comment from {{name}}\",\r\n            postFrom: \"Post from {{name}}\",\r\n            group: \"Group “{{name}}”\",\r\n            why: \"Why?\",\r\n            typePlaceholder: \"Select a reason\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudity\",\r\n                harassment: \"Harassment\",\r\n                \"undesirable-content\": \"Undesirable content\",\r\n                \"hate-speech\": \"Hate speech\",\r\n                \"vulgar-content\": \"Vulgar content\",\r\n                other: \"Other\",\r\n            },\r\n            confirmationTitle: \"Thank you\",\r\n            confirmation: \"An administrator will investigate your report shortly.\",\r\n            failureTitle: \"Sorry\",\r\n            failure: \"We are unable to fulfill your request.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions: \"To choose a new password, click the link in the email we just sent you.\",\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: \"Your password has been updated.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Delete your account\",\r\n            warning:\r\n                \"Your account and all associated data will be deleted within six months. Please be aware that after this time, your account will be irreversibly deleted. If you sign in before the end however, the deletion will be cancelled.\",\r\n            button: \"Delete\",\r\n            success1: \"Your request has been received and will be processed shortly.\",\r\n            success2: \"We are sorry to see you go.\",\r\n            leave: \"Leave\",\r\n            inputLabel: \"Enter password to confirm\",\r\n        },\r\n        // Recover account\r\n        recoverAccount: {\r\n            title: \"Recover Account\",\r\n            text:\r\n                \"You account is currently inactive and set for deletion. If you continue, the deletion process will be cancelled.\",\r\n            yes: \"Recover\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n            sayHi: \"Say hi\",\r\n            sayHiTo: \"Say hi to {{name}}!\",\r\n        },\r\n        // Groups tab\r\n        groups: {\r\n            group: \"Group\",\r\n            create: {\r\n                title: \"Create Group\",\r\n                name: \"Name\",\r\n                visible: \"Visible\",\r\n                requireApproval: \"Requires approval\",\r\n                visibleDescription: {\r\n                    true: \"Anyone can find this group.\",\r\n                    false: \"This group is not visible: in order to join, users have to be invited.\",\r\n                },\r\n                requireApprovalDescription: {\r\n                    true: \"Requests to join this group have to be manually approved by a group moderator.\",\r\n                    false: \"Anyone can join this group without approval.\",\r\n                },\r\n                submit: \"Create\",\r\n            },\r\n            newPost: {\r\n                title: \"New Post\",\r\n                submit: \"Create\",\r\n            },\r\n            editPost: {\r\n                title: \"Edit Post\",\r\n                contentPlaceholder: \"Content\",\r\n                submit: \"Send\",\r\n            },\r\n            deletePost: {\r\n                title: \"Delete post\",\r\n                text: \"This action is irreversible.\",\r\n            },\r\n            editComment: {\r\n                title: \"Edit comment\",\r\n            },\r\n            deleteComment: {\r\n                title: \"Delete comment\",\r\n                text: \"This action is irreversible.\",\r\n            },\r\n            comments: {\r\n                zero: \"No comments\",\r\n                singular: \"1 comment\",\r\n                plural: \"{{num}} comments\",\r\n                replyTo: \"Reply to {{name}}\",\r\n                viewMore: \"View more ({{n}})\",\r\n                placeholder: \"Write a comment...\",\r\n                none: \"No comments here yet.\",\r\n            },\r\n            join: \"Join\",\r\n            joinRequestSent: {\r\n                title: \"Request Sent\",\r\n                text: \"You will be added to this group when one of its administrators has accepted your request.\",\r\n            },\r\n            groupJoined: {\r\n                title: \"Congratulations!\",\r\n                text: \"You have successfully joined the group “{{name}}”.\",\r\n                viewGroup: \"Show\",\r\n            },\r\n            myGroups: {\r\n                title: \"My groups\",\r\n                none: \"When you join a group, it will appear here.\",\r\n            },\r\n            explore: {\r\n                button: \"Explore\",\r\n                none: \"No groups found.\",\r\n                noMore: \"No other groups to show.\",\r\n                statusText: {\r\n                    pending: \"Demande envoyée\",\r\n                    banned: \"Banni\",\r\n                    invited: \"Invitation reçue\",\r\n                },\r\n            },\r\n            invites: \"Invites\",\r\n            inviteNew: \"Invite new members\",\r\n            invite: {\r\n                decline: \"Decline\",\r\n                accept: \"Accept\",\r\n                approvalDisclaimerInvitee:\r\n                    \"You have been invited by a member. If you accept this invitation, an administrator of this group will still need to approve you.\",\r\n                approvalDisclaimerInviter: \"{{name}} will still need to be approved by an administrator of this group.\",\r\n                nobodyToInvite:\r\n                    \"Your matches who are not part of this group and have not been invited yet will appear here.\",\r\n                invite: \"Invite\",\r\n                title: \"Invite User\",\r\n                text: \"Do you want to invite {{name}} to this group?\",\r\n            },\r\n            posts: \"Posts\",\r\n            postMenu: {\r\n                title: \"Post\",\r\n            },\r\n            members: {\r\n                zero: \"No members\",\r\n                singular: \"1 member\",\r\n                plural: \"{{num}} members\",\r\n                manage: \"Manage members\",\r\n                manageBanned: \"Banned users\",\r\n                approval: {\r\n                    noResults: \"No approval requests.\",\r\n                },\r\n                approved: {\r\n                    noResults: \"No members.\",\r\n                },\r\n                banned: {\r\n                    noResults: \"No banned users.\",\r\n                },\r\n            },\r\n            deleteMember: {\r\n                title: \"Remove User?\",\r\n                text:\r\n                    \"{{name}} will no longer be able to post in this group. Additionally, existing posts and comments from this member will be deleted.\",\r\n                action: \"Remove\",\r\n            },\r\n            deletePendingMember: {\r\n                title: \"Refuse User\",\r\n                text: \"Do you really want to refuse {{name}}'s request to join the group?\",\r\n                action: \"Yes\",\r\n            },\r\n            banMember: {\r\n                title: \"Ban User?\",\r\n                text:\r\n                    \"{{name}} will be removed and unable to join this group again. Additionally, existing posts and comments from this member will be deleted.\",\r\n                action: \"Ban\",\r\n            },\r\n            banPendingMember: {\r\n                title: \"Ban User?\",\r\n                text: \"{{name}} will no longer be able to send requests to join the group.\",\r\n                action: \"Ban\",\r\n            },\r\n            promoteToAdmin: {\r\n                title: \"Administrator\",\r\n                text: \"Do you want to promote {{name}} to admin?\",\r\n                action: \"Yes\",\r\n            },\r\n            description: {\r\n                placeholder: \"Enter a description here\",\r\n                none: \"No description\",\r\n            },\r\n            roles: {\r\n                admin: \"Administrator\",\r\n                basic: \"Member\",\r\n            },\r\n            reportPost: \"Report\",\r\n            noMorePosts: \"No more posts to show.\",\r\n            noPosts: \"No posts to show.\",\r\n            justPosted: \"Just posted\",\r\n            justCommented: \"just commented\",\r\n            justEdited: \"just edited\",\r\n            edited: \"edited\",\r\n            editedAgo: \"edited {{ago}}\",\r\n            postsSorting: {\r\n                newest: \"Newest\",\r\n                oldest: \"Oldest\",\r\n                popular: \"Most popular\",\r\n            },\r\n            points: {\r\n                zero: \"0 points\",\r\n                singular: \"1 point\",\r\n                plural: \"{{num}} points\",\r\n            },\r\n            feed: {\r\n                title: \"Trending\",\r\n                help:\r\n                    \"We are showing you posts from your groups, based on their popularity and how long ago they were posted.\",\r\n            },\r\n            leave: {\r\n                title: \"Leave Group\",\r\n                text: \"Are you sure you want to leave this group?\",\r\n                deleteData: \"Delete all of my posts and comments from this group.\",\r\n            },\r\n            delete: {\r\n                title: \"Delete Group\",\r\n                text: \"If you really want to delete this group, type its name below:\",\r\n            },\r\n            settings: {\r\n                title: \"Group settings\",\r\n            },\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noMoreItems: \"No more profiles to show\",\r\n            noItemsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match!\",\r\n                offersTitle: \"Open to:\",\r\n                offersMore: \"more\",\r\n                chat: \"Chat\",\r\n                continue: \"Continue\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liked\",\r\n                    declined: \"Hidden\",\r\n                    blocked: \"Blocked\",\r\n                },\r\n                actions: {\r\n                    report: \"Report\",\r\n                    cancel: {\r\n                        requested: \"Cancel like\",\r\n                        declined: \"Cancel hide\",\r\n                        blocked: \"Cancel block\",\r\n                    },\r\n                    block: \"Block\",\r\n                },\r\n                noResults: \"No results found\",\r\n                noResultsAdvice: \"Perhaps try removing some filters\",\r\n            },\r\n        },\r\n        // Profile screen\r\n        profile: {\r\n            action: {\r\n                chat: \"Chat\",\r\n                mute: \"Mute\",\r\n                block: \"Block\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Report\",\r\n            },\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Welcome\",\r\n            SigninScreen: \"Login\",\r\n            ForgotPasswordScreen: \"Forgot Password\",\r\n            SignupScreen: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingProfileScreen1: \"Profile\",\r\n            OnboardingProfileScreen2: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingLegalScreen1: \"Terms & Conditions\",\r\n            OnboardingLegalScreen2: \"Terms & Conditions\",\r\n            OnboardingLegalScreen3: \"Terms & Conditions\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Add Filters\",\r\n            MatchHistoryScreen: \"History\",\r\n            TabGroupsScreen: \"Groups\",\r\n            GroupsExploreScreen: \"Explore Groups\",\r\n            GroupScreen: \"Group\",\r\n            GroupMembersScreen: \"Group Members\",\r\n            GroupBannedMembersScreen: \"Banned Users\",\r\n            GroupMembersApprovalScreen: \"Members Approval\",\r\n            GroupInviteScreen: \"Invite\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profile\",\r\n            ProfileScreen: \"Profile\",\r\n            SettingsScreen: \"Settings\",\r\n            DeleteAccountScreen: \"Delete Account\",\r\n            DeleteAccountSuccessScreen: \"Account Deleted\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ResetPasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            BackendUnreachableScreen: \"Error\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n            ResendVerifyEmailScreen: \"Account verification\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"General\",\r\n                danger: \"Danger zone\",\r\n                about: \"About\",\r\n            },\r\n            language: \"Language\",\r\n            darkTheme: \"Dark theme\",\r\n            deleteAccount: \"Delete Account\",\r\n            deleteMyAccount: \"Delete my account\",\r\n            version: \"Version\",\r\n            termsOfService: \"Terms of Service\",\r\n            reportABug: \"Report a Bug\",\r\n            logOut: \"Log out\",\r\n            customizeCookies: \"Customize cookies\",\r\n        },\r\n    },\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    fr: {\r\n        locales: {\r\n            en: \"Anglais\",\r\n            fr: \"Français\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Rechercher\",\r\n        send: \"Envoyer\",\r\n        cancel: \"Annuler\",\r\n        close: \"Fermer\",\r\n        delete: \"Supprimer\",\r\n        ok: \"OK\",\r\n        save: \"Sauvegarder\",\r\n        noResultsFound: \"Aucun résultat\",\r\n        apply: \"Appliquer\",\r\n        logOut: \"Déconnexion\",\r\n        showMore: \"Afficher plus\",\r\n        showLess: \"Afficher moins\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"%d éléments\",\r\n        },\r\n        dateInput: {\r\n            dayPlaceholder: \"JJ\",\r\n            monthPlaceholder: \"MM\",\r\n            yearPlaceholder: \"AAAA\",\r\n        },\r\n        nationalityPicker: {\r\n            placeholder: \"Nationalité\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Connexion\",\r\n        emailAddress: \"Adresse mail\",\r\n        password: \"Mot de passe\",\r\n        passwordRepeat: \"Répéter le mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        forgotPasswordExplanation:\r\n            \"Entrez l'adresse mail associée à votre compte ci-dessous. Vous recevrez sous peu des instructions pour choisir un nouveau mot de passe.\",\r\n        newPassword: \"Nouveau mot de passe\",\r\n        signupWelcome: \"Nous vous attendons avec impatience!\",\r\n        createAccount: \"Créer le compte\",\r\n        // Email validation screens\r\n        emailValidation: {\r\n            validating: \"Validation\",\r\n            sent: \"Pour valider votre compte, cliquez sur le lien dans le mail que nous venons de vous envoyer\",\r\n            success: [\"Le compte est désormais validé. Vous pouvez maintenant vous \", \"connecter\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                title: \"Conditions d'utilisation\",\r\n                disclaimer:\r\n                    \"Vous ne pourrez pas utiliser nos services si vous choisissez de refuser les conditions d'utilisation.\\n\\nLa création du profil sera annulée.\",\r\n            },\r\n            decline: \"Refuser\",\r\n            accept: \"Accepter\",\r\n            readMore: [\"Une version complète des conditions d'utilisation est disponible \", \"ici\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Champ requis.\",\r\n            atLeastOne: \"Sélectionner au moins un élément.\",\r\n            addAtLeastOne: \"Ajouter au moins un élément.\",\r\n            email: {\r\n                invalid: \"Adresse mail invalide.\",\r\n            },\r\n            password: {\r\n                tooShort: `Le mot de passe doit contenir au moins ${MIN_PASSWORD_LENGTH} caractères.`,\r\n                noDigit: \"Le mot de passe doit contenir au moins un chiffre.\",\r\n                noUpperCase: \"Le mot de passe doit contenir au moins une lettre majuscule.\",\r\n                noLowerCase: \"Le mot de passe doit contenir au moins une lettre minuscule.\",\r\n                noSymbol: \"Le mot de passe doit contenir au moins un symbole (#@$!%*?&).\",\r\n                repeatWrong: \"Ces mots de passe ne sont pas identiques.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Sélectionnez au moins une langue.\",\r\n                specifyLevel: \"Spécifiez un niveau pour chaque langue.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"Vous devez avoir au moins 16 ans pour rejoindre cette plateforme.\",\r\n                invalid: \"Date invalide.\",\r\n            },\r\n            group: {\r\n                name: {\r\n                    tooShort: `Le nom du groupe doit contenir au moins ${MIN_GROUP_NAME_LENGTH} caractères.`,\r\n                    tooLong: `Le nom du groupe ne doit pas excéder ${MAX_GROUP_NAME_LENGTH} caractères.`,\r\n                },\r\n            },\r\n            post: {\r\n                tooShort: `Le post doit contenir au moins ${MIN_POST_LENGTH} caractères.`,\r\n                tooLong: `Le post ne doit pas excéder ${MAX_POST_LENGTH} caractères.`,\r\n            },\r\n            comment: {\r\n                tooShort: `Le commentaire doit contenir au moins ${MIN_COMMENT_LENGTH} caractères.`,\r\n                tooLong: `Le commentaire ne doit pas excéder ${MAX_COMMENT_LENGTH} caractères.`,\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"L'adresse mail de ce compte n'a pas encore été vérifiée.\",\r\n            user_not_found: \"Utilisateur introuvable.\",\r\n            email_or_password_incorrect: \"Adresse mail ou mot de passe incorrect.\",\r\n            reset_password_no_token: \"Cette requête n'a pas pu être traitée.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"Cette adresse mail est déjà utilisée.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Adresse mail invalide.\",\r\n                    is_sea_email_constraint: \"L'adresse mail doit correspondre à l'une de nos universités partenaires.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"Mon Profil\",\r\n        firstname: \"Prénom\",\r\n        lastname: \"Nom\",\r\n        nationality: \"Nationalité\",\r\n        university: \"Université\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offres\",\r\n        positions: \"Postes\",\r\n        allRoles: {\r\n            student: \"Étudiant\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Enseignement\",\r\n            research: \"Recherche\",\r\n            administration: \"Administration\",\r\n            technical: \"Technique\",\r\n            other: \"Autre\",\r\n        },\r\n        gender: \"Genre\",\r\n        genders: {\r\n            male: \"Homme\",\r\n            female: \"Femme\",\r\n            other: \"Autre\",\r\n        },\r\n        dateOfBirth: \"Date de naissance\",\r\n        dateUnits: {\r\n            singular: {\r\n                second: \"seconde\",\r\n                minute: \"minute\",\r\n                hour: \"heure\",\r\n                day: \"jour\",\r\n                week: \"semaine\",\r\n                month: \"mois\",\r\n                year: \"année\",\r\n            },\r\n            plural: {\r\n                second: \"secondes\",\r\n                minute: \"minutes\",\r\n                hour: \"heures\",\r\n                day: \"jours\",\r\n                week: \"semaines\",\r\n                month: \"mois\",\r\n                year: \"années\",\r\n            },\r\n        },\r\n        dateRelative: {\r\n            precise: \"{{day}} {{month}} {{year}}\",\r\n            ago: \"il y a {{amount}} {{unit}}\",\r\n        },\r\n        months: {\r\n            0: \"Janvier\",\r\n            1: \"Février\",\r\n            2: \"Mars\",\r\n            3: \"Avril\",\r\n            4: \"Mai\",\r\n            5: \"Juin\",\r\n            6: \"Juillet\",\r\n            7: \"Août\",\r\n            8: \"Septembre\",\r\n            9: \"Octobre\",\r\n            10: \"Novembre\",\r\n            11: \"Decembre\",\r\n        },\r\n        spokenLanguages: \"Langues parlées\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Natif\",\r\n        },\r\n        levelOfStudy: \"Niveau d'études\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Domaines d'études\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d selectionnés\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Programmes et certifications génériques\",\r\n            education: \"Éducation\",\r\n            \"arts-humanities\": \"Lettres et arts\",\r\n            \"social-sciences-journalism-information\": \"Sciences sociales, journalisme et information\",\r\n            \"business-administration-law\": \" Commerce, administration et droit\",\r\n            \"natural-sciences-mathematics-statistics\": \"Sciences naturelles, mathématiques et statistiques\",\r\n            \"information-communication-technologies\": \"Technologies de l’information et de la communication\",\r\n            \"engineering-manufacturing-construction\": \"Ingénierie, industries de transformation et construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\":\r\n                \"Agriculture, sylviculture, halieutique et sciences vétérinaires\",\r\n            \"health-welfare\": \"Santé et protection sociale\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Programmes et certifications de base\",\r\n            \"literacy-numeracy\": \"Alphabétisation et apprentissage du calcul\",\r\n            \"personal-skills-development\": \"Compétences et développement personnels\",\r\n            \"education-science\": \"Sciences de l’éducation\",\r\n            \"training-for-pre-school-teachers\": \"Formation des enseignants au niveau préscolaire\",\r\n            \"teacher-training-without-subject-specialisation\": \"Formation des enseignants sans spécialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Formation des enseignants avec spécialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Techniques audiovisuelles et production multimédia\",\r\n            \"fashion-interior-industrial-design\": \"Stylisme, décoration et design industriel\",\r\n            \"fine-arts\": \"Beaux-arts\",\r\n            handicrafts: \"Artisanat\",\r\n            \"music-performing-arts\": \"Musique, théâtre, danse, cirque\",\r\n            \"religion-theology\": \"Religion et théologie\",\r\n            \"history-archaeology\": \"Histoire et archéologie\",\r\n            \"philosophy-ethics\": \"Philosophie et morale\",\r\n            \"language-acquisition\": \"Acquisition d’une langue\",\r\n            \"literature-linguistics\": \"Littérature et linguistique\",\r\n            economics: \"Économie\",\r\n            \"political-sciences-civics\": \"Sciences politiques et éducation civique\",\r\n            psychology: \"Psychologie\",\r\n            \"sociology-cultural-studies\": \"Sociologie et études culturelles\",\r\n            \"journalism-reporting\": \"Journalisme et reportage\",\r\n            \"library-information-archival-studies\": \"Formation aux bibliothèques, à la documentation et à l’archivisme\",\r\n            \"accounting-taxation\": \"Comptabilité et fiscalité\",\r\n            \"finance-banking-insurance\": \"Finance, banque et assurances\",\r\n            \"management-administration\": \"Gestion et administration\",\r\n            \"marketing-advertising\": \"Marketing et publicité\",\r\n            \"secretarial-office-work\": \"Travail de secrétariat et de bureau\",\r\n            \"wholesale-retail-sales\": \"Vente en gros et au détail\",\r\n            \"work-skills\": \"Compétences professionnelles\",\r\n            law: \"Droit\",\r\n            biology: \"Biologie\",\r\n            biochemistry: \"Biochimie\",\r\n            \"environmental-sciences\": \"Sciences environnementales\",\r\n            \"natural-environments-wildlife\": \"Environnements naturels et faune et flore\",\r\n            chemistry: \"Chimie\",\r\n            \"earth-sciences\": \"Sciences de la Terre\",\r\n            physics: \"Physique\",\r\n            mathematics: \"Mathématiques\",\r\n            statistics: \"Statistiques\",\r\n            \"computer-use\": \"Utilisation d’un ordinateur\",\r\n            \"database-network-design-administration\": \"Conception et administration de bases de données et de réseau\",\r\n            \"software-applications-development-analysis\": \"Développement et analyse de logiciels et d’applications\",\r\n            \"chemical-engineering-processes\": \"Ingénierie chimique et processus\",\r\n            \"environmental-protection-technology\": \"Technologie de la protection de l’environnement\",\r\n            \"electricity-energy\": \"Électricité et énergie\",\r\n            \"electronics-automation\": \"Électronique et automatisation\",\r\n            \"mechanics-metal-trades\": \"Mécanique et techniques apparentées\",\r\n            \"motor-vehicles-ships-aircraft\": \"Véhicules à moteur, bateaux et aéronefs\",\r\n            \"food-processing\": \"Traitement des aliments\",\r\n            materials: \"Matériaux (verre, papier, plastique et bois)\",\r\n            textiles: \"Textiles (vêtements, chaussures et cuir)\",\r\n            \"mining-extraction\": \"Exploitation minière et extraction\",\r\n            \"architecture-town-planning\": \"Architecture et urbanisme\",\r\n            \"building-civil-engineering\": \"Construction et génie civil\",\r\n            \"crop-livestock-production\": \"Culture et élevage\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Sylviculture\",\r\n            fisheries: \"Halieutique\",\r\n            veterinary: \"Sciences vétérinaires\",\r\n            \"dental-studies\": \"Études dentaires\",\r\n            medicine: \"Médecine\",\r\n            \"nursing-midwifery\": \"Soins infirmiers et formation de sages-femmes\",\r\n            \"medical-diagnostic-treatment-technology\": \"Diagnostic médical et technologie de traitement\",\r\n            \"therapy-rehabilitation\": \"Thérapie et rééducation\",\r\n            pharmacy: \"Pharmacie\",\r\n            \"traditional-complementary-medicine-therapy\": \"Médecine et thérapies traditionnelles et complémentaires\",\r\n            \"care-elderly-disabled-adults\": \"Soins gérontologiques et aux adultes handicapés\",\r\n            \"child-care-youth-services\": \"Soins aux enfants et à la jeunesse\",\r\n            \"social-work-counselling\": \"Travail social et orientation\",\r\n            \"domestic-services\": \"Services domestiques\",\r\n            \"hair-beauty-services\": \"Services de soins de beauté et de coiffure\",\r\n            \"hotel-restaurants-catering\": \"Hôtellerie et services de restauration\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Voyage, tourisme et loisirs\",\r\n            \"community-sanitation\": \"Salubrité publique\",\r\n            \"occupational-health-safety\": \"Santé et sécurité au travail\",\r\n            \"military-defence\": \"Sécurité militaire et défense\",\r\n            \"protection-of-persons-property\": \"Protection des biens et des personnes\",\r\n            \"transport-services\": \"Services de transport\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page introuvable.\",\r\n            subtitle: \"Cette page n'existe pas.\",\r\n            redirect: \"Aller à l'écran d'accueil\",\r\n        },\r\n        // Backend unreachable\r\n        backendUnreachable: {\r\n            title: \"Impossible de se connecter au serveur\",\r\n            subtitle: \"Cela peut provenir de votre connection Internet ou du serveur de l'application.\",\r\n        },\r\n        // Resend verify email screen\r\n        resendVerifyScreen: {\r\n            title: \"Vérification du compte\",\r\n            text:\r\n                \"Ce compte n'est pas encore vérifié. Vous devriez avoir reçu un mail de notre part contenant un lien de vérification. Sinon, cliquez sur le bouton ci-dessous pour le renvoyer.\",\r\n            send: \"Envoyer à nouveau\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"Université de Cádiz\",\r\n            \"univ-brest\": \"Université de Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"Université de Gdańsk\",\r\n            \"univ-malta\": \"Université de Malte\",\r\n            \"univ-kiel\": \"Université de Kiel\",\r\n            \"univ-split\": \"Université de Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Bienvenue\",\r\n                subtitle:\r\n                    \"Avant de commencer, nous avons besoin d'en savoir un peu plus sur vous afin d'assurer les meilleures recommendations possibles.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profil\",\r\n            },\r\n            profile2: {\r\n                title: \"Langues et Hobbies\",\r\n            },\r\n            role: {\r\n                title: \"Je suis un...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Étudiant\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Rencontrer\",\r\n                subtitle: \"Rencondrer des nouveaux amis dans la vraie vie.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Découvrir\",\r\n                subtitle: \"En apprendre plus sur d'autres cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborer\",\r\n                subtitle: \"Trouver d'autres personnes pour travailler sur des projets, académiques ou non.\",\r\n            },\r\n            legal1: {\r\n                title: \"Conditions d'utilisation\",\r\n                text:\r\n                    \"Comme précisé dans les conditions d’usage, vous acceptez d’utiliser « SEA-EU Around » et ses services pour être mis en relation avec d’autres personnes souhaitant se rencontrer, collaborer, ou interagir en ligne ou dans le cadre d’une mobilité, sur un principe non-commercial et non lucratif. Vous vous engagez à des échanges respectueux avec les autres membres. Vos noms et prénoms seront visibles des autres membres.\",\r\n            },\r\n            legal2: {\r\n                title: \"Politique des données\",\r\n                text:\r\n                    \"Dans le cadre de votre utilisation de SEA-EU Around, vous allez fournir des données personnelles afin de créer votre profil selon les conditions précisées dans les Conditions d’utilisation. Ces données sont collectées et traitées par l’UBO via l'application pour permettre la mise en relation entre membres, en fonctions des besoins, offres et intérêts qu’ils auront définis. Vos données ne seront visibles que par les autres membres.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"L’application peut utiliser les cookies. L’information est utilisée exclusivement dans le cadre du fonctionnement de l’application et ne permet pas d’identifier le membre, à l’exception du cookie permettant une réauthentification sans avoir à ressaisir son mot de passe.\",\r\n            },\r\n            back: \"Retour\",\r\n            next: \"Suivant\",\r\n            leave: \"Quitter\",\r\n            submit: \"Envoyer\",\r\n            success: {\r\n                title: \"Ravis de vous voir !\",\r\n                subtitle: \"Votre profil est créé.\",\r\n                button: \"Commencer\",\r\n            },\r\n            quit: {\r\n                title: \"Quitter\",\r\n                text: \"Voulez vous vraiment quitter la création du profil ? Vous pourrez reprendre plus tard.\",\r\n                cancel: \"Annuler\",\r\n                yes: \"Oui\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Langue\",\r\n            placeholderMultiple: \"Sélectionner des langues\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Niveau\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhaze\",\r\n            ae: \"Avestique\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharique\",\r\n            an: \"Aragonais\",\r\n            ar: \"Arabe\",\r\n            as: \"Assamais\",\r\n            av: \"Avar\",\r\n            ay: \"Aymara\",\r\n            az: \"Azéri\",\r\n            ba: \"Bachkir\",\r\n            be: \"Biélorusse\",\r\n            bg: \"Bulgare\",\r\n            bh: \"Bihari\",\r\n            bi: \"Bichelamar\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibétain\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnien\",\r\n            ca: \"Catalan\",\r\n            ce: \"Tchétchène\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corse\",\r\n            cr: \"Cri\",\r\n            cs: \"Tchèque\",\r\n            cu: \"Vieux-slave\",\r\n            cv: \"Tchouvache\",\r\n            cy: \"Gallois\",\r\n            da: \"Danois\",\r\n            de: \"Allemand\",\r\n            dv: \"Maldivien\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Grec moderne\",\r\n            en: \"Anglais\",\r\n            eo: \"Espéranto\",\r\n            es: \"Espagnol\",\r\n            et: \"Estonien\",\r\n            eu: \"Basque\",\r\n            fa: \"Persan\",\r\n            ff: \"Peul\",\r\n            fi: \"Finnois\",\r\n            fj: \"Fidjien\",\r\n            fo: \"Féroïen\",\r\n            fr: \"Français\",\r\n            fy: \"Frison occidental\",\r\n            ga: \"Irlandais\",\r\n            gd: \"Écossais\",\r\n            gl: \"Galicien\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Mannois\",\r\n            ha: \"Haoussa\",\r\n            he: \"Hébreu\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri motu\",\r\n            hr: \"Croate\",\r\n            ht: \"Créole haïtien\",\r\n            hu: \"Hongrois\",\r\n            hy: \"Arménien\",\r\n            hz: \"Héréro\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonésien\",\r\n            ie: \"Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Yi\",\r\n            ik: \"Inupiak\",\r\n            io: \"Ido\",\r\n            is: \"Islandais\",\r\n            it: \"Italien\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japonais\",\r\n            jv: \"Javanais\",\r\n            ka: \"Géorgien\",\r\n            kg: \"Kikongo\",\r\n            ki: \"Kikuyu\",\r\n            kj: \"Kuanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Groenlandais\",\r\n            km: \"Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Coréen\",\r\n            kr: \"Kanouri\",\r\n            ks: \"Cachemiri\",\r\n            ku: \"Kurde\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornique\",\r\n            ky: \"Kirghiz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgeois\",\r\n            lg: \"Ganda\",\r\n            li: \"Limbourgeois\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lituanien\",\r\n            lu: \"Luba\",\r\n            lv: \"Letton\",\r\n            mg: \"Malgache\",\r\n            mh: \"Marshallais\",\r\n            mi: \"Maori de Nouvelle-Zélande\",\r\n            mk: \"Macédonien\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongol\",\r\n            mo: \"Moldave\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malais\",\r\n            mt: \"Maltais\",\r\n            my: \"Birman\",\r\n            na: \"Nauruan\",\r\n            nb: \"Norvégien Bokmål\",\r\n            nd: \"Sindebele\",\r\n            ne: \"Népalais\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Néerlandais\",\r\n            nn: \"Norvégien Nynorsk\",\r\n            no: \"Norvégien\",\r\n            nr: \"Nrebele\",\r\n            nv: \"Navajo\",\r\n            ny: \"Chichewa\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwé\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossète\",\r\n            pa: \"Pendjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polonais\",\r\n            ps: \"Pachto\",\r\n            pt: \"Portugais\",\r\n            qu: \"Quechua\",\r\n            rc: \"Créole Réunionnais\",\r\n            rm: \"Romanche\",\r\n            rn: \"Kirundi\",\r\n            ro: \"Roumain\",\r\n            ru: \"Russe\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sarde\",\r\n            sd: \"Sindhi\",\r\n            se: \"Same du Nord\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-croate\",\r\n            si: \"Cingalais\",\r\n            sk: \"Slovaque\",\r\n            sl: \"Slovène\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanais\",\r\n            sr: \"Serbe\",\r\n            ss: \"Swati\",\r\n            st: \"Sotho du Sud\",\r\n            su: \"Soundanais\",\r\n            sv: \"Suédois\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamoul\",\r\n            te: \"Télougou\",\r\n            tg: \"Tadjik\",\r\n            th: \"Thaï\",\r\n            ti: \"Tigrigna\",\r\n            tk: \"Turkmène\",\r\n            tl: \"Tagalog\",\r\n\r\n            tn: \"Tswana\",\r\n            to: \"Tongien\",\r\n            tr: \"Turc\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitien\",\r\n            ug: \"Ouïghour\",\r\n            uk: \"Ukrainien\",\r\n            ur: \"Ourdou\",\r\n            uz: \"Ouzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamien\",\r\n            vo: \"Volapük\",\r\n            wa: \"Wallon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang\",\r\n            zh: \"Chinois\",\r\n            zu: \"Zoulou\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Hobbies\",\r\n        chooseInterests: \"Choisissez des hobbies\",\r\n        interestsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activisme\",\r\n            art: \"Art\",\r\n            astrology: \"Astrologie\",\r\n            baking: \"Pâtisserie\",\r\n            bbq: \"Barbecue\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Jeux de société\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Chats\",\r\n            climbing: \"Escalade\",\r\n            coffee: \"Café\",\r\n            comedy: \"Comédie\",\r\n            cooking: \"Cuisine\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Bière artisanale\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Vélo\",\r\n            dancing: \"Danse\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Chiens\",\r\n            environmentalism: \"Écologie\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Pèche\",\r\n            foodie: \"Gastronomie\",\r\n            football: \"Football\",\r\n            gamer: \"Gaming\",\r\n            gardening: \"Jardinage\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Boire un verre\",\r\n            guitar: \"Guitare\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Randonnée\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investissement\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Échange linguistique\",\r\n            movies: \"Films\",\r\n            museum: \"Musées\",\r\n            music: \"Musique\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Activités d'extérieur\",\r\n            parties: \"Fêtes\",\r\n            photography: \"Photographie\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Pique-nique\",\r\n            \"playing-music\": \"Jouer de la musique\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politique\",\r\n            reading: \"Lecture\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Course à pied\",\r\n            sailing: \"La voile\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboard\",\r\n            skiing: \"Ski\",\r\n            sneakers: \"Chaussures de sport\",\r\n            snowboarding: \"Snowboard\",\r\n            spirituality: \"Spiritualité\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surf\",\r\n            swimming: \"Nage\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tatouages\",\r\n            tea: \"Thé\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Théatre\",\r\n            travel: \"Voyage\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Végétarien\",\r\n            volunteering: \"Bénévolat\",\r\n            walking: \"Marche\",\r\n            \"walking-my-dog\": \"Promener son chien\",\r\n            wine: \"Vin\",\r\n            \"working-out\": \"Entraînement sportif\",\r\n            writer: \"Écriture\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"Je suis ouvert à...\",\r\n        offerCategories: {\r\n            meet: \"Rencontrer\",\r\n            discover: \"Découvrir\",\r\n            collaborate: \"Collaborer\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Genres ciblés\",\r\n            roles: \"Postes ciblés\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Boire un verre\",\r\n                help: \"Je suis ouvert pour boire un verre avec les personnes que je rencontre sur cette plateforme.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Héberger quelque temps\",\r\n                help: \"Je suis ouvert à héberger quelqu'un pendant quelques jours.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Intégrer la vie du campus\",\r\n                help: \"Je suis motivé.e à l'idée de présenter à quelqu'un la vie de mon campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Collaborer sur un projet\",\r\n                help: \"Je recherche des collaborateurs pour un projet.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Répondre à des questions académiques\",\r\n                help:\r\n                    \"Je peux donner des informations à propos de mon université ou répondre à des questions générales en lien avec les études.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Partager des hobbies\",\r\n                help: \"J'aimerais discuter avec d'autres utilisateurs à propos de centres d'intérêts communs.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Rejoindre un tandem d'apprentissage de langue\",\r\n                help:\r\n                    \"Je cherche à rejoindre un tandem de langue afin d'aider d'autres utilisateurs à apprendre une de mes langues.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            title: \"Annuler le match ?\",\r\n            text: \"Voulez-vous vraiment annuler le match avec {{firstname}} ? Vous ne pourrez plus communiquer.\",\r\n            blockQuestion:\r\n                \"Si vous ne voulez plus apparaître dans les résultats de {{firstname}}, vous pouvez aussi bloquer ce profil :\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            title: \"Bloquer l'utilisateur ?\",\r\n            warning: \"Vous et {{firstname}} n'apparaîtrez plus dans vos recherches respectives.\",\r\n            action: \"Bloquer\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            subtitle: \"Rejoignez une alliance unie autour des valeurs de l'identité européenne.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Ravis de vous revoir !\",\r\n            titleFirstLaunch: \"Bienvenue !\",\r\n            logIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            or: \"ou\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"Nous utilisons des cookies afin de vous fournir la meilleure expérience utilisateur possible.\\nNotre utilisation des cookies inclut notamment le stockage de données pour des chargements plus rapides, le stockage de vos paramètres et l'authentification. Nous ne collectons aucune information qui pourrait être utilisée pour du traçage ou de la publicité.\",\r\n            acceptAll: \"Accepter les cookies\",\r\n            customize: \"Personnaliser\",\r\n            preferences: {\r\n                text:\r\n                    \"Nous offrons la possibilité de choisir les informations qui sont stockées sur votre appareil par SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentification\",\r\n                    description:\r\n                        \"Stockage d'information permettant de vous authentifier automatiquement lorsque vous lancez l'application.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Stockage d'information (moins d'un 1MO) permettant d'accélérer les chargements.\",\r\n                },\r\n                settings: {name: \"Paramètres\", description: \"Stockage des paramètres (thème, langue, etc).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Signalement de bug depuis l'app\",\r\n            mailTitle: \"Description du bug (inclure si possible les étapes pour le reproduire) :\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Signalement\",\r\n            send: \"Envoyer\",\r\n            cancel: \"Annuler\",\r\n            what: \"Quoi / qui ?\",\r\n            commentFrom: \"Commentaire de {{name}}\",\r\n            postFrom: \"Post de {{name}}\",\r\n            group: \"Groupe “{{name}}”\",\r\n            why: \"Pourquoi ?\",\r\n            typePlaceholder: \"Sélectionner une raison\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudité\",\r\n                harassment: \"Harcèlement\",\r\n                \"undesirable-content\": \"Contenu indésirable\",\r\n                \"hate-speech\": \"Discours haineux\",\r\n                \"vulgar-content\": \"Contenu vulgaire\",\r\n                other: \"Autre\",\r\n            },\r\n            confirmationTitle: \"Merci\",\r\n            confirmation: \"Un administrateur traitera votre signalement sous peu.\",\r\n            failureTitle: \"Désolé\",\r\n            failure: \"Nous ne sommes pas en mesure de traîter votre requête.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions:\r\n                \"Pour choisir un nouveau mot de passe, cliquez sur le lien dans le mail que nous venons de vous envoyer.\",\r\n            title: \"Choisissez un nouveau mot de passe\",\r\n            button: \"Envoyer\",\r\n            success: \"Votre mot de passe a été mis à jour.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Supprimer votre compte\",\r\n            warning:\r\n                \"Votre compte et toutes les données associées seront supprimées d'ici 6 mois. Après cette période, le compte sera irréversiblement supprimé. Si vous vous connectez avant, la suppression sera annulée.\",\r\n            button: \"Supprimer\",\r\n            success1: \"Votre requête a bien été reçue et sera traitée sous peu.\",\r\n            success2: \"Nous sommes désolés de vous voir partir.\",\r\n            leave: \"Quitter\",\r\n            inputLabel: \"Entrez votre mot de passe pour confirmer\",\r\n        },\r\n        // Recover account\r\n        recoverAccount: {\r\n            title: \"Récupération du Compte\",\r\n            text:\r\n                \"Ce compte est actuellement inactif et en attente d'être supprimé. Si vous continuez, la suppression sera annulée.\",\r\n            yes: \"Récupérer\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"Il semblerait que vous n'ailliez pas encore eu de match. :(\",\r\n            sayHi: \"Envoyez un message\",\r\n            sayHiTo: \"Envoyez un message à {{name}}\",\r\n        },\r\n        // Groups tab\r\n        groups: {\r\n            group: \"Groupe\",\r\n            create: {\r\n                title: \"Créer un groupe\",\r\n                name: \"Nom\",\r\n                visible: \"Visible\",\r\n                requireApproval: \"Approbation requise\",\r\n                visibleDescription: {\r\n                    true: \"Tout le monde peut voir ce groupe.\",\r\n                    false: \"Ce groupe est invisible: les utilisateurs doivent être invités pour rejoindre.\",\r\n                },\r\n                requireApprovalDescription: {\r\n                    true: \"Un modérateur du groupe doit manuellement approuver les demandes pour rejoindre le groupe.\",\r\n                    false: \"Les utilisateurs peuvent rejoindre le groupe sans approbation.\",\r\n                },\r\n                submit: \"Créer\",\r\n            },\r\n            newPost: {\r\n                title: \"Nouveau Post\",\r\n                submit: \"Créer\",\r\n            },\r\n            editPost: {\r\n                title: \"Éditer le post\",\r\n                contentPlaceholder: \"Contenu\",\r\n                submit: \"Envoyer\",\r\n            },\r\n            deletePost: {\r\n                title: \"Supprimer le post\",\r\n                text: \"Cette action est irréversible.\",\r\n            },\r\n            editComment: {\r\n                title: \"Éditer le commentaire\",\r\n            },\r\n            deleteComment: {\r\n                title: \"Supprimer le commentaire\",\r\n                text: \"Cette action est irréversible.\",\r\n            },\r\n            comments: {\r\n                zero: \"Aucun commentaire\",\r\n                singular: \"1 commentaire\",\r\n                plural: \"{{num}} commentaires\",\r\n                replyTo: \"Répondre à {{name}}\",\r\n                viewMore: \"Afficher plus ({{n}})\",\r\n                placeholder: \"Écrivez un commentaire...\",\r\n                none: \"Il n'y a pas encore de commentaires ici.\",\r\n            },\r\n            join: \"Rejoindre\",\r\n            joinRequestSent: {\r\n                title: \"Demande envoyée\",\r\n                text: \"Vous serez ajouté à ce groupe lorsque l'un de ses administrateurs aura accepté votre demande.\",\r\n            },\r\n            groupJoined: {\r\n                title: \"Félicitations !\",\r\n                text: \"Vous venez de rejoindre le groupe “{{name}}”.\",\r\n                viewGroup: \"Afficher\",\r\n            },\r\n            myGroups: {\r\n                title: \"Mes groupes\",\r\n                none: \"Lorsque vous aurez rejoint un groupe, il apparaîtra ici.\",\r\n            },\r\n            explore: {\r\n                button: \"Explorer\",\r\n                none: \"Aucun groupe n'a été trouvé.\",\r\n                noMore: \"Aucun autre groupe à afficher.\",\r\n                statusText: {\r\n                    pending: \"Request sent\",\r\n                    banned: \"Banned\",\r\n                    invited: \"Invited\",\r\n                },\r\n            },\r\n            invites: \"Invitations\",\r\n            inviteNew: \"Inviter\",\r\n            invite: {\r\n                decline: \"Refuser\",\r\n                accept: \"Rejoindre\",\r\n                approvalDisclaimerInvitee:\r\n                    \"Vous avez été invité par un membre. Si vous acceptez, un administrateur du groupe devra encore approuver avant que vous ne rejoigniez ce groupe.\",\r\n                approvalDisclaimerInviter: \"{{name}} devra être accepté par un administrateur de ce groupe.\",\r\n                nobodyToInvite:\r\n                    \"Vos match qui ne sont pas dans ce groupe et qui n'ont pas déjà été invités apparaîtront ici.\",\r\n                invite: \"Inviter\",\r\n                title: \"Inviter un utilisateur\",\r\n                text: \"Voulez-vous inviter {{name}} à rejoindre ce groupe ?\",\r\n            },\r\n            posts: \"Posts\",\r\n            postMenu: {\r\n                title: \"Post\",\r\n            },\r\n            members: {\r\n                zero: \"Aucun membre\",\r\n                singular: \"1 membre\",\r\n                plural: \"{{num}} membres\",\r\n                manage: \"Gérer les membres\",\r\n                manageBanned: \"Utilisateurs bannis\",\r\n                approval: {\r\n                    noResults: \"Aucune demande d'approbation.\",\r\n                },\r\n                approved: {\r\n                    noResults: \"Aucun membre.\",\r\n                },\r\n                banned: {\r\n                    noResults: \"Aucun utilisateur banni.\",\r\n                },\r\n            },\r\n            deleteMember: {\r\n                title: \"Exclure l'utilisateur ?\",\r\n                text:\r\n                    \"{{name}} ne pourra plus poster sur ce groupe. De plus, ses posts et commentaires existants seront supprimés.\",\r\n                action: \"Exclure\",\r\n            },\r\n            deletePendingMember: {\r\n                title: \"Refuser la demande\",\r\n                text: \"Voulez-vous vraiment refuser la demande de {{name}} pour rejoindre le groupe ?\",\r\n                action: \"Oui\",\r\n            },\r\n            banMember: {\r\n                title: \"Bannir l'utilisateur ?\",\r\n                text:\r\n                    \"L'utilisateur sera exclu et ne pourra plus rejoindre le groupe. De plus, ses posts et commentaires existants seront supprimés.\",\r\n                action: \"Bannir\",\r\n            },\r\n            banPendingMember: {\r\n                title: \"Bannir l'utilisateur ?\",\r\n                text: \"{{name}} ne pourra plus demander à rejoindre le groupe.\",\r\n                action: \"Bannir\",\r\n            },\r\n            promoteToAdmin: {\r\n                title: \"Administrateur\",\r\n                text: \"Voulez-vous promouvoir {{name}} au rang d'administrateur ?\",\r\n                action: \"Oui\",\r\n            },\r\n            description: {\r\n                placeholder: \"Entrez une description ici\",\r\n                none: \"Pas de description\",\r\n            },\r\n            roles: {\r\n                admin: \"Administrateur\",\r\n                basic: \"Membre\",\r\n            },\r\n            reportPost: \"Signaler\",\r\n            noMorePosts: \"Aucun autre post à afficher.\",\r\n            noPosts: \"Aucun post à afficher.\",\r\n            justPosted: \"Posté à l'instant\",\r\n            justCommented: \"commenté à l'instant\",\r\n            justEdited: \"modifié à l'instant\",\r\n            edited: \"modifié\",\r\n            editedAgo: \"modifié {{ago}}\",\r\n            postsSorting: {\r\n                newest: \"Récent\",\r\n                oldest: \"Ancien\",\r\n                popular: \"Populaire\",\r\n            },\r\n            points: {\r\n                zero: \"0 points\",\r\n                singular: \"1 point\",\r\n                plural: \"{{num}} points\",\r\n            },\r\n            feed: {\r\n                title: \"En tendance\",\r\n                help:\r\n                    \"Nous vous montrons seulement les posts de vos groupes, en fonction de leur popularité et leur date de création.\",\r\n            },\r\n            leave: {\r\n                title: \"Quitter le groupe\",\r\n                text: \"Voulez-vous vraiment quitter ce groupe ?\",\r\n                deleteData: \"Supprimer tous mes posts et commentaires de ce groupe.\",\r\n            },\r\n            delete: {\r\n                title: \"Supprimer le groupe\",\r\n                text: \"Si vous voulez vraiment supprimer ce groupe, entrez son nom ci-dessous :\",\r\n            },\r\n            settings: {\r\n                title: \"Paramètres du groupe\",\r\n            },\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"Aucun résultat\",\r\n            noMoreItems: \"Pas d'autres profils à afficher\",\r\n            noItemsAdvice: \"Éssayez de supprimer des filtres\",\r\n            filtering: {\r\n                sectionGeneral: \"Général\",\r\n                buttonReset: \"Réinitialiser\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Cacher\",\r\n            success: {\r\n                title: \"Nouveau match !\",\r\n                offersTitle: \"Ouvert à:\",\r\n                offersMore: \"autres\",\r\n                chat: \"Discuter\",\r\n                continue: \"Continuer\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liké\",\r\n                    declined: \"Caché\",\r\n                    blocked: \"Bloqué\",\r\n                },\r\n                actions: {\r\n                    report: \"Signaler\",\r\n                    cancel: {\r\n                        requested: \"Annuler like\",\r\n                        declined: \"Dé-cacher\",\r\n                        blocked: \"Débloquer\",\r\n                    },\r\n                    block: \"Bloquer\",\r\n                },\r\n                noResults: \"Aucun résultat\",\r\n                noResultsAdvice: \"Éssayez de supprimer des filtres\",\r\n            },\r\n        },\r\n        // Profile screen\r\n        profile: {\r\n            action: {\r\n                chat: \"Chat\",\r\n                mute: \"Mettre en sourdine\",\r\n                block: \"Bloquer\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Signaler\",\r\n            },\r\n            noOffersSelected: \"Aucune offre sélectionnée.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Bienvenue\",\r\n            SigninScreen: \"Connexion\",\r\n            ForgotPasswordScreen: \"Mot de Passe Oublié\",\r\n            SignupScreen: \"Inscription\",\r\n            OnboardingNameScreen: \"Bienvenue\",\r\n            OnboardingProfileScreen1: \"Profil\",\r\n            OnboardingProfileScreen2: \"Profil\",\r\n            OnboardingRoleScreen: \"Profil\",\r\n            OnboardingRoleSpecificScreen: \"Profil\",\r\n            OnboardingOffersScreen1: \"Découvrir\",\r\n            OnboardingOffersScreen2: \"Collaborer\",\r\n            OnboardingOffersScreen3: \"Rencontrer\",\r\n            OnboardingLegalScreen1: \"Conditions d'utilisation\",\r\n            OnboardingLegalScreen2: \"Politique des données\",\r\n            OnboardingLegalScreen3: \"Cookies\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Accueil\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Ajouter des Filtres\",\r\n            MatchHistoryScreen: \"Historique\",\r\n            TabGroupsScreen: \"Groupes\",\r\n            GroupsExploreScreen: \"Explorer les groupes\",\r\n            GroupScreen: \"Groupe\",\r\n            GroupMembersScreen: \"Membres du groupe\",\r\n            GroupBannedMembersScreen: \"Utilisateurs bannis\",\r\n            GroupMembersApprovalScreen: \"Approbation des membres\",\r\n            GroupInviteScreen: \"Inviter\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profil\",\r\n            ProfileScreen: \"Profil\",\r\n            SettingsScreen: \"Paramètres\",\r\n            DeleteAccountScreen: \"Suppression du Compte\",\r\n            DeleteAccountSuccessScreen: \"Compte Supprimé\",\r\n            ValidationEmailSentScreen: \"Validation du Compte\",\r\n            ValidateEmailScreen: \"Validation du Compte\",\r\n            ResetPasswordScreen: \"Changement de Mot de Passe\",\r\n            ResetPasswordSuccessScreen: \"Mot de Passe Modifié\",\r\n            OnboardingSuccessfulScreen: \"Inscription Réussie\",\r\n            NotFoundScreen: \"Page Introuvable\",\r\n            BackendUnreachableScreen: \"Erreur\",\r\n            ForgotPasswordEmailSentScreen: \"Mot de Passe Oublié\",\r\n            ResendVerifyEmailScreen: \"Vérification du compte\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"Général\",\r\n                danger: \"Zone dangereuse\",\r\n                about: \"À propos\",\r\n            },\r\n            language: \"Langue\",\r\n            darkTheme: \"Thème sombre\",\r\n            deleteAccount: \"Suppression de compte\",\r\n            deleteMyAccount: \"Supprimer mon compte\",\r\n            version: \"Version\",\r\n            termsOfService: \"Conditions d'utilisation\",\r\n            reportABug: \"Signaler un bug\",\r\n            logOut: \"Déconnexion\",\r\n            customizeCookies: \"Personnaliser les cookies\",\r\n        },\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    const loc = Localization.locale.substr(0, 2);\r\n    return loc === \"fr\" ? \"fr\" : \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"hr\",\r\n    \"en\",\r\n    \"fr\",\r\n    \"de\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"es\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[2].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n\r\n/* French translations from https://fr.wikipedia.org/wiki/Liste_des_codes_ISO_639-1 */\r\n/*\r\nlet entries = {};\r\n$(\"#mw-content-text > div.mw-parser-output > table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[0].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[3].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport translations from \"../../constants/translations\";\r\nimport {\r\n    LoadCookiesPreferencesAction,\r\n    LoadVersionInfoAction,\r\n    SaveCookiesPreferencesAction,\r\n    SetLocaleAction,\r\n    SetThemeAction,\r\n    SettingsAction,\r\n    SETTINGS_ACTION_TYPES,\r\n} from \"./actions\";\r\nimport {SettingsState} from \"../types\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const dict = translations as {[key: string]: {[key: string]: unknown}};\r\n    const languageNames = (dict[locale].languageNames || dict[\"en\"].languageNames) as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    userSettings: {\r\n        theme: \"light\",\r\n        locale: getDefaultLocale(),\r\n        cookies: {\r\n            auth: false,\r\n            cache: false,\r\n            settings: false,\r\n        },\r\n        cookieConsentDate: null,\r\n    },\r\n    previousVersion: null,\r\n    isFirstLaunch: false,\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES: {\r\n            const {preferences, consentDate} = action as LoadCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: consentDate, cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const {preferences} = action as SaveCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: new Date(Date.now()), cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = action as SetThemeAction;\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            const theme = state.userSettings.theme == \"light\" ? \"dark\" : \"light\";\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = action as SetLocaleAction;\r\n            return {\r\n                ...state,\r\n                localizedLanguageItems: getLocalizedLanguageItems(locale),\r\n                userSettings: {...state.userSettings, locale},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO: {\r\n            const {version} = action as LoadVersionInfoAction;\r\n            return {\r\n                ...state,\r\n                previousVersion: version,\r\n                isFirstLaunch: version === null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {Degree, Gender, LanguageLevel, Role} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\n\r\n/* General response-related types */\r\n\r\n// Any response from the server should follow this structure\r\nexport type RequestResponse = SuccessfulRequestResponse | UnprocessableEntityRequestResponse | ErrorRequestResponse;\r\nexport type SuccessfulRequestResponse = {status: number; data: unknown} & {[key: string]: unknown};\r\nexport type PaginatedRequestResponse = SuccessfulRequestResponse & {\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type ErrorRequestResponse = {status: number; errorType: string; description: string};\r\n\r\n// Only on 422 status\r\nexport type UnprocessableEntityRequestResponse = ErrorRequestResponse & {\r\n    errors: {property: string; codes: {description: string; code: string}[]}[];\r\n};\r\n\r\nexport type RemoteValidationErrors = {general: string; fields: {[key: string]: string}};\r\n\r\n/* Specific DTOs */\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: ResponseUserDto;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: InterestDto[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRoles: StaffRoleDto[];\r\n};\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDtoCommon = CreateProfileDtoCommon & {\r\n    id: string;\r\n    university: UniversityKey;\r\n    avatar: string;\r\n};\r\nexport type ResponseProfileDtoStudent = ResponseProfileDtoCommon & CreateProfileDtoStudent;\r\nexport type ResponseProfileDtoStaff = ResponseProfileDtoCommon & CreateProfileDtoStaff;\r\nexport type ResponseProfileDto = ResponseProfileDtoStudent | ResponseProfileDtoStaff;\r\n\r\nexport type ResponseProfileWithMatchInfoDto = {\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchingId: string | null;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type StaffRoleDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type ChatRoomProfileDto = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatar: string | null;\r\n    lastMessageSeenId: string | null;\r\n    lastMessageSeenDate: string | null;\r\n};\r\n\r\nexport type ResponseRoomDto = {\r\n    id: string;\r\n    profiles: ChatRoomProfileDto[];\r\n    lastMessage: ResponseChatMessageDto | null;\r\n};\r\n\r\nexport type ResponseChatMessageDto = {\r\n    roomId: string;\r\n    id: string;\r\n    senderId: string;\r\n    sent: boolean;\r\n    text: string;\r\n    updatedAt: string;\r\n};\r\n\r\nexport type ResponseChatMessageReadDto = {\r\n    roomId: string;\r\n    date: string;\r\n    messageId: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type ResponseChatWritingDto = {\r\n    roomId: string;\r\n    profileId: string;\r\n    state: boolean;\r\n};\r\n\r\nexport enum MatchActionStatus {\r\n    Declined = \"declined\",\r\n    Blocked = \"blocked\",\r\n    Matched = \"matched\",\r\n    Requested = \"requested\",\r\n}\r\nexport const MATCH_ACTION_HISTORY_STATUSES: MatchActionStatus[] = [\r\n    MatchActionStatus.Declined,\r\n    MatchActionStatus.Blocked,\r\n    MatchActionStatus.Requested,\r\n];\r\n\r\nexport type MatchActionResponseDto = {\r\n    roomId: string | null;\r\n    status: MatchActionStatus;\r\n};\r\n\r\nexport type MatchHistoryItemDto = {\r\n    profile: ResponseProfileDto;\r\n    status: MatchActionStatus;\r\n    date: string;\r\n    id: string;\r\n};\r\n\r\nexport type ResponseGroupDto = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    cover: string | null;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n    members: null;\r\n    isMember: boolean;\r\n    role: GroupRole | null;\r\n    status: GroupMemberStatus | null;\r\n};\r\n\r\nexport type CreateGroupDto = {\r\n    name: string;\r\n    description: string;\r\n    visible: boolean;\r\n    requiresApproval: boolean;\r\n};\r\n\r\nexport type CreateGroupPostDto = {\r\n    type: string;\r\n    text: string;\r\n};\r\n\r\nexport type ResponseGroupPostDto = {\r\n    id: string;\r\n    groupId: string;\r\n    type: string;\r\n    status: string;\r\n    text: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    creator: ResponseProfileDto;\r\n    commentsCount: number;\r\n    upVotesCount: number;\r\n    downVotesCount: number;\r\n    isVoted: boolean;\r\n    voteType?: \"up\" | \"down\";\r\n};\r\n\r\nexport type ResponsePostCommentDto = {\r\n    id: string;\r\n    text: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    creator: ResponseProfileDto;\r\n    children: ResponsePostCommentDto[] | null;\r\n    upVotesCount: number;\r\n    downVotesCount: number;\r\n    isVoted: boolean;\r\n    voteType?: \"up\" | \"down\";\r\n};\r\n\r\nexport type CreatePostCommentDto = {\r\n    text: string;\r\n    parentId?: string;\r\n};\r\n\r\nexport enum GroupRole {\r\n    Admin = \"admin\",\r\n    Basic = \"basic\",\r\n}\r\n\r\nexport enum GroupMemberStatus {\r\n    Pending = \"pending\",\r\n    Approved = \"approved\",\r\n    Banned = \"banned\",\r\n    Invited = \"invited\",\r\n    InvitedByAdmin = \"invited-by-admin\",\r\n}\r\n\r\nexport type ResponseGroupMemberDto = {\r\n    profile: ResponseProfileDto;\r\n    profileId: string;\r\n    role: GroupRole;\r\n    status: GroupMemberStatus;\r\n};\r\n\r\nexport type GroupCoverSuccessfullyUpdatedDto = {\r\n    cover: string;\r\n};\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferCategory, OfferDto} from \"../../api/dto\";\r\nimport {AuthAction, AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {ProfileState} from \"../types\";\r\nimport {\r\n    CreateProfileSuccessAction,\r\n    FetchUserSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    SetAvatarSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n    uploadingAvatar: false,\r\n};\r\n\r\nexport const profileReducer = (\r\n    state: ProfileState = initialState,\r\n    action: ProfileAction | AuthAction,\r\n): ProfileState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = action as SetProfileFieldsSuccessAction;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return state.user ? {...state, user: {...state.user, profile}} : state;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            let {offers} = action as LoadProfileOffersSuccessAction;\r\n\r\n            // Reorder the offers\r\n\r\n            // \"Collaborate\" category\r\n            const collab = offers\r\n                .filter((o) => o.category === OfferCategory.Collaborate)\r\n                .sort((a, b) => (a.id < b.id ? -1 : 1));\r\n            // \"Discover\" category\r\n            const disco = offers\r\n                .filter((o) => o.category === OfferCategory.Discover)\r\n                .sort((a, b) => (a.id < b.id ? 1 : -1));\r\n            // \"Meet \" category\r\n            const meet = offers.filter((o) => o.category === OfferCategory.Meet).sort((a, b) => (a.id < b.id ? -1 : 1));\r\n\r\n            offers = collab.concat(disco).concat(meet);\r\n\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = action as LoadProfileInterestsSuccessAction;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_BEGIN: {\r\n            return {...state, uploadingAvatar: true};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE: {\r\n            return {...state, uploadingAvatar: false};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = action as SetAvatarSuccessAction;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                    uploadingAvatar: false,\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {convertDtoToHistoryItem, convertDtoToProfile} from \"../../api/converters\";\r\nimport {\r\n    MatchActionResponseDto,\r\n    MatchActionStatus,\r\n    MatchHistoryItemDto,\r\n    PaginatedRequestResponse,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    MatchingFiltersState,\r\n    AppThunk,\r\n    PaginatedFetchRefreshAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchSuccessAction,\r\n} from \"../types\";\r\nimport {HISTORY_FETCH_LIMIT, PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n    FETCH_MY_MATCHES_REFRESH = \"MATCHING/FETCH_MY_MATCHES_REFRESH\",\r\n\r\n    FETCH_HISTORY_BEGIN = \"MATCHING/FETCH_HISTORY_BEGIN\",\r\n    FETCH_HISTORY_FAILURE = \"MATCHING/FETCH_HISTORY_FAILURE\",\r\n    FETCH_HISTORY_SUCCESS = \"MATCHING/FETCH_HISTORY_SUCCESS\",\r\n    FETCH_HISTORY_REFRESH = \"MATCHING/FETCH_HISTORY_REFRESH\",\r\n\r\n    ACTION_CANCEL_SUCCESS = \"MATCHING/ACTION_CANCEL_SUCCESS\",\r\n    ACTION_CANCEL_FAILURE = \"MATCHING/ACTION_CANCEL_FAILURE\",\r\n\r\n    SET_HISTORY_FILTERS = \"MATCHING/SET_HISTORY_FILTERS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {type: string};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n    matchStatus: MatchActionStatus;\r\n    roomId: string | null;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type SetHistoryFiltersAction = {\r\n    type: string;\r\n    filters: {[key: string]: boolean};\r\n};\r\n\r\nexport type ActionCancelSuccessAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n    isMatch: boolean;\r\n};\r\nexport type ActionCancelFailureAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | PaginatedFetchBeginAction\r\n    | PaginatedFetchSuccessAction<UserProfile>\r\n    | PaginatedFetchSuccessAction<MatchHistoryItem>\r\n    | PaginatedFetchFailureAction\r\n    | PaginatedFetchRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | SetHistoryFiltersAction\r\n    | ActionCancelSuccessAction\r\n    | ActionCancelFailureAction;\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst beginFetchProfiles = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {filters, profilesPagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchProfilesFailure());\r\n        return;\r\n    }\r\n\r\n    if (profilesPagination.fetching || !profilesPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    // Replaces empty arrays with \"undefined\"\r\n    function notEmpty<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n    // Remove the \"degrees\" filters when not filtering for students\r\n    const degrees = filters.types && filters.types.indexOf(\"student\") === -1 ? [] : filters.degrees;\r\n    // Same for staffRoles & staff\r\n    const staffRoles = filters.types && filters.types.indexOf(\"staff\") === -1 ? [] : filters.staffRoles;\r\n\r\n    const filterParams = {\r\n        universities: notEmpty(filters.universities),\r\n        spokenLanguages: notEmpty(filters.languages),\r\n        degrees: notEmpty(degrees),\r\n        educationFields: notEmpty(filters.educationFields),\r\n        staffRoles: notEmpty(staffRoles),\r\n        types: notEmpty(filters.types),\r\n        offers: notEmpty(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: profilesPagination.page,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const profiles = (paginated.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(profiles, canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nconst fetchProfilesFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nconst fetchProfilesSuccess = (\r\n    items: UserProfile[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<UserProfile> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nconst likeProfileSuccess = (\r\n    profile: UserProfile,\r\n    matchStatus: MatchActionStatus,\r\n    roomId: string | null,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profile,\r\n    matchStatus,\r\n    roomId,\r\n});\r\n\r\nexport const likeProfile = (profile: UserProfile): AppThunk<Promise<MatchActionResponseDto | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toProfileId: profile.id}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {status, roomId} = payload as MatchActionResponseDto;\r\n        dispatch(likeProfileSuccess(profile, status, roomId));\r\n        return {status, roomId};\r\n    }\r\n    return null;\r\n};\r\n\r\nconst dislikeProfileSuccess = (profile: UserProfile): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const dislikeProfile = (profile: UserProfile): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toProfileId: profile.id}, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(dislikeProfileSuccess(profile));\r\n};\r\n\r\nconst blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nconst beginFetchMyMatches = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nconst fetchMyMatchesFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nconst fetchMyMatchesSuccess = (\r\n    items: UserProfile[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<UserProfile> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchMyMatchesRefresh = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_REFRESH,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching,\r\n    } = getState();\r\n\r\n    const pagination = matching.myMatchesPagination;\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const items = (payload as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchMyMatchesSuccess(items, false));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n\r\nconst beginFetchHistory = (): PaginatedFetchBeginAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN,\r\n});\r\n\r\nconst fetchHistorySuccess = (\r\n    items: MatchHistoryItem[],\r\n    canFetchMore: boolean,\r\n): PaginatedFetchSuccessAction<MatchHistoryItem> => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchHistoryFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE,\r\n});\r\n\r\nexport const refreshFetchedHistory = (): PaginatedFetchRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH,\r\n});\r\n\r\nexport const fetchHistory = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {historyPagination, historyFilters},\r\n    } = getState();\r\n\r\n    if (historyPagination.fetching || !historyPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchHistory());\r\n\r\n    const response = await requestBackend(\r\n        \"matching/history\",\r\n        \"GET\",\r\n        {\r\n            page: historyPagination.page,\r\n            limit: HISTORY_FETCH_LIMIT,\r\n            status: Object.keys(historyFilters).filter((k) => historyFilters[k]),\r\n            search: search && search.length > 0 ? search : undefined,\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const items = (paginated.data as MatchHistoryItemDto[]).map(convertDtoToHistoryItem);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchHistorySuccess(items, canFetchMore));\r\n    } else dispatch(fetchHistoryFailure());\r\n};\r\n\r\nexport const setHistoryFilters = (filters: {[key: string]: boolean}): SetHistoryFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst cancelActionFailure = (historyItemId: string): ActionCancelFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_FAILURE,\r\n    historyItemId,\r\n});\r\n\r\nconst cancelActionSuccess = (historyItemId: string, isMatch: boolean): ActionCancelSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS,\r\n    historyItemId,\r\n    isMatch,\r\n});\r\n\r\nexport const cancelMatchAction = (historyItemId: string, isMatch = false): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\r\n        \"matching/cancel\",\r\n        \"POST\",\r\n        {},\r\n        {matchingEntityId: historyItemId},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(cancelActionSuccess(historyItemId, isMatch));\r\n        return true;\r\n    } else {\r\n        dispatch(cancelActionFailure(historyItemId));\r\n        return false;\r\n    }\r\n};\r\n","export function arrayWithIdsToDict<T extends {id: string}>(arr: T[]): {[key: string]: T} {\r\n    return arr.reduce((dict, el) => ((dict[el.id] = el), dict), {} as {[key: string]: T});\r\n}\r\n\r\nexport function arrayWithIdMapperToDict<T>(arr: T[], id: (item: T) => string): {[key: string]: T} {\r\n    return arr.reduce((dict, el) => ((dict[id(el)] = el), dict), {} as {[key: string]: T});\r\n}\r\n\r\nexport type CancelablePromise<T = unknown> = Promise<T> & {cancel: () => void};\r\n\r\nexport function makePromiseCancelable<T>(promise: Promise<T>): CancelablePromise<T> {\r\n    let hasCanceled = false;\r\n\r\n    const wrappedPromise = new Promise<T>((resolve, reject) => {\r\n        promise.then((val: T) => !hasCanceled && resolve(val));\r\n        promise.catch((error) => (hasCanceled ? reject({canceled: true}) : reject(error)));\r\n    });\r\n\r\n    const cancel = () => (hasCanceled = true);\r\n\r\n    return Object.assign(wrappedPromise, {cancel});\r\n}\r\n","import {MATCH_ACTION_HISTORY_STATUSES} from \"../../api/dto\";\r\nimport {arrayWithIdsToDict} from \"../../general-utils\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES} from \"../auth/actions\";\r\nimport {initialPaginatedState, MatchingFiltersState, MatchingState, PaginatedFetchSuccessAction} from \"../types\";\r\nimport {\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    SetHistoryFiltersAction,\r\n    ActionCancelSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    educationFields: [],\r\n    staffRoles: [],\r\n    types: [],\r\n});\r\n\r\nconst initialHistoryFilters = () => {\r\n    const filters: {[key: string]: boolean} = {};\r\n    MATCH_ACTION_HISTORY_STATUSES.forEach((k) => (filters[k] = true));\r\n    return filters;\r\n};\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    profiles: {},\r\n    orderedProfileIds: [],\r\n    profilesPagination: initialPaginatedState(),\r\n    historyPagination: initialPaginatedState(),\r\n    historyFilters: initialHistoryFilters(),\r\n    historyItems: [],\r\n    myMatches: [],\r\n    myMatchesPagination: initialPaginatedState(),\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = action as SetOfferFilterAction;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = action as SetMatchingFiltersAction;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<UserProfile>;\r\n            const ids = items.map((p) => p.id);\r\n            const pagination = state.profilesPagination;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.concat(\r\n                    // Remove duplicates\r\n                    ids.filter((id) => state.orderedProfileIds.indexOf(id) === -1),\r\n                ),\r\n                profiles: {...state.profiles, ...arrayWithIdsToDict(items)},\r\n                profilesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: [],\r\n                profilesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, myMatchesPagination: {...state.myMatchesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                myMatchesPagination: {...state.myMatchesPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<UserProfile>;\r\n            const pagination = state.historyPagination;\r\n            return {\r\n                ...state,\r\n                myMatches: state.myMatches.concat(items),\r\n                myMatchesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                myMatches: [],\r\n                myMatchesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS:\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profile} = action as LikeProfileSuccessAction | DislikeProfileSuccessAction;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.filter((id: string) => id != profile.id),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = action as BlockProfileSuccessAction;\r\n            return {\r\n                ...state,\r\n                orderedProfileIds: state.orderedProfileIds.filter((id: string) => id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS: {\r\n            const {items, canFetchMore} = action as PaginatedFetchSuccessAction<MatchHistoryItem>;\r\n            const pagination = state.historyPagination;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.concat(items),\r\n                historyPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH: {\r\n            return {\r\n                ...state,\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS: {\r\n            const {filters} = action as SetHistoryFiltersAction;\r\n            return {\r\n                ...state,\r\n                historyFilters: {...state.historyFilters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {historyItemId} = action as ActionCancelSuccessAction;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.filter((it: MatchHistoryItem) => it.id !== historyItemId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                profiles: {},\r\n                orderedProfileIds: [],\r\n                profilesPagination: initialPaginatedState(),\r\n                myMatches: [],\r\n                myMatchesPagination: initialPaginatedState(),\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {noop} from \"lodash\";\r\nimport io from \"socket.io-client\";\r\nimport {BACKEND_URL, DEBUG_MODE} from \"../constants/config\";\r\nimport {ChatRoom} from \"../model/chat-room\";\r\nimport {ResponseChatWritingDto, ResponseChatMessageDto, TokenDto, ResponseChatMessageReadDto} from \"./dto\";\r\n\r\nconst SOCKET_LOCATION = `${BACKEND_URL}/chat`;\r\n\r\nconst WRITING_STATE_DELAY = 1000;\r\nconst CONNECT_TIMEOUT = 2000;\r\nconst RECONNECT_ATTEMPTS = 3;\r\n\r\nexport type ChatSocketEventListeners = {\r\n    onMessageReceived: (m: ResponseChatMessageDto) => void;\r\n    onWritingStateChange: (m: ResponseChatWritingDto) => void;\r\n    onMessageRead: (m: ResponseChatMessageReadDto) => void;\r\n};\r\n\r\nclass ChatSocket {\r\n    private socket: SocketIOClient.Socket | null;\r\n    private connectCallbacks: ((connected: boolean) => void)[];\r\n    private writingTimeout: NodeJS.Timeout | null;\r\n    private lastSentWritingState: boolean;\r\n    private lastSentWritingStateRoom: ChatRoom | null;\r\n\r\n    private connectTimeout: NodeJS.Timeout | null;\r\n\r\n    constructor() {\r\n        this.socket = null;\r\n        this.connectCallbacks = [];\r\n        this.writingTimeout = null;\r\n        this.lastSentWritingState = false;\r\n        this.lastSentWritingStateRoom = null;\r\n        this.connectTimeout = null;\r\n    }\r\n\r\n    private consumeConnectCallbacks(connectedState: boolean): void {\r\n        this.connectCallbacks.forEach((f) => f(connectedState));\r\n        this.connectCallbacks = [];\r\n    }\r\n\r\n    private registerListeners(listeners: ChatSocketEventListeners): void {\r\n        if (!this.socket) return;\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            this.log(\"connected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(true);\r\n        });\r\n        this.socket.on(\"close\", () => {\r\n            this.log(\"close\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n        this.socket.on(\"disconnect\", () => {\r\n            this.log(\"disconnected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n\r\n        /*this.socket.on(\"connect_failed\", () => this.log(\"connect_failed\"));\r\n        this.socket.on(\"connect_error\", () => this.log(\"connect_error\"));\r\n        this.socket.on(\"error\", () => this.log(\"error\"));\r\n        this.socket.on(\"exception\", (e: unknown) => this.log(\"<---- Exception \" + JSON.stringify(e)));*/\r\n\r\n        this.socket.on(\"receiveMessage\", (m: ResponseChatMessageDto) => listeners.onMessageReceived(m));\r\n        this.socket.on(\"readMessage\", (m: ResponseChatMessageReadDto) => listeners.onMessageRead(m));\r\n        this.socket.on(\"isWriting\", (m: ResponseChatWritingDto) => listeners.onWritingStateChange(m));\r\n    }\r\n\r\n    private log(msg: string): void {\r\n        if (DEBUG_MODE) console.log(`[ChatSocket] ${msg}`);\r\n    }\r\n\r\n    private emit(msg: string, payload: unknown): void {\r\n        this.log(`----> '${msg}' - payload: ${JSON.stringify(payload)}`);\r\n        this.socket?.emit(msg, payload);\r\n    }\r\n\r\n    private sendWritingState(room: ChatRoom, state: boolean): void {\r\n        this.lastSentWritingState = state;\r\n        this.lastSentWritingStateRoom = room;\r\n        this.emit(\"isWriting\", {roomId: room.id, state});\r\n    }\r\n\r\n    private refreshWritingTimeout(room: ChatRoom): void {\r\n        if (this.writingTimeout !== null) {\r\n            clearTimeout(this.writingTimeout);\r\n            this.writingTimeout = null;\r\n        }\r\n        this.writingTimeout = setTimeout(() => {\r\n            this.sendWritingState(room, false);\r\n        }, WRITING_STATE_DELAY);\r\n    }\r\n\r\n    addConnectCallback(callback: (connected: boolean) => void): void {\r\n        this.connectCallbacks.push(callback);\r\n    }\r\n\r\n    connect(\r\n        authToken: TokenDto,\r\n        listeners: Partial<ChatSocketEventListeners> = {},\r\n        callback?: (connected: boolean) => void,\r\n        retry = RECONNECT_ATTEMPTS,\r\n    ): void {\r\n        // If we're already connected, callback and abort\r\n        if (this.isConnected()) {\r\n            if (callback) callback(true);\r\n            return;\r\n        }\r\n\r\n        if (callback) this.addConnectCallback(callback);\r\n\r\n        // If we're already connecting, abort (the callback we be called whenever we're connected)\r\n        if (this.isConnecting()) return;\r\n\r\n        this.log(\"Connecting to \" + SOCKET_LOCATION);\r\n\r\n        if (this.socket) {\r\n            this.socket.connect();\r\n            /*setTimeout(() => {\r\n                if (this.socket) this.socket.connect();\r\n            }, 100);*/\r\n        } else {\r\n            this.log(\"----> Authenticating - token = \" + authToken.accessToken);\r\n            this.socket = io(SOCKET_LOCATION, {\r\n                query: {authorization: authToken.accessToken},\r\n                //reconnectionDelay: RECONNECT_DELAY,\r\n                //reconnectionAttempts: RECONNECT_ATTEMPTS,\r\n                reconnection: false,\r\n            });\r\n            this.registerListeners({\r\n                onMessageRead: noop,\r\n                onMessageReceived: noop,\r\n                onWritingStateChange: noop,\r\n                ...listeners,\r\n            });\r\n        }\r\n\r\n        if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n\r\n        // Set a timeout to catch connection failure\r\n        this.connectTimeout = setTimeout(() => {\r\n            this.connectTimeout = null;\r\n            // If we're still not connected\r\n            if (!this.isConnected()) {\r\n                // Try again\r\n                if (retry > 0) this.connect(authToken, listeners, noop, retry - 1);\r\n                // Stop trying\r\n                else this.consumeConnectCallbacks(false);\r\n            }\r\n        }, CONNECT_TIMEOUT);\r\n    }\r\n\r\n    joinRoom(room: ChatRoom): void {\r\n        this.emit(\"joinRoom\", {roomId: room.id});\r\n        // Inform the server that we have read the last message of the room\r\n        if (room.lastMessage) this.readMessage(room.id, room.lastMessage._id, room.lastMessage.createdAt.toJSON());\r\n    }\r\n\r\n    leaveRoom(room: ChatRoom): void {\r\n        this.emit(\"leaveRoom\", {roomId: room.id});\r\n    }\r\n\r\n    sendMessage(roomId: string, id: string, text: string): void {\r\n        this.emit(\"sendMessage\", {roomId, id, text});\r\n    }\r\n\r\n    readMessage(roomId: string, messageId: string, createdAt: string): void {\r\n        this.emit(\"readMessage\", {roomId, messageId, date: createdAt});\r\n    }\r\n\r\n    setWriting(room: ChatRoom): void {\r\n        // Refesh the timeout - in a fixed amount of time, this will tell the server we are no longer writing\r\n        this.refreshWritingTimeout(room);\r\n\r\n        // If we are beginning to write, inform the server now\r\n        if (this.lastSentWritingState === false) this.sendWritingState(room, true);\r\n    }\r\n\r\n    disconnect(): void {\r\n        // If we were connecting\r\n        if (this.isConnecting()) {\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        }\r\n        // If the socket was connected, disconnect it\r\n        if (this.isConnected()) {\r\n            if (this.lastSentWritingStateRoom && this.lastSentWritingState === true)\r\n                this.sendWritingState(this.lastSentWritingStateRoom, false);\r\n            if (this.socket) this.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return this.socket !== null && this.socket.connected;\r\n    }\r\n\r\n    isConnecting(): boolean {\r\n        return this.connectTimeout !== null;\r\n    }\r\n}\r\n\r\nexport default new ChatSocket();\r\n","import chatSocket from \"../../api/chat-socket\";\r\nimport {convertDtoToChatMessage, convertDtoToRoom} from \"../../api/converters\";\r\nimport {\r\n    PaginatedRequestResponse,\r\n    ResponseChatMessageDto,\r\n    ResponseChatMessageReadDto,\r\n    ResponseChatWritingDto,\r\n    ResponseRoomDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MESSAGES_FETCH_LIMIT, ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ChatRoom, ChatRoomMessage} from \"../../model/chat-room\";\r\nimport {\r\n    AppThunk,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchSuccessAction,\r\n    PaginatedFetchSuccessActionRefreshable,\r\n} from \"../types\";\r\n\r\nexport enum MESSAGING_ACTION_TYPES {\r\n    FETCH_MATCH_ROOMS_BEGIN = \"MESSAGING/FETCH_MATCH_ROOMS_BEGIN\",\r\n    FETCH_MATCH_ROOMS_FAILURE = \"MESSAGING/FETCH_MATCH_ROOMS_FAILURE\",\r\n    FETCH_MATCH_ROOMS_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOMS_SUCCESS\",\r\n    FETCH_MATCH_ROOM_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOM_SUCCESS\",\r\n    CONNECT_TO_CHAT_BEGIN = \"MESSAGING/CONNECT_TO_CHAT_BEGIN\",\r\n    CONNECT_TO_CHAT_FAILURE = \"MESSAGING/CONNECT_TO_CHAT_FAILURE\",\r\n    CONNECT_TO_CHAT_SUCCESS = \"MESSAGING/CONNECT_TO_CHAT_SUCCESS\",\r\n    DISCONNECT_FROM_CHAT = \"MESSAGING/DISCONNECT_FROM_CHAT\",\r\n    JOIN_CHAT_ROOM_BEGIN = \"MESSAGING/JOIN_CHAT_ROOM_BEGIN\",\r\n    JOIN_CHAT_ROOM_FAILURE = \"MESSAGING/JOIN_CHAT_ROOM_FAILURE\",\r\n    JOIN_CHAT_ROOM_SUCCESS = \"MESSAGING/JOIN_CHAT_ROOM_SUCCESS\",\r\n    LEAVE_ROOM = \"MESSAGING/LEAVE_ROOM\",\r\n    SEND_MESSAGE_FAILURE = \"MESSAGING/SEND_MESSAGE_FAILURE\",\r\n    SEND_MESSAGE_SUCCESS = \"MESSAGING/SEND_MESSAGE_SUCCESS\",\r\n    RECEIVE_MESSAGE = \"MESSAGING/RECEIVE_MESSAGE\",\r\n    RECEIVE_WRITING_STATE = \"MESSAGING/RECEIVE_WRITING_STATE\",\r\n    READ_MESSAGE = \"MESSAGING/READ_MESSAGE\",\r\n    FETCH_EARLIER_MESSAGES_BEGIN = \"MESSAGING/FETCH_EARLIER_MESSAGES_BEGIN\",\r\n    FETCH_EARLIER_MESSAGES_FAILURE = \"MESSAGING/FETCH_EARLIER_MESSAGES_FAILURE\",\r\n    FETCH_EARLIER_MESSAGES_SUCCESS = \"MESSAGING/FETCH_EARLIER_MESSAGES_SUCCESS\",\r\n    FETCH_NEW_MESSAGES_BEGIN = \"MESSAGING/FETCH_NEW_MESSAGES_BEGIN\",\r\n    FETCH_NEW_MESSAGES_FAILURE = \"MESSAGING/FETCH_NEW_MESSAGES_FAILURE\",\r\n    FETCH_NEW_MESSAGES_SUCCESS = \"MESSAGING/FETCH_NEW_MESSAGES_SUCCESS\",\r\n}\r\n\r\nexport type FetchMatchRoomSuccessAction = {type: string; room: ChatRoom};\r\n\r\nexport type ConnectToChatBeginAction = {type: string};\r\nexport type ConnectToChatFailureAction = {type: string};\r\nexport type ConnectToChatSuccessAction = {type: string};\r\n\r\nexport type JoinChatRoomBeginAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomFailureAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomSuccessAction = {type: string; room: ChatRoom};\r\nexport type LeaveChatRoomAction = {type: string};\r\n\r\nexport type DisconnectFromChatAction = {type: string};\r\n\r\nexport type SendMessageFailureAction = {type: string};\r\nexport type SendMessageSuccessAction = {type: string; message: ChatRoomMessage};\r\nexport type ReceiveChatMessageAction = {type: string; message: ResponseChatMessageDto};\r\nexport type ReceiveChatWritingAction = {type: string; payload: ResponseChatWritingDto};\r\nexport type ReadChatMessageAction = {type: string; payload: ResponseChatMessageReadDto};\r\n\r\nexport type FetchEarlierMessagesBeginAction = {room: ChatRoom} & PaginatedFetchBeginAction;\r\nexport type FetchEarlierMessagesFailureAction = {room: ChatRoom} & PaginatedFetchFailureAction;\r\nexport type FetchEarlierMessagesSuccessAction = {room: ChatRoom} & PaginatedFetchSuccessAction<ChatRoomMessage>;\r\n\r\nexport type FetchNewMessagesBeginAction = {room: ChatRoom} & PaginatedFetchBeginAction;\r\nexport type FetchNewMessagesFailureAction = {room: ChatRoom} & PaginatedFetchFailureAction;\r\nexport type FetchNewMessagesSuccessAction = {room: ChatRoom} & PaginatedFetchSuccessAction<ChatRoomMessage>;\r\n\r\nexport type MessagingAction =\r\n    | FetchMatchRoomSuccessAction\r\n    | PaginatedFetchBeginAction\r\n    | PaginatedFetchSuccessActionRefreshable<ChatRoom>\r\n    | ConnectToChatBeginAction\r\n    | ConnectToChatFailureAction\r\n    | ConnectToChatSuccessAction\r\n    | JoinChatRoomBeginAction\r\n    | JoinChatRoomFailureAction\r\n    | JoinChatRoomSuccessAction\r\n    | LeaveChatRoomAction\r\n    | DisconnectFromChatAction\r\n    | SendMessageFailureAction\r\n    | SendMessageSuccessAction\r\n    | ReceiveChatMessageAction\r\n    | FetchEarlierMessagesBeginAction\r\n    | FetchEarlierMessagesFailureAction\r\n    | FetchEarlierMessagesSuccessAction\r\n    | FetchNewMessagesBeginAction\r\n    | FetchNewMessagesFailureAction\r\n    | FetchNewMessagesSuccessAction;\r\n\r\nconst beginFetchMatchRooms = (): PaginatedFetchBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN,\r\n});\r\n\r\nconst fetchMatchRoomsFailure = (): PaginatedFetchFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE,\r\n});\r\n\r\nconst fetchMatchRoomsSuccess = (\r\n    items: ChatRoom[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<ChatRoom> => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nexport const fetchMatchRooms = (search?: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const token = state.auth.token;\r\n    const pagination = state.messaging.matchRoomsPagination;\r\n\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchMatchRooms());\r\n\r\n    const response = await requestBackend(\r\n        \"rooms\",\r\n        \"GET\",\r\n        {page: refresh ? 1 : pagination.page, limit: ROOMS_FETCH_LIMIT, search},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const rooms = (paginated.data as ResponseRoomDto[]).map(convertDtoToRoom);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMatchRoomsSuccess(rooms, canFetchMore, refresh));\r\n    } else dispatch(fetchMatchRoomsFailure());\r\n};\r\n\r\nexport const refreshMatchRooms = (search?: string): AppThunk => async (dispatch) => {\r\n    dispatch(fetchMatchRooms(search, true));\r\n};\r\n\r\nconst connectToChatBegin = (): ConnectToChatBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN,\r\n});\r\n\r\nconst connectToChatFailure = (): ConnectToChatFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE,\r\n});\r\n\r\nconst connectToChatSuccess = (): ConnectToChatSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS,\r\n});\r\n\r\nexport const connectToChat = (callback?: (connected: boolean) => void): AppThunk => async (dispatch, getState) => {\r\n    const authToken = getState().auth.token;\r\n\r\n    const fail = () => {\r\n        dispatch(connectToChatFailure());\r\n        if (callback) callback(false);\r\n    };\r\n\r\n    if (chatSocket.isConnected()) {\r\n        if (callback) callback(true);\r\n    } else if (authToken) {\r\n        if (chatSocket.isConnecting()) {\r\n            if (callback) chatSocket.addConnectCallback(callback);\r\n        } else {\r\n            dispatch(connectToChatBegin());\r\n            chatSocket.connect(\r\n                authToken,\r\n                {\r\n                    onMessageReceived: (m) => {\r\n                        const {activeRoomId} = getState().messaging;\r\n                        // Tell the server we've read the message if this is the active room\r\n                        if (m.roomId == activeRoomId) chatSocket.readMessage(activeRoomId, m.id, m.updatedAt);\r\n                        dispatch(receiveChatMessage(m));\r\n                    },\r\n                    onMessageRead: (p) => dispatch(readChatMessage(p)),\r\n                    onWritingStateChange: (m) => dispatch(receiveChatWriting(m)),\r\n                },\r\n                (hasConnected: boolean) => {\r\n                    if (hasConnected) {\r\n                        dispatch(connectToChatSuccess());\r\n                        if (callback) callback(true);\r\n                    } else fail();\r\n                },\r\n            );\r\n        }\r\n    } else fail();\r\n};\r\n\r\nexport const disconnectFromChat = (): DisconnectFromChatAction => {\r\n    chatSocket.disconnect();\r\n    return {type: MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT};\r\n};\r\n\r\nconst joinChatRoomBegin = (room: ChatRoom): JoinChatRoomBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomFailure = (room: ChatRoom): JoinChatRoomFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomSuccess = (room: ChatRoom): JoinChatRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const joinChatRoom = (room: ChatRoom): AppThunk => async (dispatch) => {\r\n    if (chatSocket.isConnected()) {\r\n        dispatch(joinChatRoomBegin(room));\r\n        chatSocket.joinRoom(room);\r\n        dispatch(joinChatRoomSuccess(room));\r\n    } else dispatch(joinChatRoomFailure(room));\r\n};\r\n\r\nexport const leaveChatRoom = (room: ChatRoom): LeaveChatRoomAction => {\r\n    chatSocket.leaveRoom(room);\r\n    return {type: MESSAGING_ACTION_TYPES.LEAVE_ROOM};\r\n};\r\n\r\nconst sendChatMessageFailure = (): SendMessageFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_FAILURE,\r\n});\r\n\r\nconst sendChatMessageSuccess = (message: ChatRoomMessage): SendMessageSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n});\r\n\r\nexport const sendChatMessage = (id: string, text: string, createdAt: Date): AppThunk => async (dispatch, getState) => {\r\n    const {activeRoomId, localChatUser} = getState().messaging;\r\n\r\n    if (chatSocket.isConnected() && activeRoomId && localChatUser) {\r\n        const message: ChatRoomMessage = {\r\n            _id: id,\r\n            createdAt,\r\n            user: localChatUser,\r\n            text,\r\n            sent: false,\r\n        };\r\n        dispatch(sendChatMessageSuccess(message));\r\n        chatSocket.sendMessage(activeRoomId, id, text);\r\n    } else dispatch(sendChatMessageFailure());\r\n};\r\n\r\nexport const receiveChatMessage = (message: ResponseChatMessageDto): ReceiveChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE,\r\n    message,\r\n});\r\n\r\nconst receiveChatWriting = (payload: ResponseChatWritingDto): ReceiveChatWritingAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE,\r\n    payload,\r\n});\r\n\r\nconst readChatMessage = (payload: ResponseChatMessageReadDto): ReadChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.READ_MESSAGE,\r\n    payload,\r\n});\r\n\r\nconst fetchEarlierMessagesBegin = (room: ChatRoom): FetchEarlierMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesFailure = (room: ChatRoom): FetchEarlierMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesSuccess = (\r\n    room: ChatRoom,\r\n    items: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchEarlierMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS,\r\n    room,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchNewMessagesBegin = (room: ChatRoom): FetchNewMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesFailure = (room: ChatRoom): FetchNewMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesSuccess = (\r\n    room: ChatRoom,\r\n    items: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchNewMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS,\r\n    room,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\n/**\r\n * Fetch all messages that are more recent than the last one we have for a given room.\r\n * @param room a ChatRoom\r\n */\r\nexport const fetchNewMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {fetchingNewMessages} = state.messaging;\r\n    const token = state.auth.token;\r\n\r\n    if (fetchingNewMessages) return;\r\n    const lastMessage = room.lastMessage;\r\n\r\n    if (chatSocket.isConnected() && lastMessage) {\r\n        dispatch(fetchNewMessagesBegin(room));\r\n\r\n        // Fetch messages only after the date of the latest message we have\r\n        const afterDate = lastMessage.createdAt.toJSON();\r\n\r\n        const fetchPage = async (page: number) => {\r\n            const response = await requestBackend(\r\n                `rooms/${room.id}/messages`,\r\n                \"GET\",\r\n                {page, limit: MESSAGES_FETCH_LIMIT, afterDate},\r\n                {},\r\n                token,\r\n            );\r\n\r\n            const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n                const user = room.users.find((u) => u._id === dto.senderId);\r\n                return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n            };\r\n\r\n            if (response.status === HttpStatusCode.OK) {\r\n                const paginated = response as PaginatedRequestResponse;\r\n                const messages = (paginated.data as ResponseChatMessageDto[])\r\n                    .map(convertDto)\r\n                    .filter((m) => m !== undefined);\r\n\r\n                // Keep fetching if there are more messages to fetch\r\n                if (page < paginated.meta.totalPages) fetchPage(page + 1);\r\n                else if (messages.length > 0 && messages[0]) {\r\n                    // Inform the server that we've read the last message\r\n                    chatSocket.readMessage(room.id, messages[0]._id, messages[0].createdAt.toJSON());\r\n                }\r\n                dispatch(\r\n                    fetchNewMessagesSuccess(room, messages as ChatRoomMessage[], page < paginated.meta.totalPages),\r\n                );\r\n            } else dispatch(fetchNewMessagesFailure(room));\r\n        };\r\n\r\n        fetchPage(1);\r\n    } else {\r\n        dispatch(fetchNewMessagesFailure(room));\r\n    }\r\n};\r\n\r\nexport const fetchEarlierMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {\r\n        socketState: {connected},\r\n    } = state.messaging;\r\n    const token = state.auth.token;\r\n    const pagination = room.messagePagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    if (connected) {\r\n        dispatch(fetchEarlierMessagesBegin(room));\r\n\r\n        // Fetch messages only before the date of the earliest message we have\r\n        const beforeDate =\r\n            room.messages.length > 0 ? room.messages[room.messages.length - 1].createdAt.toJSON() : undefined;\r\n\r\n        const response = await requestBackend(\r\n            `rooms/${room.id}/messages`,\r\n            \"GET\",\r\n            {page: 1, limit: MESSAGES_FETCH_LIMIT, beforeDate},\r\n            {},\r\n            token,\r\n        );\r\n\r\n        const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n            const user = room.users.find((u) => u._id === dto.senderId);\r\n            return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n        };\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const paginated = response as PaginatedRequestResponse;\r\n            const messages = (paginated.data as ResponseChatMessageDto[])\r\n                .map(convertDto)\r\n                .filter((m) => m !== undefined);\r\n            const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n            dispatch(fetchEarlierMessagesSuccess(room, messages as ChatRoomMessage[], canFetchMore));\r\n        } else dispatch(fetchEarlierMessagesFailure(room));\r\n    } else {\r\n        dispatch(fetchEarlierMessagesFailure(room));\r\n    }\r\n};\r\n\r\nconst fetchMatchRoomSuccess = (room: ChatRoom): FetchMatchRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const fetchMatchRoom = (roomId: string): AppThunk<Promise<ChatRoom | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    const response = await requestBackend(`rooms/${roomId}`, \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const room = convertDtoToRoom(payload as ResponseRoomDto);\r\n        dispatch(fetchMatchRoomSuccess(room));\r\n        return room;\r\n    } else return null;\r\n};\r\n","import {convertDtoToChatMessage} from \"../../api/converters\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {CreateProfileSuccessAction, FetchUserSuccessAction, PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {MessagingState, initialPaginatedState, PaginatedFetchSuccessActionRefreshable} from \"../types\";\r\nimport {\r\n    FetchEarlierMessagesBeginAction,\r\n    FetchEarlierMessagesFailureAction,\r\n    FetchEarlierMessagesSuccessAction,\r\n    FetchMatchRoomSuccessAction,\r\n    FetchNewMessagesSuccessAction,\r\n    JoinChatRoomBeginAction,\r\n    MessagingAction,\r\n    MESSAGING_ACTION_TYPES,\r\n    ReadChatMessageAction,\r\n    ReceiveChatMessageAction,\r\n    ReceiveChatWritingAction,\r\n    SendMessageSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: MessagingState = {\r\n    matchRooms: {},\r\n    matchRoomsOrdered: [],\r\n    matchRoomsPagination: initialPaginatedState(),\r\n    socketState: {connected: false, connecting: false},\r\n    activeRoomId: null,\r\n    localChatUser: null,\r\n    fetchingNewMessages: false,\r\n};\r\n\r\nfunction toLocalChatUser(profile: UserProfile): ChatRoomUser | null {\r\n    return {\r\n        _id: profile.id,\r\n        name: `${profile.firstName} ${profile.lastName}`,\r\n        avatar: profile.avatarUrl || \"\",\r\n        lastMessageSeenDate: null,\r\n        lastMessageSeenId: null,\r\n    };\r\n}\r\n\r\nexport const messagingReducer = (state: MessagingState = initialState, action: MessagingAction): MessagingState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(profile)};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN: {\r\n            return {...state, matchRoomsPagination: {...state.matchRoomsPagination, fetching: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                matchRoomsPagination: {...state.matchRoomsPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<ChatRoom>;\r\n            const pagination = state.matchRoomsPagination;\r\n            const matchRooms = {...state.matchRooms};\r\n            // Add entries in the rooms dictionary\r\n            items.forEach((r: ChatRoom) => {\r\n                if (matchRooms[r.id]) {\r\n                    // matchRooms[r.id] = {...matchRooms[r.id], lastMessage: r.lastMessage, users: r.users};\r\n                    matchRooms[r.id] = {...matchRooms[r.id], lastMessage: r.lastMessage};\r\n                } else {\r\n                    matchRooms[r.id] = r;\r\n                }\r\n            });\r\n            const ids = items.map((r: ChatRoom) => r.id);\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms,\r\n                matchRoomsOrdered: refresh ? ids : state.matchRoomsOrdered.concat(ids),\r\n                matchRoomsPagination: {fetching: false, page: (refresh ? 1 : pagination.page) + 1, canFetchMore},\r\n            };\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOM_SUCCESS: {\r\n            const {room} = action as FetchMatchRoomSuccessAction;\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms: {\r\n                    ...state.matchRooms,\r\n                    [room.id]: state.matchRooms[room.id]\r\n                        ? {...state.matchRooms[room.id], lastMessage: room.lastMessage}\r\n                        : room,\r\n                },\r\n            };\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN: {\r\n            return {...state, socketState: {connected: false, connecting: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS: {\r\n            return {...state, socketState: {connected: true, connecting: false}};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT: {\r\n            return {...state, socketState: {connected: false, connecting: false}, activeRoomId: null};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN: {\r\n            const {room} = action as JoinChatRoomBeginAction;\r\n            return {...state, activeRoomId: room.id};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE:\r\n        case MESSAGING_ACTION_TYPES.LEAVE_ROOM: {\r\n            return {...state, activeRoomId: null};\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS: {\r\n            const {message} = action as SendMessageSuccessAction;\r\n            if (state.activeRoomId) {\r\n                const room = state.matchRooms[state.activeRoomId];\r\n                return updateRoom(state, true, {\r\n                    ...room,\r\n                    messages: [message].concat(room.messages),\r\n                    lastMessage: message,\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE: {\r\n            const {message} = action as ReceiveChatMessageAction;\r\n\r\n            let room = state.matchRooms[message.roomId];\r\n            if (room) {\r\n                room = {...room};\r\n                // Start by checking if this is an existing message (e.g. our own message)\r\n                const existingMessage = room.messages.find((m: ChatRoomMessage) => m._id === message.id);\r\n                if (existingMessage) {\r\n                    const msg = {...existingMessage, sent: true, text: message.text};\r\n\r\n                    // Update the message in the list\r\n                    room.messages = room.messages.map((m: ChatRoomMessage) => (m._id === message.id ? msg : m));\r\n\r\n                    // Also update the last message\r\n                    if (!room.lastMessage || msg.createdAt >= room.lastMessage.createdAt) room.lastMessage = msg;\r\n                } else {\r\n                    const user = room.users.find((u: ChatRoomUser) => u._id == message.senderId);\r\n                    if (user) {\r\n                        const msg = convertDtoToChatMessage(user, message);\r\n                        room.messages = [msg].concat(room.messages);\r\n                        room.lastMessage = msg;\r\n                        room.writing[message.senderId] = false;\r\n                    }\r\n                }\r\n                return updateRoom(state, true, room);\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE: {\r\n            const payload = (action as ReceiveChatWritingAction).payload;\r\n            const {profileId, roomId} = payload;\r\n\r\n            // Just ignore if this is about our own writing state\r\n            if (state.localChatUser && state.localChatUser._id === profileId) return state;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    writing: {...room.writing, [profileId]: payload.state},\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.READ_MESSAGE: {\r\n            const {roomId, date, messageId, profileId} = (action as ReadChatMessageAction).payload;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    users: room.users.map((u: ChatRoomUser) =>\r\n                        u._id == profileId\r\n                            ? {...u, lastMessageSeenDate: new Date(date), lastMessageSeenId: messageId}\r\n                            : u,\r\n                    ),\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN: {\r\n            const {room} = action as FetchEarlierMessagesBeginAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: true},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE: {\r\n            const {room} = action as FetchEarlierMessagesFailureAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: false, canFetchMore: false},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS: {\r\n            const {room, items, canFetchMore} = action as FetchEarlierMessagesSuccessAction;\r\n            const pagination = room.messagePagination;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messages: room.messages.concat(items),\r\n                messagePagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            });\r\n        }\r\n\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: true,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: false,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS: {\r\n            const {room, items} = action as FetchNewMessagesSuccessAction;\r\n            const filteredMessages = items.filter((ma) => !room.messages.some((mb) => mb._id === ma._id));\r\n            const users = room.users.concat(); // copy\r\n\r\n            // Update the last message seen for the user who sent it\r\n            if (filteredMessages.length > 0) {\r\n                const lastMessage = filteredMessages[0];\r\n                const i = users.findIndex((u) => u._id === lastMessage.user._id);\r\n                users[i] = {\r\n                    ...users[i],\r\n                    lastMessageSeenId: lastMessage._id,\r\n                    lastMessageSeenDate: lastMessage.createdAt,\r\n                };\r\n            }\r\n\r\n            return updateRoom({...state, fetchingNewMessages: false}, false, {\r\n                ...room,\r\n                messages: filteredMessages.concat(room.messages),\r\n                users,\r\n                ...(filteredMessages.length > 0 ? {lastMessage: filteredMessages[0]} : {}),\r\n            });\r\n        }\r\n\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                activeRoomId: null,\r\n                matchRooms: {},\r\n                matchRoomsOrdered: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n                localChatUser: null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateRoom(state: MessagingState, setAsFirst: boolean, room: ChatRoom): MessagingState {\r\n    if (setAsFirst) {\r\n        const otherRooms = state.matchRoomsOrdered.filter((id: string) => id !== room.id);\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            matchRoomsOrdered: [room.id].concat(otherRooms),\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n        };\r\n    }\r\n}\r\n","import {NotificationsState} from \"../types\";\r\nimport {NotificationsAction} from \"./actions\";\r\n\r\nexport const initialState: NotificationsState = {};\r\n\r\nexport const notificationsReducer = (\r\n    state: NotificationsState = initialState,\r\n    action: NotificationsAction,\r\n): NotificationsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    AppThunk,\r\n    PaginatedFetchBeginAction,\r\n    PaginatedFetchFailureAction,\r\n    PaginatedFetchRefreshAction,\r\n    PaginatedFetchSuccessAction,\r\n    PaginatedFetchSuccessActionRefreshable,\r\n    ValidatedThunkAction,\r\n} from \"../types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {\r\n    GROUPS_FETCH_LIMIT,\r\n    GROUPS_POSTS_FETCH_LIMIT,\r\n    GROUP_MEMBERS_FETCH_LIMIT,\r\n    POSTS_FEED_FETCH_LIMIT,\r\n    POST_COMMENTS_FETCH_LIMIT,\r\n} from \"../../constants/config\";\r\nimport {\r\n    CreateGroupDto,\r\n    CreateGroupPostDto,\r\n    CreatePostCommentDto,\r\n    GroupCoverSuccessfullyUpdatedDto,\r\n    GroupMemberStatus,\r\n    GroupRole,\r\n    PaginatedRequestResponse,\r\n    ResponseGroupDto,\r\n    ResponseGroupMemberDto,\r\n    ResponseGroupPostDto,\r\n    ResponsePostCommentDto,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {Group, GroupMember, GroupPost, PostComment, PostSortingOrder, GroupVoteStatus} from \"../../model/groups\";\r\nimport {\r\n    convertDtoToGroup,\r\n    convertDtoToGroupMember,\r\n    convertDtoToGroupPost,\r\n    convertDtoToPostComments,\r\n    convertDtoToProfile,\r\n} from \"../../api/converters\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {uploadImage} from \"../../api/media-upload\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {findComment, findPost} from \"./helpers\";\r\nimport {User} from \"../../model/user\";\r\n\r\nexport enum GROUP_ACTION_TYPES {\r\n    CREATE_SUCCESS = \"GROUP/CREATE_SUCCESS\",\r\n    CREATE_FAILURE = \"GROUP/CREATE_FAILURE\",\r\n    UPDATE_SUCCESS = \"GROUP/UPDATE_SUCCESS\",\r\n    UPDATE_FAILURE = \"GROUP/UPDATE_FAILURE\",\r\n    DELETE_SUCCESS = \"GROUP/DELETE_SUCCESS\",\r\n    DELETE_FAILURE = \"GROUP/DELETE_FAILURE\",\r\n    LEAVE_SUCCESS = \"GROUP/LEAVE_SUCCESS\",\r\n    FETCH_POSTS_FEED_BEGIN = \"GROUP/FETCH_POSTS_FEED_BEGIN\",\r\n    FETCH_POSTS_FEED_SUCCESS = \"GROUP/FETCH_POSTS_FEED_SUCCESS\",\r\n    FETCH_POSTS_FEED_FAILURE = \"GROUP/FETCH_POSTS_FEED_FAILURE\",\r\n    FETCH_GROUPS_BEGIN = \"GROUP/FETCH_GROUPS_BEGIN\",\r\n    FETCH_GROUPS_FAILURE = \"GROUP/FETCH_GROUPS_FAILURE\",\r\n    FETCH_GROUPS_SUCCESS = \"GROUP/FETCH_GROUPS_SUCCESS\",\r\n    FETCH_GROUP_SUCCESS = \"GROUP/FETCH_GROUP_SUCCESS\",\r\n    FETCH_GROUP_MEMBERS_BEGIN = \"GROUP/FETCH_GROUP_MEMBERS_BEGIN\",\r\n    FETCH_GROUP_MEMBERS_SUCCESS = \"GROUP/FETCH_GROUP_MEMBERS_SUCCESS\",\r\n    FETCH_GROUP_MEMBERS_FAILURE = \"GROUP/FETCH_GROUP_MEMBERS_FAILURE\",\r\n    FETCH_GROUP_MEMBERS_REFRESH = \"GROUP/FETCH_GROUP_MEMBERS_REFRESH\",\r\n    DELETE_GROUP_MEMBER_SUCCESS = \"GROUP/DELETE_GROUP_MEMBER_SUCCESS\",\r\n    SET_GROUP_MEMBER_STATUS_SUCCESS = \"GROUP/SET_GROUP_MEMBER_STATUS_SUCCESS\",\r\n    SET_GROUP_MEMBER_ROLE_SUCCESS = \"GROUP/SET_GROUP_MEMBER_ROLE_SUCCESS\",\r\n    INVITE_TO_GROUP_SUCCESS = \"GROUP/INVITE_TO_GROUP_SUCCESS\",\r\n    FETCH_GROUP_POSTS_BEGIN = \"GROUP/FETCH_GROUP_POSTS_BEGIN\",\r\n    FETCH_GROUP_POSTS_SUCCESS = \"GROUP/FETCH_GROUP_POSTS_SUCCESS\",\r\n    FETCH_GROUP_POSTS_FAILURE = \"GROUP/FETCH_GROUP_POSTS_FAILURE\",\r\n    FETCH_POST_COMMENTS_BEGIN = \"GROUP/FETCH_POST_COMMENTS_BEGIN\",\r\n    FETCH_POST_COMMENTS_SUCCESS = \"GROUP/FETCH_POST_COMMENTS_SUCCESS\",\r\n    FETCH_POST_COMMENTS_FAILURE = \"GROUP/FETCH_POST_COMMENTS_FAILURE\",\r\n    FETCH_POST_COMMENTS_REFRESH = \"GROUP/FETCH_POST_COMMENTS_REFRESH\",\r\n    FETCH_MYGROUPS_BEGIN = \"GROUP/FETCH_MYGROUPS_BEGIN\",\r\n    FETCH_MYGROUPS_FAILURE = \"GROUP/FETCH_MYGROUPS_FAILURE\",\r\n    FETCH_MYGROUPS_SUCCESS = \"GROUP/FETCH_MYGROUPS_SUCCESS\",\r\n    JOIN_GROUP_SUCCESS = \"GROUP/JOIN_GROUP_SUCCESS\",\r\n    CREATE_POST_BEGIN = \"GROUP/CREATE_POST_BEGIN\",\r\n    CREATE_POST_SUCCESS = \"GROUP/CREATE_POST_SUCCESS\",\r\n    CREATE_POST_FAILURE = \"GROUP/CREATE_POST_FAILURE\",\r\n    UPDATE_POST_SUCCESS = \"GROUP/UPDATE_POST_SUCCESS\",\r\n    DELETE_POST_SUCCESS = \"GROUP/DELETE_POST_SUCCESS\",\r\n    CREATE_COMMENT_BEGIN = \"GROUP/CREATE_COMMENT_BEGIN\",\r\n    CREATE_COMMENT_SUCCESS = \"GROUP/CREATE_COMMENT_SUCCESS\",\r\n    CREATE_COMMENT_FAILURE = \"GROUP/CREATE_COMMENT_FAILURE\",\r\n    UPDATE_COMMENT_SUCCESS = \"GROUP/UPDATE_COMMENT_SUCCESS\",\r\n    DELETE_COMMENT_SUCCESS = \"GROUP/DELETE_COMMENT_SUCCESS\",\r\n    SET_COVER_BEGIN = \"GROUP/SET_COVER_BEGIN\",\r\n    SET_COVER_SUCCESS = \"GROUP/SET_COVER_SUCCESS\",\r\n    SET_COVER_FAILURE = \"GROUP/SET_COVER_FAILURE\",\r\n    SET_POST_SORTING_ORDER = \"GROUP/SET_POST_SORTING_ORDER\",\r\n    SET_POST_VOTE_BEGIN = \"GROUP/SET_POST_VOTE_BEGIN\",\r\n    SET_POST_VOTE_SUCCESS = \"GROUP/SET_POST_VOTE_SUCCESS\",\r\n    SET_COMMENT_VOTE_BEGIN = \"GROUP/SET_COMMENT_VOTE_BEGIN\",\r\n    SET_COMMENT_VOTE_SUCCESS = \"GROUP/SET_COMMENT_VOTE_SUCCESS\",\r\n    FETCH_AVAILABLE_MATCHES_BEGIN = \"GROUP/FETCH_AVAILABLE_MATCHES_BEGIN\",\r\n    FETCH_AVAILABLE_MATCHES_FAILURE = \"GROUP/FETCH_AVAILABLE_MATCHES_FAILURE\",\r\n    FETCH_AVAILABLE_MATCHES_SUCCESS = \"GROUP/FETCH_AVAILABLE_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type CreateGroupSuccessAction = {type: string; group: Group};\r\nexport type CreateGroupFailureAction = {type: string};\r\n\r\nexport type UpdateGroupSuccessAction = {\r\n    type: string;\r\n    group: {id: string} & Partial<Group>;\r\n};\r\nexport type UpdateGroupFailureAction = {type: string};\r\n\r\nexport type DeleteGroupSuccessAction = {type: string};\r\nexport type DeleteGroupFailureAction = {type: string};\r\n\r\nexport type LeaveGroupSuccessAction = {type: string; id: string};\r\n\r\nexport type FetchGroupSuccessAction = {type: string; group: Group};\r\n\r\nexport type FetchMyGroupsBeginAction = {invites: boolean} & PaginatedFetchBeginAction;\r\nexport type FetchMyGroupsFailureAction = {invites: boolean} & PaginatedFetchFailureAction;\r\nexport type FetchMyGroupsSuccessAction = {invites: boolean} & PaginatedFetchSuccessActionRefreshable<Group>;\r\nexport type FetchMyGroupsRefreshAction = {invites: boolean} & PaginatedFetchRefreshAction;\r\n\r\nexport type FetchGroupMembersBeginAction = PaginatedFetchBeginAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\nexport type FetchGroupMembersSuccessAction = PaginatedFetchSuccessAction<GroupMember> & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n    totalItems: number;\r\n    search?: string;\r\n};\r\nexport type FetchGroupMembersRefreshAction = PaginatedFetchRefreshAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\nexport type FetchGroupMembersFailureAction = PaginatedFetchFailureAction & {\r\n    groupId: string;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\n\r\nexport type DeleteGroupMemberSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    isLocalUser: boolean;\r\n};\r\nexport type SetGroupMemberStatusSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    memberStatus: GroupMemberStatus;\r\n    isLocalUser: boolean;\r\n};\r\n\r\nexport type SetGroupMemberRoleSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profileId: string;\r\n    role: GroupRole;\r\n    isLocalUser: boolean;\r\n};\r\n\r\nexport type InviteToGroupSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    profile: UserProfile;\r\n    memberStatus: GroupMemberStatus;\r\n};\r\n\r\nexport type FetchGroupPostsBeginAction = PaginatedFetchBeginAction & {groupId: string};\r\nexport type FetchGroupPostsSuccessAction = PaginatedFetchSuccessActionRefreshable<GroupPost> & {groupId: string};\r\nexport type FetchGroupPostsRefreshAction = PaginatedFetchRefreshAction & {groupId: string};\r\nexport type FetchGroupPostsFailureAction = PaginatedFetchFailureAction & {groupId: string};\r\n\r\nexport type FetchPostCommentsBeginAction = PaginatedFetchBeginAction & {groupId: string; postId: string};\r\nexport type FetchPostCommentsSuccessAction = PaginatedFetchSuccessAction<PostComment> & {\r\n    groupId: string;\r\n    postId: string;\r\n};\r\nexport type FetchPostCommentsFailureAction = PaginatedFetchFailureAction & {groupId: string; postId: string};\r\nexport type FetchPostCommentsRefreshAction = PaginatedFetchRefreshAction & {groupId: string; postId: string};\r\n\r\nexport type JoinGroupSuccessAction = {\r\n    type: string;\r\n    group: Group;\r\n    memberStatus: GroupMemberStatus;\r\n    role: GroupRole;\r\n    localUser: User | null;\r\n};\r\n\r\nexport type CreatePostBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\nexport type CreatePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    post: GroupPost;\r\n};\r\nexport type CreatePostFailureAction = {type: string};\r\n\r\nexport type UpdatePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    post: GroupPost;\r\n};\r\n\r\nexport type DeletePostSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n};\r\n\r\nexport type CreateCommentBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n};\r\nexport type CreateCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    comment: PostComment;\r\n    parentId: string | null;\r\n};\r\nexport type CreateCommentFailureAction = {type: string};\r\n\r\nexport type UpdateCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    comments: PostComment[]; // possibly children getting updated too\r\n};\r\n\r\nexport type DeleteCommentSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n};\r\n\r\nexport type SetGroupCoverBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\nexport type SetGroupCoverSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    url: string;\r\n};\r\nexport type SetGroupCoverFailureAction = {\r\n    type: string;\r\n    groupId: string;\r\n};\r\n\r\nexport type SetPostSortingOrderAction = {\r\n    type: string;\r\n    order: PostSortingOrder;\r\n};\r\n\r\nexport type SetPostVoteBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetPostVoteSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetCommentVoteBeginAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type SetCommentVoteSuccessAction = {\r\n    type: string;\r\n    groupId: string;\r\n    postId: string;\r\n    commentId: string;\r\n    status: GroupVoteStatus;\r\n};\r\n\r\nexport type FetchAvailableMatchesBeginAction = {type: string; groupId: string};\r\nexport type FetchAvailableMatchesFailureAction = {type: string; groupId: string};\r\nexport type FetchAvailableMatchesSuccessAction = {type: string; groupId: string; items: UserProfile[]};\r\n\r\nexport type GroupsAction = CreateGroupSuccessAction &\r\n    CreateGroupFailureAction &\r\n    UpdateGroupSuccessAction &\r\n    UpdateGroupFailureAction &\r\n    LeaveGroupSuccessAction &\r\n    FetchGroupSuccessAction &\r\n    FetchMyGroupsBeginAction &\r\n    FetchMyGroupsFailureAction &\r\n    FetchMyGroupsSuccessAction &\r\n    FetchMyGroupsRefreshAction &\r\n    PaginatedFetchBeginAction &\r\n    PaginatedFetchFailureAction &\r\n    PaginatedFetchSuccessAction<Group> &\r\n    PaginatedFetchRefreshAction &\r\n    PaginatedFetchSuccessActionRefreshable<Group> &\r\n    FetchGroupMembersBeginAction &\r\n    FetchGroupMembersFailureAction &\r\n    FetchGroupMembersSuccessAction &\r\n    FetchGroupMembersRefreshAction &\r\n    DeleteGroupMemberSuccessAction &\r\n    SetGroupMemberStatusSuccessAction &\r\n    SetGroupMemberRoleSuccessAction &\r\n    InviteToGroupSuccessAction &\r\n    FetchGroupPostsBeginAction &\r\n    FetchGroupPostsFailureAction &\r\n    FetchGroupPostsSuccessAction &\r\n    FetchGroupPostsRefreshAction &\r\n    FetchPostCommentsBeginAction &\r\n    FetchPostCommentsFailureAction &\r\n    FetchPostCommentsSuccessAction &\r\n    FetchPostCommentsRefreshAction &\r\n    JoinGroupSuccessAction &\r\n    CreatePostBeginAction &\r\n    CreatePostFailureAction &\r\n    CreatePostSuccessAction &\r\n    UpdatePostSuccessAction &\r\n    DeletePostSuccessAction &\r\n    CreateCommentBeginAction &\r\n    CreateCommentFailureAction &\r\n    CreateCommentSuccessAction &\r\n    UpdateCommentSuccessAction &\r\n    DeleteCommentSuccessAction &\r\n    SetGroupCoverBeginAction &\r\n    SetGroupCoverFailureAction &\r\n    SetGroupCoverSuccessAction &\r\n    SetPostSortingOrderAction &\r\n    SetPostVoteBeginAction &\r\n    SetPostVoteSuccessAction &\r\n    SetCommentVoteBeginAction &\r\n    SetCommentVoteSuccessAction &\r\n    FetchAvailableMatchesBeginAction &\r\n    FetchAvailableMatchesFailureAction &\r\n    FetchAvailableMatchesSuccessAction;\r\n\r\nconst createGroupSuccess = (group: Group): CreateGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_SUCCESS,\r\n    group,\r\n});\r\n\r\nconst createGroupFailure = (): CreateGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_FAILURE,\r\n});\r\n\r\nconst updateGroupSuccess = (group: {id: string} & Partial<Group>): UpdateGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_SUCCESS,\r\n    group,\r\n});\r\n\r\nconst updateGroupFailure = (): UpdateGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_FAILURE,\r\n});\r\n\r\nconst deleteGroupSuccess = (): DeleteGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_SUCCESS,\r\n});\r\n\r\nconst deleteGroupFailure = (): DeleteGroupFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_FAILURE,\r\n});\r\n\r\nexport const createGroup = (group: CreateGroupDto): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n\r\n    const dto: CreateGroupDto = {\r\n        ...group,\r\n        name: group.name.trim(),\r\n    };\r\n\r\n    const response = await requestBackend(\"groups\", \"POST\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseGroupDto;\r\n        const createdGroup: Group = {\r\n            ...convertDtoToGroup(payload),\r\n            myStatus: GroupMemberStatus.Approved,\r\n            myRole: GroupRole.Admin,\r\n        };\r\n        dispatch(createGroupSuccess(createdGroup));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const updateGroup = (id: string, group: Partial<CreateGroupDto>): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n\r\n    const response = await requestBackend(`groups/${id}`, \"PATCH\", {}, group, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const responseGroup = (response as SuccessfulRequestResponse).data as {id: string} & Partial<Group>;\r\n        dispatch(updateGroupSuccess(responseGroup));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(updateGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const deleteGroup = (id: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n\r\n    const response = await requestBackend(`groups/${id}`, \"DELETE\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteGroupSuccess());\r\n        return {success: true};\r\n    } else {\r\n        dispatch(deleteGroupFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst leaveGroupSuccess = (id: string): LeaveGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.LEAVE_SUCCESS,\r\n    id,\r\n});\r\n\r\nexport const leaveGroup = (id: string, deleteData: boolean): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    if (!user) return false;\r\n\r\n    const response = await requestBackend(\r\n        `groups/${id}/members/${user.id}`,\r\n        \"DELETE\",\r\n        {cascade: deleteData},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(leaveGroupSuccess(id));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst beginFetchGroups = (): PaginatedFetchBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_BEGIN,\r\n});\r\n\r\nconst fetchGroupsSuccess = (\r\n    groups: Group[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<Group> => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_SUCCESS,\r\n    items: groups,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchGroupsFailure = (): PaginatedFetchFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUPS_FAILURE,\r\n});\r\n\r\nexport const fetchGroups = (search?: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {pagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchGroupsFailure());\r\n        return;\r\n    }\r\n\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchGroups());\r\n\r\n    const response = await requestBackend(\r\n        \"groups\",\r\n        \"GET\",\r\n        {\r\n            page: refresh ? 1 : pagination.page,\r\n            limit: GROUPS_FETCH_LIMIT,\r\n            search: search && search.length > 0 ? search : undefined,\r\n            explore: true,\r\n            statuses: [GroupMemberStatus.Invited, GroupMemberStatus.InvitedByAdmin, GroupMemberStatus.Pending],\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const groups = (paginated.data as ResponseGroupDto[]).map(convertDtoToGroup);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupsSuccess(groups, canFetchMore, refresh));\r\n    } else dispatch(fetchGroupsFailure());\r\n};\r\n\r\nconst fetchGroupSuccess = (group: Group): FetchGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_SUCCESS,\r\n    group,\r\n});\r\n\r\nexport const fetchGroup = (groupId: string): AppThunk<Promise<Group | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return null;\r\n\r\n    const response = await requestBackend(`groups/${groupId}`, \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const group = convertDtoToGroup(payload as ResponseGroupDto);\r\n        dispatch(fetchGroupSuccess(group));\r\n        return group;\r\n    } else return null;\r\n};\r\n\r\nconst fetchPostsFeedBegin = (): PaginatedFetchBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n});\r\n\r\nconst fetchPostsFeedSuccess = (\r\n    items: GroupPost[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): PaginatedFetchSuccessActionRefreshable<GroupPost> => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchPostsFeedFailure = (): PaginatedFetchFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POSTS_FEED_FAILURE,\r\n});\r\n\r\nexport const refreshFetchedPostsFeed = (): AppThunk => async (dispatch) => {\r\n    dispatch(fetchPostsFeed(true));\r\n};\r\n\r\nexport const fetchPostsFeed = (refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {feedPagination},\r\n    } = getState();\r\n\r\n    if (!refresh && (feedPagination.fetching || !feedPagination.canFetchMore)) return;\r\n\r\n    dispatch(fetchPostsFeedBegin());\r\n\r\n    const response = await requestBackend(\r\n        \"groups/feed\",\r\n        \"GET\",\r\n        {page: refresh ? 1 : feedPagination.page, limit: POSTS_FEED_FETCH_LIMIT},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const posts = (paginated.data as ResponseGroupPostDto[]).map((p) => convertDtoToGroupPost(p));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchPostsFeedSuccess(posts, canFetchMore, refresh));\r\n    } else dispatch(fetchPostsFeedFailure());\r\n};\r\n\r\nconst fetchGroupPostsBegin = (groupId: string): FetchGroupPostsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst fetchGroupPostsSuccess = (\r\n    groupId: string,\r\n    items: GroupPost[],\r\n    canFetchMore: boolean,\r\n    refresh: boolean,\r\n): FetchGroupPostsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_SUCCESS,\r\n    groupId,\r\n    items,\r\n    canFetchMore,\r\n    refresh,\r\n});\r\n\r\nconst fetchGroupPostsFailure = (groupId: string): FetchGroupPostsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const refreshFetchedGroupPosts = (groupId: string): AppThunk => async (dispatch) => {\r\n    dispatch(fetchGroupPosts(groupId, true));\r\n};\r\n\r\nexport const fetchGroupPosts = (groupId: string, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict, postsSortOrder},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n\r\n    if (!g || (!refresh && (g.postsPagination.fetching || !g.postsPagination.canFetchMore))) return;\r\n\r\n    dispatch(fetchGroupPostsBegin(groupId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts`,\r\n        \"GET\",\r\n        {page: refresh ? 1 : g.postsPagination.page, limit: GROUPS_POSTS_FETCH_LIMIT, type: postsSortOrder},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const posts = (paginated.data as ResponseGroupPostDto[]).map((p) => convertDtoToGroupPost(p));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupPostsSuccess(groupId, posts, canFetchMore, refresh));\r\n    } else dispatch(fetchGroupPostsFailure(groupId));\r\n};\r\n\r\nconst fetchPostCommentsBegin = (groupId: string, postId: string): FetchPostCommentsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nconst fetchPostCommentsSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    items: PostComment[],\r\n    canFetchMore: boolean,\r\n): FetchPostCommentsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchPostCommentsFailure = (groupId: string, postId: string): FetchPostCommentsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_FAILURE,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const fetchPostCommentsRefresh = (groupId: string, postId: string): FetchPostCommentsRefreshAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_REFRESH,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const fetchPostComments = (groupId: string, postId: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    // Try to get the post from storage (from its group or from the feed)\r\n    const p = findPost(groups, groupId, postId);\r\n\r\n    if (!p || p.commentsPagination.fetching || !p.commentsPagination.canFetchMore) return;\r\n\r\n    dispatch(fetchPostCommentsBegin(groupId, postId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments`,\r\n        \"GET\",\r\n        {page: p.commentsPagination.page, limit: POST_COMMENTS_FETCH_LIMIT},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const comments = (paginated.data as ResponsePostCommentDto[]).flatMap((c) => convertDtoToPostComments(c));\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchPostCommentsSuccess(groupId, postId, comments, canFetchMore));\r\n    } else dispatch(fetchPostCommentsFailure(groupId, postId));\r\n};\r\n\r\nconst fetchGroupMembersBegin = (groupId: string, memberStatus: GroupMemberStatus): FetchGroupMembersBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nconst fetchGroupMembersSuccess = (\r\n    groupId: string,\r\n    items: GroupMember[],\r\n    canFetchMore: boolean,\r\n    totalItems: number,\r\n    memberStatus: GroupMemberStatus,\r\n    search?: string,\r\n): FetchGroupMembersSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_SUCCESS,\r\n    groupId,\r\n    items,\r\n    canFetchMore,\r\n    totalItems,\r\n    memberStatus,\r\n    search,\r\n});\r\n\r\nconst fetchGroupMembersFailure = (\r\n    groupId: string,\r\n    memberStatus: GroupMemberStatus,\r\n): FetchGroupMembersFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_FAILURE,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nexport const fetchGroupMembersRefresh = (\r\n    groupId: string,\r\n    memberStatus: GroupMemberStatus,\r\n): FetchGroupMembersRefreshAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_REFRESH,\r\n    groupId,\r\n    memberStatus,\r\n});\r\n\r\nexport const fetchGroupMembers = (groupId: string, status: GroupMemberStatus, search?: string): AppThunk => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n    if (!g) return;\r\n\r\n    const pagination = g.membersPaginations[status];\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(fetchGroupMembersBegin(groupId, status));\r\n\r\n    if (search && search.length <= 1) search = undefined;\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members`,\r\n        \"GET\",\r\n        {page: pagination.page, limit: GROUP_MEMBERS_FETCH_LIMIT, statuses: [status], search},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const members = (paginated.data as ResponseGroupMemberDto[]).map(convertDtoToGroupMember);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchGroupMembersSuccess(groupId, members, canFetchMore, paginated.meta.totalItems, status, search));\r\n    } else dispatch(fetchGroupMembersFailure(groupId, status));\r\n};\r\n\r\nconst deleteGroupMemberSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    isLocalUser: boolean,\r\n): DeleteGroupMemberSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_GROUP_MEMBER_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    isLocalUser,\r\n});\r\n\r\nexport const deleteGroupMember = (\r\n    groupId: string,\r\n    profileId: string,\r\n    deleteData?: boolean,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members/${profileId}`,\r\n        \"DELETE\",\r\n        {cascade: deleteData},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteGroupMemberSuccess(groupId, profileId, profileId === user?.id));\r\n        // If we're deleting the user's data, force a refresh on the feed and posts to ensure it's not there anymore\r\n        if (deleteData) {\r\n            dispatch(refreshFetchedPostsFeed());\r\n            dispatch(refreshFetchedGroupPosts(groupId));\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst setGroupMemberStatusSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    memberStatus: GroupMemberStatus,\r\n    isLocalUser: boolean,\r\n): SetGroupMemberStatusSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_GROUP_MEMBER_STATUS_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    memberStatus,\r\n    isLocalUser,\r\n});\r\n\r\nexport const setGroupMemberStatus = (\r\n    groupId: string,\r\n    profileId: string,\r\n    status: GroupMemberStatus,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(`groups/${groupId}/members/${profileId}`, \"PATCH\", {}, {status}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(setGroupMemberStatusSuccess(groupId, profileId, status, profileId === user?.id));\r\n        // If banned, force a refresh on the feed and posts to ensure the user's content is not there anymore\r\n        if (status === GroupMemberStatus.Banned) {\r\n            dispatch(refreshFetchedPostsFeed());\r\n            dispatch(refreshFetchedGroupPosts(groupId));\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst setGroupMemberRoleSuccess = (\r\n    groupId: string,\r\n    profileId: string,\r\n    role: GroupRole,\r\n    isLocalUser: boolean,\r\n): SetGroupMemberRoleSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_GROUP_MEMBER_ROLE_SUCCESS,\r\n    groupId,\r\n    profileId,\r\n    role,\r\n    isLocalUser,\r\n});\r\n\r\nexport const setGroupMemberRole = (\r\n    groupId: string,\r\n    profileId: string,\r\n    role: GroupRole,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    const response = await requestBackend(`groups/${groupId}/members/${profileId}`, \"PATCH\", {}, {role}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(setGroupMemberRoleSuccess(groupId, profileId, role, profileId === user?.id));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst inviteToGroupSuccess = (\r\n    groupId: string,\r\n    profile: UserProfile,\r\n    memberStatus: GroupMemberStatus,\r\n): InviteToGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.INVITE_TO_GROUP_SUCCESS,\r\n    groupId,\r\n    profile,\r\n    memberStatus,\r\n});\r\n\r\nexport const inviteToGroup = (groupId: string, profile: UserProfile): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    /// Backend is responsible for assigning the right status\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/members`,\r\n        \"POST\",\r\n        {},\r\n        {profileId: profile.id},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const status = (payload.data as ResponseGroupMemberDto).status;\r\n        dispatch(inviteToGroupSuccess(groupId, profile, status));\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nconst beginFetchMyGroups = (invites: boolean): FetchMyGroupsBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_BEGIN,\r\n    invites,\r\n});\r\n\r\nconst fetchMyGroupsSuccess = (\r\n    items: Group[],\r\n    canFetchMore: boolean,\r\n    invites: boolean,\r\n    refresh: boolean,\r\n): FetchMyGroupsSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n    invites,\r\n    refresh,\r\n});\r\n\r\nconst fetchMyGroupsFailure = (invites: boolean): FetchMyGroupsFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_MYGROUPS_FAILURE,\r\n    invites,\r\n});\r\n\r\nexport const refreshFetchedMyGroups = (invites = false): AppThunk => async (dispatch) => {\r\n    dispatch(fetchMyGroups(invites, true));\r\n};\r\n\r\nexport const fetchMyGroups = (invites = false, refresh = false): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {myGroupsPagination, myGroupInvitesPagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchMyGroupsFailure(invites));\r\n        return;\r\n    }\r\n\r\n    const pagination = invites ? myGroupInvitesPagination : myGroupsPagination;\r\n    if (!refresh && (pagination.fetching || !pagination.canFetchMore)) return;\r\n\r\n    dispatch(beginFetchMyGroups(invites));\r\n\r\n    const response = await requestBackend(\r\n        \"groups\",\r\n        \"GET\",\r\n        {\r\n            page: refresh ? 1 : pagination.page,\r\n            limit: GROUPS_FETCH_LIMIT,\r\n            statuses: invites\r\n                ? [GroupMemberStatus.Invited, GroupMemberStatus.InvitedByAdmin]\r\n                : [GroupMemberStatus.Approved],\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const groups = (paginated.data as ResponseGroupDto[]).map(convertDtoToGroup);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMyGroupsSuccess(groups, canFetchMore, invites, refresh));\r\n    } else dispatch(fetchMyGroupsFailure(invites));\r\n};\r\n\r\nconst joinGroupSuccess = (\r\n    group: Group,\r\n    memberStatus: GroupMemberStatus,\r\n    role: GroupRole,\r\n    localUser: User | null,\r\n): JoinGroupSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.JOIN_GROUP_SUCCESS,\r\n    group,\r\n    memberStatus,\r\n    role,\r\n    localUser,\r\n});\r\n\r\nexport const joinGroup = (group: Group): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {user},\r\n    } = getState();\r\n\r\n    if (!token) return false;\r\n\r\n    // Handle the case where we've been invited already\r\n    if (user && group.myStatus !== null) {\r\n        if (!group.requiresApproval || group.myStatus === GroupMemberStatus.InvitedByAdmin)\r\n            return dispatch(setGroupMemberStatus(group.id, user.id, GroupMemberStatus.Approved));\r\n        else if (group.myStatus === GroupMemberStatus.Invited)\r\n            return dispatch(setGroupMemberStatus(group.id, user.id, GroupMemberStatus.Pending));\r\n    }\r\n\r\n    const response = await requestBackend(`groups/${group.id}/members`, \"POST\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const data = (response as SuccessfulRequestResponse).data as ResponseGroupMemberDto;\r\n        const role: GroupRole = data.role;\r\n        const status: GroupMemberStatus = data.status;\r\n        dispatch(joinGroupSuccess(group, status, role, user));\r\n        return true;\r\n    } else return false;\r\n};\r\n\r\nconst createGroupPostBegin = (groupId: string): CreatePostBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst createGroupPostFailure = (): CreatePostFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_FAILURE,\r\n});\r\n\r\nconst createGroupPostSuccess = (groupId: string, post: GroupPost): CreatePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_POST_SUCCESS,\r\n    groupId,\r\n    post,\r\n});\r\n\r\nexport const createGroupPost = (groupId: string, dto: CreateGroupPostDto): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    dispatch(createGroupPostBegin(groupId));\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts`, \"POST\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const post = convertDtoToGroupPost(payload as ResponseGroupPostDto, getState().profile.user?.profile);\r\n        dispatch(createGroupPostSuccess(groupId, post));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createGroupPostFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst updateGroupPostSuccess = (groupId: string, post: GroupPost): UpdatePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_POST_SUCCESS,\r\n    groupId,\r\n    post,\r\n});\r\n\r\nexport const updateGroupPost = (\r\n    groupId: string,\r\n    postId: string,\r\n    dto: Partial<CreateGroupPostDto>,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}`, \"PATCH\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseGroupPostDto;\r\n        const post = convertDtoToGroupPost(payload, getState().profile.user?.profile);\r\n        dispatch(updateGroupPostSuccess(groupId, post));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deletePostSuccess = (groupId: string, postId: string): DeletePostSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_POST_SUCCESS,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nexport const deleteGroupPost = (groupId: string, postId: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}`, \"DELETE\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deletePostSuccess(groupId, postId));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst createPostCommentBegin = (groupId: string, postId: string): CreateCommentBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_BEGIN,\r\n    groupId,\r\n    postId,\r\n});\r\n\r\nconst createPostCommentFailure = (): CreateCommentFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_FAILURE,\r\n});\r\n\r\nconst createPostCommentSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    comment: PostComment,\r\n    parentId: string | null,\r\n): CreateCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.CREATE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    comment,\r\n    parentId,\r\n});\r\n\r\nexport const createPostComment = (\r\n    groupId: string,\r\n    postId: string,\r\n    dto: CreatePostCommentDto,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    if (!token) return {success: false};\r\n\r\n    dispatch(createPostCommentBegin(groupId, postId));\r\n\r\n    let depth = 0;\r\n\r\n    if (dto.parentId) {\r\n        // Try to get the parent post and comment from storage (from its group or from the feed)\r\n        const parent = findComment(groups, groupId, postId, dto.parentId);\r\n        if (parent) depth = parent.depth + 1;\r\n    }\r\n\r\n    const response = await requestBackend(`groups/${groupId}/posts/${postId}/comments`, \"POST\", {}, dto, token);\r\n\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const comment = convertDtoToPostComments(\r\n            payload.data as ResponsePostCommentDto,\r\n            dto.parentId || null,\r\n            depth,\r\n            getState().profile.user?.profile,\r\n        )[0]; // no children yet => we can safely just get the first and only comment\r\n        dispatch(createPostCommentSuccess(groupId, postId, comment, dto.parentId || null));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(createPostCommentFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst updatePostCommentSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    comments: PostComment[],\r\n): UpdateCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.UPDATE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    comments,\r\n});\r\n\r\nexport const updatePostComment = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    dto: Partial<CreatePostCommentDto>,\r\n): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups,\r\n    } = getState();\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments/${commentId}`,\r\n        \"PATCH\",\r\n        {},\r\n        dto,\r\n        token,\r\n    );\r\n\r\n    const comment = findComment(groups, groupId, postId, commentId);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponsePostCommentDto;\r\n        // Can include children\r\n        const comments = convertDtoToPostComments(\r\n            payload,\r\n            comment?.parentId,\r\n            comment?.depth,\r\n            getState().profile.user?.profile,\r\n        );\r\n        dispatch(updatePostCommentSuccess(groupId, postId, comments));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deletePostCommentSuccess = (groupId: string, postId: string, commentId: string): DeleteCommentSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.DELETE_COMMENT_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n});\r\n\r\nexport const deletePostComment = (groupId: string, postId: string, commentId: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const {token} = getState().auth;\r\n\r\n    if (!token) return {success: false};\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/posts/${postId}/comments/${commentId}`,\r\n        \"DELETE\",\r\n        {},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deletePostCommentSuccess(groupId, postId, commentId));\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst setGroupCoverBegin = (groupId: string): SetGroupCoverBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst setGroupCoverSuccess = (groupId: string, url: string): SetGroupCoverSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_SUCCESS,\r\n    groupId,\r\n    url,\r\n});\r\n\r\nconst setGroupCoverFailure = (groupId: string): SetGroupCoverFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COVER_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const setGroupCover = (groupId: string, image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        profile: {uploadingAvatar},\r\n    } = getState();\r\n\r\n    const fail = () => dispatch(setGroupCoverFailure(groupId));\r\n\r\n    if (!token || uploadingAvatar) {\r\n        fail();\r\n        return;\r\n    }\r\n\r\n    dispatch(setGroupCoverBegin(groupId));\r\n\r\n    const fileName = await uploadImage(token, image, fail);\r\n\r\n    if (fileName) {\r\n        // Submit the filename to the server\r\n        const response = await requestBackend(`groups/${groupId}/cover`, \"POST\", {}, {fileName}, token);\r\n\r\n        if (response.status === HttpStatusCode.CREATED) {\r\n            const {cover} = (response as SuccessfulRequestResponse).data as GroupCoverSuccessfullyUpdatedDto;\r\n            dispatch(setGroupCoverSuccess(groupId, cover));\r\n        } else fail();\r\n    }\r\n};\r\n\r\nexport const setPostSortingOrder = (order: PostSortingOrder): SetPostSortingOrderAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_SORTING_ORDER,\r\n    order,\r\n});\r\n\r\nconst setPostVoteBegin = (groupId: string, postId: string, status: GroupVoteStatus): SetPostVoteBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_VOTE_BEGIN,\r\n    groupId,\r\n    postId,\r\n    status,\r\n});\r\n\r\nconst setPostVoteSuccess = (groupId: string, postId: string, status: GroupVoteStatus): SetPostVoteSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_POST_VOTE_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    status,\r\n});\r\n\r\nconst setCommentVoteBegin = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    status: GroupVoteStatus,\r\n): SetCommentVoteBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COMMENT_VOTE_BEGIN,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n    status,\r\n});\r\n\r\nconst setCommentVoteSuccess = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n    status: GroupVoteStatus,\r\n): SetCommentVoteSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.SET_COMMENT_VOTE_SUCCESS,\r\n    groupId,\r\n    postId,\r\n    commentId,\r\n    status,\r\n});\r\n\r\nexport const setVote = (\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string | null,\r\n    status: GroupVoteStatus,\r\n    currentStatus: GroupVoteStatus,\r\n): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n    } = getState();\r\n\r\n    const entityId = commentId || postId;\r\n    const isComment = commentId !== null;\r\n    const entityType = isComment ? \"comment\" : \"post\";\r\n    const url = `groups/${groupId}/votes/${entityType}/${entityId}`;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    if (isComment) dispatch(setCommentVoteBegin(groupId, postId, commentId!, status));\r\n    else dispatch(setPostVoteBegin(groupId, postId, status));\r\n\r\n    const response =\r\n        status === GroupVoteStatus.Neutral\r\n            ? // If setting to neutral, simply DELETE the entity\r\n              await requestBackend(url, \"DELETE\", {}, {}, token)\r\n            : currentStatus === GroupVoteStatus.Neutral\r\n            ? // If currently neutral, POST a new entity\r\n              await requestBackend(url, \"POST\", {}, {voteType: status}, token)\r\n            : // If already set, PATCH the entity\r\n              await requestBackend(url, \"PATCH\", {}, {voteType: status}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        if (commentId) dispatch(setCommentVoteSuccess(groupId, postId, commentId, status));\r\n        else dispatch(setPostVoteSuccess(groupId, postId, status));\r\n    }\r\n};\r\n\r\nconst fetchAvailableMatchesBegin = (groupId: string): FetchAvailableMatchesBeginAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n    groupId,\r\n});\r\n\r\nconst fetchAvailableMatchesSuccess = (groupId: string, items: UserProfile[]): FetchAvailableMatchesSuccessAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_SUCCESS,\r\n    groupId,\r\n    items,\r\n});\r\n\r\nconst fetchAvailableMatchesFailure = (groupId: string): FetchAvailableMatchesFailureAction => ({\r\n    type: GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_FAILURE,\r\n    groupId,\r\n});\r\n\r\nexport const fetchAvailableMatches = (groupId: string, search?: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        groups: {groupsDict},\r\n    } = getState();\r\n\r\n    const g = groupsDict[groupId];\r\n\r\n    if (!g || g.availableMatches.fetching) return;\r\n\r\n    dispatch(fetchAvailableMatchesBegin(groupId));\r\n\r\n    const response = await requestBackend(\r\n        `groups/${groupId}/availableMatches`,\r\n        \"GET\",\r\n        {search: search || \"\"},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = response as SuccessfulRequestResponse;\r\n        const profiles = (payload.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchAvailableMatchesSuccess(groupId, profiles));\r\n    } else dispatch(fetchAvailableMatchesFailure(groupId));\r\n};\r\n","import {ReportsState} from \"../types\";\r\nimport {ReportAction} from \"./actions\";\r\n\r\nexport const initialState: ReportsState = {};\r\n\r\nexport const reportsReducer = (state: ReportsState = initialState, action: ReportAction): ReportsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {GroupsState} from \"../types\";\r\n\r\nexport function findPost(state: GroupsState, groupId: string, postId: string): GroupPost | undefined {\r\n    const {groupsDict, postsFeed} = state;\r\n\r\n    // Try to get the post from storage (from its group or from the feed)\r\n    return groupsDict[groupId].posts[postId] || postsFeed[postId];\r\n}\r\n\r\nexport function findComment(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    postId: string,\r\n    commentId: string,\r\n): PostComment | undefined {\r\n    const post = findPost(state, groupId, postId);\r\n    const comment = post?.comments[commentId];\r\n    return comment;\r\n}\r\n","import {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {arrayWithIdMapperToDict, arrayWithIdsToDict} from \"../../general-utils\";\r\nimport {Group, GroupMember, GroupPost, GROUP_VOTE_VALUES, PostSortingOrder} from \"../../model/groups\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {GroupsState, initialPaginatedState, PaginatedFetchSuccessActionRefreshable} from \"../types\";\r\nimport {\r\n    CreateCommentSuccessAction,\r\n    CreateGroupSuccessAction,\r\n    CreatePostSuccessAction,\r\n    DeleteCommentSuccessAction,\r\n    DeleteGroupMemberSuccessAction,\r\n    DeletePostSuccessAction,\r\n    FetchAvailableMatchesBeginAction,\r\n    FetchAvailableMatchesSuccessAction,\r\n    FetchGroupMembersBeginAction,\r\n    FetchGroupMembersFailureAction,\r\n    FetchGroupMembersRefreshAction,\r\n    FetchGroupMembersSuccessAction,\r\n    FetchGroupPostsBeginAction,\r\n    FetchGroupPostsFailureAction,\r\n    FetchGroupPostsSuccessAction,\r\n    FetchGroupSuccessAction,\r\n    FetchMyGroupsBeginAction,\r\n    FetchMyGroupsFailureAction,\r\n    FetchMyGroupsSuccessAction,\r\n    FetchPostCommentsBeginAction,\r\n    FetchPostCommentsFailureAction,\r\n    FetchPostCommentsRefreshAction,\r\n    FetchPostCommentsSuccessAction,\r\n    GroupsAction,\r\n    GROUP_ACTION_TYPES,\r\n    InviteToGroupSuccessAction,\r\n    JoinGroupSuccessAction,\r\n    LeaveGroupSuccessAction,\r\n    SetCommentVoteBeginAction,\r\n    SetGroupCoverBeginAction,\r\n    SetGroupCoverFailureAction,\r\n    SetGroupCoverSuccessAction,\r\n    SetGroupMemberRoleSuccessAction,\r\n    SetGroupMemberStatusSuccessAction,\r\n    SetPostSortingOrderAction,\r\n    SetPostVoteBeginAction,\r\n    UpdateCommentSuccessAction,\r\n    UpdateGroupSuccessAction,\r\n    UpdatePostSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: GroupsState = {\r\n    groupsDict: {},\r\n    pagination: initialPaginatedState(),\r\n    groups: [],\r\n    myGroupsPagination: initialPaginatedState(),\r\n    myGroups: [],\r\n    myGroupInvitesPagination: initialPaginatedState(),\r\n    myGroupInvites: [],\r\n    postsSortOrder: PostSortingOrder.Newest,\r\n    feedPagination: initialPaginatedState(),\r\n    postsFeed: {},\r\n    postsFeedIds: [],\r\n};\r\n\r\nexport const groupsReducer = (state: GroupsState = initialState, action: GroupsAction): GroupsState => {\r\n    switch (action.type) {\r\n        case GROUP_ACTION_TYPES.CREATE_SUCCESS: {\r\n            const {group} = action as CreateGroupSuccessAction;\r\n            return {\r\n                ...state,\r\n                groupsDict: {...state.groupsDict, [group.id]: group},\r\n                myGroups: [group.id].concat(state.myGroups),\r\n            };\r\n        }\r\n        case GROUP_ACTION_TYPES.UPDATE_SUCCESS: {\r\n            const {group} = action as UpdateGroupSuccessAction;\r\n            return updateGroup(state, group.id, () => group);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.LEAVE_SUCCESS: {\r\n            const {id} = action as LeaveGroupSuccessAction;\r\n            return {\r\n                ...state,\r\n                myGroups: state.myGroups.filter((groupId) => groupId !== id),\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_BEGIN: {\r\n            return {...state, pagination: {...state.pagination, fetching: true}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_FAILURE: {\r\n            return {...state, pagination: {...state.pagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUPS_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<Group>;\r\n            const pagination = state.pagination;\r\n            const newState = items.reduce(setOrUpdateGroup, state);\r\n            const ids = items.map((g: Group) => g.id);\r\n            return {\r\n                ...newState,\r\n                groups: refresh ? ids : state.groups.concat(ids),\r\n                pagination: {fetching: false, page: (refresh ? 1 : pagination.page) + 1, canFetchMore},\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_SUCCESS: {\r\n            const {group} = action as FetchGroupSuccessAction;\r\n            return setOrUpdateGroup(state, group);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_FAILURE: {\r\n            return {\r\n                ...state,\r\n                feedPagination: {\r\n                    ...state.feedPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_POSTS_FEED_BEGIN,\r\n                },\r\n            };\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POSTS_FEED_SUCCESS: {\r\n            const {items, canFetchMore, refresh} = action as PaginatedFetchSuccessActionRefreshable<GroupPost>;\r\n            const ids = items.map((p) => p.id);\r\n            return {\r\n                ...state,\r\n                postsFeedIds: refresh\r\n                    ? ids\r\n                    : state.postsFeedIds.concat(ids.filter((id) => state.postsFeedIds.indexOf(id) === -1)),\r\n                postsFeed: {...state.postsFeed, ...arrayWithIdsToDict(items)},\r\n                feedPagination: {\r\n                    fetching: false,\r\n                    page: (refresh ? 1 : state.feedPagination.page) + 1,\r\n                    canFetchMore,\r\n                },\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_FAILURE: {\r\n            const {groupId} = action as FetchGroupPostsBeginAction | FetchGroupPostsFailureAction;\r\n            return updateGroup(state, groupId, ({postsPagination}) => ({\r\n                postsPagination: {\r\n                    ...postsPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_POSTS_SUCCESS: {\r\n            const {groupId, items, canFetchMore, refresh} = action as FetchGroupPostsSuccessAction;\r\n            const ids = items.map((p) => p.id);\r\n            return updateGroup(state, groupId, ({postsPagination: p, posts: gposts, postIds: gpostIds}) => ({\r\n                postIds: refresh ? ids : gpostIds.concat(ids.filter((id) => gpostIds.indexOf(id) === -1)),\r\n                posts: {...gposts, ...arrayWithIdsToDict(items)},\r\n                postsPagination: {fetching: false, page: (refresh ? 1 : p.page) + 1, canFetchMore},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.CREATE_POST_SUCCESS: {\r\n            const {groupId, post} = action as CreatePostSuccessAction;\r\n            return updateGroup(state, groupId, ({posts, postIds}) => ({\r\n                posts: {...posts, [post.id]: post},\r\n                postIds: [post.id].concat(postIds),\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.UPDATE_POST_SUCCESS: {\r\n            const {groupId, post} = action as UpdatePostSuccessAction;\r\n            return updatePost(state, groupId, post.id, () => ({\r\n                status: post.status,\r\n                type: post.type,\r\n                text: post.text,\r\n                updatedAt: post.updatedAt,\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_POST_SUCCESS: {\r\n            const {groupId, postId} = action as DeletePostSuccessAction;\r\n            // Remove post from feed\r\n            state = {...state, postsFeedIds: state.postsFeedIds.filter((id) => id !== postId)};\r\n            // Remove post from group\r\n            return updateGroup(state, groupId, ({posts, postIds}) => {\r\n                delete posts[postId];\r\n                return {\r\n                    posts,\r\n                    postIds: postIds.filter((id) => id !== postId),\r\n                };\r\n            });\r\n        }\r\n        // Update on begin action so it doesn't look slow\r\n        case GROUP_ACTION_TYPES.SET_POST_VOTE_BEGIN: {\r\n            const {groupId, postId, status} = action as SetPostVoteBeginAction;\r\n            return updatePost(state, groupId, postId, ({score, voteStatus}) => ({\r\n                voteStatus: status,\r\n                // Add value of new vote, remove value of previous vote\r\n                score: score + GROUP_VOTE_VALUES[status] - GROUP_VOTE_VALUES[voteStatus],\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_FAILURE: {\r\n            const {groupId, postId} = action as FetchPostCommentsBeginAction | FetchPostCommentsFailureAction;\r\n            return updatePost(state, groupId, postId, ({commentsPagination}) => ({\r\n                commentsPagination: {\r\n                    ...commentsPagination,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_SUCCESS: {\r\n            const {groupId, postId, items, canFetchMore} = action as FetchPostCommentsSuccessAction;\r\n            return updatePost(\r\n                state,\r\n                groupId,\r\n                postId,\r\n                ({commentsPagination: p, comments: pcomments, commentIds: pcommentIds}) => ({\r\n                    commentIds: pcommentIds.concat(items.map((c) => c.id)),\r\n                    comments: {...pcomments, ...arrayWithIdsToDict(items)},\r\n                    commentsPagination: {...p, fetching: false, page: p.page + 1, canFetchMore},\r\n                }),\r\n            );\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_POST_COMMENTS_REFRESH: {\r\n            const {groupId, postId} = action as FetchPostCommentsRefreshAction;\r\n            return updatePost(state, groupId, postId, ({commentsPagination: p}) => ({\r\n                commentIds: [],\r\n                commentsPagination: {...p, fetching: false, page: 1, canFetchMore: true},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.CREATE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, comment, parentId} = action as CreateCommentSuccessAction;\r\n\r\n            return updatePost(state, groupId, postId, ({comments, commentIds, commentsCount}) => {\r\n                const updated: Partial<GroupPost> = {\r\n                    commentsCount: commentsCount + 1,\r\n                    comments: {...comments, [comment.id]: comment},\r\n                };\r\n\r\n                if (parentId) {\r\n                    // Add the comment the its parent's children\r\n                    const parent = comments[parentId];\r\n                    if (parent) {\r\n                        updated.comments = {\r\n                            ...updated.comments,\r\n                            [parentId]: {...parent, childrenIds: [comment.id].concat(parent.childrenIds)},\r\n                        };\r\n                    }\r\n                } else updated.commentIds = [comment.id].concat(commentIds);\r\n\r\n                return updated;\r\n            });\r\n        }\r\n        case GROUP_ACTION_TYPES.UPDATE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, comments} = action as UpdateCommentSuccessAction;\r\n            return updatePost(state, groupId, postId, ({comments: currentComments}) => {\r\n                const updatedComments = {...currentComments};\r\n                comments.forEach((c) => {\r\n                    updatedComments[c.id] = {\r\n                        ...currentComments[c.id],\r\n                        text: c.text,\r\n                        updatedAt: new Date(),\r\n                    };\r\n                });\r\n                return {comments: updatedComments};\r\n            });\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_COMMENT_SUCCESS: {\r\n            const {groupId, postId, commentId} = action as DeleteCommentSuccessAction;\r\n            return updatePost(state, groupId, postId, (post) => {\r\n                const {comments, commentIds, commentsCount} = post;\r\n                const updated: Partial<GroupPost> = {commentsCount: commentsCount - 1};\r\n\r\n                const comment = comments[commentId];\r\n                const parent = comment && comment.parentId && comments[comment.parentId];\r\n                if (parent) {\r\n                    // If this comment has a parent, remove it from the parent's comments\r\n                    updated.comments = {\r\n                        ...comments,\r\n                        [parent.id]: {\r\n                            ...parent,\r\n                            childrenIds: parent.childrenIds.filter((id) => id !== commentId),\r\n                        },\r\n                    };\r\n                } else {\r\n                    // Otherwise, simply remove the comment from the post\r\n                    updated.commentIds = commentIds.filter((id) => id !== commentId);\r\n                }\r\n                return updated;\r\n            });\r\n        }\r\n        // Update on begin action so it doesn't look slow\r\n        case GROUP_ACTION_TYPES.SET_COMMENT_VOTE_BEGIN: {\r\n            const {groupId, postId, commentId, status} = action as SetCommentVoteBeginAction;\r\n            return updatePost(state, groupId, postId, ({comments}) => ({\r\n                comments: {\r\n                    ...comments,\r\n                    [commentId]: {\r\n                        ...comments[commentId],\r\n                        voteStatus: status,\r\n                        // Add value of new vote, remove value of previous vote\r\n                        score:\r\n                            comments[commentId].score +\r\n                            GROUP_VOTE_VALUES[status] -\r\n                            GROUP_VOTE_VALUES[comments[commentId].voteStatus],\r\n                    },\r\n                },\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN:\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_FAILURE: {\r\n            const {groupId, memberStatus} = action as FetchGroupMembersBeginAction | FetchGroupMembersFailureAction;\r\n            return updateGroup(state, groupId, ({membersPaginations}) => ({\r\n                membersPaginations: {\r\n                    ...membersPaginations,\r\n                    [memberStatus]: {\r\n                        ...membersPaginations[memberStatus],\r\n                        fetching: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n                        canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_BEGIN,\r\n                    },\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_SUCCESS: {\r\n            const {\r\n                groupId,\r\n                items,\r\n                canFetchMore,\r\n                totalItems,\r\n                memberStatus,\r\n                search,\r\n            } = action as FetchGroupMembersSuccessAction;\r\n\r\n            return updateGroup(state, groupId, ({membersPaginations, members, memberIds}) => ({\r\n                members: {...members, ...arrayWithIdMapperToDict(items, (it) => it.profile.id)},\r\n                memberIds: {\r\n                    ...memberIds,\r\n                    [memberStatus]: memberIds[memberStatus].concat(\r\n                        items.map((m) => m.profile.id).filter((id) => memberIds[memberStatus].indexOf(id) === -1),\r\n                    ),\r\n                },\r\n                membersPaginations: {\r\n                    ...membersPaginations,\r\n                    [memberStatus]: {\r\n                        ...membersPaginations[memberStatus],\r\n                        fetching: false,\r\n                        page: membersPaginations[memberStatus].page + 1,\r\n                        canFetchMore,\r\n                    },\r\n                },\r\n                // Update number of approved members\r\n                ...(memberStatus === GroupMemberStatus.Approved && !search ? {numApprovedMembers: totalItems} : {}),\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.JOIN_GROUP_SUCCESS: {\r\n            const {group, memberStatus, role, localUser} = action as JoinGroupSuccessAction;\r\n\r\n            if (localUser && localUser.profile) {\r\n                const member: GroupMember = {\r\n                    profile: localUser.profile,\r\n                    role,\r\n                    status: memberStatus,\r\n                };\r\n                return updateMemberStatus(state, group.id, localUser.id, true, memberStatus, member);\r\n            }\r\n            return state;\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_GROUP_MEMBERS_REFRESH: {\r\n            const {groupId, memberStatus} = action as FetchGroupMembersRefreshAction;\r\n            return updateGroup(state, groupId, ({memberIds, membersPaginations}) => ({\r\n                memberIds: {...memberIds, [memberStatus]: []},\r\n                membersPaginations: {...membersPaginations, [memberStatus]: initialPaginatedState()},\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.DELETE_GROUP_MEMBER_SUCCESS: {\r\n            const {groupId, profileId, isLocalUser} = action as DeleteGroupMemberSuccessAction;\r\n\r\n            // If this user is us, remove the group from the arrays\r\n            if (isLocalUser) {\r\n                state = {\r\n                    ...state,\r\n                    myGroups: state.myGroups.filter((id) => id !== groupId),\r\n                    myGroupInvites: state.myGroupInvites.filter((id) => id !== groupId),\r\n                };\r\n            }\r\n\r\n            return updateGroup(state, groupId, ({memberIds, members}) => {\r\n                const member = members[profileId];\r\n                if (member) {\r\n                    // Remove the member from the right array, depending on his status\r\n                    return {\r\n                        memberIds: {\r\n                            ...memberIds,\r\n                            [member.status]: memberIds[member.status].filter((id) => id !== profileId),\r\n                        },\r\n                    };\r\n                } else {\r\n                    // If we didn't have this member, do nothing\r\n                    return {};\r\n                }\r\n            });\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_GROUP_MEMBER_STATUS_SUCCESS: {\r\n            const {groupId, profileId, memberStatus, isLocalUser} = action as SetGroupMemberStatusSuccessAction;\r\n            return updateMemberStatus(state, groupId, profileId, isLocalUser, memberStatus);\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_GROUP_MEMBER_ROLE_SUCCESS: {\r\n            const {groupId, profileId, role, isLocalUser} = action as SetGroupMemberRoleSuccessAction;\r\n\r\n            // Change the member's role in the group\r\n            return updateGroup(state, groupId, ({members}) => ({\r\n                members: {...members, [profileId]: {...members[profileId], role: role}},\r\n                ...(isLocalUser && {myRole: role}),\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.INVITE_TO_GROUP_SUCCESS: {\r\n            const {groupId, profile /*, memberStatus*/} = action as InviteToGroupSuccessAction;\r\n            return updateGroup(state, groupId, ({availableMatches: am}) => ({\r\n                availableMatches: {\r\n                    ...am,\r\n                    profiles: am.profiles ? am.profiles.filter((p: UserProfile) => p.id !== profile.id) : null,\r\n                },\r\n                // members: {...members, [profile.id]: profile},\r\n                // memberIds: {...memberIds, [memberStatus]: memberIds[memberIds].concat([profile.id])}\r\n            }));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_BEGIN: {\r\n            const {invites} = action as FetchMyGroupsBeginAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            return {...state, [paginationKey]: {...state[paginationKey], fetching: true}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_FAILURE: {\r\n            const {invites} = action as FetchMyGroupsFailureAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            return {...state, [paginationKey]: {...state[paginationKey], fetching: false, canFetchMore: false}};\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_MYGROUPS_SUCCESS: {\r\n            const {items, canFetchMore, invites, refresh} = action as FetchMyGroupsSuccessAction;\r\n            const paginationKey: keyof GroupsState = invites ? \"myGroupInvitesPagination\" : \"myGroupsPagination\";\r\n            const itemsKey: keyof GroupsState = invites ? \"myGroupInvites\" : \"myGroups\";\r\n            const pagination = state[paginationKey];\r\n            const ids = items.map((g: Group) => g.id);\r\n            return {\r\n                ...state,\r\n                groupsDict: {...state.groupsDict, ...arrayWithIdsToDict(items)},\r\n                [itemsKey]: refresh ? ids : state[itemsKey].concat(ids),\r\n                [paginationKey]: {\r\n                    fetching: false,\r\n                    page: (refresh ? 1 : pagination.page) + 1,\r\n                    canFetchMore,\r\n                },\r\n            };\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_COVER_BEGIN: {\r\n            const {groupId} = action as SetGroupCoverBeginAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: true}));\r\n        }\r\n        case GROUP_ACTION_TYPES.SET_COVER_FAILURE: {\r\n            const {groupId} = action as SetGroupCoverFailureAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: false}));\r\n        }\r\n        case GROUP_ACTION_TYPES.SET_COVER_SUCCESS: {\r\n            const {groupId, url} = action as SetGroupCoverSuccessAction;\r\n            return updateGroup(state, groupId, () => ({uploadingCover: false, cover: url}));\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.SET_POST_SORTING_ORDER: {\r\n            const {order} = action as SetPostSortingOrderAction;\r\n            return {...state, postsSortOrder: order};\r\n        }\r\n\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_FAILURE:\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN: {\r\n            const {groupId} = action as FetchAvailableMatchesBeginAction;\r\n            return updateGroup(state, groupId, ({availableMatches}) => ({\r\n                availableMatches: {\r\n                    ...availableMatches,\r\n                    fetching: action.type === GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n                    canFetchMore: action.type === GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_BEGIN,\r\n                },\r\n            }));\r\n        }\r\n        case GROUP_ACTION_TYPES.FETCH_AVAILABLE_MATCHES_SUCCESS: {\r\n            const {groupId, items} = action as FetchAvailableMatchesSuccessAction;\r\n            return updateGroup(state, groupId, () => ({\r\n                availableMatches: {profiles: items, fetching: false},\r\n            }));\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction setOrUpdateGroup(state: GroupsState, group: Group): GroupsState {\r\n    const g = state.groupsDict[group.id];\r\n    if (g) return updateGroup(state, group.id, () => group);\r\n    else return {...state, groupsDict: {...state.groupsDict, [group.id]: group}};\r\n}\r\n\r\nfunction updateGroup(state: GroupsState, groupId: string, update: (g: Group) => Partial<Group>): GroupsState {\r\n    const g = state.groupsDict[groupId];\r\n    if (g) {\r\n        const updated = update(g);\r\n        return {\r\n            ...state,\r\n            groupsDict: {\r\n                ...state.groupsDict,\r\n                [groupId]: {\r\n                    ...g,\r\n                    ...updated,\r\n                    members: updated.members || g.members, // prevents members from being replaced with null\r\n                },\r\n            },\r\n        };\r\n    } else {\r\n        console.error(\"Anomaly: cannot update group (not in memory).\");\r\n        return state;\r\n    }\r\n}\r\n\r\nfunction updatePost(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    postId: string,\r\n    update: (p: GroupPost) => Partial<GroupPost>,\r\n): GroupsState {\r\n    const s = {...state};\r\n    const g = s.groupsDict[groupId];\r\n    // Update the post in the group it belongs to\r\n    if (g && g.posts[postId]) {\r\n        s.groupsDict = {\r\n            ...s.groupsDict,\r\n            [groupId]: {...g, posts: {...g.posts, [postId]: {...g.posts[postId], ...update(g.posts[postId])}}},\r\n        };\r\n    }\r\n    // Update the post in the feed\r\n    if (s.postsFeed[postId]) {\r\n        s.postsFeed = {\r\n            ...s.postsFeed,\r\n            [postId]: {...s.postsFeed[postId], ...update(s.postsFeed[postId])},\r\n        };\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction updateMemberStatus(\r\n    state: GroupsState,\r\n    groupId: string,\r\n    profileId: string,\r\n    isLocalUser: boolean,\r\n    status: GroupMemberStatus,\r\n    fallbackMember?: GroupMember,\r\n) {\r\n    if (isLocalUser && state.groupsDict[groupId]) {\r\n        const previousStatus = state.groupsDict[groupId].myStatus;\r\n        // If I was previously an invite and not anymore, remove group from invites\r\n        const wasInvite =\r\n            previousStatus === GroupMemberStatus.Invited || previousStatus === GroupMemberStatus.InvitedByAdmin;\r\n        const isNowInvite = status === GroupMemberStatus.Invited || status === GroupMemberStatus.InvitedByAdmin;\r\n        if (wasInvite && !isNowInvite)\r\n            state = {...state, myGroupInvites: state.myGroupInvites.filter((id) => id !== groupId)};\r\n        // If I was approved and I'm not anymore, remove group from myGroups\r\n        if (previousStatus === GroupMemberStatus.Approved && status !== GroupMemberStatus.Approved)\r\n            state = {...state, myGroups: state.myGroups.filter((id) => id !== groupId)};\r\n        // If i am now approved, add group to myGroups\r\n        if (status === GroupMemberStatus.Approved) state = {...state, myGroups: [groupId].concat(state.myGroups)};\r\n    }\r\n\r\n    // Change the member's status in the group\r\n    return updateGroup(state, groupId, ({members, memberIds, numApprovedMembers, myStatus: myPreviousStatus}) => {\r\n        const member = members[profileId];\r\n        const wasApproved = member\r\n            ? member.status === GroupMemberStatus.Approved\r\n            : isLocalUser\r\n            ? myPreviousStatus === GroupMemberStatus.Approved\r\n            : false;\r\n        const isApproved = status === GroupMemberStatus.Approved;\r\n\r\n        const updated = {\r\n            numApprovedMembers:\r\n                numApprovedMembers === null\r\n                    ? null\r\n                    : numApprovedMembers + (!wasApproved && isApproved ? 1 : wasApproved && !isApproved ? -1 : 0),\r\n            ...(isLocalUser\r\n                ? {\r\n                      myStatus: status,\r\n                      myRole: status === GroupMemberStatus.Approved ? GroupRole.Basic : null,\r\n                  }\r\n                : {}),\r\n            memberIds: {\r\n                ...memberIds,\r\n                [status]: (memberIds[status] || []).concat([profileId]),\r\n            },\r\n            members: {...members},\r\n        };\r\n\r\n        // Register the new member in the members dict\r\n        if (member || fallbackMember) {\r\n            updated.members = {\r\n                ...updated.members,\r\n                [profileId]: (member ? {...member, status} : fallbackMember) as GroupMember,\r\n            };\r\n        }\r\n\r\n        // Remove from ids of previous status\r\n        if (member) {\r\n            updated.memberIds = {\r\n                ...updated.memberIds,\r\n                [member.status]: updated.memberIds[member.status].filter((id) => id !== profileId),\r\n            };\r\n        }\r\n        return updated;\r\n    });\r\n}\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingLegalScreen1\",\r\n    \"OnboardingLegalScreen2\",\r\n    \"OnboardingLegalScreen3\",\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingProfileScreen1\",\r\n    \"OnboardingProfileScreen2\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import {Platform} from \"react-native\";\r\nimport {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {COOKIE_CONSENT_DURATION} from \"../constants/config\";\r\nimport {clearStaticData, storeStaticData} from \"./persistent-storage/static\";\r\nimport {\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./profile/actions\";\r\nimport {SaveCookiesPreferencesAction, SetLocaleAction, SetThemeAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    // Handle cookie preferences changes\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const oldCookies = store.getState().settings.userSettings.cookies;\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n\r\n            // Store data for cookies that were accepted by the user\r\n            if (!oldCookies.cache && cookies.cache) {\r\n                const {offers, interests} = store.getState().profile;\r\n                storeStaticData(\"interests\", interests, cookies.cache);\r\n                storeStaticData(\"offers\", offers, cookies.cache);\r\n            }\r\n            if (!oldCookies.settings && cookies.settings) {\r\n                const {locale, theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"locale\", locale, cookies.settings);\r\n                storeStaticData(\"theme\", theme, cookies.settings);\r\n            }\r\n\r\n            // Discard cookies that were refused by the user\r\n            if (oldCookies.cache && !cookies.cache) clearStaticData(\"interests\", \"offers\");\r\n            if (oldCookies.settings && !cookies.settings) clearStaticData(\"locale\", \"theme\");\r\n\r\n            // Store new cookies preferences\r\n            storeStaticData(\"cookies\", cookies, true);\r\n            storeStaticData(\"cookieConsentDate\", new Date(Date.now()).toJSON(), true);\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    // Handle storage that requires cookie consent from the user\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n                const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n                if (!fromCache) storeStaticData(\"interests\", interests, cookies.cache);\r\n                break;\r\n            }\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n                const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n                if (!fromCache) storeStaticData(\"offers\", offers, cookies.cache);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n                const {locale, fromCache} = action as SetLocaleAction;\r\n                if (!fromCache) storeStaticData(\"locale\", locale, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n                const {theme, fromCache} = action as SetThemeAction;\r\n                if (!fromCache) storeStaticData(\"theme\", theme, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n                const {theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"theme\", theme === \"dark\" ? \"light\" : \"dark\", cookies.settings);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport function hasUserGivenCookieConsent(consentDate: Date | null): boolean {\r\n    // Never ask the user in the native version of the app\r\n    if (Platform.OS !== \"web\") return true;\r\n    return consentDate !== null && (Date.now() - consentDate.getTime()) / 1000 < COOKIE_CONSENT_DURATION;\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {AppState} from \"./types\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {discardAuthInformation, storeAuthInformation} from \"./persistent-storage/auth\";\r\nimport {SaveCookiesPreferencesAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {hasUserGivenCookieConsent} from \"./static-storage-middleware\";\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        // Handle cookie preferences changes\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n            if (cookies.auth) {\r\n                // Store again when accepting the auth cookie\r\n                const token = store.getState().auth.token;\r\n                const user = store.getState().profile.user;\r\n                if (token && user) storeAuthInformation(user.email, token);\r\n            } else {\r\n                // Discard when refusing the auth cookie\r\n                discardAuthInformation();\r\n            }\r\n            break;\r\n        }\r\n        // Discard when needed\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n                const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n                // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n                if (!usingCachedCredentials && cookies.auth) storeAuthInformation(user.email, token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {requestBackend} from \"../../api/utils\";\r\nimport {AppThunk} from \"../types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\n\r\nexport enum NOTIFICATIONS_ACTION_TYPES {\r\n    REGISTER_TOKEN_SUCCESS = \"NOTIFICATIONS/REGISTER_TOKEN_SUCCESS\",\r\n    DELETE_TOKEN_SUCCESS = \"NOTIFICATIONS/DELETE_TOKEN_SUCCESS\",\r\n}\r\n\r\nexport type RegisterNotificationSuccessAction = {type: string};\r\n\r\nexport type DeleteNotificationTokenSuccessAction = {type: string};\r\n\r\nexport type NotificationsAction = RegisterNotificationSuccessAction & DeleteNotificationTokenSuccessAction;\r\n\r\nexport const registerNotificationToken = (pushToken: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"POST\", {}, {token: pushToken}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(registerNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst registerNotificationTokenSuccess = (): RegisterNotificationSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.REGISTER_TOKEN_SUCCESS,\r\n});\r\n\r\nexport const deleteNotificationToken = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"DELETE\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst deleteNotificationTokenSuccess = (): DeleteNotificationTokenSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.DELETE_TOKEN_SUCCESS,\r\n});\r\n","import * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport Constants from \"expo-constants\";\r\nimport {Platform} from \"react-native\";\r\n\r\nexport function areNotificationsSupported(): boolean {\r\n    return Constants.isDevice && Platform.OS !== \"web\";\r\n}\r\n\r\nexport function getNotificationData(notif: Notifications.Notification): {[key: string]: unknown} {\r\n    return notif.request.content.data;\r\n}\r\n\r\nexport async function askForPushNotificationToken(): Promise<string | null> {\r\n    if (!areNotificationsSupported()) return null;\r\n\r\n    let status = (await Permissions.getAsync(Permissions.NOTIFICATIONS)).status;\r\n    if (status !== \"granted\") status = (await Permissions.askAsync(Permissions.NOTIFICATIONS)).status;\r\n\r\n    if (status === \"granted\") {\r\n        const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n        return token;\r\n    } else {\r\n        // User refused notifications\r\n        return null;\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport {messagingReducer} from \"./messaging/reducer\";\r\nimport {notificationsReducer} from \"./notifications/reducer\";\r\nimport {reportsReducer} from \"./reports/reducer\";\r\nimport {groupsReducer} from \"./groups/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\nimport {notificationsMiddleware} from \"./notifications-middleware\";\r\nimport {messagingMiddleware} from \"./messaging-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n    messaging: messagingReducer,\r\n    notifications: notificationsReducer,\r\n    reports: reportsReducer,\r\n    groups: groupsReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(\r\n    thunk,\r\n    authStorageMiddleware,\r\n    staticStorageMiddleware,\r\n    navigationMiddleware,\r\n    notificationsMiddleware,\r\n    messagingMiddleware,\r\n);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport {navigateToGroup, rootNavigate} from \"../navigation/utils\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {AUTH_ACTION_TYPES, beginOnboarding, LogInFailureAction, LogInSuccessAction, LogOutAction} from \"./auth/actions\";\r\nimport {CreateGroupSuccessAction, GROUP_ACTION_TYPES} from \"./groups/actions\";\r\nimport {ActionCancelSuccessAction, MATCHING_ACTION_TYPES} from \"./matching/actions\";\r\nimport {PROFILE_ACTION_TYPES} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    if (DEBUG_MODE) console.log(action.type);\r\n\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            if (user.onboarded) rootNavigate(\"MainScreen\", {screen: \"TabMatching\"});\r\n            else store.dispatch(beginOnboarding());\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            const {needsVerify, email} = action as LogInFailureAction;\r\n            if (needsVerify && email) rootNavigate(\"ResendVerifyEmailScreen\", {email});\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            const {redirect} = action as LogOutAction;\r\n            if (redirect) {\r\n                rootNavigate(\"LoginRoot\", {\r\n                    screen: \"LoginScreens\",\r\n                    params: {screen: \"SigninScreen\"},\r\n                });\r\n            }\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.SEND_VERIFICATION_EMAIL_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            rootNavigate(\"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS: {\r\n            rootNavigate(\"DeleteAccountSuccessScreen\");\r\n            break;\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {isMatch} = action as ActionCancelSuccessAction;\r\n            // When un-matching someone, navigate back from their profile to MainScreen\r\n            if (isMatch) rootNavigate(\"MainScreen\", {screen: \"TabMatching\"});\r\n            break;\r\n        }\r\n        case GROUP_ACTION_TYPES.CREATE_SUCCESS: {\r\n            const {group} = action as CreateGroupSuccessAction;\r\n            navigateToGroup(group.id);\r\n            break;\r\n        }\r\n        case GROUP_ACTION_TYPES.DELETE_SUCCESS:\r\n        case GROUP_ACTION_TYPES.LEAVE_SUCCESS: {\r\n            rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n            break;\r\n        }\r\n    }\r\n};\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {AppState, MyThunkDispatch} from \"./types\";\r\nimport {AUTH_ACTION_TYPES} from \"./auth/actions\";\r\nimport {askForPushNotificationToken} from \"../notifications-utils\";\r\nimport {deleteNotificationToken, registerNotificationToken} from \"./notifications/actions\";\r\n\r\nexport const notificationsMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            // Register push notifications\r\n            askForPushNotificationToken().then((pushToken: string | null) => {\r\n                // The token will be null if the device does not support push notifications,\r\n                // or we did not get permission from the user.\r\n                if (pushToken !== null) (store.dispatch as MyThunkDispatch)(registerNotificationToken(pushToken));\r\n            });\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            // Discard the token\r\n            (store.dispatch as MyThunkDispatch)(deleteNotificationToken());\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {AppState, MyThunkDispatch} from \"./types\";\r\nimport {AUTH_ACTION_TYPES} from \"./auth/actions\";\r\nimport {fetchMatchRooms} from \"./messaging/actions\";\r\n\r\nexport const messagingMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            (store.dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n            break;\r\n        }\r\n    }\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {User} from \"../model/user\";\r\nimport {CookiesPreferences} from \"../model/user-settings\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {getInitialRoute} from \"../navigation/utils\";\r\nimport {attemptLoginFromCache, verifyBackendConnection} from \"../state/auth/actions\";\r\nimport {readCachedStaticData, storeStaticData} from \"../state/persistent-storage/static\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport {loadCookiesPreferences, loadVersionInfo, setLocale, setTheme} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nlet loggedInFromCache: User | undefined = undefined;\r\nlet isBackendReachable = false;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    Raleway: require(\"@assets/fonts/Raleway-Regular.ttf\"),\r\n                    RalewayThin: require(\"@assets/fonts/Raleway-Thin.ttf\"),\r\n                    RalewayLight: require(\"@assets/fonts/Raleway-Light.ttf\"),\r\n                    RalewaySemiBold: require(\"@assets/fonts/Raleway-SemiBold.ttf\"),\r\n                    RalewayBold: require(\"@assets/fonts/Raleway-Bold.ttf\"),\r\n                });\r\n\r\n                // Read cookie consent information from persistent storage\r\n                readCachedStaticData(\"cookieConsentDate\").then((consentDate) => {\r\n                    readCachedStaticData(\"cookies\").then((cookies) => {\r\n                        if (consentDate && cookies) {\r\n                            const date = new Date(consentDate.data as string);\r\n                            dispatch(loadCookiesPreferences(cookies.data as CookiesPreferences, date));\r\n                        } else {\r\n                            // On mobile, storage is turned on by default on the first visit\r\n                            dispatch(loadCookiesPreferences({auth: true, cache: true, settings: true}, new Date()));\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Read previous version of the app, so we know if we are launching the app after an update\r\n                readCachedStaticData(\"version\").then((version) => {\r\n                    dispatch(loadVersionInfo(version ? (version.data as string) : null));\r\n                    storeStaticData(\"version\", APP_VERSION, true);\r\n                });\r\n\r\n                // Attempt to read the settings from persistent storage\r\n                readCachedStaticData(\"theme\").then((theme) => {\r\n                    if (theme) dispatch(setTheme(theme.data as ThemeKey, true));\r\n                });\r\n                readCachedStaticData(\"locale\").then((locale) => {\r\n                    if (locale) dispatch(setLocale(locale.data as SupportedLocale, true));\r\n                    else store.dispatch(setLocale(\"en\" as SupportedLocale, true));\r\n                });\r\n\r\n                const {reachable, userLoggedInFromCache} = await connectToBackend();\r\n                isBackendReachable = reachable;\r\n                loggedInFromCache = userLoggedInFromCache;\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (!isBackendReachable) initialRoute = \"BackendUnreachableScreen\";\r\n    else if (loggedInFromCache) initialRoute = getInitialRoute(true, loggedInFromCache.onboarded);\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n\r\nexport async function connectToBackend(): Promise<{\r\n    reachable: boolean;\r\n    userLoggedInFromCache: User | undefined;\r\n}> {\r\n    const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n    const reachable = await dispatch(verifyBackendConnection());\r\n\r\n    if (reachable) {\r\n        // Load static data\r\n        await Promise.all([dispatch(loadProfileOffers()), dispatch(loadProfileInterests())]);\r\n\r\n        // Attempt to authenticate using cached data\r\n        const userLoggedInFromCache = await dispatch(attemptLoginFromCache());\r\n\r\n        return {reachable: true, userLoggedInFromCache};\r\n    }\r\n\r\n    return {reachable: false, userLoggedInFromCache: undefined};\r\n}\r\n","import {Dimensions} from \"react-native\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nexport default {\r\n    window: {\r\n        width,\r\n        height,\r\n    },\r\n    isSmallDevice: width < 375,\r\n    isWideDevice: width / (height + 1) > 0.85,\r\n};\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fff\",\r\n        cardBackground: \"#f7f7f7\",\r\n        accent: \"#003da5\",\r\n        themeAwareAccent: \"#003da5\",\r\n        accentSlight: \"#E0E8F4\",\r\n        accentSecondary: \"#009ace\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"#ff3b30\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#bbb\",\r\n        buttonGroupBorder: \"#dfdfdf\",\r\n        greenModalBackground: \"#3caf82\",\r\n        chatBubble: \"#ededed\",\r\n        inputPlaceholder: \"#999\",\r\n        onboardingInputBackground: \"#F2F2F7\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#000\",\r\n        cardBackground: \"#1c1c1e\",\r\n        accent: \"#003da5\",\r\n        themeAwareAccent: \"#448CFF\", // a variant of the accent color that is usable against a dark background\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"#ff453a\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#555\",\r\n        buttonGroupBorder: \"#1f1f1f\",\r\n        greenModalBackground: \"#3caf82\",\r\n        chatBubble: \"#333\",\r\n        inputPlaceholder: \"#bbb\",\r\n        onboardingInputBackground: \"#333337\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport layout from \"../constants/layout\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\ntype ThemedStylesInternal<T extends NamedStyles<T>> = (theme: Theme, wideDevice: boolean) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStylesInternal<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    const wideDevice = layout.isWideDevice;\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme, wideDevice)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\ntype ScreenWrapperProps = ThemeProps & {\r\n    forceFullWidth?: boolean;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const DEFAULT_MAX_WIDTH = 1000;\r\n\r\nclass ScreenWrapper extends React.Component<ScreenWrapperProps> {\r\n    render(): JSX.Element {\r\n        const {theme, forceFullWidth, wrapperStyle, containerStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, wrapperStyle]}>\r\n                <View style={[styles.container, forceFullWidth ? {maxWidth: undefined} : {}, containerStyle]}>\r\n                    {this.props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n            overflow: \"hidden\",\r\n        },\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            maxWidth: DEFAULT_MAX_WIDTH,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ScreenWrapper);\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-thin\"} : {fontWeight: \"100\"};\r\n\r\nexport const styleTextLight: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-light\"} : {fontWeight: \"200\"};\r\n\r\nexport const webFontFamily =\r\n    Platform.OS == \"web\" ? {fontFamily: `\"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif`} : {};\r\n\r\nexport const BLUR_HEADER_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_TAB_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_MODAL_INTENSITY = Platform.OS === \"ios\" ? 90 : 80;\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type ButtonSkinStyle = {button: ViewStyle; text: TextStyle};\r\n\r\nexport const BUTTON_SKINS = {\r\n    \"rounded-filled\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 10,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: themes.dark.text,\r\n        },\r\n    }),\r\n    \"rounded-hollow\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            borderColor: theme.accent,\r\n            borderWidth: 1,\r\n            paddingHorizontal: 10,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: theme.accent,\r\n        },\r\n    }),\r\n};\r\n\r\nexport type ButtonSkin = keyof typeof BUTTON_SKINS;\r\n\r\n// Component props\r\nexport type ButtonProps = {\r\n    onPress?: () => void;\r\n    text?: string;\r\n    icon?: JSX.Element;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    skin?: ButtonSkin;\r\n    iconLeft?: boolean;\r\n    contentOpacity?: number;\r\n    disabled?: boolean;\r\n    TouchableComponent?: typeof React.Component;\r\n} & ThemeProps;\r\n\r\nclass Button extends React.Component<ButtonProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            onPress,\r\n            text,\r\n            icon,\r\n            skin,\r\n            style,\r\n            textStyle,\r\n            iconLeft,\r\n            contentOpacity,\r\n            disabled,\r\n            children,\r\n            theme,\r\n        } = this.props;\r\n\r\n        const skinStyles = skin ? BUTTON_SKINS[skin](theme) : {button: {}, text: {}};\r\n\r\n        const TouchableComponent = this.props.TouchableComponent || TouchableOpacity;\r\n\r\n        return (\r\n            <TouchableComponent\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                onPress={onPress}\r\n                style={[{alignItems: \"center\"}, skinStyles.button, style]}\r\n                disabled={disabled}\r\n            >\r\n                {children}\r\n                {/* if content opacity is set, render content AND children anyway */}\r\n                {(!children || contentOpacity !== undefined) && (\r\n                    <View\r\n                        style={[\r\n                            {flexDirection: iconLeft ? \"row-reverse\" : \"row\", alignItems: \"center\"},\r\n                            contentOpacity !== undefined && {opacity: contentOpacity},\r\n                        ]}\r\n                    >\r\n                        <Text style={[skinStyles.text, textStyle]}>{text}</Text>\r\n                        {icon}\r\n                    </View>\r\n                )}\r\n            </TouchableComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(Button);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport store from \"../state/store\";\r\nimport Button from \"../components/Button\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper containerStyle={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"notFoundScreen.title\")}</Text>\r\n                <Text style={styles.subtitle}>{i18n.t(\"notFoundScreen.subtitle\")}</Text>\r\n                <Button\r\n                    onPress={() => {\r\n                        const {authenticated, onboarded} = store.getState().auth;\r\n                        if (authenticated) {\r\n                            if (onboarded) navigation.replace(\"MainScreen\");\r\n                            else navigation.replace(\"OnboardingScreen\");\r\n                        } else navigation.replace(\"LoginRoot\");\r\n                    }}\r\n                    skin=\"rounded-filled\"\r\n                    style={styles.redirectButton}\r\n                    text={i18n.t(\"notFoundScreen.redirect\")}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        title: {\r\n            fontSize: 48,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        },\r\n        redirectButton: {\r\n            maxWidth: 280,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"SigninScreen\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}.\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            maxWidth: 280,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport i18n from \"i18n-js\";\r\nimport Button from \"../components/Button\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.infoText}>{i18n.t(\"emailValidation.sent\")}</Text>\r\n                    <Text style={[styles.infoText, styles.email]}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={[styles.infoText, {marginBottom: 25}]}>Debug: Click here</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n\r\n                    <View style={styles.actionsContainer}>\r\n                        <Button\r\n                            text={i18n.t(\"ok\")}\r\n                            onPress={() =>\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SigninScreen\"},\r\n                                })\r\n                            }\r\n                            skin=\"rounded-hollow\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        infoText: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 18,\r\n            lineHeight: 22,\r\n            textAlign: \"center\",\r\n            marginTop: 25,\r\n            maxWidth: 300,\r\n        },\r\n        email: {\r\n            width: \"100%\",\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginRoot: {\r\n                screens: {\r\n                    WelcomeScreen: \"welcome\",\r\n                    LoginScreens: {\r\n                        screens: {\r\n                            SigninScreen: \"login\",\r\n                            ForgotPasswordScreen: \"forgot-password\",\r\n                            SignupScreen: \"signup\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MatchFilteringScreen: \"match/filters\",\r\n                            MatchHistoryScreen: \"match/history\",\r\n                        },\r\n                    },\r\n                    TabGroups: {\r\n                        screens: {\r\n                            TabGroupsScreen: \"groups\",\r\n                            GroupsExploreScreen: \"groups/explore\",\r\n                            GroupScreen: \"group/:groupId\",\r\n                            GroupMembersScreen: \"group/:groupId/members\",\r\n                            GroupBannedMembersScreen: \"group/:groupId/banned\",\r\n                            GroupMembersApprovalScreen: \"group/:groupId/requests\",\r\n                            GroupInviteScreen: \"group/:groupId/invite\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            ChatRoomsScreen: \"messaging\",\r\n                            ChatScreen: \"chat/:roomId\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ResetPasswordScreen: \"reset-password/:token\",\r\n            ResetPasswordSuccessScreen: \"password-reset\",\r\n            MyProfileScreen: \"profile\",\r\n            ProfileScreen: \"profile/:id\",\r\n            SettingsScreen: \"settings\",\r\n            DeleteAccountScreen: \"delete-account\",\r\n            DeleteAccountSuccessScreen: \"account-deleted\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingProfileScreen1: \"onboarding/profile/1\",\r\n                    OnboardingProfileScreen2: \"onboarding/profile/2\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingLegalScreen1: \"onboarding/tos\",\r\n                    OnboardingLegalScreen2: \"onboarding/data\",\r\n                    OnboardingLegalScreen3: \"onboarding/cookies\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            BackendUnreachableScreen: \"cannot-reach-server\",\r\n            ResendVerifyEmailScreen: \"verify\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n            marginBottom: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {localizeError} from \"../api/errors\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? localizeError(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {\r\n    TextStyle,\r\n    StyleProp,\r\n    View,\r\n    TextInputProps,\r\n    TextInput,\r\n    ViewStyle,\r\n    TouchableOpacity,\r\n    Platform,\r\n} from \"react-native\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\n\r\nexport type TextInputStyleProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputFocusedStyle?: StyleProp<TextStyle>;\r\n    showPasswordButtonStyle?: StyleProp<TextStyle>;\r\n    showPasswordIconStyle?: StyleProp<TextStyle>;\r\n    placeholderTextColor?: string;\r\n};\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    icon?: (focused: boolean, error: boolean, valid: boolean) => JSX.Element;\r\n} & TextInputStyleProps &\r\n    Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n    showSecureEntry: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nclass ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false, showSecureEntry: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    blur(): void {\r\n        this.inputRef.current?.blur();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            error,\r\n            value,\r\n            label,\r\n            icon,\r\n            untouched,\r\n            secureTextEntry,\r\n            style,\r\n            wrapperStyle,\r\n            inputStyle,\r\n            inputFocusedStyle,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            showPasswordButtonStyle,\r\n            showPasswordIconStyle,\r\n            placeholderTextColor,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        const {showSecureEntry} = this.state;\r\n\r\n        const showError = showErrorText && !untouched && error;\r\n        const isSecureEntry = secureTextEntry === true;\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    wrapperStyle,\r\n                    {width: \"100%\", flexDirection: \"column\", position: \"relative\", paddingBottom: showError ? 0 : 6},\r\n                ]}\r\n            >\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <View\r\n                    style={[\r\n                        {flexDirection: \"row\", alignItems: \"center\"},\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                >\r\n                    {icon && icon(this.state.focused, error !== undefined, error !== undefined && value.length > 0)}\r\n                    <TextInput\r\n                        ref={this.inputRef}\r\n                        style={[\r\n                            {flex: 1, height: \"100%\", backgroundColor: \"transparent\"},\r\n                            inputStyle,\r\n                            this.state.focused && Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : {},\r\n                            this.state.focused ? inputFocusedStyle : {},\r\n                            // untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                        ]}\r\n                        onBlur={(e) => {\r\n                            if (onBlur) onBlur(e);\r\n                            this.setState({focused: false});\r\n                        }}\r\n                        onFocus={(e) => {\r\n                            if (onFocus) onFocus(e);\r\n                            this.setState({focused: true});\r\n                        }}\r\n                        // Workaround to prevent the input from getting slow with large amounts of text (use defaultValue instead of value)\r\n                        // TODO test that this doesn't break anything\r\n                        defaultValue={value}\r\n                        // value={value}\r\n                        placeholderTextColor={placeholderTextColor}\r\n                        {...(isSecureEntry ? {secureTextEntry: !showSecureEntry} : {})}\r\n                        {...otherProps}\r\n                    />\r\n                    {isSecureEntry && (\r\n                        <TouchableOpacity\r\n                            style={showPasswordButtonStyle}\r\n                            onPress={() => this.setState({...this.state, showSecureEntry: !showSecureEntry})}\r\n                        >\r\n                            <FontAwesome name={showSecureEntry ? \"eye-slash\" : \"eye\"} style={showPasswordIconStyle} />\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n                {showError && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidatedTextInput;\r\n","import {noop} from \"lodash\";\r\nimport React from \"react\";\r\nimport {TextInputProps} from \"react-native\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"../ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n    isEmail?: boolean;\r\n    isPassword?: boolean;\r\n} & ValidatedTextInputProps;\r\n\r\nconst emailProps: Partial<TextInputProps> = {\r\n    keyboardType: \"email-address\",\r\n    autoCompleteType: \"email\",\r\n    textContentType: \"emailAddress\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\nconst passwordProps: Partial<TextInputProps> = {\r\n    secureTextEntry: true,\r\n    autoCompleteType: \"password\",\r\n    textContentType: \"password\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    inputRef = React.createRef<ValidatedTextInput>();\r\n\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        handleChange: noop,\r\n        handleBlur: noop,\r\n    };\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    blur(): void {\r\n        this.inputRef.current?.blur();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            field,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            error,\r\n            onBlur,\r\n            onChangeText,\r\n            isEmail,\r\n            isPassword,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <ValidatedTextInput\r\n                ref={this.inputRef}\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(field)(e);\r\n                }}\r\n                {...(isEmail ? emailProps : {})}\r\n                {...(isPassword ? passwordProps : {})}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const ONBOARDING_INPUT_BORDER_RADIUS = 12;\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        root: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        wideDeviceLeftPanel: {\r\n            width: \"50%\",\r\n            height: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        slideWrapper: {\r\n            width: wideDevice ? \"50%\" : \"100%\",\r\n            height: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideScrollView: {\r\n            width: \"100%\",\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            paddingTop: 100,\r\n            paddingBottom: 20,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        slideContentContainer: {\r\n            width: \"80%\",\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"80%\",\r\n            alignItems: \"center\",\r\n            marginTop: 15,\r\n        },\r\n        slideNavButtons: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        navButton: {\r\n            flex: 1,\r\n            marginHorizontal: 0,\r\n            marginVertical: 0,\r\n        },\r\n        navButtonBack: {\r\n            backgroundColor: \"#fff\",\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const onboardingOffersStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        categoryTitleText: {},\r\n        offerControl: {\r\n            marginVertical: 10,\r\n        },\r\n        offerControlPreText: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n        },\r\n    });\r\n});\r\n","import {StyleSheet} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormCheckBoxProps} from \"../components/forms/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\nimport {TextInputStyleProps} from \"../components/ValidatedTextInput\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\n\r\nexport const formStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputFieldIcon: {\r\n            fontSize: 20,\r\n            color: theme.inputPlaceholder,\r\n            marginRight: 10,\r\n        },\r\n        inputFieldIconFocused: {\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): TextInputStyleProps {\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            borderBottomWidth: 2,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        focusedStyle: {\r\n            borderColor: theme.accent,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        labelStyle: {\r\n            marginBottom: 4,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 16,\r\n            color: theme.accent,\r\n        },\r\n        showPasswordButtonStyle: {\r\n            padding: 8,\r\n        },\r\n        showPasswordIconStyle: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n        placeholderTextColor: theme.inputPlaceholder,\r\n    };\r\n}\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): TextInputStyleProps {\r\n    /*return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        inputFocusedStyle:\r\n            Platform.OS === \"web\"\r\n                ? ({\r\n                      backgroundColor: \"transparent\",\r\n                      outline: \"none\",\r\n                  } as TextStyle)\r\n                : {},\r\n    };*/\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 55,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n        },\r\n        focusedStyle: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {},\r\n        inputStyle: {\r\n            fontSize: 18,\r\n            color: theme.text,\r\n            marginHorizontal: 15,\r\n        },\r\n    };\r\n}\r\n\r\nexport function getFormCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 16,\r\n            marginLeft: 5,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        containerStyle: commonStyle.checkboxContainer,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewProps, StyleSheet, StyleProp, TextStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {localizeError} from \"../../api/errors\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error?: string;\r\n    textStyle?: StyleProp<TextStyle>;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, textStyle, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {error && error.length > 0 && (\r\n                    <View style={[styles.wrapper, style]} {...otherProps}>\r\n                        <Text style={[styles.text, textStyle]}>{localizeError(error)}</Text>\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginTop: 5,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, TextStyle, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport Button, {ButtonSkin} from \"../Button\";\r\n\r\n// Component props\r\ntype FormSubmitButtonProps = {\r\n    onPress: () => void;\r\n    text: string;\r\n    icon?: JSX.Element;\r\n    submitting: boolean;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    skin?: ButtonSkin;\r\n    TouchableComponent?: typeof React.Component;\r\n} & ThemeProps;\r\n\r\nclass FormSubmitButton extends React.Component<FormSubmitButtonProps> {\r\n    render(): JSX.Element {\r\n        const {submitting, onPress, style, loadingIndicatorStyle, theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <Button\r\n                {...{onPress: submitting ? undefined : onPress}}\r\n                style={[{flexDirection: \"row\", alignItems: \"center\"}, style]}\r\n                {...otherProps}\r\n            >\r\n                {submitting && <ActivityIndicator color={theme.accentTernary} style={loadingIndicatorStyle} />}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormSubmitButton);\r\n","import {BlurView} from \"expo-blur\";\r\nimport React from \"react\";\r\nimport {Modal, TouchableOpacity, ViewStyle, StyleSheet, StyleProp, KeyboardAvoidingView} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {BLUR_MODAL_INTENSITY} from \"../../styles/general\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeProps} from \"../../types\";\r\n\r\nexport type ModalImplProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    onShow?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: StyleProp<ViewStyle>;\r\n    visible?: boolean;\r\n    animationType?: \"fade\" | \"none\" | \"slide\" | undefined;\r\n    bottom?: boolean;\r\n    fullWidth?: boolean;\r\n    fullHeight?: boolean;\r\n    nonDismissable?: boolean;\r\n    noBackground?: boolean;\r\n    backdropOpacity?: number;\r\n    backdropBlur?: boolean;\r\n    statusBarTranslucent?: boolean;\r\n};\r\n\r\nexport const DEFAULT_MODAL_BACKDROP_OPACITY = 0.15;\r\n\r\ntype ModalImplState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nclass ModalImpl extends React.Component<ModalImplProps, ModalImplState> {\r\n    constructor(props: ModalImplProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ModalImplProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n        if (b && this.props.onShow) this.props.onShow();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            modalViewStyle,\r\n            animationType,\r\n            bottom,\r\n            fullWidth,\r\n            fullHeight,\r\n            nonDismissable,\r\n            noBackground,\r\n            backdropOpacity,\r\n            backdropBlur,\r\n            statusBarTranslucent,\r\n        } = this.props;\r\n        const {modalVisible} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const backdropColor = `rgba(0,0,0,${\r\n            backdropOpacity === undefined ? DEFAULT_MODAL_BACKDROP_OPACITY : backdropOpacity\r\n        })`;\r\n\r\n        const content = (\r\n            <TouchableOpacity\r\n                style={[styles.backdrop, {backgroundColor: backdropColor}]}\r\n                activeOpacity={1.0}\r\n                onPress={nonDismissable ? undefined : () => this.setModalVisible(false)}\r\n            >\r\n                <TouchableOpacity\r\n                    // This TouchableOpacity intercepts press events so the modal doesn't hide when pressed\r\n                    activeOpacity={1.0}\r\n                    style={[\r\n                        styles.modalView,\r\n                        bottom ? {position: \"absolute\", bottom: 0, margin: 0} : {},\r\n                        fullWidth ? {width: \"100%\", maxWidth: \"100%\"} : {},\r\n                        fullHeight ? {height: \"100%\"} : {},\r\n                        !noBackground\r\n                            ? {\r\n                                  backgroundColor: theme.cardBackground,\r\n                                  shadowColor: \"#000\",\r\n                                  shadowOffset: {width: 0, height: 2},\r\n                                  shadowOpacity: 0.25,\r\n                                  shadowRadius: 3.84,\r\n                                  elevation: 5,\r\n                              }\r\n                            : {elevation: 0, shadowRadius: 0},\r\n                        modalViewStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.renderContent(() => this.setModalVisible(false))}\r\n                </TouchableOpacity>\r\n            </TouchableOpacity>\r\n        );\r\n\r\n        // Default to true if not given\r\n        const finalStatusBarTranslucent = statusBarTranslucent === undefined ? true : statusBarTranslucent;\r\n\r\n        return (\r\n            <Modal\r\n                animationType={animationType}\r\n                transparent\r\n                statusBarTranslucent={finalStatusBarTranslucent}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    if (!nonDismissable) this.setModalVisible(false);\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    enabled={finalStatusBarTranslucent} // statusBarTranslucent prop breaks the keyboard avoidance\r\n                    behavior=\"height\"\r\n                    style={{width: \"100%\", height: \"100%\", flex: 1}}\r\n                >\r\n                    {backdropBlur ? (\r\n                        <BlurView style={{flex: 1}} tint={\"dark\"} intensity={BLUR_MODAL_INTENSITY}>\r\n                            {content}\r\n                        </BlurView>\r\n                    ) : (\r\n                        content\r\n                    )}\r\n                </KeyboardAvoidingView>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        backdrop: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderColor: \"transparent\",\r\n        },\r\n        modalView: {\r\n            width: \"80%\",\r\n            maxWidth: 300,\r\n            margin: 20,\r\n            borderRadius: 3,\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 30,\r\n            alignItems: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ModalImpl);\r\n","import {BlurView} from \"expo-blur\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {StyleProp, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {BLUR_MODAL_INTENSITY} from \"../../styles/general\";\r\nimport {DEFAULT_MODAL_BACKDROP_OPACITY, ModalImplProps} from \"./ModalImpl.native\";\r\n\r\ntype ModalImplState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nlet container: HTMLDivElement | null = null;\r\n\r\nexport class ModalImplClass extends React.Component<ModalImplProps, ModalImplState> {\r\n    constructor(props: ModalImplProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (container === null) {\r\n            container = document.createElement(\"div\");\r\n            container.style.zIndex = \"1000\";\r\n            document.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ModalImplProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n        if (b && this.props.onShow) this.props.onShow();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            modalViewStyle,\r\n            bottom,\r\n            fullWidth,\r\n            fullHeight,\r\n            nonDismissable,\r\n            noBackground,\r\n            backdropOpacity,\r\n            backdropBlur,\r\n        } = this.props;\r\n        const {modalVisible} = this.state;\r\n\r\n        const fixedFullSize = {\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            left: 0,\r\n            top: 0,\r\n        };\r\n\r\n        const modal = modalVisible ? (\r\n            <>\r\n                {backdropBlur && (\r\n                    <BlurView style={{flex: 1, ...fixedFullSize}} tint={\"dark\"} intensity={BLUR_MODAL_INTENSITY} />\r\n                )}\r\n                <TouchableOpacity\r\n                    style={\r\n                        ({\r\n                            ...fixedFullSize,\r\n                            backgroundColor: `rgba(0,0,0,${\r\n                                backdropOpacity === undefined ? DEFAULT_MODAL_BACKDROP_OPACITY : backdropOpacity\r\n                            })`,\r\n                            cursor: \"pointer\",\r\n                        } as unknown) as StyleProp<ViewStyle> // force typings to accept web-specific styling\r\n                    }\r\n                    activeOpacity={1.0}\r\n                    onPress={nonDismissable ? undefined : () => this.setModalVisible(false)}\r\n                />\r\n                <View\r\n                    style={[\r\n                        ({\r\n                            // Centering\r\n                            position: \"fixed\",\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: \"auto\",\r\n                            // Actual styling\r\n                            width: \"80%\",\r\n                            maxWidth: 300,\r\n                            borderRadius: 3,\r\n                            paddingVertical: 20,\r\n                            paddingHorizontal: 30,\r\n                            alignItems: \"center\",\r\n                        } as unknown) as ViewStyle, // force typings to accept web-specific styling\r\n                        fullWidth ? {width: \"100%\", maxWidth: \"100%\"} : {},\r\n                        fullHeight\r\n                            ? {height: \"100%\"}\r\n                            : bottom\r\n                            ? {bottom: 0}\r\n                            : (({top: \"50%\", transform: \"translateY(-50%)\"} as unknown) as ViewStyle),\r\n                        !noBackground\r\n                            ? (({\r\n                                  backgroundColor: theme.cardBackground,\r\n                                  boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.05)\",\r\n                              } as unknown) as ViewStyle)\r\n                            : {},\r\n                        modalViewStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.renderContent(() => this.setModalVisible(false))}\r\n                </View>\r\n            </>\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        // \"Teleport\" the modal to an element that we previously appended to the <body>\r\n        return container ? ReactDOM.createPortal(modal, container) : <></>;\r\n    }\r\n}\r\n\r\nexport default withTheme(ModalImplClass);\r\n","import React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ModalImpl, {ModalImplClass} from \"./ModalImpl\";\r\nimport {ModalImplProps} from \"./ModalImpl.native\";\r\n\r\nexport type ModalActivator = (show: () => void) => JSX.Element;\r\n\r\nexport type CustomModalProps = ModalImplProps & {activator?: ModalActivator};\r\n\r\nexport class CustomModalClass extends React.Component<CustomModalProps> {\r\n    modalRef = React.createRef<ModalImplClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.setModalVisible(true);\r\n    }\r\n\r\n    hide(): void {\r\n        this.modalRef.current?.setModalVisible(false);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, ...otherProps} = this.props;\r\n\r\n        const activatorElement = activator ? activator(() => this.show()) : <></>;\r\n\r\n        return (\r\n            <>\r\n                {activatorElement}\r\n                <ModalImpl ref={this.modalRef} {...otherProps} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomModalClass);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TextProps, TouchableOpacity, StyleProp, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {IconProps} from \"@expo/vector-icons/build/createIconSet\";\r\nimport {styleTextLight} from \"../../styles/general\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nexport type ConfirmationModalButtonPreset = \"cancel\" | \"confirm\" | \"delete\";\r\n\r\nexport type ConfirmationModalButton = {\r\n    preset?: ConfirmationModalButtonPreset;\r\n    text?: string;\r\n    icon?: (props: Partial<IconProps<never>>) => JSX.Element;\r\n    onPress?: (hide: () => void) => void;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    disabled?: boolean;\r\n};\r\n\r\nexport type ConfirmationModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {\r\n        title: string;\r\n        text?: string;\r\n        justifyText?: boolean;\r\n        icon?: (props: Partial<IconProps<never>>) => JSX.Element;\r\n        buttons: ConfirmationModalButton[];\r\n        additionalContent?: (hide: () => void, textProps: TextProps) => JSX.Element;\r\n        contentContainerStyle?: StyleProp<ViewStyle>;\r\n    };\r\n\r\nexport class ConfirmationModalClass extends React.Component<ConfirmationModalProps> {\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    private getPreset(preset: ConfirmationModalButtonPreset): ConfirmationModalButton {\r\n        const {theme} = this.props;\r\n\r\n        switch (preset) {\r\n            case \"cancel\": {\r\n                return {\r\n                    text: i18n.t(\"cancel\"),\r\n                    backgroundColor: theme.background,\r\n                    color: theme.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n            case \"confirm\": {\r\n                return {\r\n                    text: i18n.t(\"ok\"),\r\n                    backgroundColor: theme.okay,\r\n                    color: themes.dark.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n            case \"delete\": {\r\n                return {\r\n                    text: i18n.t(\"delete\"),\r\n                    backgroundColor: theme.error,\r\n                    color: themes.dark.text,\r\n                    onPress: (hide) => hide(),\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            title,\r\n            text,\r\n            justifyText,\r\n            icon,\r\n            buttons,\r\n            additionalContent,\r\n            contentContainerStyle,\r\n            ...otherProps\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const buttonDefaults = {backgroundColor: theme.okay, color: themes.dark.text};\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                {...otherProps}\r\n                modalViewStyle={[styles.modalStyle, otherProps.modalViewStyle]}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        {icon && icon({style: styles.icon})}\r\n                        <View style={[styles.contentContainer, contentContainerStyle]}>\r\n                            <Text style={styles.title}>{title}</Text>\r\n                            <Text\r\n                                style={[\r\n                                    styles.text,\r\n                                    justifyText && {textAlign: \"justify\"},\r\n                                    !text && {marginVertical: 8, height: 0},\r\n                                ]}\r\n                            >\r\n                                {text}\r\n                            </Text>\r\n                            {additionalContent && additionalContent(hide, {style: styles.contentText})}\r\n                        </View>\r\n                        <View style={styles.actionsWrapper}>\r\n                            {buttons.map((buttonParams, i) => {\r\n                                const b = {\r\n                                    ...buttonDefaults,\r\n                                    ...(buttonParams.preset ? this.getPreset(buttonParams.preset) : {}),\r\n                                    ...buttonParams,\r\n                                };\r\n                                return (\r\n                                    <TouchableOpacity\r\n                                        key={`modal-button-${i}-${b.text}`}\r\n                                        style={[styles.action, {backgroundColor: b.backgroundColor}]}\r\n                                        activeOpacity={b.disabled ? 1.0 : undefined}\r\n                                        onPress={b.disabled ? undefined : () => b.onPress && b.onPress(hide)}\r\n                                    >\r\n                                        {b.disabled && <View style={styles.actionDisabledOverlay}></View>}\r\n                                        {b.text && <Text style={[styles.actionText, {color: b.color}]}>{b.text}</Text>}\r\n                                    </TouchableOpacity>\r\n                                );\r\n                            })}\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalStyle: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n            paddingTop: 20,\r\n            borderRadius: 20,\r\n            overflow: \"hidden\",\r\n        },\r\n        actionsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            borderTopWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            height: 50,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n        actionDisabledOverlay: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"#777\",\r\n            opacity: 0.6,\r\n        },\r\n        contentContainer: {\r\n            paddingHorizontal: 25,\r\n            width: \"100%\",\r\n        },\r\n        icon: {\r\n            fontSize: 36,\r\n            marginBottom: 5,\r\n        },\r\n        title: {\r\n            fontSize: 24,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n            textAlign: \"center\",\r\n        },\r\n        contentText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ConfirmationModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport store from \"../../state/store\";\r\nimport {cancelLoginRecovery, requestLogin} from \"../../state/auth/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nexport type RecoverAccountModalProps = ThemeProps & Partial<CustomModalProps> & {email: string; password: string};\r\n\r\nclass RecoverAccountModal extends React.Component<RecoverAccountModalProps> {\r\n    render() {\r\n        const {email, password, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"recoverAccount.title\")}\r\n                text={i18n.t(\"recoverAccount.text\")}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\", onPress: () => store.dispatch(cancelLoginRecovery())},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"recoverAccount.yes\"),\r\n                        onPress: () => (store.dispatch as MyThunkDispatch)(requestLogin(email, password, true)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(RecoverAccountModal);\r\n","import * as React from \"react\";\r\nimport {Keyboard, StyleProp, StyleSheet, Text, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport RecoverAccountModal from \"../modals/RecoverAccountModal\";\r\nimport themes from \"../../constants/themes\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validatedEmail: state.auth.validatedEmail,\r\n    needsRecovery: state.auth.accountNeedsRecovery,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<FormState> & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\ntype LoginFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    pwdInputRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (success) {\r\n                    // Clear password input\r\n                    if (this.setFieldValue) this.setFieldValue(\"password\", \"\", false);\r\n                    if (this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                }\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle, needsRecovery} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Formik\r\n                    initialValues={{email: \"\", password: \"\"} as FormState}\r\n                    validationSchema={LoginFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldValue,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 10)};\r\n                        this.setFieldValue = setFieldValue;\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <View>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdInputRef.current?.focus()}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdInputRef}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"link\"\r\n                                    accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                    onPress={() => {\r\n                                        Keyboard.dismiss();\r\n                                        rootNavigate(\"LoginRoot\", {\r\n                                            screen: \"LoginScreens\",\r\n                                            params: {screen: \"ForgotPasswordScreen\"},\r\n                                        });\r\n                                    }}\r\n                                    style={styles.forgotPwdLink}\r\n                                >\r\n                                    <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                                </TouchableOpacity>\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"loginForm.logIn\")}\r\n                                        icon={<MaterialCommunityIcons name=\"login\" style={styles.loginButtonIcon} />}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <View style={styles.separatorContainer}>\r\n                                        <View style={styles.separatorHbar} />\r\n                                        <Text style={styles.separatorText}>{i18n.t(\"loginForm.or\")}</Text>\r\n                                        <View style={styles.separatorHbar} />\r\n                                    </View>\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            rootNavigate(\"LoginRoot\", {\r\n                                                screen: \"LoginScreens\",\r\n                                                params: {screen: \"SignupScreen\"},\r\n                                            });\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"loginForm.signUp\")}\r\n                                    />\r\n                                </View>\r\n                                <RecoverAccountModal\r\n                                    visible={needsRecovery}\r\n                                    email={values.email}\r\n                                    password={values.password}\r\n                                />\r\n                            </View>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n        },\r\n        loginButtonIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n        },\r\n        forgotPwdLink: {\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            textAlign: \"center\",\r\n        },\r\n        separatorContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        separatorHbar: {\r\n            flex: 1,\r\n            height: 1,\r\n            backgroundColor: theme.text,\r\n            opacity: 0.2,\r\n        },\r\n        separatorText: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LoginForm));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, StyleProp, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormError from \"./FormError\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\nexport type ForgotPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps, ForgotPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ForgotPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit({email}: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email)).then(({errors}: ValidatedActionReturn) => {\r\n            if (errors && errors.fields) {\r\n                const f = errors.fields;\r\n                Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n            }\r\n            this.setState({remoteErrors: errors, submitting: false});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as FormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikCfg: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"send\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 40,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ScrollView, LayoutChangeEvent, StyleProp, ViewStyle, Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\ntype ScrollFormWrapperProps = ThemeProps & {contentStyle?: StyleProp<ViewStyle>; notKeyboardReactive?: boolean};\r\n\r\ntype ScrollFormWrapperState = {height: number};\r\n\r\nclass ScrollFormWrapper extends React.Component<ScrollFormWrapperProps, ScrollFormWrapperState> {\r\n    keyboardShown = false;\r\n\r\n    constructor(props: ScrollFormWrapperProps) {\r\n        super(props);\r\n        this.state = {height: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.notKeyboardReactive) {\r\n            Keyboard.addListener(\"keyboardDidShow\", () => {\r\n                /*const coords = e.endCoordinates;\r\n                console.log(coords);\r\n                if (coords) this.setState({...this.state, height: coords.height, keyboardTopY: coords.screenY, keyboardOpen: true});*/\r\n                this.keyboardShown = true;\r\n            });\r\n            Keyboard.addListener(\"keyboardDidHide\", () => (this.keyboardShown = false));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {notKeyboardReactive, contentStyle, theme} = this.props;\r\n        const {height} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                style={styles.scrollView}\r\n                contentContainerStyle={[\r\n                    styles.scrollViewContent,\r\n                    {\r\n                        minHeight: notKeyboardReactive ? 0 : height,\r\n                    },\r\n                ]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    if (!notKeyboardReactive || this.state.height == 0) {\r\n                        // Manually give a minimum height to the content\r\n                        // (-5 is to prevent an unnecessary scrollbar from showing on web)\r\n                        if (!this.keyboardShown)\r\n                            this.setState({...this.state, height: e.nativeEvent.layout.height - 5});\r\n                    }\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    behavior=\"padding\"\r\n                    style={[\r\n                        styles.keyboardAvoidingView,\r\n                        // Avoid showing the content until we have the height computed\r\n                        !notKeyboardReactive && this.state.height === 0 ? {opacity: 0} : {},\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.children}\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => ({\r\n    keyboardAvoidingView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    scrollViewContent: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport default withTheme(ScrollFormWrapper);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport {noop} from \"lodash\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype SignupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormState> {\r\n    pwdField1Ref = React.createRef<FormTextInput>();\r\n    pwdField2Ref = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    resetForm: () => void = noop;\r\n\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success) {\r\n                    this.resetForm();\r\n                    if (this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 5)};\r\n                        this.setFieldError = setFieldError;\r\n                        this.resetForm = formikProps.resetForm;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField1Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField1Ref}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField2Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField2Ref}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    accessibilityLabel={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"createAccount\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 10,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type SvgPlaceholderProps = SvgProps;\r\n\r\nfunction SvgPlaceholder(): JSX.Element {\r\n    return <></>;\r\n}\r\n\r\nexport default SvgPlaceholder;\r\n","import {SvgProps} from \"react-native-svg\";\r\nimport SvgPlaceholder from \"./components/SvgPlaceholder\";\r\nimport {SupportedLocale} from \"./localization\";\r\nimport store from \"./state/store\";\r\nimport {ThemeKey} from \"./types\";\r\n\r\nlet loaded: {[key: string]: number} = {};\r\nlet locale: SupportedLocale | null = null;\r\nlet theme: ThemeKey | null = null;\r\n\r\nasync function assetDictCommon(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"welcome\":\r\n            return import(\"@assets/images/welcome.svg\");\r\n        case \"login-header\":\r\n            return import(\"@assets/images/login.svg\");\r\n        case \"offers.categories.discover\":\r\n            return import(\"@assets/images/offers/discover.svg\");\r\n        case \"offers.categories.meet\":\r\n            return import(\"@assets/images/offers/meet.svg\");\r\n        case \"offers.categories.collaborate\":\r\n            return import(\"@assets/images/offers/collaborate.svg\");\r\n        case \"background.onboarding\":\r\n            return import(\"@assets/images/background.svg\");\r\n        case \"large-wave-bg\":\r\n            return import(\"@assets/images/large-wave-bg.svg\");\r\n        case \"woman-holding-phone\":\r\n            return import(\"@assets/images/woman-holding-phone.svg\");\r\n        case \"woman-holding-phone-2\":\r\n            return import(\"@assets/images/woman-holding-phone-2.svg\");\r\n        case \"woman-holding-phone-3\":\r\n            return import(\"@assets/images/woman-holding-phone-3.svg\");\r\n        case \"woman-holding-phone-4\":\r\n            return import(\"@assets/images/woman-holding-phone-4.svg\");\r\n        case \"man-holding-phone\":\r\n            return import(\"@assets/images/man-holding-phone.svg\");\r\n        case \"blob-4\":\r\n            return import(\"@assets/images/blob-4.svg\");\r\n        case \"blob-5\":\r\n            return import(\"@assets/images/blob-5.svg\");\r\n        case \"blob-6\":\r\n            return import(\"@assets/images/blob-6.svg\");\r\n        case \"blob-8\":\r\n            return import(\"@assets/images/blob-8.svg\");\r\n        case \"blob-9\":\r\n            return import(\"@assets/images/blob-9.svg\");\r\n        case \"blob-10\":\r\n            return import(\"@assets/images/blob-10.svg\");\r\n        case \"blob-11\":\r\n            return import(\"@assets/images/blob-11.svg\");\r\n        case \"staff\":\r\n            return import(\"@assets/images/staff.svg\");\r\n        case \"student\":\r\n            return import(\"@assets/images/student.svg\");\r\n        case \"logos.sea-eu-around.small\":\r\n            return import(\"@assets/images/logos/sea-eu-around.small.png\");\r\n        case \"store-button.android\":\r\n            return import(\"@assets/images/store-android.png\");\r\n        case \"store-button.ios\":\r\n            return import(\"@assets/images/store-ios.svg\");\r\n        case \"group-placeholder\":\r\n            return import(\"@assets/images/group-placeholder.png\");\r\n        default:\r\n            return import(\"@assets/images/placeholder.png\");\r\n    }\r\n}\r\n\r\nasync function assetDictEn(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_en_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nasync function assetDictFr(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_fr_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function getLocalImage(key: string, onLoad?: () => void): number {\r\n    const settings = store.getState().settings.userSettings;\r\n    if (locale != settings.locale || theme != settings.theme) loaded = {};\r\n    locale = settings.locale;\r\n    theme = settings.theme;\r\n\r\n    if (loaded[key]) return loaded[key];\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const finish = (v: any) => {\r\n        loaded[key] = v.default;\r\n        if (onLoad) onLoad();\r\n    };\r\n\r\n    const localizedDict = locale === \"en\" ? assetDictEn : assetDictFr;\r\n\r\n    localizedDict(theme, key).then((v) => {\r\n        // Fallback to the common dict if needed\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        if (v === null) assetDictCommon(theme!, key).then((v) => finish(v));\r\n        else finish(v);\r\n    });\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getLocalSvg(key: string, onLoad?: () => void): React.FC<SvgProps> {\r\n    const raw = getLocalImage(key, onLoad);\r\n    if (raw === 0) return SvgPlaceholder;\r\n    return (raw as unknown) as React.FC<SvgProps>;\r\n}\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport {Dimensions, Platform} from \"react-native\";\r\nimport {colors} from \"react-native-elements\";\r\nimport ReAnimated from \"react-native-reanimated\";\r\n\r\nexport function initPolyfills(): void {\r\n    // FIXME: https://github.com/react-native-elements/react-native-elements/pull/2561\r\n\r\n    // @ts-ignore react-native-elements typings are missing \"web\"\r\n    if (!colors.platform.web) {\r\n        // @ts-ignore react-native-elements typings are missing \"web\"\r\n        colors.platform.web = {\r\n            primary: \"#2089dc\",\r\n            secondary: \"#ca71eb\",\r\n            grey: \"#393e42\",\r\n            searchBg: \"#303337\",\r\n            success: \"#52c41a\",\r\n            error: \"#ff190c\",\r\n            warning: \"#faad14\",\r\n        };\r\n    }\r\n}\r\n\r\nexport function normalizeWheelEvent(e: WheelEvent): {spinY: number; pixelY: number} {\r\n    // Reasonable defaults\r\n    const PIXEL_STEP = 10;\r\n    const LINE_HEIGHT = 40;\r\n    const PAGE_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\n    let sY = 0; // spinY\r\n    let pY = 0; // pixelY\r\n\r\n    // Legacy\r\n    if (\"detail\" in e) sY = e.detail;\r\n    if (\"wheelDelta\" in e) sY = -(e as {wheelDelta: number}).wheelDelta / 120;\r\n    if (\"wheelDeltaY\" in e) sY = -(e as {wheelDeltaY: number}).wheelDeltaY / 120;\r\n\r\n    if (\"deltaY\" in e) pY = e.deltaY;\r\n    else pY = sY * PIXEL_STEP;\r\n\r\n    if (pY && e.deltaMode) {\r\n        // delta in LINE units\r\n        if (e.deltaMode == 1) pY *= LINE_HEIGHT;\r\n        // delta in PAGE units\r\n        else pY *= PAGE_HEIGHT;\r\n    }\r\n\r\n    // Fall-back if spin cannot be determined\r\n    if (pY && !sY) sY = pY < 1 ? -1 : 1;\r\n\r\n    return {spinY: sY, pixelY: pY};\r\n}\r\n\r\nexport function animateValue(node: ReAnimated.Value<number>, config: ReAnimated.TimingConfig): void {\r\n    if (Platform.OS === \"web\") node.setValue(config.toValue);\r\n    else ReAnimated.timing(node, config).start();\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, StyleSheet, Dimensions, Keyboard, View} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport layout from \"../../constants/layout\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    isFirstLaunch: state.settings.isFirstLaunch,\r\n}));\r\n\r\n// Component props\r\ntype LoginHeaderProps = ThemeProps & {insets: EdgeInsets} & ConnectedProps<typeof reduxConnector>;\r\n\r\nexport const LOGIN_HEADER_WAVE_HEIGHT = 60;\r\nconst SVG_VIEWBOX_W = 620;\r\nconst SVG_VIEWBOX_H = 800;\r\n\r\nclass LoginHeaderClass extends React.Component<LoginHeaderProps> {\r\n    height = new ReAnimated.Value<number>(this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT);\r\n    imageTop = new ReAnimated.Value<number>(this.getFullHeight() - this.getImageHeight());\r\n\r\n    back(): void {\r\n        Keyboard.dismiss();\r\n        rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n    }\r\n\r\n    getImageHeight(): number {\r\n        return (SVG_VIEWBOX_H / SVG_VIEWBOX_W) * Dimensions.get(\"window\").width;\r\n    }\r\n\r\n    getCollapsedHeight(): number {\r\n        const minHeightBelow = /*550*/ 650;\r\n        return Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top;\r\n    }\r\n\r\n    getFullHeight(): number {\r\n        const maxHeight = 530;\r\n        const minHeightBelow = 420;\r\n        return Math.min(Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top, maxHeight);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Keyboard.addListener(\"keyboardDidShow\", () => {\r\n            const imageTopVal = this.getCollapsedHeight() - this.getImageHeight();\r\n            const heightVal = this.getCollapsedHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n            const duration = 100;\r\n            animateValue(this.height, {\r\n                toValue: heightVal,\r\n                duration,\r\n                easing,\r\n            });\r\n            animateValue(this.imageTop, {\r\n                toValue: imageTopVal,\r\n                duration,\r\n                easing,\r\n            });\r\n        });\r\n\r\n        Keyboard.addListener(\"keyboardDidHide\", () => {\r\n            const imageTopVal = this.getFullHeight() - this.getImageHeight();\r\n            const heightVal = this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n            const duration = 100;\r\n\r\n            animateValue(this.height, {\r\n                toValue: heightVal,\r\n                duration,\r\n                easing,\r\n            });\r\n            animateValue(this.imageTop, {\r\n                toValue: imageTopVal,\r\n                duration,\r\n                easing,\r\n            });\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, isFirstLaunch} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const Image = getLocalSvg(\"login-header\", () => this.forceUpdate());\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                {!layout.isWideDevice && (\r\n                    <ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n                        <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n                    </ReAnimated.View>\r\n                )}\r\n\r\n                <ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n                    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n                        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.title}>\r\n                        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n                    </Text>\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n    <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n</ReAnimated.View>\r\n<ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n    </TouchableOpacity>\r\n    <Text style={styles.title}>\r\n        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n    </Text>\r\n</ReAnimated.View>\r\n*/\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            ...(wideDevice\r\n                ? {\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"50%\",\r\n                      height: \"100%\",\r\n                      backgroundColor: theme.accent,\r\n                      zIndex: 1,\r\n                  }\r\n                : {zIndex: 1}),\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            padding: 40,\r\n            zIndex: 2,\r\n            overflow: \"hidden\",\r\n        },\r\n        navigationButton: {\r\n            width: 50,\r\n            marginLeft: -15,\r\n        },\r\n        navigationIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 50,\r\n        },\r\n        title: {\r\n            color: themes.dark.text,\r\n            fontSize: 38,\r\n            maxWidth: 210,\r\n            fontFamily: \"RalewaySemiBold\",\r\n        },\r\n        image: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            width: Dimensions.get(\"window\").width,\r\n            aspectRatio: SVG_VIEWBOX_W / SVG_VIEWBOX_H,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction LoginHeader(props: ConnectedProps<typeof reduxConnector>): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <LoginHeaderClass {...themeProps} insets={insets} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(LoginHeader);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {LoginScreens} from \"../navigation/types\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {LOGIN_HEADER_WAVE_HEIGHT} from \"../components/headers/LoginHeader\";\r\nimport layout from \"../constants/layout\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Sign-in\r\n\r\ntype TabSigninScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"SigninScreen\">;\r\n\r\nclass SigninScreenClass extends React.Component<TabSigninScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <LoginForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Forgot password\r\n\r\ntype ForgotPasswordScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"ForgotPasswordScreen\">;\r\n\r\nclass ForgotPasswordScreenClass extends React.Component<ForgotPasswordScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <ForgotPasswordForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Sign-up\r\n\r\ntype SignupScreenProps = ThemeProps;\r\n\r\nclass SignupScreenClass extends React.Component<SignupScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <SignupForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    if (wideDevice) {\r\n        return StyleSheet.create({\r\n            screenWrapper: {\r\n                width: \"50%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: \"50%\",\r\n            },\r\n            screenContainer: {\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n            },\r\n            formContainer: {\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    } else {\r\n        return StyleSheet.create({\r\n            screenWrapper: {},\r\n            screenContainer: {},\r\n            formContainer: {\r\n                // Add top padding to the form so the top is below the header wave\r\n                paddingTop: LOGIN_HEADER_WAVE_HEIGHT,\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    }\r\n});\r\n\r\nexport const SigninScreen = withTheme(SigninScreenClass);\r\nexport const ForgotPasswordScreen = withTheme(ForgotPasswordScreenClass);\r\nexport const SignupScreen = withTheme(SignupScreenClass);\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type SemiHighlightedTextProps = {\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    text: string;\r\n    fontSize?: number;\r\n} & ThemeProps;\r\n\r\nclass SemiHighlightedText extends React.Component<SemiHighlightedTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, text, containerStyle, textStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fontSize = this.props.fontSize || 24;\r\n        const underlineHeight = fontSize * 0.55;\r\n        const underlineBottom = -1;\r\n        const underlineSides = fontSize * 0.4;\r\n\r\n        return (\r\n            <View style={[styles.textContainer, containerStyle]}>\r\n                <View style={[styles.underline, {height: underlineHeight, bottom: underlineBottom}]} />\r\n                <Text style={[styles.text, textStyle, {fontSize, paddingHorizontal: underlineSides}]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        textContainer: {\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontFamily: \"RalewaySemiBold\",\r\n            color: theme.accent,\r\n            zIndex: 2,\r\n\r\n            // Make it more readable with the dark theme\r\n            ...(theme.id === \"dark\"\r\n                ? {\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.6)\",\r\n                      textShadowOffset: {width: 0, height: 1},\r\n                      textShadowRadius: 1,\r\n                  }\r\n                : {}),\r\n        },\r\n        underline: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            backgroundColor: theme.accentTernary,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SemiHighlightedText);\r\n","import * as React from \"react\";\r\nimport {ImageProps, Image} from \"react-native\";\r\nimport {getLocalImage} from \"../assets\";\r\n\r\n// Component props\r\nexport type LocalImageProps = Partial<ImageProps> & {imageKey: string};\r\n\r\nclass LocalImage extends React.Component<LocalImageProps> {\r\n    render(): JSX.Element {\r\n        const {imageKey, ...otherProps} = this.props;\r\n        const img = getLocalImage(imageKey, () => this.forceUpdate());\r\n        return img ? <Image source={img} {...otherProps} /> : <></>;\r\n    }\r\n}\r\n\r\nexport default LocalImage;\r\n","import React from \"react\";\r\nimport {Linking, StyleProp, TouchableOpacity, TouchableOpacityProps, ViewStyle} from \"react-native\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport LocalImage from \"./LocalImage\";\r\n\r\ntype MobileStoreButtonProps = {\r\n    url: string;\r\n    store: \"ios\" | \"android\";\r\n    scale?: number;\r\n    width?: number;\r\n    linkStyle?: StyleProp<ViewStyle>;\r\n    linkProps?: TouchableOpacityProps;\r\n};\r\n\r\nconst DEFAULT_WIDTH = 204;\r\nconst DEFAULT_HEIGHT = 60;\r\n\r\nclass MobileStoreButton extends React.Component<MobileStoreButtonProps> {\r\n    render(): JSX.Element {\r\n        const {store, url, linkStyle, linkProps} = this.props;\r\n\r\n        const Svg = store === \"ios\" ? getLocalSvg(\"store-button.ios\", () => this.forceUpdate()) : null;\r\n        const scale = this.props.scale === undefined ? 1 : this.props.scale;\r\n        const width = this.props.width === undefined ? DEFAULT_WIDTH * scale : this.props.width * scale;\r\n        const height = (width * DEFAULT_HEIGHT) / DEFAULT_WIDTH;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[\r\n                    {\r\n                        overflow: \"hidden\",\r\n                        height,\r\n                        width,\r\n                        margin: 10,\r\n                    },\r\n                    linkProps ? linkProps.style : {},\r\n                    linkStyle,\r\n                ]}\r\n                activeOpacity={0.7}\r\n                onPress={() => {\r\n                    Linking.openURL(url);\r\n                }}\r\n                {...linkProps}\r\n            >\r\n                {store === \"android\" && (\r\n                    <LocalImage imageKey=\"store-button.android\" style={{width: \"100%\", height: \"100%\"}} />\r\n                )}\r\n                {store === \"ios\" && Svg && <Svg viewBox=\"0 0 133 40\" width={width} height={height} fill=\"black\" />}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MobileStoreButton;\r\n","import * as React from \"react\";\r\nimport {Dimensions, Platform, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SemiHighlightedText from \"../components/SemiHighlightedText\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport Button from \"../components/Button\";\r\nimport MobileStoreButton from \"../components/MobileStoreButton\";\r\n\r\nexport type WelcomeScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass WelcomeScreen extends React.Component<WelcomeScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const WelcomeImage = getLocalSvg(\"welcome\", () => this.forceUpdate());\r\n        const storeButtonWidth = Math.min(Dimensions.get(\"window\").width * 0.4, 200);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <View style={styles.imageAndTextContainer}>\r\n                        <View style={styles.imageContainer}>\r\n                            <WelcomeImage />\r\n                        </View>\r\n                        <View style={styles.textContainer}>\r\n                            <SemiHighlightedText text={i18n.t(\"appName\")} fontSize={32} textStyle={styles.appName} />\r\n                            <Text style={styles.subtitle}>{i18n.t(\"welcomeScreen.subtitle\")}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {Platform.OS === \"web\" && (\r\n                        <View style={styles.mobileStoresContainer}>\r\n                            <MobileStoreButton\r\n                                store=\"android\"\r\n                                url=\"https://play.google.com/store/apps/details?id=com.sea_eu.around\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                            <MobileStoreButton\r\n                                store=\"ios\"\r\n                                url=\"https://apps.apple.com/fr/app/sea-eu-around/id1543605955\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                    <View style={styles.actionsContainer}>\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signIn\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SigninScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-filled\"\r\n                        />\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signUp\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SignupScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-hollow\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"85%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageAndTextContainer: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageContainer: {\r\n            width: \"100%\",\r\n            height: 300,\r\n        },\r\n        textContainer: {\r\n            marginVertical: 20,\r\n        },\r\n        appName: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewayBold\",\r\n        },\r\n        subtitle: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            alignSelf: \"center\",\r\n            maxWidth: 250,\r\n            marginTop: 10,\r\n        },\r\n\r\n        mobileStoresContainer: {\r\n            flexDirection: \"row\",\r\n            marginVertical: 20,\r\n        },\r\n\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(WelcomeScreen);\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"../modals/CustomModal\";\r\nimport {BottomSheetProps} from \"./types\";\r\n\r\nexport class BottomSheetClass extends React.Component<BottomSheetProps> {\r\n    webModalRef = React.createRef<CustomModalClass>();\r\n\r\n    show(): void {\r\n        this.webModalRef.current?.show();\r\n    }\r\n\r\n    hide(): void {\r\n        this.webModalRef.current?.hide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, renderContent} = this.props;\r\n        const hide = () => this.hide();\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.webModalRef}\r\n                modalViewStyle={{paddingHorizontal: 0, paddingVertical: 0}}\r\n                renderContent={() => renderContent(hide)}\r\n                activator={activator}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BottomSheetClass);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, TouchableOpacityProps} from \"react-native\";\r\n\r\nexport default class BottomSheetTouchableOpacity extends React.Component<TouchableOpacityProps> {\r\n    render(): JSX.Element {\r\n        return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, StyleProp, ViewStyle, TextStyle} from \"react-native\";\r\nimport {ListItem, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport BottomSheet, {BottomSheetClass} from \"./bottom-sheet/BottomSheet\";\r\nimport BottomSheetTouchableOpacity from \"./bottom-sheet/BottomSheetTouchableOpacity\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ActionMenuItemPreset = \"close\";\r\n\r\nexport type ActionMenuItem = {\r\n    preset?: ActionMenuItemPreset;\r\n    text?: string;\r\n    icon?: (style: StyleProp<TextStyle>) => JSX.Element;\r\n    onSelect?: () => void;\r\n    persistMenu?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    noChevron?: boolean;\r\n};\r\n\r\nexport type ActionMenuProps = {\r\n    activator?: (show: () => void) => JSX.Element;\r\n    title?: string;\r\n    actions: ActionMenuItem[];\r\n    snapPoints?: number[];\r\n} & ThemeProps;\r\n\r\nconst ITEM_HEIGHT = 55;\r\n\r\nexport class ActionMenuClass extends React.Component<ActionMenuProps> {\r\n    sheetRef = React.createRef<BottomSheetClass>();\r\n\r\n    private getPreset(preset: ActionMenuItemPreset): ActionMenuItem {\r\n        const {theme} = this.props;\r\n\r\n        switch (preset) {\r\n            case \"close\": {\r\n                return {\r\n                    text: i18n.t(\"close\"),\r\n                    containerStyle: {backgroundColor: theme.cardBackground},\r\n                    textStyle: {color: theme.text},\r\n                    noChevron: true,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.sheetRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, activator, title, actions, snapPoints} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <BottomSheet\r\n                    ref={this.sheetRef}\r\n                    activator={activator}\r\n                    snapPoints={snapPoints || [0, (1 + actions.length) * ITEM_HEIGHT]}\r\n                    renderContent={(hide) => (\r\n                        <>\r\n                            {title && (\r\n                                <ListItem bottomDivider style={styles.listItemContainer}>\r\n                                    <ListItem.Content>\r\n                                        <ListItem.Title style={styles.titleItem}>{title}</ListItem.Title>\r\n                                    </ListItem.Content>\r\n                                </ListItem>\r\n                            )}\r\n                            {actions.map((item, i) => {\r\n                                const it = {\r\n                                    ...(item.preset ? this.getPreset(item.preset) : {}),\r\n                                    ...item,\r\n                                };\r\n                                return (\r\n                                    <BottomSheetTouchableOpacity\r\n                                        key={`menu-action-${i}`}\r\n                                        onPress={() => {\r\n                                            if (it.onSelect) it.onSelect();\r\n                                            if (!it.persistMenu) hide();\r\n                                        }}\r\n                                        style={styles.listItemWrapper}\r\n                                    >\r\n                                        <ListItem containerStyle={[styles.listItemContainer, it.containerStyle]}>\r\n                                            {!it.noChevron && <ListItem.Chevron />}\r\n                                            {it.icon && it.icon([it.textStyle, {fontSize: 26}])}\r\n                                            <ListItem.Content>\r\n                                                <ListItem.Title style={it.textStyle}>{it.text}</ListItem.Title>\r\n                                            </ListItem.Content>\r\n                                        </ListItem>\r\n                                    </BottomSheetTouchableOpacity>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        listItemWrapper: {\r\n            width: \"100%\",\r\n            height: ITEM_HEIGHT,\r\n        },\r\n        listItemContainer: {\r\n            width: \"100%\",\r\n            height: ITEM_HEIGHT,\r\n        },\r\n        titleItem: {\r\n            fontSize: 26,\r\n            color: themes.light.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ActionMenuClass);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {beginOnboarding, debugConnect} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu from \"./ActionMenu\";\r\n\r\nexport type DebugMenuProps = ThemeProps;\r\n\r\nclass DebugMenu extends React.Component<DebugMenuProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n\r\n        return (\r\n            <ActionMenu\r\n                title=\"Debug Menu\"\r\n                actions={[\r\n                    {\r\n                        text: \"Access MainScreen\",\r\n                        onSelect: () => rootNavigate(\"MainScreen\"),\r\n                    },\r\n                    {\r\n                        text: \"Access OnBoardingScreen\",\r\n                        onSelect: () => store.dispatch(beginOnboarding()),\r\n                    },\r\n                    {\r\n                        text: \"Automatically create profile\",\r\n                        onSelect: () => (store.dispatch as MyThunkDispatch)(debugConnect()),\r\n                    },\r\n                    {\r\n                        preset: \"close\",\r\n                    },\r\n                ]}\r\n                activator={(show) => (\r\n                    <TouchableOpacity\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            bottom: 10,\r\n                            right: 10,\r\n                            width: 36,\r\n                            height: 36,\r\n                            backgroundColor: theme.error,\r\n                            borderRadius: 20,\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                        onPress={show}\r\n                    >\r\n                        <FontAwesome name=\"gear\" color=\"white\" style={{fontSize: 26}} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DebugMenu);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type VersionInfoProps = ThemeProps;\r\n\r\nfunction VersionInfo(props: VersionInfoProps): JSX.Element {\r\n    const {theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <View style={styles.versionInfoContainer}>\r\n            <Text style={styles.versionText}>{APP_VERSION} </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight, fontSize: 12},\r\n        versionDisclaimerIcon: {color: theme.error, fontSize: 13},\r\n    });\r\n});\r\n\r\nexport default withTheme(VersionInfo);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {SigninScreen, SignupScreen, ForgotPasswordScreen} from \"../screens/LoginScreens\";\r\nimport {LoginRoot, LoginScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\nimport LoginHeader from \"../components/headers/LoginHeader\";\r\nimport DebugMenu from \"../components/DebugMenu\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport VersionInfo from \"../components/VersionInfo\";\r\n\r\nconst SigninRoot = createMaterialTopTabNavigator<LoginScreens>();\r\nconst Tab = createMaterialTopTabNavigator<LoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator swipeEnabled={false} tabBar={() => <></>}>\r\n        <Tab.Screen name=\"WelcomeScreen\" component={WelcomeScreen} options={{title: screenTitle(\"WelcomeScreen\")}} />\r\n        <Tab.Screen name=\"LoginScreens\">\r\n            {() => (\r\n                <>\r\n                    <LoginHeader />\r\n\r\n                    <SigninRoot.Navigator tabBar={() => <></>} initialRouteName=\"SigninScreen\" swipeEnabled={false}>\r\n                        <SigninRoot.Screen\r\n                            name=\"ForgotPasswordScreen\"\r\n                            component={ForgotPasswordScreen}\r\n                            options={{\r\n                                title: screenTitle(\"ForgotPasswordScreen\"),\r\n                            }}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SigninScreen\"\r\n                            component={SigninScreen}\r\n                            options={{title: screenTitle(\"SigninScreen\")}}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SignupScreen\"\r\n                            component={SignupScreen}\r\n                            options={{title: screenTitle(\"SignupScreen\")}}\r\n                        />\r\n                    </SigninRoot.Navigator>\r\n\r\n                    <VersionInfo />\r\n                    {DEBUG_MODE && <DebugMenu />}\r\n                </>\r\n            )}\r\n        </Tab.Screen>\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport {\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    Platform,\r\n    StyleProp,\r\n    Dimensions,\r\n    Text,\r\n    ViewProps,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable, {SwipeableProperties} from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Theses style elements are defined this way because they have to be set in very specific ways\r\nexport type SwipeableLooks = {\r\n    sideMargin: number;\r\n    borderRadius: number;\r\n    verticalSpacing: number;\r\n    minHeight: number;\r\n};\r\n\r\nconst DEFAULT_LOOKS: SwipeableLooks = {\r\n    sideMargin: 15,\r\n    borderRadius: 10,\r\n    verticalSpacing: 8,\r\n    minHeight: 150,\r\n};\r\n\r\n// Component props\r\nexport type SwipeableCardProps = ThemeProps &\r\n    SwipeableProperties & {\r\n        wrapperStyle?: StyleProp<ViewStyle>;\r\n        touchableStyle?: StyleProp<ViewStyle>;\r\n        style?: StyleProp<ViewStyle>;\r\n        onHidden?: () => void;\r\n        onPress?: () => void;\r\n        looks?: Partial<SwipeableLooks>;\r\n        leftActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        rightActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        wrapperProps?: ViewProps;\r\n    };\r\n\r\n// Component state\r\nexport type SwipeableCardState = {\r\n    minHeight: ReAnimated.Value<number>;\r\n    right: ReAnimated.Value<number>;\r\n    hidden: boolean;\r\n};\r\n\r\nexport class SwipeableCardClass extends React.Component<SwipeableCardProps, SwipeableCardState> {\r\n    swipeableRef = React.createRef<Swipeable>();\r\n    private hideTimeout: NodeJS.Timeout | null = null;\r\n\r\n    constructor(props: SwipeableCardProps) {\r\n        super(props);\r\n\r\n        const {minHeight} = {...DEFAULT_LOOKS, ...props.looks};\r\n\r\n        this.state = {\r\n            minHeight: new ReAnimated.Value(minHeight),\r\n            right: new ReAnimated.Value(0),\r\n            hidden: false,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.hideTimeout) {\r\n            clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = null;\r\n        }\r\n    }\r\n\r\n    hide(): void {\r\n        this.setState({...this.state, hidden: true});\r\n        if (this.props.onHidden) this.props.onHidden();\r\n    }\r\n\r\n    collapse(onFinish?: () => void, right?: boolean): void {\r\n        const duration = 200;\r\n        ReAnimated.timing(this.state.right, {\r\n            toValue: (right ? -1 : 1) * Dimensions.get(\"window\").width * 1.5,\r\n            duration,\r\n            easing: Easing.ease,\r\n        }).start();\r\n        this.hideTimeout = setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.hide();\r\n            this.hideTimeout = null;\r\n        }, duration);\r\n    }\r\n\r\n    resetSwipe(): void {\r\n        this.swipeableRef.current?.close();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            children,\r\n            leftActions,\r\n            rightActions,\r\n            wrapperStyle,\r\n            style,\r\n            looks,\r\n            onPress,\r\n            wrapperProps,\r\n            containerStyle,\r\n            touchableStyle,\r\n            ...swipeableProps\r\n        } = this.props;\r\n        const {minHeight, right, hidden} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n        const hideCard = (noAnimation?: boolean) => {\r\n            if (noAnimation) this.hide();\r\n            else this.collapse();\r\n        };\r\n\r\n        const container = (\r\n            <Swipeable\r\n                ref={this.swipeableRef}\r\n                containerStyle={[\r\n                    styles.swipeableContainer,\r\n                    containerStyle,\r\n                    {paddingHorizontal: sideMargin, paddingVertical: verticalSpacing},\r\n                ]}\r\n                childrenContainerStyle={[styles.swipeable, {borderRadius}, style]}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                renderLeftActions={leftActions ? () => leftActions(hideCard) : swipeableProps.renderLeftActions}\r\n                renderRightActions={rightActions ? () => rightActions(hideCard) : swipeableProps.renderRightActions}\r\n                {...swipeableProps}\r\n            >\r\n                <TouchableOpacity\r\n                    activeOpacity={0.75}\r\n                    style={[styles.touchable, touchableStyle]}\r\n                    {...(onPress ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </TouchableOpacity>\r\n            </Swipeable>\r\n        );\r\n\r\n        if (Platform.OS === \"web\") {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <View\r\n                    style={[\r\n                        styles.wrapper,\r\n                        wrapperStyle,\r\n                        {flexBasis: minHeight[\" __value\"], right: right[\" __value\"]},\r\n                        hidden ? {display: \"none\"} : {},\r\n                    ]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <ReAnimated.View\r\n                    style={[\r\n                        styles.wrapper,\r\n                        wrapperStyle,\r\n                        {flexBasis: minHeight, right},\r\n                        hidden ? {display: \"none\"} : {},\r\n                    ]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </ReAnimated.View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport type SwipeActionProps = {\r\n    icon?: string;\r\n    text?: string;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    onPress?: () => void;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst oneSidedBorderRadius = (side: \"left\" | \"right\", borderRadius: number) => {\r\n    return side === \"left\"\r\n        ? {borderTopLeftRadius: borderRadius, borderBottomLeftRadius: borderRadius}\r\n        : {borderTopRightRadius: borderRadius, borderBottomRightRadius: borderRadius};\r\n};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, text, backgroundColor, onPress, style, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n        const color = props.color || themes.dark.text;\r\n\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor}, style]}>\r\n                {icon && <MaterialIcons style={[styles.swipeActionButtonIcon, {color}]} name={icon} />}\r\n                {text && <Text style={[styles.swipeActionButtonText, {color}]}>{text}</Text>}\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionsProps = ThemeProps & {\r\n    id: string;\r\n    side: \"left\" | \"right\";\r\n    actions: SwipeActionProps[];\r\n    looks?: Partial<SwipeableLooks>;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const SwipeActionButtons = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionsProps>): JSX.Element => {\r\n        const {id, actions, side, looks, buttonStyle} = props;\r\n\r\n        const {borderRadius} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <SwipeActionContainer side={side} looks={looks} contentStyle={{aspectRatio: actions.length}}>\r\n                {actions.map((properties: SwipeActionProps, i: number) => {\r\n                    const first = i === 0;\r\n                    const last = i === actions.length - 1;\r\n                    const isExteriorButton = (first && side === \"left\") || (last && side === \"right\");\r\n                    const isInteriorButton = (first && side === \"right\") || (last && side === \"left\");\r\n                    const {backgroundColor} = properties;\r\n\r\n                    // Add a small view to fill the empty area created by the card's border radius\r\n                    const interiorFiller = isInteriorButton ? (\r\n                        <View\r\n                            style={{\r\n                                width: borderRadius,\r\n                                height: \"100%\",\r\n                                position: \"absolute\",\r\n                                top: 0,\r\n                                ...(side === \"left\" ? {right: -borderRadius} : {left: -borderRadius}),\r\n                                backgroundColor,\r\n                            }}\r\n                        />\r\n                    ) : undefined;\r\n\r\n                    return (\r\n                        <React.Fragment key={`swipe-actions-${id}-${side}-${i}`}>\r\n                            {isInteriorButton && interiorFiller}\r\n                            <SwipeActionButton\r\n                                style={[isExteriorButton ? oneSidedBorderRadius(side, borderRadius) : {}, buttonStyle]}\r\n                                {...properties}\r\n                            />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </SwipeActionContainer>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionContainerProps = ThemeProps & {\r\n    side: \"left\" | \"right\";\r\n    looks?: Partial<SwipeableLooks>;\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n    fullCardWidth?: boolean;\r\n};\r\n\r\nexport const SwipeActionContainer = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionContainerProps>): JSX.Element => {\r\n        const {side, looks, fullCardWidth, contentStyle, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    styles.swipeActionsContainer,\r\n                    {paddingVertical: verticalSpacing},\r\n                    side === \"left\"\r\n                        ? {\r\n                              marginLeft: sideMargin,\r\n                              marginRight: -sideMargin,\r\n                              justifyContent: \"flex-start\",\r\n                          }\r\n                        : {\r\n                              marginLeft: -sideMargin,\r\n                              marginRight: sideMargin,\r\n                              justifyContent: \"flex-end\",\r\n                          },\r\n                    fullCardWidth\r\n                        ? {\r\n                              width: \"100%\",\r\n                              marginHorizontal: sideMargin,\r\n                              ...(side === \"left\" ? {paddingRight: sideMargin * 2} : {paddingLeft: sideMargin * 2}),\r\n                          }\r\n                        : {},\r\n                ]}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.swipeActionsContent,\r\n                        fullCardWidth ? {borderRadius} : oneSidedBorderRadius(side, borderRadius),\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n    });\r\n});\r\n\r\nconst buttonStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        swipeActionsContainer: {\r\n            height: \"100%\",\r\n        },\r\n        swipeActionsContent: {\r\n            justifyContent: \"flex-start\",\r\n            flexDirection: \"row\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionButton: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            aspectRatio: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            fontSize: 22,\r\n        },\r\n        swipeActionButtonText: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SwipeableCardClass);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type PickerButtonStyleVariant = \"classic\" | \"onboarding\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        dropdownWrapper: {\r\n            width: \"100%\",\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\", height: \"100%\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n        },\r\n        chipContainer: {\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getPickerButtonStyleProps(\r\n    variant: PickerButtonStyleVariant = \"classic\",\r\n    theme: Theme,\r\n): {button: ViewStyle; text: TextStyle; textNoneSelected: TextStyle} {\r\n    if (variant === \"onboarding\") {\r\n        return {\r\n            button: {\r\n                width: \"100%\",\r\n                height: 48,\r\n                alignItems: \"flex-start\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 20,\r\n                borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n                backgroundColor: theme.onboardingInputBackground,\r\n            },\r\n            text: {\r\n                fontSize: 14,\r\n                color: theme.text,\r\n            },\r\n            textNoneSelected: {\r\n                color: theme.textLight,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            button: {\r\n                width: \"100%\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 20,\r\n                height: 40,\r\n                borderWidth: 1,\r\n                borderRadius: 2,\r\n                backgroundColor: theme.background,\r\n                borderColor: theme.componentBorder,\r\n            },\r\n            text: {\r\n                fontSize: 14,\r\n                color: theme.text,\r\n            },\r\n            textNoneSelected: {},\r\n        };\r\n    }\r\n}\r\n","export enum ReportType {\r\n    VIOLENCE = \"violence\",\r\n    NUDITY = \"nudity\",\r\n    HARASSMENT = \"harassment\",\r\n    UNDESIRABLE_CONTENT = \"undesirable-content\",\r\n    HATE_SPEECH = \"hate-speech\",\r\n    VULGAR_CONTENT = \"vulgar-content\",\r\n    OTHER = \"other\",\r\n}\r\n\r\nexport const REPORT_TYPES = [\r\n    ReportType.VIOLENCE,\r\n    ReportType.NUDITY,\r\n    ReportType.HARASSMENT,\r\n    ReportType.UNDESIRABLE_CONTENT,\r\n    ReportType.HATE_SPEECH,\r\n    ReportType.VULGAR_CONTENT,\r\n    ReportType.OTHER,\r\n];\r\n\r\nexport enum ReportEntityType {\r\n    PROFILE_ENTITY = \"ProfileEntity\",\r\n    POST_ENTITY = \"PostEntity\",\r\n    COMMENT_ENTITY = \"CommentEntity\",\r\n    GROUP_ENTITY = \"GroupEntity\",\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, ScrollView, TouchableOpacity, TextStyle, ViewStyle, StyleProp} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport type PopUpSelectorActivator = (show: () => void) => JSX.Element;\r\n\r\n// Component props\r\nexport type PopUpSelectorProps = ThemeProps & {\r\n    values: string[];\r\n    selected: string[];\r\n    label: (value: string, i: number) => string;\r\n    icon?: (value: string, i: number) => JSX.Element;\r\n    onSelect?: (selected: string[]) => void;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    noOkUnderline?: boolean;\r\n    placeholder?: string;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n    activator?: PopUpSelectorActivator;\r\n    TouchableComponent?: typeof React.Component;\r\n};\r\n\r\n// Component state\r\nexport type PopUpSelectorState = {\r\n    valueDict: {[key: string]: boolean};\r\n};\r\n\r\nclass PopUpSelector extends React.Component<PopUpSelectorProps, PopUpSelectorState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: PopUpSelectorProps) {\r\n        super(props);\r\n        this.state = {valueDict: {}};\r\n    }\r\n\r\n    private fromSelectedProp() {\r\n        const valueDict: {[key: string]: boolean} = {};\r\n        this.props.selected.forEach((v) => (valueDict[v] = true));\r\n        this.setState({...this.state, valueDict});\r\n    }\r\n\r\n    show(): void {\r\n        this.fromSelectedProp();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    hide(apply: boolean): void {\r\n        this.modalRef.current?.hide();\r\n        if (apply) this.apply();\r\n        else this.fromSelectedProp();\r\n    }\r\n\r\n    toggleValue(v: string) {\r\n        const dict = this.state.valueDict;\r\n        const newValue = !dict[v];\r\n\r\n        if (this.props.multiple) {\r\n            this.setState({...this.state, valueDict: {...dict, [v]: newValue}});\r\n        } else {\r\n            this.setState({...this.state, valueDict: {[v]: newValue}}, () => {\r\n                if (newValue) this.hide(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        const {onSelect} = this.props;\r\n        const valueDict = this.state.valueDict;\r\n        if (onSelect) {\r\n            const selected = Object.keys(valueDict).filter((val: string) => valueDict[val]);\r\n            onSelect(selected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            values,\r\n            selected,\r\n            label,\r\n            icon,\r\n            multiple,\r\n            atLeastOne,\r\n            noOkUnderline,\r\n            placeholder,\r\n            buttonStyle,\r\n            valueStyle,\r\n            buttonStyleVariant,\r\n            activator,\r\n            theme,\r\n        } = this.props;\r\n        const {valueDict} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const pstyles = pickerStyles(theme);\r\n        const buttonStyleProps = getPickerButtonStyleProps(buttonStyleVariant, theme);\r\n\r\n        const TouchableComponent = this.props.TouchableComponent || TouchableOpacity;\r\n\r\n        return (\r\n            <>\r\n                {activator !== undefined && activator(() => this.show())}\r\n                {!activator && (\r\n                    <TouchableComponent\r\n                        style={[\r\n                            buttonStyleProps.button,\r\n                            selected.length > 0 && !noOkUnderline ? styles.buttonOk : {},\r\n                            buttonStyle,\r\n                        ]}\r\n                        onPress={() => this.show()}\r\n                    >\r\n                        {selected.length === 0 && (\r\n                            <Text\r\n                                style={[buttonStyleProps.text, buttonStyleProps.textNoneSelected, valueStyle]}\r\n                                numberOfLines={2}\r\n                            >\r\n                                {placeholder}\r\n                            </Text>\r\n                        )}\r\n                        {selected.length > 0 && (\r\n                            <Text style={[buttonStyleProps.text, valueStyle]} numberOfLines={2}>\r\n                                {selected.map(label).join(\", \")}\r\n                            </Text>\r\n                        )}\r\n                    </TouchableComponent>\r\n                )}\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    modalViewStyle={{width: \"100%\", paddingHorizontal: 0, paddingVertical: 0}}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContent}>\r\n                                {values.map((v: string, index: number) => (\r\n                                    <TouchableOpacity\r\n                                        key={`popup-selector-row-${v}`}\r\n                                        style={styles.rowContainer}\r\n                                        onPress={() => this.toggleValue(v)}\r\n                                        activeOpacity={0.5}\r\n                                    >\r\n                                        {icon && icon(v, index)}\r\n                                        <Text style={styles.label}>{label(v, index)}</Text>\r\n                                        <CheckBox\r\n                                            checked={valueDict[v]}\r\n                                            containerStyle={styles.checkboxContainer}\r\n                                            wrapperStyle={styles.checkboxWrapper}\r\n                                            onPress={() => this.toggleValue(v)}\r\n                                            size={26}\r\n                                            {...(multiple\r\n                                                ? {}\r\n                                                : {checkedIcon: \"check-circle\", uncheckedIcon: \"circle-o\"})}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </ScrollView>\r\n                            {multiple && (!atLeastOne || Object.values(valueDict).some((v) => v === true)) && (\r\n                                <TouchableOpacity\r\n                                    onPress={() => this.hide(true)}\r\n                                    style={[pstyles.okButton, {width: \"100%\"}]}\r\n                                >\r\n                                    <Text style={pstyles.okButtonText}>{i18n.t(\"ok\")}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            width: \"100%\",\r\n            paddingVertical: 2,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        label: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            flexGrow: 1,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginRight: 0,\r\n        },\r\n        checkboxWrapper: {\r\n            padding: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PopUpSelector);\r\n","import {AppThunk} from \"../types\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ReportEntityType, ReportType} from \"../../constants/reports\";\r\n\r\nexport enum REPORT_ACTION_TYPES {\r\n    REPORT_ENTITY_SUCCESS = \"REPORTS/REPORT_ENTITY_SUCCESS\",\r\n    REPORT_ENTITY_FAILURE = \"REPORTS/REPORT_ENTITY_FAILURE\",\r\n}\r\n\r\nexport type ReportEntitySuccessAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportEntityFailureAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportAction = ReportEntitySuccessAction | ReportEntityFailureAction;\r\n\r\nconst reportEntitySuccess = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntitySuccessAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_SUCCESS,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nconst reportEntityFailure = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntityFailureAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_FAILURE,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nexport const reportEntity = (\r\n    type: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"reports\", \"POST\", {}, {type, entityType, entityId}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(reportEntitySuccess(type, entityType, entityId));\r\n        return true;\r\n    } else {\r\n        dispatch(reportEntityFailure(type, entityType, entityId));\r\n        return false;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Text, Platform, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport CustomModal, {CustomModalClass} from \"../modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport FormSubmitButton from \"../forms/FormSubmitButton\";\r\nimport {Icon} from \"expo\";\r\nimport Button from \"../Button\";\r\nimport BottomSheet, {BottomSheetClass} from \"../bottom-sheet/BottomSheet\";\r\nimport BottomSheetTouchableOpacity from \"../bottom-sheet/BottomSheetTouchableOpacity\";\r\n\r\nexport type QuickFormProps = ThemeProps & {\r\n    activator?: (open: () => void) => JSX.Element;\r\n    submit: () => Promise<boolean>;\r\n    hideSubmit?: boolean;\r\n    title?: string;\r\n    titleIcon?: {component: Icon<string, unknown>; name: string};\r\n    confirmationTitle: string;\r\n    confirmationText: string;\r\n    failureTitle?: string;\r\n    failureText?: string;\r\n    submitText: string;\r\n    sheetHeight?: number;\r\n    modalMode?: boolean;\r\n};\r\n\r\ntype QuickFormState = {\r\n    confirmationOpen: boolean;\r\n    failureOpen: boolean;\r\n    submitting: boolean;\r\n};\r\n\r\nexport class QuickFormClass extends React.Component<QuickFormProps, QuickFormState> {\r\n    private sheetRef = React.createRef<BottomSheetClass>();\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: QuickFormProps) {\r\n        super(props);\r\n        this.state = {confirmationOpen: false, failureOpen: false, submitting: false};\r\n    }\r\n\r\n    open(): void {\r\n        this.sheetRef.current?.show();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    close(): void {\r\n        this.sheetRef.current?.hide();\r\n        this.modalRef.current?.hide();\r\n    }\r\n\r\n    submit(): void {\r\n        const {submit} = this.props;\r\n\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        submit().then((success: boolean) => {\r\n            if (success) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    confirmationOpen: true,\r\n                    failureOpen: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    confirmationOpen: false,\r\n                    failureOpen: true,\r\n                });\r\n            }\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            activator,\r\n            hideSubmit,\r\n            title,\r\n            titleIcon,\r\n            submitText,\r\n            confirmationTitle,\r\n            confirmationText,\r\n            failureTitle,\r\n            failureText,\r\n            theme,\r\n            sheetHeight,\r\n            modalMode,\r\n            children,\r\n        } = this.props;\r\n        const {confirmationOpen, failureOpen, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const content = (hide: () => void) => (\r\n            <View style={styles.wrapperSheet}>\r\n                <View style={styles.containerSheet}>\r\n                    {(title || titleIcon) && (\r\n                        <View style={styles.titleContainer}>\r\n                            {titleIcon && (\r\n                                <titleIcon.component name={titleIcon.name} style={[styles.title, styles.titleIcon]} />\r\n                            )}\r\n                            {title && <Text style={styles.title}>{title}</Text>}\r\n                        </View>\r\n                    )}\r\n                    {children}\r\n                    {!hideSubmit && (\r\n                        <FormSubmitButton\r\n                            text={submitText}\r\n                            submitting={submitting}\r\n                            onPress={() => this.submit()}\r\n                            skin=\"rounded-filled\"\r\n                            style={styles.actionButton}\r\n                            textStyle={styles.actionButtonText}\r\n                            TouchableComponent={modalMode ? TouchableOpacity : BottomSheetTouchableOpacity}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        text={i18n.t(\"cancel\")}\r\n                        onPress={hide}\r\n                        skin=\"rounded-hollow\"\r\n                        style={styles.actionButton}\r\n                        textStyle={styles.actionButtonText}\r\n                        TouchableComponent={modalMode ? TouchableOpacity : BottomSheetTouchableOpacity}\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {activator && activator(() => this.open())}\r\n                {modalMode && <CustomModal ref={this.modalRef} renderContent={content} />}\r\n                {!modalMode && (\r\n                    <BottomSheet\r\n                        ref={this.sheetRef}\r\n                        snapPoints={[0, sheetHeight === undefined ? 300 : sheetHeight]}\r\n                        renderContent={content}\r\n                    />\r\n                )}\r\n                <CustomModal\r\n                    visible={confirmationOpen}\r\n                    onHide={() => this.setState({...this.state, confirmationOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{confirmationTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{confirmationText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, confirmationOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n                <CustomModal\r\n                    visible={failureOpen}\r\n                    onHide={() => this.setState({...this.state, failureOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{failureTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{failureText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, failureOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapperSheet: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            padding: Platform.OS === \"web\" ? 20 : 0,\r\n        },\r\n        containerSheet: {\r\n            width: \"90%\",\r\n        },\r\n        containerModal: {\r\n            width: \"100%\",\r\n        },\r\n\r\n        // Title\r\n        titleContainer: {\r\n            flexDirection: \"row\",\r\n            marginBottom: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        titleIcon: {\r\n            marginRight: 5,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n\r\n        // Actions\r\n        actionButton: {\r\n            height: 44,\r\n            marginVertical: 0,\r\n            marginTop: 15,\r\n        },\r\n        actionButtonText: {\r\n            fontSize: 16,\r\n        },\r\n\r\n        feedbackModal: {\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 20,\r\n        },\r\n        feedbackTitle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n            marginBottom: 15,\r\n        },\r\n        feedbackText: {\r\n            fontSize: 15,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormClass);\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Text, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport PopUpSelector from \"../PopUpSelector\";\r\nimport {ReportEntityType, ReportType, REPORT_TYPES} from \"../../constants/reports\";\r\nimport InputLabel from \"../InputLabel\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport store from \"../../state/store\";\r\nimport {reportEntity} from \"../../state/reports/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport QuickForm, {QuickFormClass} from \"./QuickForm\";\r\nimport {Group, GroupPost, PostComment} from \"../../model/groups\";\r\nimport BottomSheetTouchableOpacity from \"../bottom-sheet/BottomSheetTouchableOpacity\";\r\n\r\nexport type QuickFormReportProps = ThemeProps & {\r\n    entityType: ReportEntityType;\r\n    entity: unknown;\r\n    activator?: (open: () => void) => JSX.Element;\r\n    onSubmit?: (success: boolean) => void;\r\n    modalMode?: boolean;\r\n};\r\n\r\ntype QuickFormReportState = {\r\n    selectedType: ReportType | null;\r\n};\r\n\r\nexport class QuickFormReportClass extends React.Component<QuickFormReportProps, QuickFormReportState> {\r\n    quickFormRef = React.createRef<QuickFormClass>();\r\n\r\n    constructor(props: QuickFormReportProps) {\r\n        super(props);\r\n        this.state = {selectedType: null};\r\n    }\r\n\r\n    private getEntityInfo(): {id: string; name: string} | null {\r\n        const {entityType, entity} = this.props;\r\n\r\n        if (!entity) return null;\r\n\r\n        switch (entityType) {\r\n            case ReportEntityType.PROFILE_ENTITY: {\r\n                if ((entity as ChatRoomUser)._id) {\r\n                    const u = entity as ChatRoomUser;\r\n                    return {name: u.name, id: u._id};\r\n                } else {\r\n                    const p = entity as UserProfile;\r\n                    return {name: `${p.firstName} ${p.lastName}`, id: p.id};\r\n                }\r\n            }\r\n            case ReportEntityType.POST_ENTITY: {\r\n                const post = entity as GroupPost;\r\n                const {firstName, lastName} = post.creator;\r\n                return {name: i18n.t(\"report.postFrom\", {name: `${firstName} ${lastName}`}), id: post.id};\r\n            }\r\n            case ReportEntityType.COMMENT_ENTITY: {\r\n                const comment = entity as PostComment;\r\n                const {firstName, lastName} = comment.creator;\r\n                return {name: i18n.t(\"report.commentFrom\", {name: `${firstName} ${lastName}`}), id: comment.id};\r\n            }\r\n            case ReportEntityType.GROUP_ENTITY: {\r\n                const group = entity as Group;\r\n                return {name: i18n.t(\"report.group\", {name: group.name}), id: group.id};\r\n            }\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    open(): void {\r\n        this.quickFormRef.current?.open();\r\n    }\r\n\r\n    close(): void {\r\n        this.quickFormRef.current?.close();\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        const {entityType, onSubmit} = this.props;\r\n        const {selectedType} = this.state;\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        let success = false;\r\n        if (selectedType && info)\r\n            success = await (store.dispatch as MyThunkDispatch)(reportEntity(selectedType, entityType, info.id));\r\n\r\n        if (onSubmit) onSubmit(success);\r\n        return success;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, modalMode, theme} = this.props;\r\n        const {selectedType} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        return (\r\n            <>\r\n                <QuickForm\r\n                    activator={activator}\r\n                    ref={this.quickFormRef}\r\n                    submit={() => this.submit()}\r\n                    titleIcon={{component: MaterialIcons, name: \"report\"}}\r\n                    title={i18n.t(\"report.title\")}\r\n                    submitText={i18n.t(\"report.send\")}\r\n                    confirmationTitle={i18n.t(\"report.confirmationTitle\")}\r\n                    confirmationText={i18n.t(\"report.confirmation\")}\r\n                    failureTitle={i18n.t(\"report.failureTitle\")}\r\n                    failureText={i18n.t(\"report.failure\")}\r\n                    hideSubmit={!selectedType}\r\n                    modalMode={modalMode}\r\n                    sheetHeight={330}\r\n                >\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.what\")}</InputLabel>\r\n                        <Text style={styles.what}>{info ? info.name : \"unknown\"}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.why\")}</InputLabel>\r\n                        <PopUpSelector\r\n                            values={REPORT_TYPES}\r\n                            label={(t: string) => i18n.t(`report.types.${t}`)}\r\n                            placeholder={i18n.t(\"report.typePlaceholder\")}\r\n                            selected={selectedType ? [selectedType] : []}\r\n                            valueStyle={styles.selectorValue}\r\n                            //buttonStyle={[styles.button, buttonStyle]}\r\n                            onSelect={(values: string[]) => {\r\n                                if (values.length > 0)\r\n                                    this.setState({...this.state, selectedType: values[0] as ReportType});\r\n                            }}\r\n                            buttonStyleVariant=\"onboarding\"\r\n                            TouchableComponent={modalMode ? TouchableOpacity : BottomSheetTouchableOpacity}\r\n                        />\r\n                    </View>\r\n                </QuickForm>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputItem: {\r\n            marginBottom: 20,\r\n        },\r\n        what: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"right\",\r\n        },\r\n        selectorValue: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormReportClass);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, ImageSourcePropType, View} from \"react-native\";\r\nimport {Avatar, AvatarProps} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type GeneralAvatarProps = {\r\n    name?: string;\r\n    source?: ImageSourcePropType;\r\n    loading?: boolean;\r\n} & AvatarProps;\r\n\r\nclass GeneralAvatar extends React.Component<GeneralAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, name, source, loading, ...avatarProps} = this.props;\r\n\r\n        return (\r\n            <Avatar {...avatarProps} title={name} source={source}>\r\n                {children}\r\n                {loading && (\r\n                    <View style={{position: \"absolute\", left: \"50%\", top: \"50%\"}}>\r\n                        <ActivityIndicator size={40} color=\"white\" style={{right: 20, bottom: 20}} />\r\n                    </View>\r\n                )}\r\n            </Avatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralAvatar;\r\n","import * as React from \"react\";\r\nimport {AvatarProps} from \"react-native-elements\";\r\nimport {ChatRoomUser} from \"../model/chat-room\";\r\nimport GeneralAvatar from \"./GeneralAvatar\";\r\n\r\n// Component props\r\nexport type ChatUserAvatarProps = {user?: ChatRoomUser} & AvatarProps;\r\n\r\nclass ChatUserAvatar extends React.Component<ChatUserAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, user, ...avatarProps} = this.props;\r\n\r\n        let name = undefined;\r\n\r\n        // Extract initials\r\n        if (user) {\r\n            const split = user.name.split(\" \");\r\n            name = split[0][0];\r\n            if (split.length > 0) name += split[1][0];\r\n            name = name.toUpperCase();\r\n        }\r\n\r\n        const sourceProp = user && user.avatar.length > 0 ? {source: {uri: user.avatar}} : {};\r\n\r\n        return (\r\n            <GeneralAvatar {...avatarProps} name={name} {...sourceProp}>\r\n                {children}\r\n            </GeneralAvatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatUserAvatar;\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {openChat} from \"../../navigation/utils\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport i18n from \"i18n-js\";\r\nimport ChatUserAvatar from \"../ChatUserAvatar\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localChatUser: state.messaging.localChatUser,\r\n}));\r\n\r\n// Component props\r\nexport type ChatRoomCardProps = {\r\n    room: ChatRoom;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 5,\r\n    borderRadius: 10,\r\n    minHeight: 75,\r\n};\r\n\r\nclass ChatRoomCard extends React.Component<ChatRoomCardProps> {\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {theme} = this.props;\r\n\r\n        return [\r\n            // TODO implement chat mute\r\n            /*{\r\n                icon: \"notifications-off\",\r\n                backgroundColor: \"#ccc\",\r\n            },*/\r\n            {\r\n                icon: \"report\",\r\n                backgroundColor: theme.error,\r\n                onPress: () => this.reportFormRef.current?.open(),\r\n            },\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {theme, room, onPress, localChatUser} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = room.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const user = room.users.filter((p: ChatRoomUser) => p._id !== localChatUser?._id)[0];\r\n\r\n        let lastMessageComponent = <></>;\r\n\r\n        if (room.lastMessage) {\r\n            const date = room.lastMessage.createdAt;\r\n            const isFromLocal = localUser && room.lastMessage.user._id === localUser._id;\r\n            const isRead =\r\n                isFromLocal ||\r\n                (localUser &&\r\n                    localUser.lastMessageSeenDate &&\r\n                    (localUser.lastMessageSeenDate >= date || localUser.lastMessageSeenId == room.lastMessage._id));\r\n            const pad = (num: number) => (num + \"\").padStart(2, \"0\");\r\n            lastMessageComponent = (\r\n                <>\r\n                    <Text style={[styles.lastMessageText, isRead ? {} : styles.lastMessageTextNew]} numberOfLines={1}>\r\n                        {room.lastMessage.user.name.split(\" \")[0]}: {room.lastMessage.text}\r\n                    </Text>\r\n                    <Text style={styles.lastMessageTime}>\r\n                        {pad(date.getHours())}:{pad(date.getMinutes())}\r\n                    </Text>\r\n                </>\r\n            );\r\n        } else {\r\n            lastMessageComponent = (\r\n                <Text style={styles.noMessageText} numberOfLines={1}>\r\n                    {room.users.length === 2 ? i18n.t(\"messaging.sayHiTo\", {name: user.name}) : i18n.t(\"sayHi\")}\r\n                </Text>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.swipeableCardRef}\r\n                looks={LOOKS}\r\n                rightThreshold={100}\r\n                overshootRight={false}\r\n                rightActions={(hideCard) => (\r\n                    <SwipeActionButtons\r\n                        id={`room-${room.id}`}\r\n                        looks={LOOKS}\r\n                        side=\"right\"\r\n                        actions={this.getActions(hideCard)}\r\n                    />\r\n                )}\r\n                onPress={() => {\r\n                    if (onPress) onPress();\r\n                    openChat(room.id);\r\n                }}\r\n            >\r\n                <View style={styles.cardContent}>\r\n                    <ChatUserAvatar containerStyle={styles.avatarContainer} user={user} size={45} rounded />\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{user.name}</Text>\r\n                        <View style={styles.lastMessage}>{lastMessageComponent}</View>\r\n                    </View>\r\n                </View>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={user}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        lastMessage: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n        },\r\n        noMessageText: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageText: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageTextNew: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        lastMessageTime: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomCard));\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport {AppState} from \"../../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\nexport type LocaleAwareProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>> & {\r\n    onLocaleChange?: (locale: SupportedLocale) => void;\r\n};\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass LocaleAware extends React.Component<LocaleAwareProps> {\r\n    componentDidUpdate(oldProps: LocaleAwareProps) {\r\n        const {locale, onLocaleChange} = this.props;\r\n        if (oldProps.locale !== locale) {\r\n            if (onLocaleChange) onLocaleChange(locale);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {children} = this.props;\r\n        return <>{children}</>;\r\n    }\r\n}\r\n\r\nexport default reduxConnector(LocaleAware);\r\n","import * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleProp,\r\n    StyleSheet,\r\n    View,\r\n    ViewStyle,\r\n} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport LocaleAware from \"./utility/LocaleAware\";\r\n\r\n// Component props\r\nexport type InfiniteScrollerProps<T> = {\r\n    items: T[];\r\n    id: (item: T) => string;\r\n    fetchMore: () => void;\r\n    refresh: () => void;\r\n    fetching: boolean;\r\n    canFetchMore: boolean;\r\n    fetchLimit: number;\r\n    renderItem: (item: T, hide: () => void) => JSX.Element;\r\n    noResultsComponent: JSX.Element;\r\n    endOfItemsComponent?: JSX.Element;\r\n    currentPage: number;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    navigation: {isFocused: () => boolean; addListener: (k: any, l: () => void) => void};\r\n    itemsContainerStyle?: StyleProp<ViewStyle>;\r\n    progressViewOffset?: number;\r\n    refreshOnFocus?: boolean;\r\n    horizontal?: boolean;\r\n    hideScrollIndicator?: boolean;\r\n    top?: JSX.Element;\r\n    keyboardShouldPersistTaps?: \"always\" | \"never\" | \"handled\";\r\n    onScroll?: OnScroll;\r\n};\r\n\r\nexport type OnScroll = (distanceToStart: number, distanceToEnd: number) => void;\r\n\r\n// Component state\r\ntype InfiniteScrollerState = {\r\n    hiddenIds: {[key: string]: boolean};\r\n};\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 150; //50;\r\n\r\nexport default class InfiniteScroller<T> extends React.Component<InfiniteScrollerProps<T>, InfiniteScrollerState> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n    scrollListenerEnabled = false;\r\n\r\n    constructor(props: InfiniteScrollerProps<T>) {\r\n        super(props);\r\n        this.state = {hiddenIds: {}};\r\n    }\r\n\r\n    fetchMore(): void {\r\n        const {fetching, canFetchMore, fetchMore, navigation} = this.props;\r\n        if (!fetching && canFetchMore && navigation.isFocused()) fetchMore();\r\n    }\r\n\r\n    getShownItems(): T[] {\r\n        const {items, id} = this.props;\r\n        return items.filter((it) => !this.state.hiddenIds[id(it)]);\r\n    }\r\n\r\n    hideItem(item: T): void {\r\n        const {fetchLimit, canFetchMore, id} = this.props;\r\n        this.setState({...this.state, hiddenIds: {...this.state.hiddenIds, [id(item)]: true}});\r\n        if (this.getShownItems().length < fetchLimit && canFetchMore) this.fetchMore();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        navigation.addListener(\"focus\", () => this.onFocus());\r\n        navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus(): void {\r\n        this.scrollListenerEnabled = true;\r\n\r\n        const {items, fetchLimit, fetching, refreshOnFocus, currentPage, refresh, id} = this.props;\r\n        const shown = items.filter((it) => !this.state.hiddenIds[id(it)]).length;\r\n\r\n        if (refreshOnFocus) {\r\n            // Fetch items if currentPage is 1 (because this won't be caught by 'justRefreshed' in componentDidUpdate)\r\n            if (currentPage === 1) this.fetchMore();\r\n            else refresh(); // We don't refresh if the current page is 1 because that means we haven't fetched anything yet\r\n        } else if (shown < fetchLimit && !fetching) this.fetchMore();\r\n    }\r\n\r\n    onBlur(): void {\r\n        this.scrollListenerEnabled = false;\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InfiniteScrollerProps<T>): void {\r\n        const {fetchLimit, currentPage, navigation} = this.props;\r\n\r\n        const justRefreshed = oldProps.currentPage > 1 && currentPage === 1;\r\n\r\n        if (navigation.isFocused()) {\r\n            const moreIfNeeded = () => this.getShownItems().length < fetchLimit && this.fetchMore();\r\n            // Reset the hidden profiles when the user purposedly refreshes\r\n            if (justRefreshed) this.setState({...this.state, hiddenIds: {}}, moreIfNeeded);\r\n            else moreIfNeeded();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            items,\r\n            fetching,\r\n            canFetchMore,\r\n            currentPage,\r\n            refresh,\r\n            renderItem,\r\n            noResultsComponent,\r\n            endOfItemsComponent,\r\n            itemsContainerStyle,\r\n            progressViewOffset,\r\n            horizontal,\r\n            hideScrollIndicator,\r\n            top,\r\n            keyboardShouldPersistTaps,\r\n            onScroll,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <ThemeConsumer>\r\n                    {({theme}: ThemeProps) => {\r\n                        const styles = themedStyles(theme);\r\n                        return (\r\n                            <ScrollView\r\n                                ref={this.scrollViewRef}\r\n                                style={styles.scroller}\r\n                                refreshControl={\r\n                                    <RefreshControl\r\n                                        progressViewOffset={progressViewOffset}\r\n                                        refreshing={fetching}\r\n                                        onRefresh={() => {\r\n                                            if (!fetching) refresh();\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                                    if (this.scrollListenerEnabled) {\r\n                                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                                        const distanceToStart = horizontal ? contentOffset.x : contentOffset.y;\r\n                                        const distanceToEnd = horizontal\r\n                                            ? contentSize.width - contentOffset.x - layoutMeasurement.width\r\n                                            : contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                                        if (distanceToEnd < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n\r\n                                        if (onScroll) onScroll(distanceToStart, distanceToEnd);\r\n                                    }\r\n                                }}\r\n                                horizontal={horizontal}\r\n                                // horizontal centering of noResultsContainer and loading indicator\r\n                                contentContainerStyle={horizontal && items.length == 0 && {width: \"100%\"}}\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                {...(horizontal && {showsHorizontalScrollIndicator: !hideScrollIndicator})}\r\n                                {...(!horizontal && {showsVerticalScrollIndicator: !hideScrollIndicator})}\r\n                            >\r\n                                {top}\r\n                                <View\r\n                                    style={[\r\n                                        {flexDirection: horizontal ? \"row\" : \"column\"},\r\n                                        // horizontal centering of noResultsContainer and loading indicator\r\n                                        horizontal && {width: \"100%\"},\r\n                                        itemsContainerStyle,\r\n                                    ]}\r\n                                >\r\n                                    {this.getShownItems().map((it: T) => renderItem(it, () => this.hideItem(it)))}\r\n                                    {!fetching && items.length > 0 && !canFetchMore && (\r\n                                        <View style={styles.endOfItemsContainer}>{endOfItemsComponent}</View>\r\n                                    )}\r\n                                    {!fetching && items.length == 0 && (\r\n                                        <View style={styles.noResultsContainer}>{noResultsComponent}</View>\r\n                                    )}\r\n                                    <View style={styles.loadingIndicatorContainer}>\r\n                                        {fetching && currentPage > 1 && items.length > 0 && (\r\n                                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                                        )}\r\n                                    </View>\r\n                                </View>\r\n                            </ScrollView>\r\n                        );\r\n                    }}\r\n                </ThemeConsumer>\r\n                <LocaleAware onLocaleChange={() => this.props.refresh()} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((/*theme: Theme*/) => {\r\n    return StyleSheet.create({\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginTop: 10,\r\n            marginBottom: 20, // compensate for bottom tab bar\r\n            height: 50,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            marginTop: 15,\r\n        },\r\n        endOfItemsContainer: {\r\n            marginTop: 15,\r\n            alignItems: \"center\",\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMatchRooms, refreshMatchRooms} from \"../../state/messaging/actions\";\r\nimport ChatRoomCard from \"../../components/cards/ChatRoomCard\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {TabMessagingRoot} from \"../../navigation/types\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    roomIds: state.messaging.matchRoomsOrdered,\r\n    fetchingRooms: state.messaging.matchRoomsPagination.fetching,\r\n    canFetchMore: state.messaging.matchRoomsPagination.canFetchMore,\r\n    currentPage: state.messaging.matchRoomsPagination.page,\r\n}));\r\n\r\ntype ChatRoomsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<TabMessagingRoot>;\r\n\r\nclass ChatRoomsScreen extends React.Component<ChatRoomsScreenProps> {\r\n    private fetchMore(): void {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, rooms, roomIds, fetchingRooms, canFetchMore, currentPage, navigation, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={ROOMS_FETCH_LIMIT}\r\n                    fetchMore={() => this.fetchMore()}\r\n                    fetching={fetchingRooms}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    refreshOnFocus\r\n                    refresh={() => (dispatch as MyThunkDispatch)(refreshMatchRooms())}\r\n                    items={roomIds}\r\n                    id={(roomId: string): string => roomId}\r\n                    noResultsComponent={<Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>}\r\n                    renderItem={(roomId: string) => (\r\n                        <ChatRoomCard key={`chat-room-card-${roomId}`} room={rooms[roomId]} />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n            paddingHorizontal: 50,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomsScreen));\r\n","import * as React from \"react\";\r\nimport {AvatarProps} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport GeneralAvatar from \"./GeneralAvatar\";\r\n\r\n// Component props\r\nexport type ProfileAvatarProps = {profile?: UserProfile; loading?: boolean} & AvatarProps;\r\n\r\nclass ProfileAvatar extends React.Component<ProfileAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, profile, loading, ...avatarProps} = this.props;\r\n\r\n        const name = profile ? (profile.firstName[0] + profile.lastName[0]).toUpperCase() : undefined;\r\n        const sourceProp = profile && profile.avatarUrl ? {source: {uri: profile.avatarUrl}} : {};\r\n\r\n        return (\r\n            <GeneralAvatar {...avatarProps} name={name} {...sourceProp} loading={loading}>\r\n                {children}\r\n            </GeneralAvatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport const headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            backgroundColor: theme.background,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            height: 90,\r\n            paddingBottom: 5,\r\n        },\r\n        wrapperBlur: {\r\n            backgroundColor: \"transparent\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        wrapperNoShadow: {\r\n            shadowColor: \"transparent\",\r\n            elevation: 0,\r\n        },\r\n        backButton: {\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 5,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        backButtonIcon: {\r\n            fontSize: 28,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        avatarTitle: {\r\n            color: themes.dark.text,\r\n        },\r\n        titleContainer: {\r\n            flex: 1,\r\n        },\r\n        title: {\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            fontSize: 20,\r\n        },\r\n        rightButton: {\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 50,\r\n            marginLeft: 8,\r\n        },\r\n        rightIcon: {\r\n            fontSize: 22,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {headerTitle, navigateBackOr, rootNavigate} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {BlurProps, BlurView} from \"expo-blur\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {NavigationContainerRef, Route} from \"@react-navigation/native\";\r\nimport {BLUR_HEADER_INTENSITY} from \"../../styles/general\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\nexport type HeaderButtonProps = {\r\n    buttonStyle: StyleProp<ViewStyle>;\r\n    iconStyle: StyleProp<TextStyle>;\r\n};\r\n\r\ntype AdditionalProps = {\r\n    rightButtons?: ((props: HeaderButtonProps) => JSX.Element)[];\r\n    backButton?: boolean;\r\n    noAvatar?: boolean;\r\n    noShadow?: boolean;\r\n    noSettingsButton?: boolean;\r\n    blur?: boolean;\r\n    overrideAvatar?: JSX.Element;\r\n    overrideTitle?: string;\r\n    onPressTitle?: () => void;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    titleContainerStyle?: StyleProp<ViewStyle>;\r\n    titleStyle?: StyleProp<TextStyle>;\r\n    color?: string;\r\n    buttonBackgroundColor?: string;\r\n    navigateBackFallback?: (nav: NavigationContainerRef) => void;\r\n};\r\n\r\nexport type MainHeaderStackProps = Partial<StackHeaderProps> & {route?: Route<string, undefined>};\r\n\r\n// Component props\r\nexport type MainHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps & {insets: EdgeInsets} & MainHeaderStackProps &\r\n    AdditionalProps;\r\n\r\nclass MainHeaderClass extends React.Component<MainHeaderProps> {\r\n    back(): void {\r\n        navigateBackOr(this.props.navigateBackFallback || ((nav) => nav.navigate(\"MainScreen\")));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets,\r\n            user,\r\n            rightButtons,\r\n            backButton,\r\n            noAvatar,\r\n            noShadow,\r\n            noSettingsButton,\r\n            blur,\r\n            overrideAvatar,\r\n            overrideTitle,\r\n            onPressTitle,\r\n            wrapperStyle,\r\n            titleContainerStyle,\r\n            titleStyle,\r\n            color,\r\n        } = this.props;\r\n\r\n        const styles = headerStyles(theme);\r\n\r\n        const routeName = (this.props.route || this.props.scene?.route || {name: \"undef\"}).name;\r\n        const title = headerTitle(routeName as NavigatorRoute);\r\n        const textColor = color || theme.text;\r\n        const buttonBackgroundColor = this.props.buttonBackgroundColor || theme.cardBackground;\r\n\r\n        const WrapperComponent = blur ? BlurView : View;\r\n        const blurProps: Partial<BlurProps> = blur\r\n            ? {\r\n                  tint: theme.id === \"dark\" ? \"dark\" : \"default\",\r\n                  intensity: BLUR_HEADER_INTENSITY,\r\n              }\r\n            : {};\r\n\r\n        return (\r\n            <WrapperComponent\r\n                style={[\r\n                    {paddingTop: insets.top},\r\n                    styles.wrapper,\r\n                    blur ? styles.wrapperBlur : {},\r\n                    noShadow ? styles.wrapperNoShadow : {},\r\n                    wrapperStyle,\r\n                ]}\r\n                {...blurProps}\r\n            >\r\n                {backButton && (\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => this.back()}>\r\n                        <MaterialIcons style={[styles.backButtonIcon, {color: textColor}]} name=\"arrow-back\" />\r\n                    </TouchableOpacity>\r\n                )}\r\n                {!noAvatar &&\r\n                    (overrideAvatar || (\r\n                        <ProfileAvatar\r\n                            profile={user?.profile}\r\n                            rounded\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            titleStyle={styles.avatarTitle}\r\n                            activeOpacity={0.75}\r\n                            onPress={() => rootNavigate(\"MyProfileScreen\")}\r\n                        />\r\n                    ))}\r\n                <TouchableOpacity\r\n                    style={[styles.titleContainer, {marginLeft: 12}, titleContainerStyle]}\r\n                    onPress={onPressTitle}\r\n                >\r\n                    <Text style={[styles.title, {color: textColor}, titleStyle]} numberOfLines={1}>\r\n                        {overrideTitle === undefined ? title : overrideTitle}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                {rightButtons?.map((ButtonComponent, i) => (\r\n                    <ButtonComponent\r\n                        key={`header-button-${routeName.toLowerCase()}-${i}`}\r\n                        buttonStyle={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        iconStyle={[styles.rightIcon, {color: textColor}]}\r\n                    />\r\n                ))}\r\n                {!noSettingsButton && (\r\n                    <TouchableOpacity\r\n                        style={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        onPress={() => rootNavigate(\"SettingsScreen\")}\r\n                    >\r\n                        <MaterialIcons name=\"settings\" style={styles.rightIcon} color={textColor} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </WrapperComponent>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainHeaderComp = reduxConnector(withTheme(MainHeaderClass));\r\n\r\nexport default function MainHeader(props: MainHeaderStackProps & AdditionalProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return <MainHeaderComp insets={insets} {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {getRouteParams, navigateToProfile} from \"../../navigation/utils\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport store from \"../../state/store\";\r\nimport {Route} from \"@react-navigation/native\";\r\nimport ChatUserAvatar from \"../ChatUserAvatar\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: store.getState().messaging.matchRooms,\r\n    activeRoomId: store.getState().messaging.activeRoomId,\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens> &\r\n    Omit<MainHeaderStackProps, \"route\">;\r\n\r\nclass ChatScreenHeaderClass extends React.Component<ChatScreenHeaderProps> {\r\n    private getRoomId(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {roomId} = getRouteParams(this.props.route);\r\n        return (roomId as string) || null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoomId} = this.props;\r\n        const id = activeRoomId || this.getRoomId();\r\n        return id ? rooms[id] : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profileId, ...stackProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        if (room) {\r\n            const user = room.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n            return (\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    route={stackProps.route as Route<string, undefined>}\r\n                    backButton={true}\r\n                    blur={true}\r\n                    overrideAvatar={\r\n                        <ChatUserAvatar\r\n                            containerStyle={hstyles.avatarContainer}\r\n                            user={user}\r\n                            rounded\r\n                            onPress={() => navigateToProfile(user._id, store.getState())}\r\n                        />\r\n                    }\r\n                    overrideTitle={user.name}\r\n                    titleStyle={styles.name}\r\n                    onPressTitle={() => navigateToProfile(user._id, store.getState())}\r\n                    navigateBackFallback={(nav) =>\r\n                        nav.navigate(\"MainScreen\", {screen: \"TabMessaging\", params: {screen: \"ChatRoomsScreen\"}})\r\n                    }\r\n                />\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        name: {\r\n            fontSize: 18,\r\n            fontWeight: \"600\",\r\n        },\r\n    });\r\n});\r\n\r\nconst ChatScreenHeaderComp = reduxConnector(withTheme(ChatScreenHeaderClass));\r\n\r\nexport default function ChatScreenHeader(\r\n    props: StackScreenProps<RootNavigatorScreens> & MainHeaderStackProps,\r\n): JSX.Element {\r\n    return <ChatScreenHeaderComp {...props} />;\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    Platform,\r\n    ScrollView,\r\n    ScrollViewProps,\r\n    StyleSheet,\r\n    TextStyle,\r\n    View,\r\n    FlatList,\r\n    KeyboardAvoidingView,\r\n    Text,\r\n} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {\r\n    Actions,\r\n    ActionsProps,\r\n    Bubble,\r\n    BubbleProps,\r\n    Composer,\r\n    ComposerProps,\r\n    GiftedAvatar,\r\n    GiftedAvatarProps,\r\n    GiftedChat,\r\n    IMessage,\r\n    InputToolbar,\r\n    InputToolbarProps,\r\n    Message,\r\n    MessageProps,\r\n    Send,\r\n    SendProps,\r\n} from \"react-native-gifted-chat\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport chatSocket from \"../../api/chat-socket\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {\r\n    connectToChat,\r\n    fetchEarlierMessages,\r\n    fetchMatchRoom,\r\n    fetchNewMessages,\r\n    joinChatRoom,\r\n    leaveChatRoom,\r\n    sendChatMessage,\r\n} from \"../../state/messaging/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {TypingAnimation} from \"react-native-typing-animation\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport store from \"../../state/store\";\r\nimport {DEBUG_MODE, MESSAGES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {normalizeWheelEvent} from \"../../polyfills\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport {noop} from \"lodash\";\r\nimport ChatUserAvatar from \"../../components/ChatUserAvatar\";\r\nimport themes from \"../../constants/themes\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    activeRoomId: state.messaging.activeRoomId,\r\n    localChatUser: state.messaging.localChatUser,\r\n    connected: state.messaging.socketState.connected,\r\n    connecting: state.messaging.socketState.connecting,\r\n    fetchingNewMessages: state.messaging.fetchingNewMessages,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nconst MIN_INPUT_HEIGHT = 45;\r\nconst INPUT_VERTICAL_MARGIN = 10;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    ref = React.createRef<GiftedChat>();\r\n    listRef: FlatList | null = null;\r\n    removeScrollListener: () => void = noop;\r\n\r\n    private unsubscribeBlurEvent: null | (() => void) = null;\r\n    private unsubscribeFocusEvent: null | (() => void) = null;\r\n\r\n    private getRoomId(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {roomId} = getRouteParams(this.props.route);\r\n        return (roomId as string) || null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoomId} = this.props;\r\n        const id = activeRoomId || this.getRoomId();\r\n        return id ? rooms[id] || null : null;\r\n    }\r\n\r\n    private connectToRoom(): void {\r\n        const {rooms} = this.props;\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const joinRoom = (room: ChatRoom) => dispatch(joinChatRoom(room));\r\n\r\n        const roomId = this.getRoomId();\r\n        // If a roomId parameter was given\r\n        if (roomId) {\r\n            const room = rooms[roomId];\r\n            // First ensure we have that room (in storage or we fetch it) before joining it.\r\n            if (room) joinRoom(room);\r\n            else dispatch(fetchMatchRoom(roomId)).then((room) => room && joinRoom(room));\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        this.unsubscribeBlurEvent = navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.unsubscribeFocusEvent = navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeBlurEvent) this.unsubscribeBlurEvent();\r\n        if (this.unsubscribeFocusEvent) this.unsubscribeFocusEvent();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ChatScreenProps): void {\r\n        const {activeRoomId, connected} = this.props;\r\n        // If we've just connected to the chat, connect to the room\r\n        if (!oldProps.connected && connected) this.connectToRoom();\r\n        // If we've just joined the room, ensure we have the latest messages\r\n        if (!oldProps.activeRoomId && activeRoomId) this.ensureLatestMessages();\r\n    }\r\n\r\n    private onBlur(): void {\r\n        // Leave the room when navigating to another screen\r\n        const {dispatch} = this.props;\r\n        const room = this.getRoom();\r\n        if (room) (dispatch as MyThunkDispatch)(leaveChatRoom(room));\r\n    }\r\n\r\n    private onFocus(): void {\r\n        const {dispatch} = this.props;\r\n\r\n        // If we are already connected to the chat, connect to the room\r\n        if (chatSocket.isConnected()) this.connectToRoom();\r\n        // If we are not connected nor connecting to the chat, connect to the chat first\r\n        else if (!chatSocket.isConnecting()) (dispatch as MyThunkDispatch)(connectToChat());\r\n    }\r\n\r\n    /**\r\n     * Ensures that the latest n messages are loaded\r\n     */\r\n    private ensureLatestMessages(): void {\r\n        const {dispatch, fetchingNewMessages} = this.props;\r\n        const room = this.getRoom();\r\n\r\n        // Fetch all messages that are more recent than the last one we have\r\n        if (room && !fetchingNewMessages) (dispatch as MyThunkDispatch)(fetchNewMessages(room));\r\n\r\n        // Fetch earlier messages if we need to\r\n        if (room && room.messages.length < MESSAGES_FETCH_LIMIT) this.fetchEarlier();\r\n    }\r\n\r\n    private fetchEarlier(): void {\r\n        const {dispatch} = this.props;\r\n        const room = this.getRoom();\r\n        if (room && !room.messagePagination.fetching) (dispatch as MyThunkDispatch)(fetchEarlierMessages(room));\r\n    }\r\n\r\n    private setListRef(listRef: FlatList | null): void {\r\n        if (Platform.OS === \"web\") {\r\n            if (listRef === null) this.removeScrollListener();\r\n            else if (this.listRef === null) {\r\n                // fix scrolling being reversed with the mouse wheel\r\n                // taken from https://www.gitmemory.com/issue/necolas/react-native-web/995/511242048\r\n                const scrollNode = listRef.getScrollableNode();\r\n                const listener = scrollNode.addEventListener(\"wheel\", (e: WheelEvent) => {\r\n                    const r = normalizeWheelEvent(e);\r\n                    scrollNode.scrollTop -= r.pixelY * 0.15;\r\n                    e.preventDefault();\r\n                });\r\n                this.removeScrollListener = () => scrollNode.removeEventListener(\"wheel\", listener);\r\n                listRef.setNativeProps({style: {transform: \"translate3d(0,0,0) scaleY(-1)\"}});\r\n            }\r\n            this.listRef = listRef;\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localChatUser, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        let chatComponent = <></>;\r\n        if (room && localChatUser) {\r\n            const isWritingId = Object.keys(room.writing).find((id: string) => room.writing[id] === true);\r\n            const userWriting = isWritingId ? room.users.find((u) => u._id == isWritingId) : undefined;\r\n\r\n            // Store in a messageId -> user map whether each message is the last seen message of a user\r\n            const lastMessageDict: {[key: string]: ChatRoomUser[]} = {};\r\n            if (room.messages.length > 0) {\r\n                room.users.forEach((u: ChatRoomUser) => {\r\n                    if (u._id != localChatUser._id && u.lastMessageSeenId) {\r\n                        if (lastMessageDict[u.lastMessageSeenId]) lastMessageDict[u.lastMessageSeenId].push(u);\r\n                        else lastMessageDict[u.lastMessageSeenId] = [u];\r\n                    }\r\n                });\r\n            }\r\n\r\n            const otherUser = room.users.filter((p: ChatRoomUser) => p._id != localChatUser._id)[0];\r\n\r\n            const ChatEmptySvg =\r\n                room.messages.length === 0 ? getLocalSvg(\"man-holding-phone\", () => this.forceUpdate()) : null;\r\n            const chatEmptySvgHeight = 250;\r\n\r\n            chatComponent = (\r\n                <GiftedChat\r\n                    ref={this.ref}\r\n                    isKeyboardInternallyHandled={false}\r\n                    messages={room.messages}\r\n                    user={localChatUser}\r\n                    renderSend={(props: SendProps<IMessage>) => (\r\n                        <Send {...props} containerStyle={styles.sendContainer}>\r\n                            <MaterialIcons name=\"send\" style={styles.send} />\r\n                        </Send>\r\n                    )}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            renderTicks={(currentMessage: IMessage) => (\r\n                                <View style={styles.messageTicksContainer}>\r\n                                    {currentMessage.received && (\r\n                                        <MaterialIcons name=\"check\" style={styles.messageTick} />\r\n                                    )}\r\n                                    {currentMessage.sent && <MaterialIcons name=\"check\" style={styles.messageTick} />}\r\n                                </View>\r\n                            )}\r\n                            textStyle={{left: styles.bubbleTextLeft, right: styles.bubbleTextRight}}\r\n                            wrapperStyle={{left: styles.bubbleWrapperLeft, right: styles.bubbleWrapperRight}}\r\n                        />\r\n                    )}\r\n                    renderMessage={(props: MessageProps<IMessage>) => {\r\n                        const seenBy = props.currentMessage ? lastMessageDict[props.currentMessage._id] : [];\r\n                        return <ChatMessage theme={theme} seenBy={seenBy || []} messageProps={props} />;\r\n                    }}\r\n                    renderInputToolbar={(props: InputToolbarProps) => (\r\n                        <InputToolbar\r\n                            {...props}\r\n                            containerStyle={styles.inputToolbarContainer}\r\n                            primaryStyle={styles.inputToolbarPrimary}\r\n                        />\r\n                    )}\r\n                    renderChatEmpty={() => (\r\n                        <View style={styles.emptyChatContainer}>\r\n                            <Text style={styles.emptyChatText}>\r\n                                {i18n.t(\"messaging.sayHiTo\", {name: otherUser.name})}\r\n                            </Text>\r\n                            {ChatEmptySvg && (\r\n                                <ChatEmptySvg\r\n                                    style={{\r\n                                        transform: Platform.OS === \"web\" ? (\"scaleY(-1)\" as never) : [{scaleY: -1}],\r\n                                    }}\r\n                                    width={chatEmptySvgHeight * (150 / 200)}\r\n                                    height={chatEmptySvgHeight}\r\n                                    viewBox=\"0 0 150 200\"\r\n                                    preserveAspectRatio=\"xMaxYMid\"\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    )}\r\n                    renderFooter={() => <ChatFooter userWriting={userWriting} theme={theme} />}\r\n                    renderActions={(props: ActionsProps) => <ChatActions actionsProps={props} theme={theme} />}\r\n                    onInputTextChanged={(t) => {\r\n                        if (t.length > 0) chatSocket.setWriting(room);\r\n                    }}\r\n                    onSend={(messages) => {\r\n                        messages.forEach((m) =>\r\n                            (dispatch as MyThunkDispatch)(sendChatMessage(m._id + \"\", m.text, m.createdAt as Date)),\r\n                        );\r\n                    }}\r\n                    loadEarlier={room.messagePagination.canFetchMore && room.messagePagination.fetching}\r\n                    isLoadingEarlier={room.messagePagination.fetching}\r\n                    onLoadEarlier={() => {\r\n                        this.fetchEarlier();\r\n                    }}\r\n                    timeFormat={\"HH:mm\"}\r\n                    listViewProps={{\r\n                        ref: (el: unknown) => this.setListRef(el as FlatList | null),\r\n                        onEndReached: () => this.fetchEarlier(),\r\n                        renderScrollComponent: (props: ScrollViewProps) => (\r\n                            <ScrollView\r\n                                {...props}\r\n                                contentContainerStyle={[\r\n                                    props.contentContainerStyle,\r\n                                    // This is actually a paddingTop but gifted-chat flips the rendering.\r\n                                    // (compensates for the height of the transparent header)\r\n                                    {paddingBottom: 100},\r\n                                ]}\r\n                            />\r\n                        ),\r\n                    }}\r\n                    renderComposer={(props: ComposerProps) => (\r\n                        <Composer\r\n                            {...props}\r\n                            textInputProps={{\r\n                                ...props.textInputProps,\r\n                                autoFocus: false,\r\n                                style: [styles.textInput, Platform.OS === \"web\" && ({outline: \"none\"} as TextStyle)],\r\n                                multiline: true,\r\n                                ...(Platform.OS === \"web\"\r\n                                    ? {\r\n                                          onFocus: () => this.forceUpdate(), // workaround to get the ugly outline on web to disappear properly\r\n                                          onKeyPress: (ev) => {\r\n                                              const e = (ev as unknown) as KeyboardEvent;\r\n                                              if (e.key === \"Enter\" && !e.altKey && !e.shiftKey && props.text) {\r\n                                                  // The typing expects _id, createdAt and user properties, but gifted-chat creates them itself if not given\r\n                                                  this.ref.current?.onSend([{text: props.text.trim()} as never], true);\r\n                                              }\r\n                                          },\r\n                                      }\r\n                                    : {}),\r\n                            }}\r\n                        />\r\n                    )}\r\n                    minInputToolbarHeight={MIN_INPUT_HEIGHT + INPUT_VERTICAL_MARGIN * 2}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : undefined} style={styles.container}>\r\n                    {chatComponent}\r\n                </KeyboardAvoidingView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ChatFooter({userWriting, theme}: {userWriting?: ChatRoomUser; theme: Theme}): JSX.Element {\r\n    if (userWriting) {\r\n        return (\r\n            <View style={{height: 50, paddingTop: 10, marginBottom: 5}}>\r\n                <Message\r\n                    key=\"isWriting\"\r\n                    user={userWriting}\r\n                    showUserAvatar={true}\r\n                    position=\"left\"\r\n                    renderAvatar={(props: GiftedAvatarProps) => <GiftedAvatar {...props} user={userWriting} />}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            wrapperStyle={{\r\n                                left: {backgroundColor: \"transparent\"},\r\n                                right: {},\r\n                            }}\r\n                            renderCustomView={() => (\r\n                                <TypingAnimation\r\n                                    dotColor={theme.textLight}\r\n                                    dotAmplitude={3}\r\n                                    dotSpeed={0.16}\r\n                                    dotMargin={8}\r\n                                    dotRadius={4}\r\n                                    dotX={20}\r\n                                    dotY={-25}\r\n                                />\r\n                            )}\r\n                        />\r\n                    )}\r\n                ></Message>\r\n            </View>\r\n        );\r\n    } else return <></>;\r\n}\r\n\r\nfunction ChatMessage({\r\n    theme,\r\n    seenBy,\r\n    messageProps,\r\n}: {\r\n    theme: Theme;\r\n    seenBy: ChatRoomUser[];\r\n    messageProps: MessageProps<IMessage>;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <View style={messageProps.position === \"left\" ? styles.messageContainerLeft : styles.messageContainerRight}>\r\n            <Message\r\n                {...messageProps}\r\n                containerStyle={{\r\n                    left: [messageProps.containerStyle?.left],\r\n                    right: [messageProps.containerStyle?.right, {marginBottom: 2}],\r\n                }}\r\n            />\r\n            {seenBy.length > 0 && (\r\n                <View\r\n                    style={[\r\n                        messageProps.position === \"left\"\r\n                            ? styles.messageReadContainerLeft\r\n                            : styles.messageReadContainerRight,\r\n                    ]}\r\n                >\r\n                    {seenBy.map((u: ChatRoomUser) => (\r\n                        <ChatUserAvatar\r\n                            key={`read-message-${u._id}`}\r\n                            titleStyle={styles.messageReadAvatarText}\r\n                            user={u}\r\n                            size={20}\r\n                            rounded\r\n                        />\r\n                    ))}\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction ChatActions({actionsProps, theme}: {actionsProps: ActionsProps; theme: Theme}): JSX.Element {\r\n    return <></>;\r\n\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <>\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"photo-camera\" />}\r\n                    options={{\r\n                        \"Send a picture\": async () => {\r\n                            await ImagePicker.launchImageLibraryAsync({\r\n                                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                                allowsEditing: true,\r\n                                aspect: [1, 1],\r\n                                //quality: AVATAR_QUALITY,\r\n                            });\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"build\" />}\r\n                    options={{\r\n                        \"Spam Lorem Ipsum\": async () => {\r\n                            const text =\r\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dosum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\";\r\n                            const words = text.split(\" \");\r\n                            let i = 0;\r\n                            while (i < words.length) {\r\n                                const n = 1 + Math.min(Math.floor(Math.random() * 12), words.length - 1 - i);\r\n                                const msg = words.slice(i, i + n).join(\" \");\r\n                                const id = GiftedChat.defaultProps.messageIdGenerator();\r\n                                (store.dispatch as MyThunkDispatch)(sendChatMessage(id, msg, new Date()));\r\n                                i += n;\r\n                            }\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        inputToolbarContainer: {\r\n            justifyContent: \"center\",\r\n            borderTopWidth: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        inputToolbarPrimary: {\r\n            alignItems: \"flex-end\",\r\n        },\r\n        textInput: {\r\n            backgroundColor: theme.cardBackground,\r\n            borderRadius: 20,\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginHorizontal: 20,\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            fontSize: 15,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            alignSelf: \"flex-end\",\r\n            color: theme.text,\r\n        },\r\n        send: {\r\n            fontSize: 30,\r\n            color: theme.accent,\r\n        },\r\n        sendContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginRight: 10,\r\n        },\r\n        actionContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n        },\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            width: 28,\r\n            height: 28,\r\n            color: theme.text,\r\n        },\r\n        bubbleWrapperLeft: {\r\n            backgroundColor: theme.chatBubble,\r\n        },\r\n        bubbleWrapperRight: {\r\n            paddingLeft: 10,\r\n        },\r\n        bubbleTextLeft: {\r\n            color: theme.text,\r\n        },\r\n        bubbleTextRight: {\r\n            marginLeft: 0,\r\n        },\r\n        messageContainerLeft: {},\r\n        messageContainerRight: {\r\n            paddingRight: 20,\r\n        },\r\n        messageReadContainerLeft: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadContainerRight: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadAvatarText: {\r\n            fontSize: 12,\r\n        },\r\n        messageTicksContainer: {\r\n            marginRight: 4,\r\n            minWidth: 15,\r\n        },\r\n        messageTick: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        emptyChatContainer: {\r\n            width: \"100%\",\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 50,\r\n        },\r\n        emptyChatText: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n            transform: [{scaleY: -1}],\r\n            marginBottom: 20,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatScreen));\r\n","import {NavigatorRoute} from \"../navigation/types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\n// The navigation routes that require a connection to the chat socket.\r\nexport const CHAT_CONNECTED_ROUTES: NavigatorRoute[] = [\"ChatScreen\", \"ChatRoomsScreen\"];\r\n\r\n// Override the status bar theme for certain screens\r\nexport const STATUS_BAR_THEME_OVERRIDES: {[key in NavigatorRoute]?: ThemeKey} = {\r\n    SigninScreen: \"light\",\r\n    SignupScreen: \"light\",\r\n    ForgotPasswordScreen: \"light\",\r\n    ProfileScreen: \"light\",\r\n    MyProfileScreen: \"light\",\r\n    GroupScreen: \"light\",\r\n};\r\n\r\n// Routes that will redirect when not authenticated\r\nexport const AUTHENTICATED_ROUTES: NavigatorRoute[] = ([\r\n    \"ChatRoomsScreen\",\r\n    \"ChatScreen\",\r\n    \"DeleteAccountScreen\",\r\n    \"MainScreen\",\r\n    \"MatchFilteringScreen\",\r\n    \"MatchHistoryScreen\",\r\n    \"MyProfileScreen\",\r\n    \"OnboardingSuccessfulScreen\",\r\n    \"ProfileScreen\",\r\n    \"SettingsScreen\",\r\n    \"TabHome\",\r\n    \"TabHomeScreen\",\r\n    \"TabMatching\",\r\n    \"TabMatchingScreen\",\r\n    \"TabMessaging\",\r\n    \"TabNotifications\",\r\n    \"TabNotificationsScreen\",\r\n] as NavigatorRoute[]).concat(ONBOARDING_ORDER);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport ChatRoomsScreen from \"../screens/messaging/ChatRoomsScreen\";\r\nimport {NavigatorRoute, TabMessagingRoot} from \"./types\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport ChatScreenHeader from \"../components/headers/ChatScreenHeader\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport {AppStateStatus, AppState as RNAppState} from \"react-native\";\r\nimport chatSocket from \"../api/chat-socket\";\r\nimport {CHAT_CONNECTED_ROUTES} from \"../constants/route-settings\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {connectToChat, disconnectFromChat} from \"../state/messaging/actions\";\r\nimport store from \"../state/store\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\n\r\nclass MessagingNavigator extends React.Component {\r\n    componentDidMount(): void {\r\n        // Handle app state changes (active / inactive)\r\n        let previousAppStatus: AppStateStatus;\r\n        RNAppState.addEventListener(\"change\", (status: AppStateStatus) => {\r\n            // If the app is now active\r\n            if (previousAppStatus !== \"active\" && status === \"active\") this.onAppActive();\r\n            // If the app is no longer active\r\n            if (previousAppStatus === \"active\" && status !== \"active\") this.onAppInactive();\r\n            previousAppStatus = status;\r\n        });\r\n    }\r\n\r\n    private onAppActive(): void {\r\n        // Reconnect to chat if needed\r\n        if (!chatSocket.isConnected()) {\r\n            const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n            const isChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n            if (isChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n        }\r\n    }\r\n\r\n    private onAppInactive(): void {\r\n        // Disconnect from the chat if connected\r\n        if (chatSocket.isConnected()) store.dispatch(disconnectFromChat());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Stack.Navigator headerMode=\"screen\">\r\n                <Stack.Screen\r\n                    name=\"ChatRoomsScreen\"\r\n                    component={ChatRoomsScreen}\r\n                    options={{\r\n                        title: screenTitle(\"ChatRoomsScreen\"),\r\n                        headerShown: true,\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ChatScreen\"\r\n                    options={() => ({headerShown: false, title: screenTitle(\"ChatScreen\")})}\r\n                >\r\n                    {(props) => (\r\n                        <>\r\n                            <ChatScreen {...props} />\r\n                            <ChatScreenHeader {...props} />\r\n                        </>\r\n                    )}\r\n                </Stack.Screen>\r\n            </Stack.Navigator>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Handle connecting / disconnecting from the chat depending on the focused route.\r\n */\r\nexport function handleRouteChangeForChat(route: NavigatorRoute, previousRoute: NavigatorRoute | undefined): void {\r\n    const toChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n    const fromChat = previousRoute && CHAT_CONNECTED_ROUTES.includes(previousRoute);\r\n    if (!fromChat && toChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n    if (fromChat && !toChat) (store.dispatch as MyThunkDispatch)(disconnectFromChat());\r\n}\r\n\r\nexport default MessagingNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut?: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type TabHomeScreenProps = ThemeProps;\r\n\r\nclass TabHomeScreen extends React.Component<TabHomeScreenProps> {\r\n    private async fetchPostEmbed(shortCode: string): Promise<Response> {\r\n        // seaEuAlliance profile ID: 32204624961\r\n        // url=\r\n        const BASE_URL = \"https://graph.facebook.com/v9.0/instagram_oembed\";\r\n        const CLIENT_TOKEN = \"80cd0bc3c132ad645a15d234ccd841bd\";\r\n        const POST_URL = `https://www.instagram.com/p/${shortCode}/`;\r\n        const url = `${BASE_URL}?url=${POST_URL}&access_token=${CLIENT_TOKEN}`;\r\n\r\n        const headers: {[key: string]: string} = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        console.log(url);\r\n        const response = await fetch(url, {method: \"GET\", headers});\r\n        return response;\r\n    }\r\n\r\n    fetchEmbed() {\r\n        this.fetchPostEmbed(\"CJQ-ZX_rZb8\").then((response) => console.log(JSON.stringify(response)));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {/*<TouchableOpacity onPress={() => this.fetchEmbed()}>\r\n                        <Text style={{fontSize: 22, padding: 20}}>Fetch</Text>\r\n                    </TouchableOpacity>*/}\r\n                    <FontAwesome style={styles.icon} name=\"heart\" />\r\n                    <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                    <View style={styles.separator} />\r\n                    <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                        Found a bug or have some feedback for us or ideas for the app?\r\n                    </Text>\r\n                    <Text style={styles.alphaText}>\r\n                        Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                    </Text>\r\n                    <LogOutButton style={styles.logoutButton} />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabHomeScreen);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock?: () => void; profile: UserProfile | null};\r\n\r\nexport class BlockProfileModalClass extends React.Component<BlockProfileModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"block.title\")}\r\n                text={\r\n                    profile ? i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName}) : \"\"\r\n                }\r\n                icon={(props) => <MaterialIcons name=\"block\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"block.action\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            if (profile) (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                            if (onBlock) onBlock();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BlockProfileModalClass);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n    flagSize?: number;\r\n    flagEmoji?: boolean;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, flagSize, flagEmoji, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag\r\n                            countryCode={university.country}\r\n                            flagSize={flagSize || 18}\r\n                            withEmoji={flagEmoji || false}\r\n                        />\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleProp, Text, View, ViewStyle, StyleSheet, TextStyle, TouchableOpacity} from \"react-native\";\r\nimport {ThemeConsumer, withTheme} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ChipsProps<T> = {\r\n    items: T[];\r\n    label?: (item: T) => string;\r\n    removable?: boolean;\r\n    onRemove?: (item: T) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    chipStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nclass Chips<T> extends React.Component<ChipsProps<T>> {\r\n    render(): JSX.Element {\r\n        const {items, label, removable, onRemove, containerStyle, chipStyle, textStyle} = this.props;\r\n\r\n        return (\r\n            // Use a theme consumer instead of the withTheme() pattern because it breaks genericity\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    return (\r\n                        <View style={[styles.container, containerStyle]}>\r\n                            {items.map((it: T, i: number) => (\r\n                                <Chip\r\n                                    key={`chips-${i}-${it}`}\r\n                                    text={label ? label(it) : typeof it === \"string\" ? it : JSON.stringify(it)}\r\n                                    removable={removable}\r\n                                    onRemove={() => {\r\n                                        if (onRemove) onRemove(it);\r\n                                    }}\r\n                                    chipStyle={chipStyle}\r\n                                    textStyle={textStyle}\r\n                                />\r\n                            ))}\r\n                        </View>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\ntype ChipProps = {\r\n    text: string;\r\n    removable?: boolean;\r\n    onRemove?: () => void;\r\n    chipStyle: StyleProp<ViewStyle>;\r\n    textStyle: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nconst Chip = withTheme(\r\n    ({text, removable, onRemove, theme, chipStyle, textStyle}: ChipProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={[styles.chip, chipStyle]}>\r\n                <Text\r\n                    style={[\r\n                        styles.chipText,\r\n                        removable ? {marginRight: 20} /* depends on width of \"remove\" button */ : {},\r\n                        textStyle,\r\n                    ]}\r\n                    numberOfLines={1}\r\n                >\r\n                    {text}\r\n                </Text>\r\n                {removable && (\r\n                    <TouchableOpacity\r\n                        style={styles.chipRemoveButton}\r\n                        onPress={() => {\r\n                            if (onRemove) onRemove();\r\n                        }}\r\n                    >\r\n                        <MaterialIcons name=\"close\" style={styles.chipRemoveIcon} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        chip: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.accentSlight,\r\n            paddingVertical: 6,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 20,\r\n            marginRight: 4,\r\n            marginBottom: 4,\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: themes.light.text,\r\n        },\r\n        chipRemoveButton: {\r\n            position: \"absolute\",\r\n            right: 0,\r\n            width: 32,\r\n            height: 32,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        chipRemoveIcon: {\r\n            fontSize: 22,\r\n            color: themes.light.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default Chips;\r\n","import * as React from \"react\";\r\nimport {useFocusEffect} from \"@react-navigation/native\";\r\n\r\nexport default function FocusAware({onFocus, onBlur}: {onFocus?: () => void; onBlur?: () => void}): JSX.Element {\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            if (onFocus) onFocus();\r\n            return () => {\r\n                if (onBlur) onBlur();\r\n            };\r\n        }, []),\r\n    );\r\n    return <></>;\r\n}\r\n","import {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {StyleProp, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport FocusAware from \"./utility/FocusAware\";\r\n\r\nconst ANIMATION_AMPLITUDE = 25;\r\nconst DURATION = 400; // the animation duration (ms)\r\nconst PAUSE = 1000; // how much time to wait before looping the animation (ms)\r\n\r\n// Component props\r\nexport type SwipeTipProps = {\r\n    direction: \"horizontal\" | \"left\";\r\n    style?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nconst ICON_NAMES: {[key: string]: string} = {\r\n    horizontal: \"gesture-swipe-horizontal\",\r\n    left: \"gesture-swipe-left\",\r\n};\r\n\r\n// Component props\r\nexport type SwipeTipState = {animating: boolean};\r\n\r\nclass SwipeTip extends React.Component<SwipeTipProps, SwipeTipState> {\r\n    offset = new ReAnimated.Value(0);\r\n\r\n    constructor(props: SwipeTipProps) {\r\n        super(props);\r\n        this.state = {animating: false};\r\n    }\r\n\r\n    setAnimating(b: boolean): void {\r\n        if (b === this.state.animating) return;\r\n\r\n        this.setState({...this.state, animating: b});\r\n\r\n        if (b) {\r\n            const dir = this.props.direction;\r\n            if (dir === \"horizontal\") {\r\n                const animate = (even: boolean): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: even ? ANIMATION_AMPLITUDE / 2 : -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) {\r\n                                if (even) setTimeout(() => animate(!even), PAUSE);\r\n                                else animate(!even);\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                animate(true);\r\n            } else if (dir === \"left\") {\r\n                const animate = (): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) setTimeout(animate, PAUSE);\r\n                        });\r\n                    });\r\n                };\r\n                animate();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {direction, style, iconStyle} = this.props;\r\n\r\n        const iconName = ICON_NAMES[direction];\r\n\r\n        return (\r\n            <View style={[style]}>\r\n                <FocusAware onFocus={() => this.setAnimating(true)} onBlur={() => this.setAnimating(false)} />\r\n                <ReAnimated.View style={{left: this.offset}}>\r\n                    {iconName && <MaterialCommunityIcons name={iconName} style={iconStyle} />}\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwipeTip;\r\n","import * as React from \"react\";\r\nimport {LayoutChangeEvent, LayoutRectangle, Text, TouchableOpacity, View, StyleSheet, Platform} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile, UserProfileStudent} from \"../../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"../modals/BlockProfileModal\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {styleTextLight, styleTextThin} from \"../../styles/general\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport Chips from \"../Chips\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionContainer} from \"./SwipeableCard\";\r\nimport SwipeTip from \"../SwipeTip\";\r\n\r\n// Component props\r\nexport type MatchProfileCardProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipedLeft?: () => void;\r\n    onSwipedRight?: () => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\n// Component state\r\nexport type MatchProfileCardState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 10,\r\n    borderRadius: 20,\r\n};\r\n\r\nclass MatchProfileCard extends React.Component<MatchProfileCardProps, MatchProfileCardState> {\r\n    cardRef = React.createRef<SwipeableCardClass>();\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: MatchProfileCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: true,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_EXPANDED_HEIGHT),\r\n            });\r\n        } else {\r\n            this.setState({...this.state, animating: true});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n                duration,\r\n                easing: Easing.elastic(1.0),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n        }\r\n    }\r\n\r\n    collapse() {\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: false,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            });\r\n        } else {\r\n            const duration = 100;\r\n            this.setState({...this.state, animating: true, expanded: false});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n                duration,\r\n                easing: Easing.out(Easing.linear),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n        }\r\n    }\r\n\r\n    hide(onFinish?: () => void, right?: boolean) {\r\n        /*const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.cardRef.current?.hide();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);*/\r\n        this.cardRef.current?.collapse(onFinish, right);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, showSwipeTip} = this.props;\r\n        const {expanded, animating, height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        const chipStyleProps = {chipStyle: styles.chip};\r\n\r\n        const content = (\r\n            <>\r\n                <View style={styles.collapsedContent}>\r\n                    <View style={styles.avatarContainer}>\r\n                        <ProfileAvatar profile={profile} size={120} rounded containerStyle={styles.avatar} />\r\n                    </View>\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{fullName}</Text>\r\n                        {profile && <FormattedUniversity style={styles.infoText} university={profile.university} />}\r\n                        <Text style={styles.infoText}>\r\n                            {i18n.t(`genders.${profile.gender}`)}\r\n                            {\", \"}\r\n                            {i18n.t(`allRoles.${profile.type}`)}\r\n                            {profile.type == \"student\"\r\n                                ? ` (${i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)})`\r\n                                : \"\"}\r\n                        </Text>\r\n                        {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                    </View>\r\n                    {showSwipeTip && (\r\n                        <SwipeTip direction=\"horizontal\" style={styles.swipeTip} iconStyle={styles.swipeTipIcon} />\r\n                    )}\r\n                </View>\r\n                {(expanded || animating) && (\r\n                    <View style={styles.expandedContent}>\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <Chips\r\n                            items={profile.languages}\r\n                            label={(v: SpokenLanguageDto) =>\r\n                                `${i18n.t(`languageNames.${v.code}`)}${\r\n                                    v.level != \"native\" ? ` (${v.level.toUpperCase()})` : \"\"\r\n                                }`\r\n                            }\r\n                            {...chipStyleProps}\r\n                        />\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                        <Chips\r\n                            items={profile.profileOffers}\r\n                            label={(o: OfferValueDto) => i18n.t(`allOffers.${o.offerId}.name`)}\r\n                            {...chipStyleProps}\r\n                        />\r\n\r\n                        {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        <BlockProfileModal\r\n                            profile={profile}\r\n                            activator={(open) => (\r\n                                <TouchableOpacity style={styles.blockButton} onPress={() => open()}>\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            onBlock={() => this.hide()}\r\n                        />\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.cardRef}\r\n                looks={LOOKS}\r\n                wrapperProps={{\r\n                    onLayout: (e: LayoutChangeEvent) => {\r\n                        this.layout = e.nativeEvent.layout;\r\n                    },\r\n                }}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                leftThreshold={100}\r\n                rightThreshold={100}\r\n                onSwipeableRightWillOpen={() => {\r\n                    if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipedLeft) this.props.onSwipedLeft();\r\n                    }, false);\r\n                }}\r\n                onSwipeableLeftWillOpen={() => {\r\n                    if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipedRight) this.props.onSwipedRight();\r\n                    }, true);\r\n                }}\r\n                renderRightActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"right\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentRight}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                renderLeftActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"left\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentLeft}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                onPress={() => this.toggleExpanded()}\r\n            >\r\n                {Platform.OS !== \"web\" && (\r\n                    <ReAnimated.View style={[styles.cardContent, {height}]}>{content}</ReAnimated.View>\r\n                )}\r\n                {Platform.OS === \"web\" && (\r\n                    <View style={[styles.cardContent, {height: height[\" __value\"]}]}>{content}</View>\r\n                )}\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 150;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 360;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            padding: 20,\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        // Card content\r\n\r\n        cardContent: {\r\n            padding: 10,\r\n        },\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTip: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 5,\r\n        },\r\n        swipeTipIcon: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chip: {\r\n            //borderRadius: 6,\r\n            paddingHorizontal: 5,\r\n            paddingVertical: 2,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n        },\r\n\r\n        expandedSectionTitle: {\r\n            ...styleTextLight,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MatchProfileCard);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {makePromiseCancelable} from \"../general-utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport Button, {ButtonProps} from \"./Button\";\r\n\r\n// Component props\r\nexport type AsyncButtonProps = Omit<ButtonProps, \"onPress\"> & {\r\n    onPress: () => Promise<unknown>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    loadingIndicatorColor?: string;\r\n    loadingIndicatorSize?: number;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype AsyncButtonState = {\r\n    loading: boolean;\r\n};\r\n\r\nclass AsyncButton extends React.Component<AsyncButtonProps, AsyncButtonState> {\r\n    private cancelPressPromise: (() => void) | null = null;\r\n\r\n    constructor(props: AsyncButtonProps) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        // Reset the state to loading: false\r\n        this.setState({loading: false});\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.cancelPressPromise) {\r\n            this.cancelPressPromise();\r\n            this.cancelPressPromise = null;\r\n        }\r\n    }\r\n\r\n    onPress(): void {\r\n        if (!this.state.loading) {\r\n            this.setState({...this.state, loading: true});\r\n            // Use a cancelable promise to avoid triggering a state update on an unmounted component\r\n            const promise = makePromiseCancelable(this.props.onPress());\r\n            promise.then(() => {\r\n                this.setState({...this.state, loading: false});\r\n                this.cancelPressPromise = null;\r\n            });\r\n            this.cancelPressPromise = promise.cancel;\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {loadingIndicatorStyle, loadingIndicatorColor, loadingIndicatorSize, theme, ...otherProps} = this.props;\r\n        const {loading} = this.state;\r\n\r\n        return (\r\n            <Button\r\n                {...otherProps}\r\n                {...{onPress: loading ? undefined : () => this.onPress()}}\r\n                contentOpacity={loading ? 0 : 1}\r\n                disabled={loading}\r\n            >\r\n                {loading && (\r\n                    <ActivityIndicator\r\n                        color={loadingIndicatorColor || theme.accentTernary}\r\n                        size={loadingIndicatorSize || 24}\r\n                        style={[\r\n                            {position: \"absolute\", top: 0, right: 0, bottom: 0, left: 0, margin: \"auto\"},\r\n                            loadingIndicatorStyle,\r\n                        ]}\r\n                    />\r\n                )}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(AsyncButton);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Svg, {Path} from \"react-native-svg\";\r\n\r\nexport type WaveProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    patternIndex?: number | number[] | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WaveState = {\r\n    wavePatternIdx: number;\r\n};\r\n\r\nconst WAVE_PATTERNS = [\r\n    \"M0,160L48,154.7C96,149,192,139,288,165.3C384,192,480,256,576,245.3C672,235,768,149,864,101.3C960,53,1056,43,1152,64C1248,85,1344,139,1392,165.3L1440,192L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,224L48,197.3C96,171,192,117,288,128C384,139,480,213,576,218.7C672,224,768,160,864,144C960,128,1056,160,1152,181.3C1248,203,1344,213,1392,218.7L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,96L48,106.7C96,117,192,139,288,160C384,181,480,203,576,213.3C672,224,768,224,864,192C960,160,1056,96,1152,85.3C1248,75,1344,117,1392,138.7L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,192L48,197.3C96,203,192,213,288,197.3C384,181,480,139,576,122.7C672,107,768,117,864,128C960,139,1056,149,1152,133.3C1248,117,1344,75,1392,53.3L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,128L48,138.7C96,149,192,171,288,160C384,149,480,107,576,122.7C672,139,768,213,864,202.7C960,192,1056,96,1152,64C1248,32,1344,64,1392,80L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,64L48,90.7C96,117,192,171,288,170.7C384,171,480,117,576,96C672,75,768,85,864,101.3C960,117,1056,139,1152,160C1248,181,1344,203,1392,213.3L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,160L48,154.7C96,149,192,139,288,122.7C384,107,480,85,576,96C672,107,768,149,864,138.7C960,128,1056,64,1152,53.3C1248,43,1344,85,1392,106.7L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,32L60,69.3C120,107,240,181,360,186.7C480,192,600,128,720,90.7C840,53,960,43,1080,48C1200,53,1320,75,1380,85.3L1440,96L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,128L60,117.3C120,107,240,85,360,64C480,43,600,21,720,64C840,107,960,213,1080,250.7C1200,288,1320,256,1380,240L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,288L60,245.3C120,203,240,117,360,101.3C480,85,600,139,720,176C840,213,960,235,1080,240C1200,245,1320,235,1380,229.3L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,96L60,117.3C120,139,240,181,360,181.3C480,181,600,139,720,138.7C840,139,960,181,1080,202.7C1200,224,1320,224,1380,224L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,160L48,181.3C96,203,192,245,288,261.3C384,277,480,267,576,224C672,181,768,107,864,106.7C960,107,1056,181,1152,202.7C1248,224,1344,192,1392,176L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n];\r\n\r\nexport const WAVE_HEADER_HEIGHT = 100;\r\n\r\nexport default class Wave extends React.Component<WaveProps, WaveState> {\r\n    constructor(props: WaveProps) {\r\n        super(props);\r\n\r\n        let patternsIndices = WAVE_PATTERNS.map((_, i) => i); // by default, random amongst all patterns\r\n\r\n        if (props.patternIndex === \"random\") {\r\n            // already default\r\n        } else if (Array.isArray(props.patternIndex)) {\r\n            const arr = props.patternIndex as number[];\r\n            if (arr.length > 0) patternsIndices = arr;\r\n        } else {\r\n            patternsIndices = [props.patternIndex as number];\r\n        }\r\n\r\n        this.state = {\r\n            wavePatternIdx: patternsIndices[Math.floor(Math.random() * patternsIndices.length)],\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown} = this.props;\r\n        const {wavePatternIdx} = this.state;\r\n\r\n        const wavePattern = WAVE_PATTERNS[wavePatternIdx];\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    {\r\n                        minWidth: 400, // fix empty space above the wave on narrow screens\r\n                        height: WAVE_HEADER_HEIGHT,\r\n                        ...(upsideDown ? {transform: [{rotate: \"180deg\"}]} : {}),\r\n                    },\r\n                    style,\r\n                ]}\r\n            >\r\n                <Svg viewBox=\"0 40 1440 320\" preserveAspectRatio=\"none\">\r\n                    <Path fill={color} d={wavePattern} />\r\n                </Svg>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {openChat, rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport AsyncButton from \"../AsyncButton\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {OfferValueDto} from \"../../api/dto\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport Button from \"../Button\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport CustomModal, {CustomModalClass} from \"./CustomModal\";\r\nimport {getMatchingOffers} from \"../../model/utils\";\r\nimport Wave from \"../Wave\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localProfile: state.profile.user?.profile,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\n// Component props\r\nexport type MatchSuccessModalProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype MatchSuccessModalState = {\r\n    profile: UserProfile | null;\r\n    roomId: string | null;\r\n    maxOffersDisplayed: number;\r\n    waveWidth: number;\r\n};\r\n\r\nconst VERTICAL_SPACE_AROUND = 0;\r\nconst MAX_WIDTH = 500;\r\n\r\nconst OFFERS_CARD_VERTICAL_PADDING = 10;\r\nconst OFFERS_CARD_LINE_HEIGHT = 20;\r\n\r\nexport class MatchSuccessModalClass extends React.Component<MatchSuccessModalProps, MatchSuccessModalState> {\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: MatchSuccessModalProps) {\r\n        super(props);\r\n        this.state = {profile: null, roomId: null, maxOffersDisplayed: 999, waveWidth: 0};\r\n    }\r\n\r\n    show(profile: UserProfile, roomId: string | null): void {\r\n        this.modalRef.current?.show();\r\n\r\n        this.setState({...this.state, profile, roomId, maxOffersDisplayed: 999});\r\n    }\r\n\r\n    hide(): void {\r\n        this.setState({...this.state, profile: null});\r\n        this.modalRef.current?.hide();\r\n    }\r\n\r\n    async chat(): Promise<void> {\r\n        const {roomId} = this.state;\r\n        this.hide();\r\n        if (roomId) openChat(roomId);\r\n        else rootNavigate(\"MainScreen\", {screen: \"TabMessaging\"});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localProfile} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {profile, maxOffersDisplayed, waveWidth} = this.state;\r\n        const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(profile.profileOffers, localProfile)\r\n                : [];\r\n\r\n        // Kept for quick testing\r\n        /*const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(\r\n                      [\r\n                          {\r\n                              offerId: \"provide-a-couch\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"grab-a-drink\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"answer-academic-questions\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"get-into-campus-life\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"cowork-on-a-project\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"share-interests\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"language-tandem\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                      ],\r\n                      localProfile,\r\n                  )\r\n                : [];*/\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                fullHeight\r\n                noBackground\r\n                backdropBlur\r\n                backdropOpacity={0}\r\n                animationType=\"fade\"\r\n                modalViewStyle={styles.modal}\r\n                renderContent={() => (\r\n                    <>\r\n                        <Wave\r\n                            color={theme.greenModalBackground}\r\n                            style={{width: waveWidth}}\r\n                            upsideDown\r\n                            patternIndex={9}\r\n                        />\r\n\r\n                        <View\r\n                            style={styles.container}\r\n                            onLayout={(layout) => {\r\n                                const {width} = layout.nativeEvent.layout;\r\n                                this.setState({...this.state, waveWidth: width});\r\n                            }}\r\n                        >\r\n                            <View style={styles.topContainer}>\r\n                                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                                <View style={styles.separator} />\r\n                            </View>\r\n\r\n                            <View style={styles.profileInfoContainer}>\r\n                                <ProfileAvatar\r\n                                    profile={profile || undefined}\r\n                                    size={150}\r\n                                    rounded\r\n                                    containerStyle={styles.avatarContainer}\r\n                                />\r\n                                <Text style={styles.name}>\r\n                                    {profile?.firstName} {profile?.lastName}\r\n                                </Text>\r\n\r\n                                {profileOffers.length > 0 && (\r\n                                    <View\r\n                                        style={[styles.offersCard, maxOffersDisplayed === 999 ? {opacity: 0} : {}]}\r\n                                        onLayout={(layout) => {\r\n                                            const height = layout.nativeEvent.layout.height;\r\n                                            const availableHeight = height - OFFERS_CARD_VERTICAL_PADDING * 2;\r\n                                            let numItems = Math.floor(availableHeight / OFFERS_CARD_LINE_HEIGHT) - 1;\r\n                                            if (numItems < profileOffers.length) numItems--; // leave space to show \"n more\"\r\n                                            if (numItems >= 0 && numItems != maxOffersDisplayed)\r\n                                                this.setState({...this.state, maxOffersDisplayed: numItems});\r\n                                        }}\r\n                                    >\r\n                                        <Text style={styles.offerText}>{i18n.t(\"matching.success.offersTitle\")}</Text>\r\n                                        {profileOffers.slice(0, maxOffersDisplayed).map((o: OfferValueDto) => (\r\n                                            <View key={`match-profile-offer-${o.offerId}`}>\r\n                                                <Text numberOfLines={1} style={styles.offerText}>\r\n                                                    - {i18n.t(`allOffers.${o.offerId}.name`)}\r\n                                                </Text>\r\n                                            </View>\r\n                                        ))}\r\n                                        {maxOffersDisplayed < profileOffers.length && (\r\n                                            <Text style={styles.offerText}>\r\n                                                {profileOffers.length - maxOffersDisplayed}{\" \"}\r\n                                                {i18n.t(\"matching.success.offersMore\")}\r\n                                            </Text>\r\n                                        )}\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                            <View style={styles.actionsContainer}>\r\n                                <AsyncButton\r\n                                    text={i18n.t(\"matching.success.chat\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    icon={<MaterialCommunityIcons name=\"chat\" style={styles.actionIcon} />}\r\n                                    style={styles.action}\r\n                                    onPress={async () => await this.chat()}\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"matching.success.continue\")}\r\n                                    icon={\r\n                                        <MaterialCommunityIcons\r\n                                            name=\"gesture-swipe-vertical\"\r\n                                            style={styles.actionIcon}\r\n                                        />\r\n                                    }\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.action, {backgroundColor: theme.actionNeutral}]}\r\n                                    onPress={() => this.hide()}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n\r\n                        <Wave color={theme.greenModalBackground} style={{width: waveWidth}} patternIndex={5} />\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: VERTICAL_SPACE_AROUND,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: MAX_WIDTH,\r\n            justifyContent: \"center\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.greenModalBackground,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n            flexShrink: 1,\r\n            // Prevents it from looking a little bit small when there are no offers to show\r\n            minHeight: Math.min(400, Dimensions.get(\"window\").height * 0.7),\r\n        },\r\n        topContainer: {\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n        },\r\n        profileInfoContainer: {\r\n            alignItems: \"center\",\r\n            flexShrink: 1,\r\n        },\r\n        actionsContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            width: \"85%\",\r\n            maxWidth: 400,\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 26,\r\n            color: themes.dark.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginTop: 10,\r\n            marginBottom: 20,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: themes.dark.text,\r\n            opacity: 0.4,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 0.5,\r\n        },\r\n        name: {\r\n            color: themes.dark.text,\r\n            fontSize: 24,\r\n            marginVertical: 5,\r\n        },\r\n        offersCard: {\r\n            backgroundColor: \"#0001\",\r\n            borderRadius: 20,\r\n            paddingVertical: OFFERS_CARD_VERTICAL_PADDING,\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n            flexShrink: 1,\r\n            overflow: \"hidden\",\r\n        },\r\n        offerText: {\r\n            color: themes.dark.text,\r\n            fontSize: 16,\r\n            lineHeight: OFFERS_CARD_LINE_HEIGHT,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            marginHorizontal: 5,\r\n        },\r\n        actionIcon: {\r\n            fontSize: 22,\r\n            color: themes.dark.text,\r\n            marginLeft: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchSuccessModalClass));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {LayoutRectangle, StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport MatchProfileCard from \"../components/cards/MatchProfileCard\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport MatchSuccessModal, {MatchSuccessModalClass} from \"../components/modals/MatchSuccessModal\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profiles: state.matching.profiles,\r\n    profileIds: state.matching.orderedProfileIds,\r\n    pagination: state.matching.profilesPagination,\r\n}));\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"TabMatchingScreen\">;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps> {\r\n    scrollerRef = React.createRef<InfiniteScroller<UserProfile>>();\r\n    successModalRef = React.createRef<MatchSuccessModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {profileIds, profiles, theme, pagination, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <InfiniteScroller\r\n                    ref={this.scrollerRef}\r\n                    navigation={navigation}\r\n                    fetchLimit={PROFILES_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchProfiles())}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    // refreshOnFocus\r\n                    items={profileIds.map((id) => profiles[id])}\r\n                    id={(profile: UserProfile): string => profile.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    endOfItemsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noMoreItems\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedProfiles())}\r\n                    renderItem={(profile: UserProfile, hide: () => void) => (\r\n                        <MatchProfileCard\r\n                            key={`match-profile-card-${profile.id}`}\r\n                            profile={profile}\r\n                            onExpand={(layout: LayoutRectangle) => {\r\n                                const scroll = this.scrollerRef.current?.scrollViewRef.current;\r\n                                if (scroll) scroll.scrollTo({y: layout.y - 100, animated: true});\r\n                            }}\r\n                            onSwipeRight={async () => {\r\n                                const response = await dispatch(likeProfile(profile));\r\n                                if (response && response.status === MatchActionStatus.Matched)\r\n                                    this.successModalRef.current?.show(profile, response.roomId);\r\n                            }}\r\n                            onSwipedLeft={() => dispatch(dislikeProfile(profile))}\r\n                            onHidden={hide}\r\n                            showSwipeTip={profile.id == profileIds[0]}\r\n                        />\r\n                    )}\r\n                    // Compensate for the header\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                    progressViewOffset={100}\r\n                />\r\n                <MatchSuccessModal ref={this.successModalRef} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            paddingTop: 100,\r\n            paddingBottom: 25,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Component props\r\nexport type MatchScreenHeaderProps = MainHeaderStackProps & {\r\n    backButton?: boolean;\r\n    blur?: boolean;\r\n};\r\n\r\nclass MatchScreenHeaderClass extends React.Component<MatchScreenHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {backButton, blur, ...stackProps} = this.props;\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton={backButton || false}\r\n                blur={blur}\r\n                rightButtons={[\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchFilteringScreen\")}>\r\n                            <FontAwesome name=\"sliders\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchHistoryScreen\")}>\r\n                            <MaterialIcons name=\"history\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default function MatchScreenHeader(props: MatchScreenHeaderProps): JSX.Element {\r\n    return <MatchScreenHeaderClass {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport Chips from \"./Chips\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    single?: boolean;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n        if (props.selected) this.tempSelected = props.selected;\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n        this.tempSelected = this.props.selected || [];\r\n    }\r\n\r\n    open() {\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        this.apply();\r\n    }\r\n\r\n    apply() {\r\n        if (this.props.onChange) this.props.onChange(this.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            single,\r\n            buttonStyleVariant,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n        const buttonStyle = getPickerButtonStyleProps(buttonStyleVariant, theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={buttonStyle.button}>\r\n                        <Text style={[buttonStyle.text, selectedItems.length == 0 ? buttonStyle.textNoneSelected : {}]}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                this.tempSelected = this.tempSelected.filter((v) => v !== item);\r\n                                this.apply();\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {this.state.open && (\r\n                    <CustomModal\r\n                        visible={this.state.open}\r\n                        onHide={() => this.close()}\r\n                        modalViewStyle={{\r\n                            height: 150 + items.length * 40,\r\n                            maxHeight: \"70%\",\r\n                            overflow: \"hidden\",\r\n                            paddingHorizontal: 0,\r\n                            paddingVertical: 0,\r\n                        }}\r\n                        renderContent={() => (\r\n                            <>\r\n                                <View\r\n                                    style={styles.dropdownWrapper}\r\n                                    onLayout={(e: LayoutChangeEvent) => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            dropdownWrapperHeight: e.nativeEvent.layout.height,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <DropDownPicker\r\n                                        items={items}\r\n                                        multiple={!single}\r\n                                        searchable={true}\r\n                                        defaultValue={selected}\r\n                                        onChangeItem={(values: string[]) => {\r\n                                            this.tempSelected = values;\r\n                                        }}\r\n                                        placeholder={placeholder}\r\n                                        multipleText={multipleText}\r\n                                        searchablePlaceholder={searchablePlaceholder}\r\n                                        scrollViewProps={{keyboardShouldPersistTaps: \"handled\"}} // ensures items are clickable even when the keyboard is open\r\n                                        isVisible={true}\r\n                                        showArrow={false}\r\n                                        dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                        // Style props\r\n                                        selectedLabelStyle={{display: \"none\"}}\r\n                                        style={styles.dropdownStyle}\r\n                                        itemStyle={styles.dropdownItemStyle}\r\n                                        activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                        activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                        labelStyle={styles.dropdownLabelStyle}\r\n                                    />\r\n                                </View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </>\r\n                        )}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"./onboarding\";\r\n\r\nexport type ToggleStyleVariant = \"classic\" | \"classic-rounded\" | \"no-buttons\" | \"chips\" | \"onboarding\";\r\n\r\nexport function getToggleStyleProps(variant: ToggleStyleVariant = \"classic\", theme: Theme): Partial<ButtonGroupProps> {\r\n    if (variant === \"no-buttons\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"chips\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 32,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 4,\r\n                flex: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.accentSlight,\r\n                borderRadius: 50,\r\n            },\r\n            textStyle: {\r\n                color: themes.light.text,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            selectedTextStyle: {\r\n                color: themes.dark.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"classic-rounded\") {\r\n        return {\r\n            containerStyle: {\r\n                height: 36,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderRadius: 20,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    } else if (variant === \"onboarding\") {\r\n        return {\r\n            containerStyle: {\r\n                height: 48,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.onboardingInputBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(styleVariant, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type LanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n    multiple?: boolean;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, multiple, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                single={!multiple}\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguagePicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, styleVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import * as React from \"react\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type OfferCategoryIconProps = {\r\n    category: OfferCategory;\r\n    size?: number;\r\n} & Partial<SvgProps>;\r\n\r\nclass OfferCategoryIcon extends React.Component<OfferCategoryIconProps> {\r\n    render(): JSX.Element {\r\n        const {category, size, ...svgProps} = this.props;\r\n\r\n        const SvgIcon = getLocalSvg(`offers.categories.${category}`, () => this.forceUpdate());\r\n        const iconSize = size || 75;\r\n\r\n        return <SvgIcon width={iconSize} height={iconSize} {...svgProps} />;\r\n    }\r\n}\r\n\r\nexport default OfferCategoryIcon;\r\n","import * as React from \"react\";\r\nimport {StyleProp, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SvgProps} from \"react-native-svg\";\r\nimport SemiHighlightedText from \"./SemiHighlightedText\";\r\nimport OfferCategoryIcon from \"./OfferCategoryIcon\";\r\n\r\n// Component props\r\nexport type FormattedOfferCategoryProps = {\r\n    category: OfferCategory;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconProps?: Partial<SvgProps>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconSize?: number;\r\n    fontSize?: number;\r\n    withoutIcon?: boolean;\r\n} & ThemeProps;\r\n\r\nclass FormattedOfferCategory extends React.Component<FormattedOfferCategoryProps> {\r\n    render(): JSX.Element {\r\n        const {containerStyle, category, theme, textStyle, iconProps, iconSize, fontSize, withoutIcon} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const translationKey = `onboarding.offers${category[0].toUpperCase() + category.slice(1)}.title`;\r\n\r\n        const size = iconSize || 75;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                {!withoutIcon && <OfferCategoryIcon category={category} size={size} {...iconProps} />}\r\n                <SemiHighlightedText text={i18n.t(translationKey)} textStyle={textStyle} fontSize={fontSize} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginLeft: -10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedOfferCategory);\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet, Platform} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getPickerButtonStyleProps, PickerButtonStyleVariant, pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight, webFontFamily} from \"../styles/general\";\r\nimport Chips from \"./Chips\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        else {\r\n            // This is useful for the web version; the ref won't be set because\r\n            // the element isn't mounted before opening\r\n            setTimeout(() => {\r\n                if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n            }, 250);\r\n        }\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        if (this.state.open && this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (apply) this.apply(this.state.tempSelected);\r\n    }\r\n\r\n    apply(items: string[]) {\r\n        if (this.props.onChange) this.props.onChange(items);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            buttonStyleVariant,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const {tempSelected} = this.state;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n        const buttonStyle = {...getPickerButtonStyleProps(buttonStyleVariant, theme)};\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        const select = this.state.items.get(locale) ? (\r\n            <SectionedMultiSelect\r\n                ref={this.selectRef}\r\n                items={this.state.items.get(locale)}\r\n                onSelectedItemsChange={(items) =>\r\n                    this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                }\r\n                selectedItems={tempSelected}\r\n                uniqueKey=\"id\"\r\n                displayKey=\"label\"\r\n                subKey=\"children\"\r\n                // Listeners\r\n                onCancel={() => this.close(false)}\r\n                onConfirm={() => this.close(true)}\r\n                // Dirty work-arounds to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                icons={undefined as never}\r\n                // Customization\r\n                showDropDowns={true}\r\n                readOnlyHeadings={true}\r\n                showChips={false}\r\n                showCancelButton={true}\r\n                selectedIconOnLeft={true}\r\n                animateDropDowns={false}\r\n                hideSelect={true}\r\n                noResultsComponent={<Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>}\r\n                searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                // Localization\r\n                confirmText={i18n.t(\"apply\")}\r\n                searchPlaceholderText={searchablePlaceholder}\r\n                // Styling\r\n                colors={{\r\n                    primary: theme.accent,\r\n                    cancel: theme.error,\r\n                    success: theme.okay,\r\n                    text: theme.text,\r\n                    subText: theme.textLight,\r\n                    searchPlaceholderTextColor: theme.textLight,\r\n                    selectToggleTextColor: theme.error,\r\n                    itemBackground: theme.cardBackground,\r\n                    subItemBackground: theme.cardBackground,\r\n                }}\r\n                confirmFontFamily={webFontFamily}\r\n                itemFontFamily={webFontFamily}\r\n                searchTextFontFamily={webFontFamily}\r\n                subItemFontFamily={webFontFamily}\r\n                styles={multiSelectStyles}\r\n            />\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        return (\r\n            <View {...viewProps} style={{position: \"relative\"}}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={buttonStyle.button}>\r\n                        <Text style={[buttonStyle.text, selectedItems.length == 0 ? buttonStyle.textNoneSelected : {}]}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                const selected = this.state.tempSelected.filter((v) => v !== item);\r\n                                this.setState({...this.state, tempSelected: selected});\r\n                                this.apply(selected);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {(Platform.OS === \"android\" || Platform.OS === \"ios\") && <View>{select}</View>}\r\n                {Platform.OS === \"web\" && (\r\n                    <CustomModal\r\n                        visible={this.state.open}\r\n                        noBackground\r\n                        fullWidth\r\n                        fullHeight\r\n                        renderContent={() => select}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalWrapper: {\r\n            justifyContent: \"center\",\r\n        },\r\n        container: {\r\n            backgroundColor: theme.cardBackground,\r\n            ...(Platform.OS === \"web\"\r\n                ? {\r\n                      marginVertical: 0,\r\n                      marginHorizontal: 0,\r\n                      alignSelf: \"center\",\r\n                      maxWidth: 700,\r\n                      maxHeight: \"90%\",\r\n                      boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.1)\",\r\n                  }\r\n                : {}),\r\n        },\r\n        scrollView: {paddingVertical: 10, ...(Platform.OS === \"web\" ? {overflowY: \"auto\"} : {})},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            ...styleTextLight,\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        subItemText: {\r\n            marginLeft: 5,\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * @see page 18 of {@link https://eqe.ge/res/docs/228085e.pdf}\r\n * @see page 18 of {@link http://uis.unesco.org/fr/file/1390} for french translations\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"welfare\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"care-elderly-disabled-adults\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"child-care-youth-services\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"social-work-counselling\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport SectionedMultiPicker, {SectionedMultiPickerProps} from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<SectionedMultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\nimport {StyleProp, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRoles: StaffRole[];\r\n    onChange?: (staffRoles: StaffRole[]) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    noOkUnderline?: boolean;\r\n};\r\n\r\nfunction StaffRolePicker(props: StaffRoleToggleProps & ThemeProps): JSX.Element {\r\n    const {staffRoles, multiple, atLeastOne, noOkUnderline, buttonStyle, buttonStyleVariant, onChange, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <PopUpSelector\r\n            values={STAFF_ROLES}\r\n            label={(r: string) => i18n.t(`staffRoles.${r}`)}\r\n            placeholder={i18n.t(`picker.callToAction`).replace(\"%d\", staffRoles.length + \"\")}\r\n            icon={(_, i: number) => <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.icon} />}\r\n            selected={staffRoles}\r\n            buttonStyle={buttonStyle}\r\n            buttonStyleVariant={buttonStyleVariant}\r\n            onSelect={(values: string[]) => {\r\n                if (onChange) onChange(values as StaffRole[]);\r\n            }}\r\n            multiple={multiple}\r\n            atLeastOne={atLeastOne}\r\n            noOkUnderline={noOkUnderline}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        icon: {\r\n            fontSize: 20,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(StaffRolePicker);\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport LanguagePicker from \"../components/LanguagePicker\";\r\nimport {Degree, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport FormattedOfferCategory from \"../components/FormattedOfferCategory\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport EducationFieldPicker from \"../components/EducationFieldPicker\";\r\nimport StaffRolePicker from \"../components/StaffRolePicker\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nexport const filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        // <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator />\r\n                <FormattedOfferCategory category={category} iconSize={60} fontSize={24} />\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            />\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                    <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                        <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                        <MaterialIcons name=\"refresh\" style={styles.resetButtonIcon} />\r\n                    </TouchableOpacity>\r\n                    <View style={styles.sectionContainer}>\r\n                        <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <MultiUniversityPicker\r\n                                    universities={filters.universities}\r\n                                    showChips={false}\r\n                                    onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <LanguagePicker\r\n                                    languages={filters.languages}\r\n                                    multiple\r\n                                    showChips={false}\r\n                                    onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <EducationFieldPicker\r\n                                    fields={filters.educationFields}\r\n                                    showChips={false}\r\n                                    onChange={(educationFields: string[]) => this.updateLocalFilters({educationFields})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({educationFields: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                            <RoleToggleMulti\r\n                                roles={filters.types}\r\n                                onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                                styleVariant=\"classic-rounded\"\r\n                            />\r\n                        </View>\r\n                        {filters.types.indexOf(\"student\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                                <DegreeToggleMulti\r\n                                    degrees={filters.degrees}\r\n                                    onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                    style={{width: \"100%\"}}\r\n                                    styleVariant=\"classic-rounded\"\r\n                                />\r\n                            </View>\r\n                        )}\r\n                        {filters.types.indexOf(\"staff\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"positions\")}</Text>\r\n                                <View style={styles.entryControls}>\r\n                                    <StaffRolePicker\r\n                                        staffRoles={filters.staffRoles}\r\n                                        onChange={(staffRoles: StaffRole[]) => this.updateLocalFilters({staffRoles})}\r\n                                        buttonStyle={{flex: 1}}\r\n                                        multiple\r\n                                        noOkUnderline\r\n                                    />\r\n                                    <ClearFilterButton onPress={() => this.updateLocalFilters({staffRoles: []})} />\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                    {offerSections}\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            paddingHorizontal: 40,\r\n            paddingTop: 10,\r\n            paddingBottom: 70,\r\n            width: \"100%\",\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            flex: 1,\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 50,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: themes.light.text,\r\n        },\r\n        resetButtonIcon: {\r\n            fontSize: 16,\r\n            color: themes.light.text,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {headerTitle} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {filteringScreenRef} from \"../../screens/MatchFilteringScreen\";\r\nimport {refreshFetchedProfiles} from \"../../state/matching/actions\";\r\n\r\n// Component props\r\nexport type FilteringScreenHeaderProps = ThemeProps & StackHeaderProps;\r\n\r\nclass FilteringScreenHeaderClass extends React.Component<FilteringScreenHeaderProps> {\r\n    back() {\r\n        const nav = this.props.navigation;\r\n        if (nav.canGoBack()) nav.goBack();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, insets, scene, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const title = headerTitle(scene.route.name as NavigatorRoute);\r\n\r\n        return (\r\n            <View style={[{paddingTop: insets.top}, hstyles.wrapper]}>\r\n                <TouchableOpacity style={{}} onPress={() => this.back()}>\r\n                    <MaterialIcons name=\"close\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n                <Text style={[hstyles.title, {textAlign: \"center\", flex: 1}]} numberOfLines={1}>\r\n                    {title}\r\n                </Text>\r\n                <TouchableOpacity\r\n                    style={{paddingVertical: 10}}\r\n                    onPress={() => {\r\n                        if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                        navigation.navigate(\"TabMatchingScreen\");\r\n                        store.dispatch(refreshFetchedProfiles());\r\n                    }}\r\n                >\r\n                    <MaterialIcons name=\"check\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst FilteringScreenHeaderComp = withTheme(FilteringScreenHeaderClass);\r\n\r\nexport default function FilteringScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <FilteringScreenHeaderComp {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Component props\r\nexport type FormattedMatchStatusProps = {\r\n    status: MatchActionStatus;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass FormattedMatchStatus extends React.Component<FormattedMatchStatusProps> {\r\n    render(): JSX.Element {\r\n        const {status, theme, containerStyle, textStyle, iconStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const text = i18n.t(`matching.history.status.${status}`);\r\n\r\n        let IconComponent;\r\n        let iconName;\r\n\r\n        switch (status) {\r\n            case MatchActionStatus.Blocked:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"block\";\r\n                break;\r\n            case MatchActionStatus.Declined:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-down\";\r\n                break;\r\n            case MatchActionStatus.Matched:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"people\";\r\n                break;\r\n            case MatchActionStatus.Requested:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-up\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <IconComponent style={[styles.icon, iconStyle]} name={iconName} />\r\n                <Text style={[styles.text, textStyle]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        icon: {\r\n            marginRight: 5,\r\n            paddingTop: 2,\r\n        },\r\n        text: {\r\n            fontSize: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedMatchStatus);\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport FormattedMatchStatus from \"../FormattedMatchStatus\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport BlockProfileModal, {BlockProfileModalClass} from \"../modals/BlockProfileModal\";\r\nimport {MatchActionStatus} from \"../../api/dto\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport {cancelMatchAction} from \"../../state/matching/actions\";\r\nimport SwipeTip from \"../SwipeTip\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\nexport type HistoryProfileCardProps = ThemeProps & {\r\n    item: MatchHistoryItem;\r\n    style?: ViewStyle;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 10,\r\n    borderRadius: 10,\r\n    minHeight: 100,\r\n};\r\n\r\nclass HistoryProfileCard extends React.Component<HistoryProfileCardProps> {\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    blockModalRef = React.createRef<BlockProfileModalClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {\r\n            theme,\r\n            item: {id, status},\r\n        } = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const reportButton = {\r\n            icon: \"report\",\r\n            text: i18n.t(\"matching.history.actions.report\"),\r\n            backgroundColor: theme.error,\r\n            color: themes.dark.text,\r\n            onPress: () => this.reportFormRef.current?.open(),\r\n        };\r\n        const blockButton = {\r\n            icon: \"block\",\r\n            text: i18n.t(\"matching.history.actions.block\"),\r\n            backgroundColor: theme.error,\r\n            color: themes.dark.text,\r\n            onPress: () => this.blockModalRef.current?.show(),\r\n        };\r\n        const cancelButton = {\r\n            icon: \"close\",\r\n            text: i18n.t(`matching.history.actions.cancel.${status}`),\r\n            backgroundColor: theme.accent,\r\n            color: themes.dark.text,\r\n            onPress: () => {\r\n                hideCard();\r\n                dispatch(cancelMatchAction(id));\r\n            },\r\n        };\r\n\r\n        if (status === MatchActionStatus.Blocked) return [reportButton, cancelButton];\r\n        else return [reportButton, blockButton, cancelButton];\r\n    }\r\n\r\n    render() {\r\n        const {theme, item, showSwipeTip} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const profile = item.profile;\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        return (\r\n            <>\r\n                <SwipeableCard\r\n                    ref={this.swipeableCardRef}\r\n                    looks={LOOKS}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    rightActions={(hideCard: () => void) => (\r\n                        <SwipeActionButtons\r\n                            id={`${item.profile.id}-${item.status}`}\r\n                            looks={LOOKS}\r\n                            side=\"right\"\r\n                            actions={this.getActions(hideCard)}\r\n                            buttonStyle={styles.actionButton}\r\n                        />\r\n                    )}\r\n                >\r\n                    <View style={styles.cardContent}>\r\n                        <View style={styles.avatarContainer}>\r\n                            <ProfileAvatar\r\n                                profile={profile}\r\n                                size={60}\r\n                                rounded\r\n                                containerStyle={styles.avatar}\r\n                                onPress={() => navigateToProfile(profile.id, store.getState())}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{fullName}</Text>\r\n                            {profile && (\r\n                                <FormattedUniversity\r\n                                    flagSize={14}\r\n                                    flagEmoji={true}\r\n                                    style={[styles.infoText, {marginLeft: -10}]}\r\n                                    university={profile.university}\r\n                                />\r\n                            )}\r\n                            <FormattedMatchStatus\r\n                                status={item.status}\r\n                                textStyle={styles.infoText}\r\n                                iconStyle={styles.infoText}\r\n                            />\r\n                        </View>\r\n                        {showSwipeTip && <SwipeTip direction=\"left\" iconStyle={styles.swipeTipIcon} />}\r\n                    </View>\r\n                </SwipeableCard>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={profile}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n                <BlockProfileModal\r\n                    ref={this.blockModalRef}\r\n                    profile={profile}\r\n                    onBlock={() => this.swipeableCardRef.current?.collapse()}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.8,\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 15,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTipIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 18,\r\n        },\r\n\r\n        actionButton: {\r\n            paddingHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(HistoryProfileCard);\r\n","import * as React from \"react\";\r\nimport {Platform, ViewStyle} from \"react-native\";\r\nimport {SearchBar, SearchBarProps} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BufferedSearchBarProps = {\r\n    bufferDelay: number;\r\n    onBufferedUpdate?: (text: string) => void;\r\n} & SearchBarProps;\r\n\r\nclass BufferedSearchBar extends React.Component<BufferedSearchBarProps> {\r\n    private updateTimeout: NodeJS.Timeout | null = null;\r\n\r\n    private onChange(text: string) {\r\n        const {bufferDelay, onBufferedUpdate} = this.props;\r\n\r\n        if (this.updateTimeout) clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            this.updateTimeout = null;\r\n            if (onBufferedUpdate) onBufferedUpdate(text);\r\n        }, bufferDelay);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const {bufferDelay, onBufferedUpdate, onChangeText, ...searchBarProps} = this.props;\r\n\r\n        return (\r\n            <SearchBar\r\n                onChangeText={(search: string) => {\r\n                    if (onChangeText) onChangeText(search);\r\n                    this.onChange(search);\r\n                }}\r\n                style={[Platform.OS === \"web\" && ({outline: \"none\"} as ViewStyle), searchBarProps.style]}\r\n                {...searchBarProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BufferedSearchBar;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {Button, withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {fetchHistory, refreshFetchedHistory, setHistoryFilters} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {HISTORY_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport HistoryProfileCard from \"../components/cards/HistoryProfileCard\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport {MATCH_ACTION_HISTORY_STATUSES} from \"../api/dto\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport BufferedSearchBar from \"../components/BufferedSearchBar\";\r\nimport themes from \"../constants/themes\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    historyItems: state.matching.historyItems,\r\n    fetchingHistory: state.matching.historyPagination.fetching,\r\n    canFetchMore: state.matching.historyPagination.canFetchMore,\r\n    currentPage: state.matching.historyPagination.page,\r\n    historyFilters: state.matching.historyFilters,\r\n}));\r\n\r\n// Component props\r\ntype MatchHistoryScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"MatchHistoryScreen\">;\r\n\r\n// Component state\r\ntype MatchHistoryScreenState = {\r\n    search: string;\r\n};\r\n\r\nclass MatchHistoryScreen extends React.Component<MatchHistoryScreenProps, MatchHistoryScreenState> {\r\n    private unsubscribeBlurEvent: null | (() => void) = null;\r\n\r\n    constructor(props: MatchHistoryScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    private onBlur(): void {\r\n        // This removes the previously fetched items in order to avoid a slow render\r\n        // when returning to the screen\r\n        this.props.dispatch(refreshFetchedHistory());\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.unsubscribeBlurEvent = this.props.navigation.addListener(\"blur\", () => this.onBlur());\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.unsubscribeBlurEvent) this.unsubscribeBlurEvent();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            historyItems,\r\n            theme,\r\n            historyFilters,\r\n            fetchingHistory,\r\n            canFetchMore,\r\n            currentPage,\r\n            navigation,\r\n        } = this.props;\r\n        const {search} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const filters = MATCH_ACTION_HISTORY_STATUSES;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.filtersContainer}>\r\n                    {filters.map((key: string) => (\r\n                        <Filter\r\n                            theme={theme}\r\n                            key={`match-history-filter-${key}`}\r\n                            filterKey={key}\r\n                            selected={historyFilters[key]}\r\n                            onPress={() => {\r\n                                dispatch(setHistoryFilters({[key]: !historyFilters[key]}));\r\n                                dispatch(refreshFetchedHistory());\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </View>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => dispatch(refreshFetchedHistory())}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={HISTORY_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchHistory(search))}\r\n                    fetching={fetchingHistory}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    items={historyItems}\r\n                    id={(it: MatchHistoryItem): string => it.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.history.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.history.noResultsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedHistory())}\r\n                    refreshOnFocus\r\n                    renderItem={(item: MatchHistoryItem, hide: () => void) => (\r\n                        <HistoryProfileCard\r\n                            key={`history-card-${item.id}-${item.status}`}\r\n                            item={item}\r\n                            onHidden={hide}\r\n                            showSwipeTip={item.id === historyItems[0].id}\r\n                        />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Filter({\r\n    theme,\r\n    selected,\r\n    filterKey,\r\n    onPress,\r\n}: {\r\n    theme: Theme;\r\n    selected: boolean;\r\n    filterKey: string;\r\n    onPress: () => void;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <Button\r\n            onPress={onPress}\r\n            title={i18n.t(`matching.history.status.${filterKey}`)}\r\n            containerStyle={styles.filterButtonContainer}\r\n            buttonStyle={[styles.filterButton, selected ? styles.filterButtonSelected : {}]}\r\n            titleStyle={[styles.filterLabel, selected ? styles.filterLabelSelected : {}]}\r\n            raised={false}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            paddingBottom: 50,\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        // Filters\r\n        filtersContainer: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n            flexDirection: \"row\",\r\n        },\r\n        filterButtonContainer: {\r\n            flex: 1,\r\n            marginHorizontal: 15,\r\n            borderRadius: 25,\r\n        },\r\n        filterButton: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        filterButtonSelected: {\r\n            backgroundColor: theme.accent,\r\n        },\r\n        filterLabel: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.6,\r\n        },\r\n        filterLabelSelected: {\r\n            color: themes.dark.text,\r\n            fontWeight: \"600\",\r\n        },\r\n        filterIcon: {\r\n            fontSize: 18,\r\n            color: theme.text,\r\n            marginRight: 4,\r\n        },\r\n        filterIconSelected: {\r\n            color: themes.dark.text,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchHistoryScreen));\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {TabMatchingRoot} from \"./types\";\r\nimport TabMatchingScreen from \"../screens/TabMatchingScreen\";\r\nimport {screenTitle} from \"./utils\";\r\nimport MatchScreenHeader from \"../components/headers/MatchScreenHeader\";\r\nimport MatchFilteringScreen from \"../screens/MatchFilteringScreen\";\r\nimport FilteringScreenHeader from \"../components/headers/FilteringScreenHeader\";\r\nimport MatchHistoryScreen from \"../screens/MatchHistoryScreen\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nexport const TabMatchingNavigator = (): JSX.Element => (\r\n    <TabMatchingStack.Navigator>\r\n        <TabMatchingStack.Screen\r\n            name=\"TabMatchingScreen\"\r\n            options={() => ({\r\n                headerShown: false,\r\n                title: screenTitle(\"TabMatchingScreen\"),\r\n            })}\r\n        >\r\n            {(props) => (\r\n                <>\r\n                    <TabMatchingScreen {...props} />\r\n                    <MatchScreenHeader blur={true} {...props} />\r\n                </>\r\n            )}\r\n        </TabMatchingStack.Screen>\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchFilteringScreen\"\r\n            component={MatchFilteringScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchFilteringScreen\"),\r\n                header: FilteringScreenHeader,\r\n            }}\r\n        />\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchHistoryScreen\"\r\n            component={MatchHistoryScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchHistoryScreen\"),\r\n                header: (props: StackHeaderProps) => <MainHeader backButton={true} {...props} />,\r\n            }}\r\n        />\r\n    </TabMatchingStack.Navigator>\r\n);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Platform} from \"react-native\";\r\nimport {BottomTabBar, BottomTabBarProps} from \"@react-navigation/bottom-tabs\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {BLUR_TAB_INTENSITY} from \"../../styles/general\";\r\n\r\n// Component props\r\nexport type MainTabBarProps = ThemeProps & BottomTabBarProps & {insets: EdgeInsets};\r\n\r\nclass MainTabBarClass extends React.Component<MainTabBarProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets: {bottom},\r\n            ...tabBarProps\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <BlurView\r\n                style={styles.blurViewStyle}\r\n                tint={theme.id === \"dark\" ? \"dark\" : \"default\"}\r\n                intensity={BLUR_TAB_INTENSITY}\r\n            >\r\n                <BottomTabBar\r\n                    {...tabBarProps}\r\n                    activeTintColor={theme.accent}\r\n                    style={[styles.tabBar, {paddingBottom: bottom}]}\r\n                    tabStyle={styles.tab}\r\n                    iconStyle={styles.icon}\r\n                    showLabel={false}\r\n                />\r\n            </BlurView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        blurViewStyle:\r\n            Platform.OS === \"web\"\r\n                ? {} // On web, scrolling on certain pages breaks if the tab bar is position absolutely\r\n                : {\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      right: 0,\r\n                  },\r\n        tabBar: {\r\n            borderTopWidth: 0,\r\n            elevation: 0,\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        tab: {\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n        icon: {\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction MainTabBar(props: BottomTabBarProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <MainTabBarClass insets={insets} {...themeProps} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport type MainTabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\nexport function MainTabBarIcon({name, color}: {name: string} & MainTabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nexport default MainTabBar;\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {deleteGroupMember, setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport type GroupInviteResponseModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport class GroupInviteResponseModalClass extends React.Component<GroupInviteResponseModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const stillNeedsApproval = group.requiresApproval && group.myStatus !== GroupMemberStatus.InvitedByAdmin;\r\n        const descriptionText = group.description.length > 0 ? group.description : i18n.t(\"groups.description.none\");\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={group.name}\r\n                text={descriptionText}\r\n                justifyText\r\n                {...(stillNeedsApproval\r\n                    ? {\r\n                          additionalContent: (hide, textProps) => (\r\n                              <Text {...textProps} style={[textProps.style, {fontSize: 14}]}>\r\n                                  {i18n.t(\"groups.invite.approvalDisclaimerInvitee\")}\r\n                              </Text>\r\n                          ),\r\n                      }\r\n                    : {})}\r\n                buttons={[\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"groups.invite.decline\"),\r\n                        onPress: (hide) => {\r\n                            const localUser = store.getState().profile.user;\r\n                            if (localUser) dispatch(deleteGroupMember(group.id, localUser.id, false));\r\n                            hide();\r\n                        },\r\n                    },\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.invite.accept\"),\r\n                        onPress: (hide) => {\r\n                            const localUser = store.getState().profile.user;\r\n                            if (localUser) {\r\n                                if (stillNeedsApproval)\r\n                                    dispatch(setGroupMemberStatus(group.id, localUser.id, GroupMemberStatus.Pending));\r\n                                else dispatch(setGroupMemberStatus(group.id, localUser.id, GroupMemberStatus.Approved));\r\n                            }\r\n\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupInviteResponseModalClass);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, TouchableOpacityProps, StyleSheet, Text, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\nimport LocalImage from \"../LocalImage\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport GroupInviteResponseModal, {GroupInviteResponseModalClass} from \"../modals/GroupInviteResponseModal\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype MyGroupCardProps = {\r\n    group: Group | null;\r\n    isInvite?: boolean;\r\n} & TouchableOpacityProps &\r\n    ThemeProps;\r\n\r\nclass MyGroupCard extends React.Component<MyGroupCardProps> {\r\n    inviteResponseModalRef = React.createRef<GroupInviteResponseModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {group, theme, style, isInvite, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, group && !group.cover ? styles.containerWithoutCover : {}, style]}\r\n                activeOpacity={0.9}\r\n                onPress={() => {\r\n                    if (group) {\r\n                        if (isInvite) this.inviteResponseModalRef.current?.show();\r\n                        else navigateToGroup(group.id);\r\n                    }\r\n                }}\r\n                {...otherProps}\r\n            >\r\n                {group && (\r\n                    <>\r\n                        {group.cover && (\r\n                            <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                        )}\r\n                        {!group.cover && (\r\n                            <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                        )}\r\n                        <BlurView style={styles.textUnderlay} tint=\"dark\" intensity={5} />\r\n                        <Text style={styles.groupName} numberOfLines={3}>\r\n                            {group?.name}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n                {group && isInvite && <GroupInviteResponseModal ref={this.inviteResponseModalRef} group={group} />}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: 90,\r\n            height: 90,\r\n            borderRadius: 15,\r\n            marginRight: 10,\r\n            overflow: \"hidden\",\r\n        },\r\n        containerWithoutCover: {\r\n            borderWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        groupCover: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        textUnderlay: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        groupName: {\r\n            color: themes.dark.text,\r\n            textShadowColor: \"rgba(0, 0, 0, 0.7)\",\r\n            textShadowOffset: {width: 1, height: 1},\r\n            textShadowRadius: 10,\r\n            margin: 5,\r\n            zIndex: 1, // fix for web version\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MyGroupCard);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {fetchMyGroups, refreshFetchedMyGroups} from \"../state/groups/actions\";\r\nimport {GROUPS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {Group} from \"../model/groups\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport MyGroupCard from \"./cards/MyGroupCard\";\r\nimport Button from \"./Button\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    myGroups: state.groups.myGroups,\r\n    groupsDict: state.groups.groupsDict,\r\n    pagination: state.groups.myGroupsPagination,\r\n}));\r\n\r\n// Component props\r\nexport type MyGroupsViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {navigation: NavigationProp<never>};\r\n\r\nclass MyGroupsView extends React.Component<MyGroupsViewProps> {\r\n    render() {\r\n        const {theme, myGroups, groupsDict, pagination, navigation, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"groups.myGroups.title\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"groups.explore.button\")}\r\n                        icon={<MaterialIcons name=\"explore\" style={styles.exploreIcon} />}\r\n                        iconLeft\r\n                        style={styles.exploreButton}\r\n                        textStyle={styles.exploreButtonText}\r\n                        onPress={() =>\r\n                            rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"GroupsExploreScreen\"}})\r\n                        }\r\n                    />\r\n                </View>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => (dispatch as MyThunkDispatch)(fetchMyGroups())}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={myGroups.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    horizontal\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.myGroups.none\")}</Text>}\r\n                    refresh={() => (dispatch as MyThunkDispatch)(refreshFetchedMyGroups())}\r\n                    renderItem={(group: Group) => <MyGroupCard key={group.id} group={group} />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            marginBottom: 20,\r\n            paddingHorizontal: 15,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {paddingHorizontal: 15},\r\n\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            maxWidth: 200,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n\r\n        exploreButton: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 5,\r\n            borderRadius: 100,\r\n            backgroundColor: theme.background,\r\n            justifyContent: \"center\",\r\n        },\r\n        exploreButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        exploreIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n            marginRight: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MyGroupsView));\r\n","import React from \"react\";\r\nimport {StyleProp, View, TextInput, ViewStyle, StyleSheet, TextStyle, Platform} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport Button from \"./Button\";\r\nimport i18n from \"i18n-js\";\r\nimport {MAX_COMMENT_LENGTH, MIN_COMMENT_LENGTH} from \"../validators\";\r\n\r\nexport type CommentTextInputProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    onSend?: (text: string) => void;\r\n} & ThemeProps;\r\n\r\ntype CommentTextInputState = {\r\n    value: string;\r\n    height: number;\r\n    focused: boolean;\r\n};\r\n\r\nconst MIN_HEIGHT = 40;\r\nconst MAX_HEIGHT = 100;\r\n\r\nexport class CommentTextInputClass extends React.Component<CommentTextInputProps, CommentTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    constructor(props: CommentTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false, value: \"\", height: 0} as CommentTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    private send(): void {\r\n        const {onSend} = this.props;\r\n        const {value} = this.state;\r\n\r\n        this.setState({...this.state, value: \"\", height: MIN_HEIGHT});\r\n        this.inputRef.current?.blur();\r\n        if (onSend) onSend(value);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, theme} = this.props;\r\n        const {value} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const height = Math.max(MIN_HEIGHT, this.state.height);\r\n\r\n        const icons =\r\n            value.length < MIN_COMMENT_LENGTH ? (\r\n                <></>\r\n            ) : (\r\n                <Button\r\n                    style={styles.inputButton}\r\n                    onPress={() => this.send()}\r\n                    icon={<MaterialIcons name={\"send\"} style={styles.inputButtonIcon} />}\r\n                />\r\n            );\r\n\r\n        return (\r\n            <View style={[styles.wrapper, {height}, style, this.state.focused ? styles.focusedStyle : {}]}>\r\n                <TextInput\r\n                    ref={this.inputRef}\r\n                    style={[\r\n                        styles.input,\r\n                        this.state.focused && Platform.OS === \"web\" && ({outline: \"none\"} as TextStyle),\r\n                        this.state.focused && styles.inputFocusedStyle,\r\n                    ]}\r\n                    onBlur={() => this.setState({focused: false})}\r\n                    onFocus={() => this.setState({focused: true})}\r\n                    placeholder={i18n.t(\"groups.comments.placeholder\")}\r\n                    multiline\r\n                    numberOfLines={4}\r\n                    maxLength={MAX_COMMENT_LENGTH}\r\n                    value={value}\r\n                    placeholderTextColor={theme.textLight}\r\n                    onChangeText={(value) => this.setState({...this.state, value})}\r\n                    onContentSizeChange={(event) =>\r\n                        this.setState({height: Math.min(MAX_HEIGHT, event.nativeEvent.contentSize.height)})\r\n                    }\r\n                />\r\n                <View>{icons}</View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            borderRadius: 20,\r\n        },\r\n        focusedStyle: {\r\n            borderWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        inputFocusedStyle: {},\r\n        input: {\r\n            paddingLeft: 20,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n            height: \"100%\",\r\n            backgroundColor: \"transparent\",\r\n            color: theme.text,\r\n        },\r\n        inputButton: {\r\n            padding: 10,\r\n        },\r\n        inputButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CommentTextInputClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, StyleProp, ViewStyle, TextStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {PostComment} from \"../model/groups\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {setVote} from \"../state/groups/actions\";\r\nimport {GroupPost, GroupVoteStatus} from \"../model/groups\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport Button from \"./Button\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\ntype GroupVoteButtonProps = {\r\n    vote: GroupVoteStatus;\r\n    currentStatus: GroupVoteStatus;\r\n    groupId: string;\r\n    post: GroupPost;\r\n    comment?: PostComment;\r\n    style?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupVoteButton extends React.Component<GroupVoteButtonProps> {\r\n    render(): JSX.Element {\r\n        const {groupId, post, comment, vote, currentStatus, theme, style, iconStyle} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const isSet = vote === currentStatus;\r\n\r\n        return (\r\n            <Button\r\n                onPress={() => {\r\n                    const val = isSet ? GroupVoteStatus.Neutral : vote;\r\n                    dispatch(setVote(groupId, post.id, comment?.id || null, val, currentStatus));\r\n                }}\r\n                icon={\r\n                    <MaterialIcons\r\n                        name={vote === GroupVoteStatus.Upvote ? \"arrow-upward\" : \"arrow-downward\"}\r\n                        style={[styles.icon, iconStyle, styles.iconOverride, isSet && styles.nonNeutralIcon]}\r\n                    />\r\n                }\r\n                style={style}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        icon: {\r\n            fontSize: 20,\r\n        },\r\n        iconOverride: {\r\n            color: themes.light.textLight,\r\n            opacity: 0.5,\r\n        },\r\n        nonNeutralIcon: {\r\n            color: theme.accent,\r\n            opacity: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupVoteButton);\r\n","import React from \"react\";\r\nimport {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {updatePostComment} from \"../../state/groups/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"../ValidatedTextInput\";\r\nimport {MAX_COMMENT_LENGTH, VALIDATOR_COMMENT_TEXT} from \"../../validators\";\r\nimport FormError from \"../forms/FormError\";\r\n\r\nexport type EditCommentModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; post: GroupPost; comment: PostComment};\r\n\r\ntype EditCommentModalState = {text: string; error?: string};\r\n\r\nexport class EditCommentModalClass extends React.Component<EditCommentModalProps, EditCommentModalState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: EditCommentModalProps) {\r\n        super(props);\r\n        this.state = {text: props.comment.text, error: undefined};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, comment, theme, ...otherProps} = this.props;\r\n        const {text, error} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const textInputStyle: Partial<ValidatedTextInputProps> = {\r\n            wrapperStyle: {flex: 1},\r\n            style: {flex: 1},\r\n            inputStyle: {\r\n                fontSize: 16,\r\n                paddingVertical: 10,\r\n                paddingHorizontal: 5,\r\n                color: theme.text,\r\n                textAlignVertical: \"top\",\r\n            },\r\n            placeholderTextColor: theme.inputPlaceholder,\r\n        };\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"groups.editComment.title\")}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        onPress: (hide) => {\r\n                            if (text != comment.text) dispatch(updatePostComment(groupId, post.id, comment.id, {text}));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={() => (\r\n                    <>\r\n                        <ValidatedTextInput\r\n                            value={text}\r\n                            onChangeText={(text) => {\r\n                                VALIDATOR_COMMENT_TEXT.validate(text)\r\n                                    .then(() => this.setState({...this.state, text, error: undefined}))\r\n                                    .catch((validation) =>\r\n                                        this.setState({...this.state, text, error: validation.errors[0] || undefined}),\r\n                                    );\r\n                            }}\r\n                            multiline\r\n                            numberOfLines={4}\r\n                            maxLength={MAX_COMMENT_LENGTH}\r\n                            {...textInputStyle}\r\n                        />\r\n                        <FormError error={error} />\r\n                    </>\r\n                )}\r\n                contentContainerStyle={styles.contentContainer}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        contentContainer: {\r\n            height: 200,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditCommentModalClass);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deletePostComment} from \"../../state/groups/actions\";\r\nimport {GroupPost, PostComment} from \"../../model/groups\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\n\r\nexport type DeleteCommentConfirmModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; post: GroupPost; comment: PostComment};\r\n\r\nclass DeleteCommentConfirmModal extends React.Component<DeleteCommentConfirmModalProps> {\r\n    render() {\r\n        const {groupId, post, comment, theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"groups.deleteComment.title\")}\r\n                text={i18n.t(\"groups.deleteComment.text\")}\r\n                icon={(props) => <FontAwesome name=\"warning\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            (store.dispatch as MyThunkDispatch)(deletePostComment(groupId, post.id, comment.id));\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteCommentConfirmModal);\r\n","import * as React from \"react\";\r\nimport ReadMoreComp, {ReadMoreProps as ReadMoreCompProps} from \"react-native-read-more-text\";\r\n\r\nexport type ReadMoreProps = ReadMoreCompProps;\r\n\r\nexport class ReadMore extends React.Component<ReadMoreProps> {\r\n    render(): JSX.Element {\r\n        const {children, ...props} = this.props;\r\n        return <ReadMoreComp {...props}>{children}</ReadMoreComp>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View, Platform} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus, PostComment} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport {formatCommentDate} from \"../../model/utils\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport EditCommentModal from \"../modals/EditCommentModal\";\r\nimport DeleteCommentConfirmModal from \"../modals/DeleteCommentConfirmModal\";\r\nimport Button from \"../Button\";\r\nimport {ReadMore} from \"../ReadMore\";\r\nimport store from \"../../state/store\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localUser: state.profile.user,\r\n}));\r\n\r\n// Component props\r\ntype GroupCommentCardProps = {\r\n    groupId: string;\r\n    post: GroupPost | null;\r\n    comment: PostComment | null;\r\n    closeComments: () => void;\r\n    onPressReplyTo: () => void;\r\n    onExpand?: (collapse: () => void) => void;\r\n    onCollapse?: () => void;\r\n    toggleChildren: () => void;\r\n    openReportForm: () => void;\r\n    adminView: boolean;\r\n} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype GroupCommentCardState = {\r\n    expanded: boolean;\r\n};\r\n\r\nconst EXPANDED_BOTTOM_HEIGHT = 35;\r\nconst DEPTH_OFFSET = 8;\r\nconst BORDER_LEFT_WIDTH = 4;\r\n\r\nclass GroupCommentCard extends React.Component<GroupCommentCardProps, GroupCommentCardState> {\r\n    private bottomHeight = new ReAnimated.Value<number>(0);\r\n\r\n    constructor(props: GroupCommentCardProps) {\r\n        super(props);\r\n        this.state = {expanded: false};\r\n    }\r\n\r\n    private setExpanded(expanded: boolean): void {\r\n        const {onExpand, onCollapse} = this.props;\r\n\r\n        this.setState({...this.state, expanded});\r\n        animateValue(this.bottomHeight, {\r\n            toValue: expanded ? EXPANDED_BOTTOM_HEIGHT : 0,\r\n            duration: 100,\r\n            easing: Easing.linear,\r\n        });\r\n\r\n        if (!expanded && onCollapse) onCollapse();\r\n        if (expanded && onExpand) onExpand(() => this.setExpanded(false));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            comment,\r\n            post,\r\n            groupId,\r\n            closeComments,\r\n            onPressReplyTo,\r\n            localUser,\r\n            theme,\r\n            adminView,\r\n            toggleChildren,\r\n            openReportForm,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {expanded} = this.state;\r\n\r\n        const styles = themedStyles(expanded)(theme);\r\n        const fromLocal = comment && localUser && comment.creator.id === localUser.id;\r\n        const name = comment ? `${comment.creator.firstName} ${comment.creator.lastName}` : \"\";\r\n\r\n        const depth = comment?.depth || 0;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.outerContainer, expanded ? styles.outerContainerExpanded : {}]}\r\n                activeOpacity={0.9}\r\n                onPress={() => this.setExpanded(!this.state.expanded)}\r\n                onLongPress={() => toggleChildren()}\r\n                delayLongPress={250}\r\n                {...otherProps}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.innerContainer,\r\n                        expanded ? styles.innerContainerExpanded : {},\r\n                        {marginLeft: depth * DEPTH_OFFSET, borderLeftWidth: depth > 0 ? BORDER_LEFT_WIDTH : 0},\r\n                    ]}\r\n                >\r\n                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                        <ProfileAvatar\r\n                            profile={comment?.creator}\r\n                            size={32}\r\n                            containerStyle={styles.avatarContainer}\r\n                            rounded\r\n                            onPress={() => {\r\n                                if (comment) {\r\n                                    closeComments();\r\n                                    navigateToProfile(comment.creator.id, store.getState());\r\n                                }\r\n                            }}\r\n                        />\r\n                        <View style={styles.content}>\r\n                            <View style={{flexDirection: \"row\"}}>\r\n                                <Text style={[styles.topText, styles.name]}>{name}</Text>\r\n                                <Text style={[styles.topText, {flex: 1}]} numberOfLines={1}>\r\n                                    {comment && `, ${formatCommentDate(comment)}`}\r\n                                </Text>\r\n                                <Text style={styles.topText}>\r\n                                    {comment\r\n                                        ? comment.score === 0\r\n                                            ? i18n.t(\"groups.points.zero\")\r\n                                            : comment.score === 1\r\n                                            ? i18n.t(\"groups.points.singular\")\r\n                                            : i18n.t(\"groups.points.plural\", {num: comment.score})\r\n                                        : \"\"}\r\n                                </Text>\r\n                            </View>\r\n                            <ReadMore\r\n                                numberOfLines={3}\r\n                                renderTruncatedFooter={(handlePress) => (\r\n                                    <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                        <Text style={[styles.text, styles.textFooter]}>... {i18n.t(\"showMore\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                )}\r\n                                renderRevealedFooter={(handlePress) => (\r\n                                    <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                        <Text style={[styles.text, styles.textFooter]}>{i18n.t(\"showLess\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                )}\r\n                            >\r\n                                <Text style={styles.text}>{comment?.text}</Text>\r\n                            </ReadMore>\r\n                        </View>\r\n                    </View>\r\n                    {/* Comment footer */}\r\n                    {post && comment && (\r\n                        <ReAnimated.View\r\n                            style={[styles.bottom, {height: this.bottomHeight, opacity: expanded ? 1 : 0}]}\r\n                        >\r\n                            <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                {fromLocal && (\r\n                                    <EditCommentModal\r\n                                        groupId={groupId}\r\n                                        post={post}\r\n                                        comment={comment}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.bottomButton}\r\n                                                icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"edit\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                {(adminView || fromLocal) && (\r\n                                    <DeleteCommentConfirmModal\r\n                                        groupId={groupId}\r\n                                        post={post}\r\n                                        comment={comment}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.bottomButton}\r\n                                                icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"delete\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                {!fromLocal && (\r\n                                    <Button\r\n                                        style={styles.bottomButton}\r\n                                        icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"report\" />}\r\n                                        onPress={openReportForm}\r\n                                    />\r\n                                )}\r\n                            </View>\r\n                            <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                <Button\r\n                                    style={styles.bottomButton}\r\n                                    icon={<MaterialIcons style={styles.bottomButtonIcon} name=\"reply\" />}\r\n                                    onPress={onPressReplyTo}\r\n                                />\r\n                                <GroupVoteButton\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    comment={comment}\r\n                                    style={styles.bottomButton}\r\n                                    currentStatus={comment.voteStatus}\r\n                                    vote={GroupVoteStatus.Upvote}\r\n                                />\r\n                                <GroupVoteButton\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    comment={comment}\r\n                                    style={styles.bottomButton}\r\n                                    currentStatus={comment.voteStatus}\r\n                                    vote={GroupVoteStatus.Downvote}\r\n                                />\r\n                            </View>\r\n                        </ReAnimated.View>\r\n                    )}\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (expanded: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            outerContainer: {\r\n                width: \"100%\",\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            outerContainerExpanded: {},\r\n            innerContainer: {\r\n                borderLeftColor: theme.componentBorder,\r\n                padding: 10,\r\n            },\r\n            innerContainerExpanded: {\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n\r\n            bottom: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"flex-end\",\r\n                justifyContent: \"space-between\",\r\n                overflow: \"hidden\",\r\n            },\r\n\r\n            avatarContainer: {\r\n                backgroundColor: theme.accentSlight,\r\n                marginRight: 8,\r\n            },\r\n            topText: {\r\n                fontSize: 13,\r\n                color: themes.light.textLight,\r\n            },\r\n            name: {\r\n                ...(Platform.OS === \"ios\" ? {fontWeight: \"600\"} : {}),\r\n            },\r\n            content: {\r\n                flex: 1,\r\n            },\r\n            text: {\r\n                fontSize: 13,\r\n                color: expanded ? themes.light.text : theme.text,\r\n            },\r\n            textFooter: {\r\n                color: theme.accent,\r\n            },\r\n\r\n            bottomButton: {\r\n                marginHorizontal: 10,\r\n            },\r\n            bottomButtonIcon: {\r\n                fontSize: 24,\r\n                color: themes.light.textLight,\r\n            },\r\n        });\r\n    });\r\n\r\nexport default reduxConnector(withTheme(GroupCommentCard));\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {STATUS_BAR_THEME_OVERRIDES} from \"../constants/route-settings\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\nimport {rootNavigationRef} from \"../navigation/utils\";\r\nimport {ThemeKey, ThemeProps} from \"../types\";\r\n\r\nexport const statusBarRef = React.createRef<ThemedStatusBarClass>();\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ThemeProps;\r\n\r\ntype ThemedStatusBarState = {style: ThemeKey};\r\n\r\nclass ThemedStatusBarClass extends React.Component<ThemedStatusBarProps, ThemedStatusBarState> {\r\n    constructor(props: ThemedStatusBarProps) {\r\n        super(props);\r\n        this.state = {style: this.getDefaultStyle()};\r\n    }\r\n\r\n    private getThemeOverride(): ThemeKey | undefined {\r\n        const routeName = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n        return STATUS_BAR_THEME_OVERRIDES[routeName];\r\n    }\r\n\r\n    private getDefaultStyle(): ThemeKey {\r\n        return this.props.theme.id == \"dark\" ? \"light\" : \"dark\";\r\n    }\r\n\r\n    setStyle(style?: ThemeKey): void {\r\n        const newStyle = style || this.getDefaultStyle();\r\n        if (newStyle !== this.state.style) {\r\n            this.setState({style: newStyle});\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    getStyle(): ThemeKey {\r\n        return this.state.style;\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const nav = rootNavigationRef.current;\r\n\r\n        if (nav) {\r\n            // Ensure we update the status bar theme when needed\r\n            nav.addListener(\"state\", () => {\r\n                const override = this.getThemeOverride();\r\n                this.setStyle(override);\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style} = this.state;\r\n        return <StatusBar style={style} />;\r\n    }\r\n}\r\n\r\nexport default withTheme((props: ThemedStatusBarProps) => <ThemedStatusBarClass ref={statusBarRef} {...props} />);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Keyboard, RefreshControl, ScrollView, StyleSheet, Text, View} from \"react-native\";\r\nimport {Theme, ThemeKey, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus, PostComment} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport CustomModal, {CustomModalClass, ModalActivator} from \"./CustomModal\";\r\nimport CommentTextInput, {CommentTextInputClass} from \"../CommentTextInput\";\r\nimport store from \"../../state/store\";\r\nimport {createPostComment, fetchPostComments, fetchPostCommentsRefresh} from \"../../state/groups/actions\";\r\nimport GroupCommentCard from \"../cards/GroupCommentCard\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport Button from \"../Button\";\r\nimport {CreatePostCommentDto} from \"../../api/dto\";\r\nimport {MAX_COMMENTS_DEPTH} from \"../../constants/config\";\r\nimport Animated, {Easing} from \"react-native-reanimated\";\r\nimport {animateValue} from \"../../polyfills\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport {statusBarRef} from \"../ThemedStatusBar\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\n\r\n// Component props\r\nexport type GroupPostCommentsModalProps = {\r\n    groupId: string;\r\n    post: GroupPost;\r\n    activator?: ModalActivator;\r\n    adminView: boolean;\r\n} & ThemeProps;\r\n\r\ntype GroupPostCommentsModalState = {\r\n    replyingTo: PostComment | null;\r\n    reporting: PostComment | null;\r\n};\r\n\r\nexport class GroupPostCommentsModalClass extends React.Component<\r\n    GroupPostCommentsModalProps,\r\n    GroupPostCommentsModalState\r\n> {\r\n    private formReportRef = React.createRef<QuickFormReportClass>();\r\n    modalRef = React.createRef<CustomModalClass>();\r\n    commentTextInputRef = React.createRef<CommentTextInputClass>();\r\n    collapseCurrentlyExpanded: (() => void) | null = null;\r\n    initialStatusBarStyle: ThemeKey | undefined = undefined;\r\n\r\n    constructor(props: GroupPostCommentsModalProps) {\r\n        super(props);\r\n        this.state = {replyingTo: null, reporting: null};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n\r\n        const {theme} = this.props;\r\n        this.initialStatusBarStyle = statusBarRef.current?.getStyle();\r\n        statusBarRef.current?.setStyle(theme.id === \"dark\" ? \"light\" : \"dark\");\r\n    }\r\n\r\n    private setReplyingTo(comment: PostComment | null): void {\r\n        // If this comment would exceed the maximum depth, respond to its parent instead\r\n        if (comment && comment.parentId && comment.depth >= MAX_COMMENTS_DEPTH) {\r\n            const parent = this.props.post.comments[comment.parentId];\r\n            if (parent) {\r\n                this.setReplyingTo(parent);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({...this.state, replyingTo: comment});\r\n        if (comment !== null) this.commentTextInputRef.current?.focus();\r\n    }\r\n\r\n    private createCommentComponent = (commentId: string, hide: () => void): JSX.Element => {\r\n        const {post, groupId, adminView} = this.props;\r\n\r\n        const comment = post.comments[commentId];\r\n        const children = comment.childrenIds.map((id: string) => this.createCommentComponent(id, hide));\r\n        const childrenContainerRef = React.createRef<CommentChildrenContainer>();\r\n\r\n        return (\r\n            <React.Fragment key={`${groupId}-${post.id}-comment-${comment.id}`}>\r\n                <GroupCommentCard\r\n                    groupId={groupId}\r\n                    post={post}\r\n                    comment={comment}\r\n                    closeComments={hide}\r\n                    onPressReplyTo={() => this.setReplyingTo(comment)}\r\n                    onExpand={(collapse) => {\r\n                        if (this.collapseCurrentlyExpanded) this.collapseCurrentlyExpanded();\r\n                        this.collapseCurrentlyExpanded = collapse;\r\n                        Keyboard.dismiss();\r\n                    }}\r\n                    onCollapse={() => {\r\n                        this.collapseCurrentlyExpanded = null;\r\n                        Keyboard.dismiss();\r\n                    }}\r\n                    toggleChildren={() => childrenContainerRef.current?.toggle()}\r\n                    adminView={adminView}\r\n                    openReportForm={() => {\r\n                        this.setState({reporting: comment});\r\n                        this.formReportRef.current?.open();\r\n                    }}\r\n                />\r\n                <CommentChildrenContainer ref={childrenContainerRef}>{children}</CommentChildrenContainer>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    private fetchFirstComments(): void {\r\n        const {post} = this.props;\r\n\r\n        if (post && post.commentIds.length === 0) {\r\n            const pagination = post.commentsPagination;\r\n            if (pagination.page === 1) this.fetchMore();\r\n        }\r\n    }\r\n\r\n    private fetchMore(): void {\r\n        const {groupId, post} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        if (post && post.commentsPagination.canFetchMore && !post.commentsPagination.fetching)\r\n            dispatch(fetchPostComments(groupId, post.id));\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupPostCommentsModalProps): void {\r\n        const oldPagination = oldProps.post.commentsPagination;\r\n        const pagination = this.props.post.commentsPagination;\r\n        if (oldPagination.page > 1 && pagination.page === 1) this.fetchFirstComments();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {post, groupId, theme} = this.props;\r\n        const {replyingTo} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const pagination = post.commentsPagination;\r\n\r\n        return (\r\n            <>\r\n                <SafeAreaInsetsContext.Consumer>\r\n                    {(insets) => (\r\n                        <CustomModal\r\n                            ref={this.modalRef}\r\n                            animationType=\"slide\"\r\n                            fullHeight\r\n                            statusBarTranslucent\r\n                            modalViewStyle={{\r\n                                paddingTop: insets?.top || 0,\r\n                                //  paddingBottom: insets?.bottom || 0,\r\n                                paddingHorizontal: 0,\r\n                                width: \"100%\",\r\n                                maxWidth: 1000,\r\n                            }}\r\n                            onShow={() => this.fetchFirstComments()}\r\n                            onHide={() => {\r\n                                this.setReplyingTo(null);\r\n                                statusBarRef.current?.setStyle(this.initialStatusBarStyle);\r\n                            }}\r\n                            renderContent={(hide) => (\r\n                                <View style={[styles.container, {paddingBottom: (insets?.bottom || 0) + 30}]}>\r\n                                    <View style={styles.top}>\r\n                                        <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                            <Button\r\n                                                style={styles.topButton}\r\n                                                icon={<MaterialIcons name=\"close\" style={styles.topButtonIcon} />}\r\n                                                onPress={hide}\r\n                                            />\r\n                                        </View>\r\n                                        <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                            <Text style={styles.points}>\r\n                                                {post.score === 0\r\n                                                    ? i18n.t(\"groups.points.zero\")\r\n                                                    : post.score === 1\r\n                                                    ? i18n.t(\"groups.points.singular\")\r\n                                                    : i18n.t(\"groups.points.plural\", {num: post.score})}\r\n                                            </Text>\r\n                                            <GroupVoteButton\r\n                                                groupId={groupId}\r\n                                                post={post}\r\n                                                currentStatus={post.voteStatus}\r\n                                                vote={GroupVoteStatus.Upvote}\r\n                                                style={styles.topButton}\r\n                                                iconStyle={styles.topButtonIcon}\r\n                                            />\r\n                                            <GroupVoteButton\r\n                                                groupId={groupId}\r\n                                                post={post}\r\n                                                currentStatus={post.voteStatus}\r\n                                                vote={GroupVoteStatus.Downvote}\r\n                                                style={styles.topButton}\r\n                                                iconStyle={styles.topButtonIcon}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                    <ScrollView\r\n                                        style={styles.commentsScrollView}\r\n                                        contentContainerStyle={styles.comments}\r\n                                        refreshControl={\r\n                                            <RefreshControl\r\n                                                refreshing={pagination.fetching}\r\n                                                onRefresh={() => dispatch(fetchPostCommentsRefresh(groupId, post.id))}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        {post.commentIds.length === 0 && !pagination.fetching && (\r\n                                            <Text style={styles.noCommentsText}>{i18n.t(\"groups.comments.none\")}</Text>\r\n                                        )}\r\n                                        {post.commentIds.map(\r\n                                            // Render all parent comments (this will recursively render the children)\r\n                                            (id) =>\r\n                                                !post.comments[id].parentId && this.createCommentComponent(id, hide),\r\n                                        )}\r\n                                        {pagination.fetching && post.commentIds.length > 0 && (\r\n                                            <ActivityIndicator size=\"large\" color={theme.accent} />\r\n                                        )}\r\n                                        {pagination.canFetchMore && !pagination.fetching && (\r\n                                            <TouchableOpacity\r\n                                                style={styles.viewMoreComments}\r\n                                                onPress={() => this.fetchMore()}\r\n                                            >\r\n                                                <Text style={styles.viewMoreCommentsText}>\r\n                                                    {i18n.t(\"groups.comments.viewMore\", {\r\n                                                        n: post.commentsCount - post.commentIds.length,\r\n                                                    })}\r\n                                                </Text>\r\n                                            </TouchableOpacity>\r\n                                        )}\r\n                                    </ScrollView>\r\n                                    <View style={styles.bottom}>\r\n                                        <View style={styles.replyToContainer}>\r\n                                            {replyingTo && (\r\n                                                <>\r\n                                                    <Button\r\n                                                        style={styles.replyToClose}\r\n                                                        icon={\r\n                                                            <MaterialIcons\r\n                                                                name=\"close\"\r\n                                                                style={styles.replyToCloseIcon}\r\n                                                            />\r\n                                                        }\r\n                                                        onPress={() => this.setReplyingTo(null)}\r\n                                                    />\r\n                                                    <Text style={styles.replyToText}>\r\n                                                        {i18n.t(\"groups.comments.replyTo\", {\r\n                                                            name: `${replyingTo.creator.firstName} ${replyingTo.creator.lastName}`,\r\n                                                        })}\r\n                                                    </Text>\r\n                                                </>\r\n                                            )}\r\n                                        </View>\r\n                                        <CommentTextInput\r\n                                            ref={this.commentTextInputRef}\r\n                                            onSend={(text) => {\r\n                                                const dto: CreatePostCommentDto = {\r\n                                                    text,\r\n                                                    parentId: replyingTo?.id || undefined,\r\n                                                };\r\n                                                dispatch(createPostComment(groupId, post.id, dto));\r\n                                                this.setState({...this.state, replyingTo: null});\r\n                                            }}\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </SafeAreaInsetsContext.Consumer>\r\n                <QuickFormReport\r\n                    ref={this.formReportRef}\r\n                    entityType={ReportEntityType.COMMENT_ENTITY}\r\n                    entity={this.state.reporting}\r\n                    modalMode\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentChildrenContainer extends React.Component<React.PropsWithChildren<unknown>> {\r\n    private EXTRA_HEIGHT_OFFSET = 100;\r\n    initialHeight = 0;\r\n    maxHeight = new Animated.Value<number>(1e6);\r\n    open = true;\r\n\r\n    toggle(): void {\r\n        this.open = !this.open;\r\n        const toValue = this.open ? this.initialHeight + this.EXTRA_HEIGHT_OFFSET : 0;\r\n        animateValue(this.maxHeight, {toValue, duration: 250, easing: Easing.cubic});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Animated.View\r\n                style={{maxHeight: this.maxHeight, overflow: \"hidden\"}}\r\n                onLayout={(e) => {\r\n                    const h = e.nativeEvent.layout.height;\r\n                    if (h > this.initialHeight) {\r\n                        this.initialHeight = h;\r\n                        if (this.open) this.maxHeight.setValue(this.initialHeight + this.EXTRA_HEIGHT_OFFSET);\r\n                    }\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </Animated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            minHeight: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            padding: 0,\r\n            marginBottom: 15,\r\n        },\r\n        top: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        commentsScrollView: {\r\n            flex: 1,\r\n        },\r\n        comments: {\r\n            paddingBottom: 30,\r\n        },\r\n        bottom: {\r\n            justifyContent: \"space-between\",\r\n            paddingHorizontal: 20,\r\n            paddingTop: 2,\r\n            paddingBottom: 7,\r\n            borderTopWidth: StyleSheet.hairlineWidth,\r\n            borderColor: theme.componentBorder,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n\r\n        points: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            marginRight: 5,\r\n        },\r\n        topButton: {\r\n            padding: 10,\r\n        },\r\n        topButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        noCommentsText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            alignSelf: \"center\",\r\n            textAlign: \"center\",\r\n            marginTop: 25,\r\n            maxWidth: 250,\r\n        },\r\n\r\n        replyToContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        replyToText: {color: theme.textLight},\r\n        replyToClose: {\r\n            padding: 5,\r\n        },\r\n        replyToCloseIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 20,\r\n        },\r\n\r\n        viewMoreComments: {\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 10,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        viewMoreCommentsText: {\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupPostCommentsModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput, FormTextInputProps} from \"./FormTextInput\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {CreateGroupPostDto, RemoteValidationErrors} from \"../../api/dto\";\r\nimport {createGroupPost, updateGroupPost} from \"../../state/groups/actions\";\r\nimport {MAX_POST_LENGTH, VALIDATOR_POST_TEXT} from \"../../validators\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {noop} from \"lodash\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\ntype FormState = {text: string};\r\n\r\n// Use Yup to create the validation schema\r\nconst EditPostFormSchema = Yup.object().shape({\r\n    text: VALIDATOR_POST_TEXT,\r\n});\r\n\r\n// Component props\r\ntype EditPostFormProps = FormProps<FormState> &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string;\r\n        post?: GroupPost; // if not given a post, one will be created instead of editing\r\n        containerStyle?: StyleProp<ViewStyle>;\r\n    };\r\n\r\n// Component state\r\ntype EditPostFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nexport class EditPostFormClass extends React.Component<EditPostFormProps, EditPostFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n    submitForm: () => void = noop;\r\n    textInputRef = React.createRef<FormTextInput>();\r\n\r\n    constructor(props: EditPostFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    private getCreationDto(values: FormState): CreateGroupPostDto {\r\n        const {text} = values;\r\n        return {type: \"simple\", text};\r\n    }\r\n\r\n    private initialState(): FormState {\r\n        const {post} = this.props;\r\n        if (post) return {text: post.text};\r\n        else return {text: \"\"};\r\n    }\r\n\r\n    private submit(values: FormState): void {\r\n        const {groupId, post, onSuccessfulSubmit} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        const dto = this.getCreationDto(values);\r\n\r\n        // Make the promise cancellable to avoid updates when the component has been unmounted\r\n        dispatch(post === undefined ? createGroupPost(groupId, dto) : updateGroupPost(groupId, post.id, dto)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    triggerSubmit(): void {\r\n        this.textInputRef.current?.blur();\r\n        this.submitForm();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, post, containerStyle, localUser} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const createMode = post === undefined;\r\n        const poster = post ? post.creator : localUser?.profile;\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.top}>\r\n                    <ProfileAvatar profile={poster} rounded size={42} containerStyle={styles.creatorAvatar} />\r\n                    <Text style={styles.creatorName}>\r\n                        {poster?.firstName} {poster?.lastName}\r\n                    </Text>\r\n                </View>\r\n                <View style={styles.formContent}>\r\n                    <Formik\r\n                        initialValues={this.initialState()}\r\n                        validationSchema={EditPostFormSchema}\r\n                        validateOnChange\r\n                        validateOnBlur={false}\r\n                        onSubmit={(values) => this.submit(values)}\r\n                    >\r\n                        {(formikProps: FormikProps<FormState>) => {\r\n                            const {\r\n                                handleSubmit,\r\n                                values,\r\n                                errors,\r\n                                touched,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                setFieldError,\r\n                            } = formikProps;\r\n                            const textInputProps: Partial<FormTextInputProps> = {\r\n                                handleChange,\r\n                                handleBlur,\r\n                                wrapperStyle: {flex: 1},\r\n                                style: {flex: 1},\r\n                                inputStyle: {\r\n                                    fontSize: 20,\r\n                                    paddingVertical: 10,\r\n                                    color: theme.text,\r\n                                    textAlignVertical: \"top\",\r\n                                },\r\n                                errorTextStyle: {textAlign: \"center\", marginBottom: 0},\r\n                                placeholderTextColor: theme.inputPlaceholder,\r\n                            };\r\n                            this.setFieldError = setFieldError;\r\n                            this.submitForm = formikProps.submitForm;\r\n\r\n                            return (\r\n                                <>\r\n                                    <Text\r\n                                        style={[\r\n                                            styles.lengthText,\r\n                                            values.text.length > MAX_POST_LENGTH ? styles.lengthTextError : {},\r\n                                        ]}\r\n                                    >\r\n                                        {values.text.length}/{MAX_POST_LENGTH}\r\n                                    </Text>\r\n\r\n                                    <FormTextInput\r\n                                        ref={this.textInputRef}\r\n                                        field=\"text\"\r\n                                        placeholder={i18n.t(\"groups.editPost.contentPlaceholder\")}\r\n                                        error={errors.text}\r\n                                        value={values.text}\r\n                                        touched={touched.text}\r\n                                        multiline\r\n                                        {...textInputProps}\r\n                                    />\r\n\r\n                                    <FormError error={generalError(remoteErrors)} />\r\n\r\n                                    <View style={styles.actionsContainer}>\r\n                                        <FormSubmitButton\r\n                                            onPress={() => handleSubmit()}\r\n                                            style={[styles.button, styles.buttonSubmit]}\r\n                                            skin=\"rounded-filled\"\r\n                                            text={i18n.t(`groups.${createMode ? \"newPost\" : \"editPost\"}.submit`)}\r\n                                            submitting={submitting}\r\n                                        />\r\n                                    </View>\r\n                                </>\r\n                            );\r\n                        }}\r\n                    </Formik>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        formContent: {\r\n            flex: 1,\r\n        },\r\n        creatorAvatar: {\r\n            marginRight: 10,\r\n        },\r\n        creatorName: {\r\n            color: theme.text,\r\n            fontSize: 18,\r\n        },\r\n        lengthText: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n            marginTop: 10,\r\n        },\r\n        lengthTextError: {\r\n            color: theme.error,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        button: {\r\n            flex: 1,\r\n            maxWidth: 300,\r\n        },\r\n        buttonSubmit: {},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(EditPostFormClass));\r\n","import React from \"react\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EditPostForm, {EditPostFormClass} from \"../forms/EditPostForm\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nexport type EditPostModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string; post?: GroupPost};\r\n\r\nexport class EditPostModalClass extends React.Component<EditPostModalProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n    editPostFormRef = React.createRef<EditPostFormClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, theme, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const createMode = post === undefined;\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                animationType=\"slide\"\r\n                nonDismissable\r\n                fullWidth\r\n                fullHeight\r\n                statusBarTranslucent\r\n                modalViewStyle={{paddingVertical: 0, paddingHorizontal: 0}}\r\n                renderContent={(hide) => (\r\n                    <SafeAreaInsetsContext.Consumer>\r\n                        {(insets) => (\r\n                            <>\r\n                                <View style={[styles.top, {paddingTop: insets?.top}]}>\r\n                                    <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                        <TouchableOpacity style={styles.topButton} onPress={hide}>\r\n                                            <MaterialIcons name=\"arrow-back\" style={styles.topButtonIcon} />\r\n                                        </TouchableOpacity>\r\n                                        <Text style={styles.title}>\r\n                                            {i18n.t(`groups.${createMode ? \"newPost\" : \"editPost\"}.title`)}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        style={styles.topButton}\r\n                                        onPress={() => this.editPostFormRef.current?.triggerSubmit()}\r\n                                    >\r\n                                        <MaterialIcons\r\n                                            name={createMode ? \"send\" : \"check\"}\r\n                                            style={styles.topButtonIcon}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <EditPostForm\r\n                                    ref={this.editPostFormRef}\r\n                                    containerStyle={[styles.form, {paddingBottom: insets?.bottom}]}\r\n                                    groupId={groupId}\r\n                                    post={post}\r\n                                    onSuccessfulSubmit={hide}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </SafeAreaInsetsContext.Consumer>\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            paddingVertical: 5,\r\n            marginBottom: 10,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        title: {\r\n            fontSize: 18,\r\n            color: themes.dark.text,\r\n        },\r\n        topButton: {\r\n            padding: 10,\r\n            marginRight: 5,\r\n        },\r\n        topButtonIcon: {\r\n            fontSize: 24,\r\n            color: themes.dark.text,\r\n        },\r\n        form: {\r\n            width: \"90%\",\r\n            flex: 1,\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditPostModalClass);\r\n","import * as React from \"react\";\r\nimport {AvatarProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = {profile?: UserProfile; loading?: boolean} & AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    showEnlarged() {\r\n        this.setState({...this.state, enlarged: true});\r\n    }\r\n\r\n    hideEnlarged() {\r\n        this.setState({...this.state, enlarged: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, profile, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.showEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <ProfileAvatar\r\n                    profile={profile}\r\n                    {...avatarProps}\r\n                    {...(avatarProps.source || profile?.avatarUrl ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </ProfileAvatar>\r\n                <CustomModal\r\n                    visible={enlarged}\r\n                    onHide={() => this.hideEnlarged()}\r\n                    fullWidth\r\n                    noBackground\r\n                    backdropOpacity={0.5}\r\n                    modalViewStyle={styles.modal}\r\n                    renderContent={() => (\r\n                        <ProfileAvatar\r\n                            profile={profile}\r\n                            source={avatarProps.source}\r\n                            containerStyle={styles.enlargedAvatarContainer}\r\n                            avatarStyle={styles.enlargedAvatar}\r\n                            activeOpacity={0.8}\r\n                            onPress={() => this.hideEnlarged()}\r\n                            rounded\r\n                        />\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            aspectRatio: 1,\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {navigateToGroup, navigateToProfile} from \"../navigation/utils\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {Group} from \"../model/groups\";\r\nimport Button from \"./Button\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport LocalImage from \"./LocalImage\";\r\nimport {GroupMemberStatus} from \"../api/dto\";\r\nimport store from \"../state/store\";\r\n\r\n// Component props\r\ntype PostHeaderProps = {\r\n    profile: UserProfile | null;\r\n    subtitle?: string | null;\r\n    group: Group | null;\r\n    isFeed?: boolean;\r\n    openPostMenu?: () => void;\r\n} & ThemeProps;\r\n\r\nclass PostHeader extends React.Component<PostHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {profile, subtitle, isFeed, group, openPostMenu, theme} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const profileName = profile ? `${profile.firstName} ${profile.lastName}` : \"\";\r\n        const name = isFeed ? (group ? group.name : \"\") : profileName;\r\n\r\n        const toGroup = () => group && group.myStatus === GroupMemberStatus.Approved && navigateToGroup(group.id);\r\n        const toProfile = () => profile && navigateToProfile(profile.id, store.getState());\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.left}>\r\n                    {isFeed ? (\r\n                        <TouchableOpacity onPress={toGroup}>\r\n                            {group && group.cover && (\r\n                                <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                            )}\r\n                            {group && !group.cover && (\r\n                                <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                            )}\r\n                        </TouchableOpacity>\r\n                    ) : (\r\n                        <EnlargeableAvatar\r\n                            profile={profile || undefined}\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            rounded\r\n                        />\r\n                    )}\r\n\r\n                    <View>\r\n                        <TouchableOpacity onPress={isFeed ? toGroup : toProfile}>\r\n                            <Text style={styles.name}>{name}</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        {isFeed && (\r\n                            <TouchableOpacity style={{flexDirection: \"row\", alignItems: \"center\"}} onPress={toProfile}>\r\n                                <EnlargeableAvatar\r\n                                    profile={profile || undefined}\r\n                                    size={20}\r\n                                    containerStyle={styles.avatarContainerSmall}\r\n                                    rounded\r\n                                />\r\n                                <Text style={styles.subtitle}>{profileName}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                        <Text style={styles.subtitle}>{subtitle}</Text>\r\n                    </View>\r\n                </View>\r\n                <Button\r\n                    style={styles.menuButton}\r\n                    icon={<MaterialCommunityIcons name=\"dots-horizontal\" style={styles.menuButtonIcon} />}\r\n                    onPress={openPostMenu}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n        },\r\n        left: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSlight,\r\n            marginRight: 10,\r\n        },\r\n        avatarContainerSmall: {\r\n            backgroundColor: theme.accentSlight,\r\n            marginRight: 5,\r\n        },\r\n        name: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 13,\r\n            color: theme.textLight,\r\n        },\r\n        menuButton: {\r\n            paddingHorizontal: 10,\r\n            paddingBottom: 10,\r\n        },\r\n        menuButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        groupCover: {\r\n            width: 45,\r\n            height: 45,\r\n            borderRadius: 45,\r\n            marginRight: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PostHeader);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deleteGroupPost} from \"../../state/groups/actions\";\r\nimport {GroupPost} from \"../../model/groups\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\n\r\nexport type DeletePostConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string; post: GroupPost};\r\n\r\nexport class DeletePostConfirmModalClass extends React.Component<DeletePostConfirmModalProps> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, post, theme, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.deletePost.title\")}\r\n                text={i18n.t(\"groups.deletePost.text\")}\r\n                icon={(props) => <FontAwesome name=\"warning\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        // No need to hide the modal since it will be unmounted anyway\r\n                        onPress: () => dispatch(deleteGroupPost(groupId, post.id)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeletePostConfirmModalClass);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group, GroupPost} from \"../model/groups\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu, {ActionMenuClass, ActionMenuItem} from \"./ActionMenu\";\r\nimport i18n from \"i18n-js\";\r\nimport EditPostModal, {EditPostModalClass} from \"./modals/EditPostModal\";\r\nimport DeletePostConfirmModal, {DeletePostConfirmModalClass} from \"./modals/DeletePostConfirmModal\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"./forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {GroupRole} from \"../api/dto\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\nexport type GroupPostMenuProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype GroupPostMenuState = {post: GroupPost | null; group: Group | null};\r\n\r\nexport class GroupPostMenuClass extends React.Component<GroupPostMenuProps, GroupPostMenuState> {\r\n    private actionMenuRef = React.createRef<ActionMenuClass>();\r\n    private editPostModalRef = React.createRef<EditPostModalClass>();\r\n    private deletePostModalRef = React.createRef<DeletePostConfirmModalClass>();\r\n    private reportFormRef = React.createRef<QuickFormReportClass>();\r\n\r\n    constructor(props: GroupPostMenuProps) {\r\n        super(props);\r\n        this.state = {post: null, group: null};\r\n    }\r\n\r\n    show(group: Group, post: GroupPost): void {\r\n        this.actionMenuRef.current?.show();\r\n        this.setState({...this.state, group, post});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localUser} = this.props;\r\n        const {post, group} = this.state;\r\n\r\n        const isLocalUser = post && post.creator.id === localUser?.id;\r\n        const isAdmin = group && group.myRole == GroupRole.Admin;\r\n\r\n        const editAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"edit\" />,\r\n            text: i18n.t(\"groups.editPost.title\"),\r\n            onSelect: () => this.editPostModalRef.current?.show(),\r\n        };\r\n        const deleteAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"delete\" />,\r\n            text: i18n.t(\"groups.deletePost.title\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.deletePostModalRef.current?.show(),\r\n        };\r\n        const reportAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"report\" />,\r\n            text: i18n.t(\"groups.reportPost\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.reportFormRef.current?.open(),\r\n        };\r\n\r\n        const actions: ActionMenuItem[] = [];\r\n\r\n        if (isLocalUser) actions.push(editAction);\r\n        if (isLocalUser || isAdmin) actions.push(deleteAction);\r\n        if (!isLocalUser) actions.push(reportAction);\r\n        actions.push({preset: \"close\"});\r\n\r\n        return (\r\n            <>\r\n                <ActionMenu ref={this.actionMenuRef} title={i18n.t(\"groups.postMenu.title\")} actions={actions} />\r\n                {post && <EditPostModal ref={this.editPostModalRef} groupId={post.groupId} post={post} />}\r\n                {post && <DeletePostConfirmModal ref={this.deletePostModalRef} groupId={post.groupId} post={post} />}\r\n                {post && (\r\n                    <QuickFormReport ref={this.reportFormRef} entity={post} entityType={ReportEntityType.POST_ENTITY} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupPostMenuClass));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, StyleSheet, Text, View} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupPost, GroupVoteStatus} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupPostCommentsModal, {GroupPostCommentsModalClass} from \"../modals/GroupPostCommentsModal\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport EditPostModal, {EditPostModalClass} from \"../modals/EditPostModal\";\r\nimport PostHeader from \"../PostHeader\";\r\nimport {formatPostDate} from \"../../model/utils\";\r\nimport GroupVoteButton from \"../GroupVoteButton\";\r\nimport {fetchGroup} from \"../../state/groups/actions\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport GroupPostMenu, {GroupPostMenuClass} from \"../GroupPostMenu\";\r\nimport {ReadMore} from \"../ReadMore\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\ntype GroupPostCardProps = {post: GroupPost | null; isFeed?: boolean} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\nclass GroupPostCard extends React.Component<GroupPostCardProps> {\r\n    commentsModalRef = React.createRef<GroupPostCommentsModalClass>();\r\n    editPostModalRef = React.createRef<EditPostModalClass>();\r\n    menuRef = React.createRef<GroupPostMenuClass>();\r\n\r\n    openComments(): void {\r\n        this.commentsModalRef.current?.show();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.fetchGroupIfNeeded();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupPostCardProps): void {\r\n        const {post} = this.props;\r\n\r\n        // If the post has changed\r\n        if (post && (!oldProps.post || oldProps.post.id !== post.id)) this.fetchGroupIfNeeded();\r\n    }\r\n\r\n    private fetchGroupIfNeeded(): void {\r\n        const {post, groupsDict, dispatch} = this.props;\r\n        if (post) {\r\n            const groupId = post.groupId;\r\n            if (!groupsDict[groupId]) (dispatch as MyThunkDispatch)(fetchGroup(groupId));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {post, isFeed, groupsDict, theme} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        // const fromLocal = post && localUser && post.creator.id === localUser.id;\r\n        const groupId = post?.groupId || null;\r\n        const group = groupId ? groupsDict[groupId] || null : null;\r\n        const isAdmin = group?.myRole == GroupRole.Admin;\r\n\r\n        return (\r\n            <TouchableOpacity style={styles.container} activeOpacity={0.9}>\r\n                <View style={styles.top}>\r\n                    <PostHeader\r\n                        profile={post?.creator || null}\r\n                        subtitle={post && formatPostDate(post)}\r\n                        group={group}\r\n                        isFeed={isFeed}\r\n                        openPostMenu={() => group && post && this.menuRef.current?.show(group, post)}\r\n                    />\r\n                </View>\r\n                {post && (\r\n                    <ReadMore\r\n                        numberOfLines={5}\r\n                        renderTruncatedFooter={(handlePress) => (\r\n                            <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                <Text style={[styles.postText, styles.textFooter]}>... {i18n.t(\"showMore\")}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                        renderRevealedFooter={(handlePress) => (\r\n                            <TouchableOpacity activeOpacity={0.7} onPress={handlePress}>\r\n                                <Text style={[styles.postText, styles.textFooter]}>{i18n.t(\"showLess\")}</Text>\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    >\r\n                        <Text style={styles.postText}>{post?.text}</Text>\r\n                    </ReadMore>\r\n                )}\r\n                <View style={styles.bottom}>\r\n                    <TouchableOpacity onPress={() => this.openComments()}>\r\n                        <Text style={styles.bottomText}>\r\n                            {post\r\n                                ? post.score === 0\r\n                                    ? i18n.t(\"groups.points.zero\")\r\n                                    : post.score === 1\r\n                                    ? i18n.t(\"groups.points.singular\")\r\n                                    : i18n.t(\"groups.points.plural\", {num: post.score})\r\n                                : \"\"}\r\n                        </Text>\r\n                        <Text style={styles.bottomText}>\r\n                            {post &&\r\n                                i18n.t(\r\n                                    `groups.comments.${\r\n                                        post.commentsCount === 0\r\n                                            ? \"zero\"\r\n                                            : post.commentsCount === 1\r\n                                            ? \"singular\"\r\n                                            : \"plural\"\r\n                                    }`,\r\n                                    {num: post.commentsCount},\r\n                                )}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {groupId && post && (\r\n                        <View style={{flexDirection: \"row\"}}>\r\n                            <GroupVoteButton\r\n                                groupId={groupId}\r\n                                post={post}\r\n                                currentStatus={post.voteStatus}\r\n                                vote={GroupVoteStatus.Upvote}\r\n                                style={styles.bottomButton}\r\n                                iconStyle={styles.bottomButtonIcon}\r\n                            />\r\n                            <GroupVoteButton\r\n                                groupId={groupId}\r\n                                post={post}\r\n                                currentStatus={post.voteStatus}\r\n                                vote={GroupVoteStatus.Downvote}\r\n                                style={styles.bottomButton}\r\n                                iconStyle={styles.bottomButtonIcon}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {groupId && post && (\r\n                    <>\r\n                        <GroupPostCommentsModal\r\n                            ref={this.commentsModalRef}\r\n                            groupId={groupId}\r\n                            post={post}\r\n                            adminView={isAdmin}\r\n                        />\r\n                        <EditPostModal ref={this.editPostModalRef} groupId={groupId} post={post} />\r\n                    </>\r\n                )}\r\n                <GroupPostMenu ref={this.menuRef} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 10,\r\n        },\r\n        top: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        bottom: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: 10,\r\n        },\r\n\r\n        postText: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            lineHeight: 21,\r\n        },\r\n        textFooter: {\r\n            color: theme.accent,\r\n        },\r\n\r\n        bottomText: {\r\n            fontSize: 13,\r\n            color: theme.textLight,\r\n        },\r\n        bottomButton: {\r\n            marginLeft: 15,\r\n            padding: 5,\r\n        },\r\n        bottomButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupPostCard));\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme} from \"../types\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {CustomTooltipProps} from \"./CustomTooltip.native\";\r\nimport themes from \"../constants/themes\";\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity activeOpacity={0.5} onPress={() => this.modalRef.current?.show()}>\r\n                    {this.props.children}\r\n                </TouchableOpacity>\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    onHide={() => this.setState({...this.state, shown: false})}\r\n                    modalViewStyle={styles.container}\r\n                    renderContent={() => <Text style={styles.text}>{text}</Text>}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const tooltipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n            fontSize: 14,\r\n            color: themes.light.text,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            paddingHorizontal: 20,\r\n            width: 250,\r\n            paddingVertical: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {GroupPost} from \"../model/groups\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport {GROUPS_POSTS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {fetchPostsFeed, refreshFetchedMyGroups, refreshFetchedPostsFeed} from \"../state/groups/actions\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport GroupPostCard from \"./cards/GroupPostCard\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    pagination: state.groups.feedPagination,\r\n    postIds: state.groups.postsFeedIds,\r\n    posts: state.groups.postsFeed,\r\n}));\r\n\r\n// Component props\r\nexport type PostsFeedViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        navigation: NavigationProp<never>;\r\n        top?: JSX.Element;\r\n    };\r\n\r\nclass PostsFeedView extends React.Component<PostsFeedViewProps> {\r\n    render() {\r\n        const {pagination, postIds, posts, top, navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <InfiniteScroller\r\n                top={\r\n                    <>\r\n                        {top}\r\n                        <View style={styles.titleWrapper}>\r\n                            <CustomTooltip text={i18n.t(\"groups.feed.help\")}>\r\n                                <MaterialIcons style={styles.feedTooltipIcon} name=\"help-outline\" />\r\n                            </CustomTooltip>\r\n                            <Text style={styles.title}>{i18n.t(\"groups.feed.title\")}</Text>\r\n                        </View>\r\n                    </>\r\n                }\r\n                navigation={navigation}\r\n                fetchLimit={GROUPS_POSTS_FETCH_LIMIT}\r\n                fetchMore={() => dispatch(fetchPostsFeed())}\r\n                fetching={pagination.fetching}\r\n                canFetchMore={pagination.canFetchMore}\r\n                currentPage={pagination.page}\r\n                refreshOnFocus\r\n                items={postIds.map((id) => posts[id])}\r\n                id={(post: GroupPost): string => post.id}\r\n                hideScrollIndicator\r\n                endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noMorePosts\")}</Text>}\r\n                noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noPosts\")}</Text>}\r\n                refresh={() => {\r\n                    dispatch(refreshFetchedMyGroups());\r\n                    dispatch(refreshFetchedMyGroups(true));\r\n                    dispatch(refreshFetchedPostsFeed());\r\n                }}\r\n                renderItem={(post: GroupPost) => <GroupPostCard key={post.id} post={post} isFeed />}\r\n                // Compensate for the top\r\n                progressViewOffset={250}\r\n                keyboardShouldPersistTaps=\"handled\"\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.text,\r\n        },\r\n        noResultsText: {\r\n            color: theme.textLight,\r\n            fontSize: 16,\r\n        },\r\n        feedTooltipIcon: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(PostsFeedView));\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport InfiniteScroller from \"./InfiniteScroller\";\r\nimport {fetchMyGroups, refreshFetchedMyGroups} from \"../state/groups/actions\";\r\nimport {GROUPS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {Group} from \"../model/groups\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport MyGroupCard from \"./cards/MyGroupCard\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    invites: state.groups.myGroupInvites,\r\n    groupsDict: state.groups.groupsDict,\r\n    pagination: state.groups.myGroupInvitesPagination,\r\n}));\r\n\r\n// Component props\r\nexport type GroupInvitesViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {navigation: NavigationProp<never>};\r\n\r\nclass GroupInvitesView extends React.Component<GroupInvitesViewProps> {\r\n    render() {\r\n        const {theme, invites, groupsDict, pagination, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const hasInvites = invites.length > 0;\r\n\r\n        return (\r\n            <View style={[styles.container, !hasInvites && {display: \"none\"}]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"groups.invites\")}</Text>\r\n                </View>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchMyGroups(true))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={invites.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    horizontal\r\n                    hideScrollIndicator\r\n                    refreshOnFocus\r\n                    noResultsComponent={<></>}\r\n                    refresh={() => dispatch(refreshFetchedMyGroups(true))}\r\n                    renderItem={(group: Group) => <MyGroupCard key={group.id} group={group} isInvite />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 20,\r\n            backgroundColor: theme.cardBackground,\r\n            marginVertical: 20,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            marginBottom: 20,\r\n            paddingHorizontal: 15,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {paddingHorizontal: 15},\r\n\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            maxWidth: 200,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupInvitesView));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport {MatchSuccessModalClass} from \"../../components/modals/MatchSuccessModal\";\r\nimport MyGroupsView from \"../../components/MyGroupsView\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport PostsFeedView from \"../../components/PostsFeedView\";\r\nimport GroupInvitesView from \"../../components/GroupInvitesView\";\r\n\r\n// Component props\r\ntype TabGroupsScreenProps = StackScreenProps<TabGroupsRoot, \"TabGroupsScreen\">;\r\n\r\nclass TabGroupsScreen extends React.Component<TabGroupsScreenProps> {\r\n    scrollerRef = React.createRef<InfiniteScroller<UserProfile>>();\r\n    successModalRef = React.createRef<MatchSuccessModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const nav = (this.props.navigation as unknown) as NavigationProp<never>;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <PostsFeedView\r\n                    top={\r\n                        <>\r\n                            <MyGroupsView navigation={nav} />\r\n                            <GroupInvitesView navigation={nav} />\r\n                        </>\r\n                    }\r\n                    navigation={nav}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabGroupsScreen;\r\n","import React from \"react\";\r\nimport {TextStyle, StyleSheet, StyleProp, Text, View} from \"react-native\";\r\nimport {CheckBox, CheckBoxProps} from \"react-native-elements\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedCheckBoxProps = {\r\n    value: boolean;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n} & Partial<CheckBoxProps>;\r\n\r\nconst staticStyle = StyleSheet.create({\r\n    wrapper: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    label: {\r\n        flex: 1,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\n/**\r\n * An improved CheckBox that supports better styling and displays validation errors.\r\n */\r\nexport class ValidatedCheckBox extends React.Component<ValidatedCheckBoxProps> {\r\n    static defaultProps = {\r\n        untouched: false,\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        labelStyle: [],\r\n        errorTextStyle: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            untouched,\r\n            error,\r\n            value,\r\n            label,\r\n            wrapperStyle,\r\n            labelStyle,\r\n            errorStyle,\r\n            errorTextStyle,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={[staticStyle.wrapper, wrapperStyle, error ? errorStyle : {}]}>\r\n                    <CheckBox checked={value} {...otherProps} />\r\n                    {label && <Text style={[staticStyle.label, labelStyle]}>{label}</Text>}\r\n                </View>\r\n                {showErrorText && !untouched && error && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ValidatedCheckBox, ValidatedCheckBoxProps} from \"../ValidatedCheckBox\";\r\n\r\n// Component props\r\nexport type FormCheckBoxProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    setFieldValue: (field: string, value: boolean, shouldValidate?: boolean) => void;\r\n    setFieldTouched: (field: string, isTouched?: boolean, shouldValidate?: boolean) => void;\r\n} & ValidatedCheckBoxProps;\r\n\r\n/**\r\n * An improved CheckBox for less verbose Formik usage.\r\n */\r\nexport class FormCheckBox extends React.Component<FormCheckBoxProps> {\r\n    static defaultProps = {\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        labelStyle: [],\r\n        errorTextStyle: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {field, touched, setFieldValue, setFieldTouched, error, value, ...otherProps} = this.props;\r\n        return (\r\n            <ValidatedCheckBox\r\n                error={touched ? error : undefined}\r\n                value={value}\r\n                untouched={!touched}\r\n                {...otherProps}\r\n                onPress={() => {\r\n                    setFieldValue(field, !value);\r\n                    setFieldTouched(field, true);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"./FormTextInput\";\r\nimport {getFormCheckBoxStyleProps, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {CreateGroupDto, RemoteValidationErrors} from \"../../api/dto\";\r\nimport {createGroup} from \"../../state/groups/actions\";\r\nimport Button from \"../Button\";\r\nimport {FormCheckBox} from \"./FormCheckBox\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_GROUP_NAME} from \"../../validators\";\r\n\r\ntype FormState = {name: string; visible: boolean; requiresApproval: boolean};\r\n\r\nconst initialState = (): FormState => ({name: \"\", visible: false, requiresApproval: false});\r\n\r\n// Use Yup to create the validation schema\r\nconst CreateGroupFormSchema = Yup.object().shape({\r\n    name: VALIDATOR_GROUP_NAME,\r\n});\r\n\r\n// Component props\r\ntype CreateGroupFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>; onCancel?: () => void};\r\n\r\n// Component state\r\ntype CreateGroupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass CreateGroupForm extends React.Component<CreateGroupFormProps, CreateGroupFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: CreateGroupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    private getCreationDto(values: FormState): CreateGroupDto {\r\n        const {name, visible, requiresApproval} = values;\r\n        return {\r\n            name,\r\n            visible,\r\n            requiresApproval,\r\n            description: \"\",\r\n        };\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        const dto = this.getCreationDto(values);\r\n\r\n        (store.dispatch as MyThunkDispatch)(createGroup(dto)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle, onCancel} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.titleWrapper}>\r\n                    <MaterialIcons name=\"group\" style={styles.titleIcon} />\r\n                    <Text style={styles.title}>{i18n.t(\"groups.create.title\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={CreateGroupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                            setFieldValue,\r\n                            setFieldTouched\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        const checkboxProps = {setFieldValue, setFieldTouched, ...getFormCheckBoxStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"name\"\r\n                                    placeholder={i18n.t(\"groups.create.name\")}\r\n                                    error={errors.name}\r\n                                    value={values.name}\r\n                                    touched={touched.name}\r\n                                    label={i18n.t(\"groups.create.name\")}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormCheckBox\r\n                                    field=\"visible\"\r\n                                    error={errors.visible}\r\n                                    value={values.visible}\r\n                                    touched={touched.visible}\r\n                                    label={i18n.t(\"groups.create.visible\")}\r\n                                    {...checkboxProps}\r\n                                />\r\n                                <Text style={styles.fieldDescription}>\r\n                                    {i18n.t(`groups.create.visibleDescription.${values.visible}`)}\r\n                                </Text>\r\n\r\n                                <FormCheckBox\r\n                                    field=\"requiresApproval\"\r\n                                    error={errors.requiresApproval}\r\n                                    value={values.requiresApproval}\r\n                                    touched={touched.requiresApproval}\r\n                                    label={i18n.t(\"groups.create.requireApproval\")}\r\n                                    {...checkboxProps}\r\n                                />\r\n                                <Text style={styles.fieldDescription}>\r\n                                    {i18n.t(`groups.create.requireApprovalDescription.${values.requiresApproval}`)}\r\n                                </Text>\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            if (onCancel) onCancel();\r\n                                        }}\r\n                                        style={[styles.button, styles.buttonCancel]}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[styles.button, styles.buttonSubmit]}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"groups.create.submit\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            marginBottom: 20,\r\n        },\r\n        titleIcon: {\r\n            fontSize: 32,\r\n            color: theme.textLight,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginLeft: 10,\r\n        },\r\n        fieldDescription: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            marginBottom: 20,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 30,\r\n        },\r\n        button: {flex: 1},\r\n        buttonCancel: {marginRight: 10},\r\n        buttonSubmit: {marginLeft: 10},\r\n    });\r\n});\r\n\r\nexport default withTheme(CreateGroupForm);\r\n","import React from \"react\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport CreateGroupForm from \"../forms/CreateGroupForm\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\n\r\nexport type CreateGroupModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nexport class CreateGroupModalClass extends React.Component<CreateGroupModalProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {...otherProps} = this.props;\r\n\r\n        return (\r\n            <SafeAreaInsetsContext.Consumer>\r\n                {(insets) => (\r\n                    <CustomModal\r\n                        ref={this.modalRef}\r\n                        animationType=\"slide\"\r\n                        nonDismissable\r\n                        fullWidth\r\n                        fullHeight\r\n                        statusBarTranslucent\r\n                        modalViewStyle={{\r\n                            paddingTop: 30 + (insets?.top || 0),\r\n                            paddingBottom: 30 + (insets?.bottom || 0),\r\n                            paddingHorizontal: 30,\r\n                        }}\r\n                        renderContent={(hide) => <CreateGroupForm onCancel={hide} onSuccessfulSubmit={hide} />}\r\n                        {...otherProps}\r\n                    />\r\n                )}\r\n            </SafeAreaInsetsContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CreateGroupModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type GroupJoinRequestSentModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nexport class GroupJoinRequestSentModalClass extends React.Component<GroupJoinRequestSentModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.joinRequestSent.title\")}\r\n                text={i18n.t(\"groups.joinRequestSent.text\")}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[{preset: \"confirm\"}]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupJoinRequestSentModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\n\r\nexport type GroupJoinedModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport class GroupJoinedModalClass extends React.Component<GroupJoinedModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.groupJoined.title\")}\r\n                text={i18n.t(\"groups.groupJoined.text\", {name: group.name})}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[\r\n                    {preset: \"confirm\"},\r\n                    {\r\n                        backgroundColor: theme.accent,\r\n                        text: i18n.t(\"groups.groupJoined.viewGroup\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            navigateToGroup(group.id);\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupJoinedModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport type GroupDescriptionModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {group: Group; onJoinGroup: () => void};\r\n\r\nexport class GroupDescriptionModalClass extends React.Component<GroupDescriptionModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, onJoinGroup, ...otherProps} = this.props;\r\n\r\n        const descriptionText = group.description.length > 0 ? group.description : i18n.t(\"groups.description.none\");\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={group.name}\r\n                text={descriptionText}\r\n                additionalContent={(hide, textProps) => (\r\n                    <>\r\n                        {group.requiresApproval && (\r\n                            <Text {...textProps}>{i18n.t(\"groups.create.requireApproval\")}</Text>\r\n                        )}\r\n                    </>\r\n                )}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        backgroundColor: theme.accent,\r\n                        text: i18n.t(\"groups.join\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            onJoinGroup();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupDescriptionModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, Image} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport store from \"../../state/store\";\r\nimport {joinGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport GroupJoinRequestSentModal, {GroupJoinRequestSentModalClass} from \"../modals/GroupJoinRequestSentModal\";\r\nimport GroupJoinedModal, {GroupJoinedModalClass} from \"../modals/GroupJoinedModal\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeableLooks, SwipeActionContainer} from \"./SwipeableCard\";\r\nimport GroupDescriptionModal, {GroupDescriptionModalClass} from \"../modals/GroupDescriptionModal\";\r\nimport LocalImage from \"../LocalImage\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype GroupExploreCardProps = {\r\n    group: Group | null;\r\n    style?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupExploreCard extends React.Component<GroupExploreCardProps> {\r\n    descriptionModalRef = React.createRef<GroupDescriptionModalClass>();\r\n    requestSentModalRef = React.createRef<GroupJoinRequestSentModalClass>();\r\n    joinedModalRef = React.createRef<GroupJoinedModalClass>();\r\n    cardRef = React.createRef<SwipeableCardClass>();\r\n\r\n    private join(): void {\r\n        const {group} = this.props;\r\n\r\n        if (group) {\r\n            (store.dispatch as MyThunkDispatch)(joinGroup(group));\r\n\r\n            if (group.requiresApproval) this.requestSentModalRef.current?.show();\r\n            else this.joinedModalRef.current?.show();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const looks: Partial<SwipeableLooks> = {verticalSpacing: 5, sideMargin: 15};\r\n        const status = group?.myStatus;\r\n        const statusTextKey = \"groups.explore.statusText\";\r\n\r\n        const canRequestJoin =\r\n            status !== GroupMemberStatus.Approved &&\r\n            status !== GroupMemberStatus.Banned &&\r\n            status !== GroupMemberStatus.Pending;\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.cardRef}\r\n                looks={looks}\r\n                renderRightActions={() => <SwipeActionContainer side=\"right\" looks={looks} fullCardWidth />}\r\n                style={styles.card}\r\n                {...(canRequestJoin ? {onPress: () => this.descriptionModalRef.current?.show()} : {})}\r\n            >\r\n                {group && group.cover && (\r\n                    <Image style={styles.groupCover} source={{uri: group.cover}} resizeMode=\"cover\" />\r\n                )}\r\n                {(!group || !group.cover) && (\r\n                    <LocalImage style={styles.groupCover} imageKey=\"group-placeholder\" resizeMode=\"cover\" />\r\n                )}\r\n                <BlurView style={styles.blurView} tint=\"dark\" intensity={10} />\r\n\r\n                <View style={styles.innerContent}>\r\n                    {group && (\r\n                        <Text style={styles.groupName} numberOfLines={2}>\r\n                            {group.name}\r\n                        </Text>\r\n                    )}\r\n                    <View style={styles.subtitleContainer}>\r\n                        {status === GroupMemberStatus.Pending ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.pending`)}</Text>\r\n                                <MaterialIcons name=\"check\" style={styles.statusSpecificIcon} />\r\n                            </>\r\n                        ) : status === GroupMemberStatus.Banned ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.banned`)}</Text>\r\n                                <MaterialIcons name=\"block\" style={[styles.statusSpecificIcon, {color: theme.error}]} />\r\n                            </>\r\n                        ) : status === GroupMemberStatus.Invited || status === GroupMemberStatus.InvitedByAdmin ? (\r\n                            <>\r\n                                <Text style={styles.statusSpecific}>{i18n.t(`${statusTextKey}.invited`)}</Text>\r\n                                <MaterialIcons name=\"person-add\" style={styles.statusSpecificIcon} />\r\n                            </>\r\n                        ) : (\r\n                            group &&\r\n                            group.description.length > 0 && (\r\n                                <Text style={styles.groupDescription} numberOfLines={1}>\r\n                                    {group.description}\r\n                                </Text>\r\n                            )\r\n                        )}\r\n                    </View>\r\n                </View>\r\n\r\n                <GroupJoinRequestSentModal\r\n                    ref={this.requestSentModalRef}\r\n                    onHide={() => this.cardRef.current?.collapse()}\r\n                />\r\n                {group && (\r\n                    <>\r\n                        <GroupDescriptionModal\r\n                            ref={this.descriptionModalRef}\r\n                            group={group}\r\n                            onJoinGroup={() => this.join()}\r\n                        />\r\n                        <GroupJoinedModal\r\n                            ref={this.joinedModalRef}\r\n                            group={group}\r\n                            onHide={() => this.cardRef.current?.collapse()}\r\n                        />\r\n                    </>\r\n                )}\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        card: {\r\n            backgroundColor: theme.cardBackground,\r\n            height: 75,\r\n        },\r\n        blurView: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        groupCover: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        innerContent: {\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 10,\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n        },\r\n        groupName: {\r\n            color: themes.dark.text,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 16,\r\n        },\r\n        subtitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        groupDescription: {\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n        },\r\n        statusSpecific: {\r\n            fontFamily: \"RalewaySemiBold\",\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n        },\r\n        statusSpecificIcon: {\r\n            color: themes.dark.text,\r\n            fontSize: 14,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupExploreCard);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport {GROUPS_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport BufferedSearchBar from \"../../components/BufferedSearchBar\";\r\nimport {fetchGroups} from \"../../state/groups/actions\";\r\nimport {Group} from \"../../model/groups\";\r\nimport GroupExploreCard from \"../../components/cards/GroupExploreCard\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    pagination: state.groups.pagination,\r\n    groups: state.groups.groups,\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\ntype GroupsExploreScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabGroupsRoot, \"GroupsExploreScreen\">;\r\n\r\n// Component state\r\ntype GroupsExploreScreenState = {\r\n    search: string;\r\n};\r\n\r\nclass GroupsExploreScreen extends React.Component<GroupsExploreScreenProps, GroupsExploreScreenState> {\r\n    constructor(props: GroupsExploreScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groups, groupsDict, pagination, navigation} = this.props;\r\n        const {search} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => dispatch(fetchGroups(search, true))}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_FETCH_LIMIT}\r\n                    fetchMore={() => dispatch(fetchGroups(search))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={groups.map((id) => groupsDict[id])}\r\n                    id={(group: Group): string => group.id}\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.explore.none\")}</Text>}\r\n                    endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.explore.noMore\")}</Text>}\r\n                    refresh={() => dispatch(fetchGroups(search, true))}\r\n                    refreshOnFocus\r\n                    renderItem={(group: Group) => <GroupExploreCard key={group.id} group={group} />}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingBottom: 40,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupsExploreScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport PopUpSelector, {PopUpSelectorActivator} from \"./PopUpSelector\";\r\nimport {PostSortingOrder, POST_SORTING_ORDERS} from \"../model/groups\";\r\n\r\n// Component props\r\nexport type PostSortingOrderPickerProps = {\r\n    order: PostSortingOrder;\r\n    onChange?: (order: PostSortingOrder) => void;\r\n    activator?: PopUpSelectorActivator;\r\n};\r\n\r\nclass PostSortingOrderPicker extends React.Component<PostSortingOrderPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, order, activator} = this.props;\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={POST_SORTING_ORDERS}\r\n                label={(l: string) => i18n.t(`groups.postsSorting.${l}`)}\r\n                selected={order ? [order] : []}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as PostSortingOrder);\r\n                }}\r\n                activator={activator}\r\n                atLeastOne\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostSortingOrderPicker;\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Group, GroupPost, PostSortingOrder} from \"../model/groups\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport EditPostModal from \"./modals/EditPostModal\";\r\nimport InfiniteScroller, {OnScroll} from \"./InfiniteScroller\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport {GROUPS_POSTS_FETCH_LIMIT} from \"../constants/config\";\r\nimport {AppState, MyThunkDispatch, PaginatedState} from \"../state/types\";\r\nimport {fetchGroupPosts, refreshFetchedGroupPosts, setPostSortingOrder} from \"../state/groups/actions\";\r\nimport GroupPostCard from \"./cards/GroupPostCard\";\r\nimport PostSortingOrderPicker from \"./PostSortingOrderPicker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Button from \"./Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    sortOrder: state.groups.postsSortOrder,\r\n}));\r\n\r\n// Component props\r\nexport type GroupPostsViewProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        group: Group | null;\r\n        titleContainerStyle?: StyleProp<ViewStyle>;\r\n        navigation: NavigationProp<never>;\r\n        top?: JSX.Element;\r\n        onRefresh?: () => void;\r\n        onScroll?: OnScroll;\r\n    };\r\n\r\nclass GroupPostsView extends React.Component<GroupPostsViewProps> {\r\n    render(): JSX.Element {\r\n        const {group, top, navigation, titleContainerStyle, sortOrder, onRefresh, onScroll, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const pagination: PaginatedState = group\r\n            ? group.postsPagination\r\n            : {canFetchMore: true, fetching: true, page: 1};\r\n\r\n        return (\r\n            <>\r\n                <InfiniteScroller\r\n                    top={\r\n                        <>\r\n                            {top}\r\n                            <View style={[styles.titleWrapper, titleContainerStyle]}>\r\n                                <Text style={styles.title}>{i18n.t(\"groups.posts\")}</Text>\r\n                                <View style={styles.buttons}>\r\n                                    {group && (\r\n                                        <EditPostModal\r\n                                            groupId={group.id}\r\n                                            activator={(show) => (\r\n                                                <Button\r\n                                                    style={styles.button}\r\n                                                    icon={<MaterialIcons style={styles.buttonIcon} name=\"add\" />}\r\n                                                    onPress={show}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    <PostSortingOrderPicker\r\n                                        order={sortOrder}\r\n                                        activator={(show) => (\r\n                                            <Button\r\n                                                style={styles.button}\r\n                                                icon={<MaterialIcons style={styles.buttonIcon} name=\"sort\" />}\r\n                                                onPress={show}\r\n                                            />\r\n                                        )}\r\n                                        onChange={(order: PostSortingOrder) => {\r\n                                            dispatch(setPostSortingOrder(order));\r\n                                            if (group) dispatch(refreshFetchedGroupPosts(group.id));\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </>\r\n                    }\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUPS_POSTS_FETCH_LIMIT}\r\n                    fetchMore={() => group && dispatch(fetchGroupPosts(group.id))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={group ? group.postIds.map((id) => group.posts[id]) : []}\r\n                    id={(post: GroupPost): string => post.id}\r\n                    hideScrollIndicator\r\n                    endOfItemsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noMorePosts\")}</Text>}\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{i18n.t(\"groups.noPosts\")}</Text>}\r\n                    refresh={() => {\r\n                        if (group) {\r\n                            dispatch(refreshFetchedGroupPosts(group.id));\r\n                            if (onRefresh) onRefresh();\r\n                        }\r\n                    }}\r\n                    renderItem={(post: GroupPost) => <GroupPostCard key={post.id} post={post} />}\r\n                    progressViewOffset={350} // Compensate for the header\r\n                    keyboardShouldPersistTaps=\"handled\"\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                    onScroll={onScroll}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst CONTENT_MAX_WIDTH = 800;\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n            maxWidth: CONTENT_MAX_WIDTH,\r\n            alignSelf: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        buttons: {\r\n            flexDirection: \"row\",\r\n        },\r\n        button: {\r\n            width: 32,\r\n            height: 32,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginHorizontal: 4,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 24,\r\n            color: theme.text,\r\n        },\r\n        noResultsText: {\r\n            color: theme.textLight,\r\n            fontSize: 16,\r\n        },\r\n        itemsContainer: {\r\n            maxWidth: CONTENT_MAX_WIDTH,\r\n            width: \"100%\",\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupPostsView));\r\n","import * as React from \"react\";\r\nimport {\r\n    StyleProp,\r\n    Text,\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    TextInput,\r\n    ActivityIndicator,\r\n} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type EditableTextProps = {\r\n    nonEditable?: boolean;\r\n    text: string;\r\n    placeholder?: string;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    fontSize?: number;\r\n    numberOfLines?: number;\r\n    maxLength?: number;\r\n    onSubmit?: (value: string) => void;\r\n    iconColor?: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype EditableTextState = {editing: boolean; value: string};\r\n\r\nclass EditableText extends React.Component<EditableTextProps, EditableTextState> {\r\n    constructor(props: EditableTextProps) {\r\n        super(props);\r\n        this.state = {editing: false, value: props.text};\r\n    }\r\n\r\n    private edit(): void {\r\n        const {text} = this.props;\r\n        this.setState({...this.state, editing: true, value: text});\r\n    }\r\n\r\n    private submit(): void {\r\n        const {onSubmit} = this.props;\r\n        this.setState({...this.state, editing: false});\r\n        if (onSubmit) onSubmit(this.state.value);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: EditableTextProps): void {\r\n        const {text} = this.props;\r\n        const {value} = this.state;\r\n        if (oldProps.text !== text && text !== value) this.setState({...this.state, value: text});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            nonEditable,\r\n            containerStyle,\r\n            text,\r\n            placeholder,\r\n            fontSize,\r\n            numberOfLines,\r\n            maxLength,\r\n            iconColor,\r\n            theme,\r\n        } = this.props;\r\n        const {editing, value} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const submitting = !editing && value !== text;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                {!editing && (\r\n                    <Text\r\n                        numberOfLines={numberOfLines}\r\n                        style={[styles.text, {fontSize}, text.length === 0 ? styles.textPlaceholder : {}]}\r\n                    >\r\n                        {submitting ? value : text.length === 0 ? placeholder : text}\r\n                    </Text>\r\n                )}\r\n                {editing && (\r\n                    <TextInput\r\n                        style={[styles.input, {fontSize}]}\r\n                        value={value}\r\n                        placeholder={placeholder}\r\n                        autoFocus\r\n                        onChangeText={(v: string) => this.setState({...this.state, value: v})}\r\n                        onSubmitEditing={() => this.submit()}\r\n                        onBlur={() => this.submit()}\r\n                        maxLength={maxLength}\r\n                    />\r\n                )}\r\n                {submitting && (\r\n                    <View style={styles.button}>\r\n                        <ActivityIndicator size=\"small\" color={theme.text} />\r\n                    </View>\r\n                )}\r\n                {!submitting && (\r\n                    <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                            if (!nonEditable) {\r\n                                if (editing) this.submit();\r\n                                else this.edit();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!nonEditable && (\r\n                            <MaterialIcons\r\n                                style={[styles.buttonIcon, {color: iconColor || theme.textLight}]}\r\n                                name={editing ? \"check\" : \"edit\"}\r\n                            />\r\n                        )}\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            flex: 1,\r\n        },\r\n        textPlaceholder: {\r\n            color: theme.textLight,\r\n        },\r\n        input: {\r\n            flex: 1,\r\n            fontSize: 16,\r\n        },\r\n        button: {\r\n            width: 32,\r\n            height: 32,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 22,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditableText);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleProp, StyleSheet, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\n\r\n// Component props\r\nexport type ImageEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n    style?: StyleProp<ViewStyle>;\r\n    quality?: number;\r\n    aspect?: [number, number];\r\n};\r\n\r\nclass ImageEditButton extends React.Component<ImageEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            const {quality, aspect} = this.props;\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect,\r\n                    quality,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity style={[styles.button, style]} onPress={() => this.showPicker()}>\r\n                <MaterialIcons style={styles.buttonIcon} name=\"edit\" />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {width: 0, height: 1},\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 1.41,\r\n            elevation: 2,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ImageEditButton);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Image, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Group} from \"../model/groups\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport ImageEditButton from \"./ImageEditButton\";\r\nimport {GROUP_COVER_ASPECT, GROUP_COVER_QUALITY} from \"../constants/config\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {setGroupCover} from \"../state/groups/actions\";\r\nimport {GroupRole} from \"../api/dto\";\r\n\r\n// Component props\r\nexport type GroupCoverProps = ThemeProps & {group: Group | null};\r\n\r\nexport const GROUP_COVER_HEIGHT = 250;\r\n\r\nclass GroupCover extends React.Component<GroupCoverProps> {\r\n    render() {\r\n        const {theme, group} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const showLoading = group?.uploadingCover;\r\n        const showPlaceholder = !showLoading && (!group || !group.cover);\r\n        const allowEditing = group !== null && group.myRole === GroupRole.Admin;\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                {group && group.cover && <Image style={styles.image} source={{uri: group.cover}} resizeMode=\"cover\" />}\r\n                {showPlaceholder && <FontAwesome style={styles.placeholderIcon} name=\"picture-o\" />}\r\n                {showLoading && <ActivityIndicator style={styles.loading} size={42} color={theme.text} />}\r\n                {allowEditing && (\r\n                    <ImageEditButton\r\n                        style={styles.editButton}\r\n                        quality={GROUP_COVER_QUALITY}\r\n                        aspect={GROUP_COVER_ASPECT}\r\n                        onPictureSelected={(imageInfo: ImageInfo) =>\r\n                            group && (store.dispatch as MyThunkDispatch)(setGroupCover(group.id, imageInfo))\r\n                        }\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: \"#0001\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: GROUP_COVER_HEIGHT,\r\n            borderBottomWidth: StyleSheet.hairlineWidth,\r\n            borderBottomColor: theme.componentBorder,\r\n        },\r\n        image: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        placeholderIcon: {\r\n            fontSize: 32,\r\n            color: theme.textLight,\r\n            marginTop: 50,\r\n        },\r\n        editButton: {\r\n            position: \"absolute\",\r\n            bottom: 10,\r\n            right: 10,\r\n        },\r\n        loading: {\r\n            opacity: 0.25,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupCover);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Wave from \"../Wave\";\r\n\r\nexport type WavyHeaderProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    wavePatternIndex?: number | number[] | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WavyHeaderState = {\r\n    headerWidth: number;\r\n    waveTop: number;\r\n};\r\n\r\nexport default class WavyHeader extends React.Component<WavyHeaderProps, WavyHeaderState> {\r\n    constructor(props: WavyHeaderProps) {\r\n        super(props);\r\n        this.state = {\r\n            headerWidth: 0,\r\n            waveTop: props.upsideDown ? 1 : -1,\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown, children, wavePatternIndex} = this.props;\r\n        const {headerWidth, waveTop} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <View\r\n                    style={[{backgroundColor: color, width: \"100%\", zIndex: 10}, style]}\r\n                    onLayout={(layout) => {\r\n                        const {y, height, width} = layout.nativeEvent.layout;\r\n                        this.setState({...this.state, headerWidth: width, waveTop: y + height});\r\n                    }}\r\n                >\r\n                    {children}\r\n                </View>\r\n                {waveTop !== -1 && (\r\n                    <Wave\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: waveTop + (upsideDown ? 1 : -1),\r\n                            width: headerWidth,\r\n                            zIndex: 10,\r\n                        }}\r\n                        color={color}\r\n                        patternIndex={wavePatternIndex || \"random\"}\r\n                        upsideDown={upsideDown}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {fetchGroup} from \"../../state/groups/actions\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\nexport type GroupProviderProps = ConnectedProps<typeof reduxConnector> & {\r\n    groupId?: string | null;\r\n    onGroupReady?: (group: Group) => void;\r\n    children: (props: {group: Group | null}) => React.ReactElement | null;\r\n    redirectIfNotApproved?: boolean;\r\n};\r\n\r\n/**\r\n * This provider receives a group ID and loads the group if needed, passing it to its child.\r\n */\r\nclass GroupProvider extends React.Component<GroupProviderProps> {\r\n    private redirect(): void {\r\n        rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n    }\r\n\r\n    private setGroupReady(group: Group) {\r\n        const {onGroupReady, redirectIfNotApproved} = this.props;\r\n\r\n        if (onGroupReady) onGroupReady(group);\r\n\r\n        if (redirectIfNotApproved) {\r\n            // Redirect away if we're not supposed to be on this group\r\n            if (group.myStatus !== GroupMemberStatus.Approved) this.redirect();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupProviderProps): void {\r\n        const {groupsDict, groupId} = this.props;\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        if (groupId && oldProps.groupId !== groupId) {\r\n            const isGroupLoaded = groupsDict[groupId];\r\n            if (isGroupLoaded) this.setGroupReady(groupsDict[groupId]);\r\n            else {\r\n                dispatch(fetchGroup(groupId)).then((group) => {\r\n                    if (group) this.setGroupReady(group);\r\n                    else this.redirect();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {children, groupId, groupsDict} = this.props;\r\n        const group = groupId ? groupsDict[groupId] || null : null;\r\n        return children({group}) || <></>;\r\n    }\r\n}\r\n\r\nexport default reduxConnector(GroupProvider);\r\n","import React from \"react\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {leaveGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {Text, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type LeaveGroupConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {groupId: string};\r\n\r\nexport type LeaveGroupConfirmModalState = {deleteData: boolean};\r\n\r\nexport class LeaveGroupConfirmModalClass extends React.Component<\r\n    LeaveGroupConfirmModalProps,\r\n    LeaveGroupConfirmModalState\r\n> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: LeaveGroupConfirmModalProps) {\r\n        super(props);\r\n        this.state = {deleteData: false};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {groupId, theme, ...otherProps} = this.props;\r\n        const {deleteData} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.leave.title\")}\r\n                text={i18n.t(\"groups.leave.text\")}\r\n                icon={(props) => <MaterialIcons name=\"exit-to-app\" color={theme.text} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        text: i18n.t(\"ok\"),\r\n                        preset: \"delete\",\r\n                        onPress: async (hide) => {\r\n                            const success = await dispatch(leaveGroup(groupId, deleteData));\r\n                            if (success) hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={(hide, textProps) => (\r\n                    <TouchableOpacity\r\n                        style={styles.checkboxTouchable}\r\n                        onPress={() => this.setState({...this.state, deleteData: !deleteData})}\r\n                    >\r\n                        <CheckBox\r\n                            containerStyle={styles.checkboxContainer}\r\n                            checked={deleteData}\r\n                            onPress={() => this.setState({...this.state, deleteData: !deleteData})}\r\n                        />\r\n                        <Text {...textProps} style={[textProps.style, {fontSize: 14, flex: 1}]}>\r\n                            {i18n.t(\"groups.leave.deleteData\")}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        checkboxTouchable: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LeaveGroupConfirmModalClass);\r\n","import React from \"react\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {deleteGroup} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Group} from \"../../model/groups\";\r\nimport ValidatedTextInput from \"../ValidatedTextInput\";\r\n\r\nexport type DeleteGroupConfirmModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\ntype DeleteGroupConfirmModalState = {inputValue: string; inputCorrect: boolean};\r\n\r\nexport class DeleteGroupConfirmModalClass extends React.Component<\r\n    DeleteGroupConfirmModalProps,\r\n    DeleteGroupConfirmModalState\r\n> {\r\n    private modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: DeleteGroupConfirmModalProps) {\r\n        super(props);\r\n        this.state = {inputValue: \"\", inputCorrect: false};\r\n    }\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n        this.setInput(\"\");\r\n    }\r\n\r\n    private setInput(value: string) {\r\n        const {group} = this.props;\r\n        const inputCorrect = value === group.name;\r\n        this.setState({...this.state, inputValue: value, inputCorrect});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, theme, ...otherProps} = this.props;\r\n        const {inputValue, inputCorrect} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.delete.title\")}\r\n                text={i18n.t(\"groups.delete.text\")}\r\n                icon={(props) => <MaterialIcons name=\"delete-forever\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        text: i18n.t(\"ok\"),\r\n                        preset: \"delete\",\r\n                        disabled: !inputCorrect,\r\n                        onPress: (hide) => {\r\n                            dispatch(deleteGroup(group.id));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                additionalContent={() => (\r\n                    <ValidatedTextInput\r\n                        value={inputValue}\r\n                        onChangeText={(value) => this.setInput(value)}\r\n                        placeholder={group.name}\r\n                        style={styles.input}\r\n                        errorStyle={styles.inputIncorrect}\r\n                        placeholderTextColor={theme.inputPlaceholder}\r\n                        error={inputCorrect ? undefined : \"error\"}\r\n                        showErrorText={false}\r\n                    />\r\n                )}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        input: {\r\n            width: \"100%\",\r\n            height: 42,\r\n            borderRadius: 10,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            fontSize: 16,\r\n            paddingHorizontal: 15,\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        inputIncorrect: {\r\n            borderBottomColor: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteGroupConfirmModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalButton, ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {ValidatedCheckBox} from \"../ValidatedCheckBox\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {getFormCheckBoxStyleProps} from \"../../styles/forms\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {updateGroup} from \"../../state/groups/actions\";\r\n\r\nexport type GroupSettingsModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group};\r\n\r\nexport type GroupSettingsModalState = {visible: boolean; requiresApproval: boolean};\r\n\r\nexport class GroupSettingsModalClass extends React.Component<GroupSettingsModalProps, GroupSettingsModalState> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    constructor(props: GroupSettingsModalProps) {\r\n        super(props);\r\n        this.state = {visible: false, requiresApproval: false};\r\n    }\r\n\r\n    private setStateFromGroup(): void {\r\n        const group = this.props.group;\r\n        this.setState({visible: group.visible, requiresApproval: group.requiresApproval});\r\n    }\r\n\r\n    show(): void {\r\n        this.setStateFromGroup();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: GroupSettingsModalProps): void {\r\n        const group = this.props.group;\r\n        if (group.id !== oldProps.group.id) this.setStateFromGroup();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const isAdmin = group.myRole === GroupRole.Admin;\r\n        const checkboxProps = getFormCheckBoxStyleProps(theme);\r\n\r\n        const buttons: ConfirmationModalButton[] = [];\r\n\r\n        if (isAdmin) {\r\n            buttons.push({preset: \"cancel\"});\r\n            buttons.push({\r\n                backgroundColor: theme.accent,\r\n                text: i18n.t(\"apply\"),\r\n                onPress: (hide) => {\r\n                    hide();\r\n                    dispatch(\r\n                        updateGroup(group.id, {\r\n                            visible: this.state.visible,\r\n                            requiresApproval: this.state.requiresApproval,\r\n                        }),\r\n                    );\r\n                },\r\n            });\r\n        } else {\r\n            buttons.push({preset: \"cancel\", text: i18n.t(\"ok\")});\r\n        }\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.settings.title\")}\r\n                additionalContent={() => (\r\n                    <>\r\n                        <TouchableOpacity\r\n                            onPress={() => isAdmin && this.setState({visible: !this.state.visible})}\r\n                            activeOpacity={0.75}\r\n                        >\r\n                            <ValidatedCheckBox\r\n                                value={this.state.visible}\r\n                                label={i18n.t(\"groups.create.visible\")}\r\n                                onPress={() => isAdmin && this.setState({visible: !this.state.visible})}\r\n                                {...checkboxProps}\r\n                                {...(isAdmin ? {} : {disabled: true})} // this is not in the docs but there is a disabled prop on RNE's CheckBox\r\n                            />\r\n                            <Text style={styles.fieldDescription}>\r\n                                {i18n.t(`groups.create.visibleDescription.${this.state.visible}`)}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity\r\n                            onPress={() => isAdmin && this.setState({requiresApproval: !this.state.requiresApproval})}\r\n                            activeOpacity={0.75}\r\n                        >\r\n                            <ValidatedCheckBox\r\n                                value={this.state.requiresApproval}\r\n                                label={i18n.t(\"groups.create.requireApproval\")}\r\n                                onPress={() =>\r\n                                    isAdmin && this.setState({requiresApproval: !this.state.requiresApproval})\r\n                                }\r\n                                {...checkboxProps}\r\n                                {...(isAdmin ? {} : {disabled: true})}\r\n                            />\r\n                            <Text style={styles.fieldDescription}>\r\n                                {i18n.t(`groups.create.requireApprovalDescription.${this.state.requiresApproval}`)}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    </>\r\n                )}\r\n                justifyText\r\n                buttons={buttons}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        fieldDescription: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            marginBottom: 20,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupSettingsModalClass);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../model/groups\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ActionMenu, {ActionMenuClass, ActionMenuItem} from \"./ActionMenu\";\r\nimport i18n from \"i18n-js\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"./forms/QuickFormReport\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {GroupRole} from \"../api/dto\";\r\nimport LeaveGroupConfirmModal, {LeaveGroupConfirmModalClass} from \"./modals/LeaveGroupConfirmModal\";\r\nimport DeleteGroupConfirmModal, {DeleteGroupConfirmModalClass} from \"./modals/DeleteGroupConfirmModal\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport GroupSettingsModal, {GroupSettingsModalClass} from \"./modals/GroupSettingsModal\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localUser: state.profile.user,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\nexport type GroupSettingsMenuProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype GroupSettingsMenuState = {group: Group | null; actions: ActionMenuItem[]};\r\n\r\nexport class GroupSettingsMenuClass extends React.Component<GroupSettingsMenuProps, GroupSettingsMenuState> {\r\n    private actionMenuRef = React.createRef<ActionMenuClass>();\r\n    private leaveModalRef = React.createRef<LeaveGroupConfirmModalClass>();\r\n    private deleteGroupModalRef = React.createRef<DeleteGroupConfirmModalClass>();\r\n    private reportFormRef = React.createRef<QuickFormReportClass>();\r\n    private settingsModalRef = React.createRef<GroupSettingsModalClass>();\r\n\r\n    constructor(props: GroupSettingsMenuProps) {\r\n        super(props);\r\n        this.state = {group: null, actions: []};\r\n    }\r\n\r\n    show(group: Group): void {\r\n        this.actionMenuRef.current?.show();\r\n        this.setState({...this.state, group});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {group} = this.state;\r\n\r\n        const isAdmin = group && group.myRole == GroupRole.Admin;\r\n\r\n        const leaveAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"exit-to-app\" />,\r\n            text: i18n.t(\"groups.leave.title\"),\r\n            onSelect: () => this.leaveModalRef.current?.show(),\r\n        };\r\n        const manageBansAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"block\" />,\r\n            text: i18n.t(\"groups.members.manageBanned\"),\r\n            onSelect: () =>\r\n                group &&\r\n                rootNavigate(\"TabGroups\", {\r\n                    screen: \"GroupBannedMembersScreen\",\r\n                    params: {groupId: group.id},\r\n                }),\r\n        };\r\n        const manageMembersAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"group\" />,\r\n            text: i18n.t(\"groups.members.manage\"),\r\n            onSelect: () =>\r\n                group &&\r\n                rootNavigate(\"TabGroups\", {\r\n                    screen: \"GroupMembersScreen\",\r\n                    params: {groupId: group.id},\r\n                }),\r\n        };\r\n        const settingsAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"settings\" />,\r\n            text: i18n.t(\"groups.settings.title\"),\r\n            onSelect: () => this.settingsModalRef.current?.show(),\r\n        };\r\n        const deleteAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"delete\" />,\r\n            text: i18n.t(\"groups.delete.title\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.deleteGroupModalRef.current?.show(),\r\n        };\r\n        const reportAction: ActionMenuItem = {\r\n            icon: (style) => <MaterialIcons style={style} name=\"report\" />,\r\n            text: i18n.t(\"groups.reportPost\"),\r\n            containerStyle: {backgroundColor: theme.error},\r\n            textStyle: {color: \"white\"},\r\n            onSelect: () => this.reportFormRef.current?.open(),\r\n        };\r\n\r\n        const actions: ActionMenuItem[] = [];\r\n\r\n        if (isAdmin) actions.push(manageMembersAction);\r\n        if (isAdmin) actions.push(manageBansAction);\r\n        actions.push(settingsAction);\r\n        actions.push(leaveAction);\r\n        if (isAdmin) actions.push(deleteAction);\r\n        actions.push(reportAction);\r\n        actions.push({preset: \"close\"});\r\n\r\n        return (\r\n            <>\r\n                <ActionMenu ref={this.actionMenuRef} title={i18n.t(\"groups.group\")} actions={actions} />\r\n                {group && (\r\n                    <>\r\n                        <LeaveGroupConfirmModal ref={this.leaveModalRef} groupId={group.id} />\r\n                        <DeleteGroupConfirmModal ref={this.deleteGroupModalRef} group={group} />\r\n                        <GroupSettingsModal ref={this.settingsModalRef} group={group} />\r\n                        <QuickFormReport\r\n                            ref={this.reportFormRef}\r\n                            entity={group}\r\n                            entityType={ReportEntityType.GROUP_ENTITY}\r\n                        />\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupSettingsMenuClass));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport GroupSettingsMenu, {GroupSettingsMenuClass} from \"../GroupSettingsMenu\";\r\nimport {statusBarRef} from \"../ThemedStatusBar\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        groupsDict: state.groups.groupsDict,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\n// Component props\r\nexport type GroupScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n    };\r\n\r\ntype GroupScreenHeaderState = {transparent: boolean};\r\n\r\nexport class GroupScreenHeaderClass extends React.Component<GroupScreenHeaderProps, GroupScreenHeaderState> {\r\n    settingsMenuRef = React.createRef<GroupSettingsMenuClass>();\r\n\r\n    constructor(props: GroupScreenHeaderProps) {\r\n        super(props);\r\n        this.state = {transparent: true};\r\n    }\r\n\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    toggleTransparentMode(transparent: boolean): void {\r\n        if (this.state.transparent !== transparent) {\r\n            this.setState({transparent});\r\n            statusBarRef.current?.setStyle(transparent ? \"light\" : undefined); // setting undefined will use the default depending on the theme\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...stackProps} = this.props;\r\n        const {transparent} = this.state;\r\n\r\n        const group = this.getGroup();\r\n\r\n        return (\r\n            <>\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    backButton\r\n                    noAvatar\r\n                    noShadow\r\n                    noSettingsButton\r\n                    wrapperStyle={[\r\n                        {\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            zIndex: 10,\r\n                        },\r\n                        transparent && {backgroundColor: \"transparent\"},\r\n                    ]}\r\n                    color={transparent ? themes.dark.text : theme.text}\r\n                    buttonBackgroundColor=\"transparent\"\r\n                    overrideTitle={transparent ? \"\" : group?.name || \"\"}\r\n                    navigateBackFallback={(nav) =>\r\n                        nav.navigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}})\r\n                    }\r\n                    rightButtons={\r\n                        group\r\n                            ? [\r\n                                  ({buttonStyle, iconStyle}) => (\r\n                                      <TouchableOpacity\r\n                                          style={buttonStyle}\r\n                                          onPress={() => this.settingsMenuRef.current?.show(group)}\r\n                                      >\r\n                                          <MaterialCommunityIcons\r\n                                              name=\"dots-horizontal\"\r\n                                              style={[iconStyle, {fontSize: 30}]}\r\n                                          />\r\n                                      </TouchableOpacity>\r\n                                  ),\r\n                              ]\r\n                            : []\r\n                    }\r\n                />\r\n                <GroupSettingsMenu ref={this.settingsMenuRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(GroupScreenHeaderClass));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {getRouteParams, rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {fetchGroupMembers, fetchGroupMembersRefresh, updateGroup} from \"../../state/groups/actions\";\r\nimport GroupPostsView from \"../../components/GroupPostsView\";\r\nimport EditableText from \"../../components/EditableText\";\r\nimport GroupCover, {GROUP_COVER_HEIGHT} from \"../../components/GroupCover\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport Button from \"../../components/Button\";\r\nimport WavyHeader from \"../../components/headers/WavyHeader\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\nimport store from \"../../state/store\";\r\nimport GroupScreenHeader, {GroupScreenHeaderClass} from \"../../components/headers/GroupScreenHeader\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype GroupScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype GroupScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nconst APPROBATION_REQ_INDICATOR_SIZE = 12;\r\n\r\nclass GroupScreen extends React.Component<GroupScreenProps, GroupScreenState> {\r\n    headerRef = React.createRef<GroupScreenHeaderClass>();\r\n\r\n    constructor(props: GroupScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    private fetchFirstGroupMembers(group: Group, refresh = false): void {\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        if (refresh) {\r\n            dispatch(fetchGroupMembersRefresh(group.id, GroupMemberStatus.Approved));\r\n            dispatch(fetchGroupMembersRefresh(group.id, GroupMemberStatus.Pending));\r\n        }\r\n        dispatch(fetchGroupMembers(group.id, GroupMemberStatus.Approved));\r\n        dispatch(fetchGroupMembers(group.id, GroupMemberStatus.Pending));\r\n    }\r\n\r\n    private renderTop(group: Group | null): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const pendingMemberIds = group ? group.memberIds[GroupMemberStatus.Pending] : [];\r\n        const isAdmin = group && group.myRole === GroupRole.Admin;\r\n        const numApprovedMembers = group?.numApprovedMembers;\r\n\r\n        return (\r\n            <View style={styles.top}>\r\n                <GroupCover group={group} />\r\n                <WavyHeader color={theme.cardBackground} wavePatternIndex={[2, 4, 6, 7]}>\r\n                    <View style={styles.topInfo}>\r\n                        <EditableText\r\n                            text={group ? group.name : \"\"}\r\n                            nonEditable={!isAdmin}\r\n                            fontSize={22}\r\n                            numberOfLines={1}\r\n                            maxLength={30}\r\n                            onSubmit={(name: string) => group && dispatch(updateGroup(group.id, {name}))}\r\n                        />\r\n                        <EditableText\r\n                            text={group ? group.description : \"\"}\r\n                            placeholder={group ? i18n.t(`groups.description.${isAdmin ? \"placeholder\" : \"none\"}`) : \"\"}\r\n                            nonEditable={!isAdmin}\r\n                            fontSize={16}\r\n                            numberOfLines={4}\r\n                            maxLength={150}\r\n                            onSubmit={(description: string) => group && dispatch(updateGroup(group.id, {description}))}\r\n                        />\r\n                        <View style={styles.members}>\r\n                            <Text style={styles.groupInfo}>\r\n                                {numApprovedMembers === null || numApprovedMembers === undefined\r\n                                    ? \"\"\r\n                                    : numApprovedMembers === 0\r\n                                    ? i18n.t(\"groups.members.zero\")\r\n                                    : numApprovedMembers === 1\r\n                                    ? i18n.t(\"groups.members.singular\")\r\n                                    : i18n.t(\"groups.members.plural\", {num: numApprovedMembers})}\r\n                            </Text>\r\n                            <Button\r\n                                style={styles.membersButton}\r\n                                icon={\r\n                                    <MaterialCommunityIcons\r\n                                        style={styles.membersButtonIcon}\r\n                                        name=\"dots-horizontal-circle-outline\"\r\n                                    />\r\n                                }\r\n                                onPress={() =>\r\n                                    groupId &&\r\n                                    rootNavigate(\"TabGroups\", {screen: \"GroupMembersScreen\", params: {groupId}})\r\n                                }\r\n                            />\r\n                            <Button\r\n                                style={styles.membersButton}\r\n                                icon={\r\n                                    <MaterialCommunityIcons\r\n                                        style={styles.membersButtonIcon}\r\n                                        name=\"account-plus-outline\"\r\n                                    />\r\n                                }\r\n                                onPress={() =>\r\n                                    groupId &&\r\n                                    rootNavigate(\"TabGroups\", {screen: \"GroupInviteScreen\", params: {groupId}})\r\n                                }\r\n                            />\r\n                            {isAdmin && (\r\n                                <Button\r\n                                    style={styles.membersButton}\r\n                                    icon={\r\n                                        <>\r\n                                            <MaterialIcons\r\n                                                style={styles.membersButtonIcon}\r\n                                                name={pendingMemberIds.length > 0 ? \"person\" : \"person-outline\"}\r\n                                            />\r\n                                            {pendingMemberIds.length > 0 && (\r\n                                                <View style={styles.approbationRequestIndicatorContainer}>\r\n                                                    <FontAwesome\r\n                                                        size={APPROBATION_REQ_INDICATOR_SIZE - 4}\r\n                                                        name=\"exclamation\"\r\n                                                        color={themes.dark.text}\r\n                                                    />\r\n                                                </View>\r\n                                            )}\r\n                                        </>\r\n                                    }\r\n                                    onPress={() =>\r\n                                        groupId &&\r\n                                        rootNavigate(\"TabGroups\", {\r\n                                            screen: \"GroupMembersApprovalScreen\",\r\n                                            params: {groupId},\r\n                                        })\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                </WavyHeader>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <GroupProvider\r\n                    groupId={groupId}\r\n                    onGroupReady={(group) =>\r\n                        group.myStatus === GroupMemberStatus.Approved && this.fetchFirstGroupMembers(group)\r\n                    }\r\n                    redirectIfNotApproved\r\n                >\r\n                    {({group}) => (\r\n                        <GroupPostsView\r\n                            top={this.renderTop(group)}\r\n                            navigation={navigation as never}\r\n                            group={group}\r\n                            titleContainerStyle={styles.postsTitle}\r\n                            onRefresh={() => group && this.fetchFirstGroupMembers(group, true)}\r\n                            onScroll={(y) => this.headerRef.current?.toggleTransparentMode(y <= GROUP_COVER_HEIGHT)}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n                <GroupScreenHeader ref={this.headerRef} groupId={getRouteParams(this.props.route).groupId as string} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        top: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            marginBottom: 30,\r\n        },\r\n        topInfo: {\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n            paddingBottom: 5,\r\n        },\r\n        members: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        groupInfo: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        postsTitle: {\r\n            marginTop: 10,\r\n        },\r\n        membersButton: {\r\n            padding: 4,\r\n        },\r\n        membersButtonIcon: {\r\n            fontSize: 24,\r\n            color: theme.textLight,\r\n        },\r\n        approbationRequestIndicatorContainer: {\r\n            position: \"absolute\",\r\n            backgroundColor: theme.error,\r\n            width: APPROBATION_REQ_INDICATOR_SIZE,\r\n            height: APPROBATION_REQ_INDICATOR_SIZE,\r\n            borderRadius: APPROBATION_REQ_INDICATOR_SIZE,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            left: 16,\r\n            bottom: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MyThunkDispatch, PaginatedState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {GROUP_MEMBERS_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../constants/config\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport BufferedSearchBar from \"../components/BufferedSearchBar\";\r\nimport {fetchGroupMembers, fetchGroupMembersRefresh} from \"../state/groups/actions\";\r\nimport {Group, GroupMember} from \"../model/groups\";\r\nimport {GroupMemberStatus} from \"../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport store from \"../state/store\";\r\n\r\n// Component props\r\ntype GroupMembersViewProps = {\r\n    group: Group | null;\r\n    status: GroupMemberStatus;\r\n    navigation: NavigationProp<never>;\r\n    renderItem: (member: GroupMember) => JSX.Element;\r\n    noResultsText?: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype GroupMembersViewState = {\r\n    search: string;\r\n};\r\n\r\nclass GroupMembersView extends React.Component<GroupMembersViewProps, GroupMembersViewState> {\r\n    constructor(props: GroupMembersViewProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, group, status, renderItem, noResultsText, navigation} = this.props;\r\n        const {search} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const pagination: PaginatedState = group\r\n            ? group.membersPaginations[status]\r\n            : {canFetchMore: true, fetching: true, page: 1};\r\n        const memberIds = group ? group.memberIds[status] : [];\r\n        const members = group ? memberIds.map((id) => group.members[id]) : [];\r\n\r\n        const numApproved = group?.numApprovedMembers;\r\n\r\n        return (\r\n            <>\r\n                {numApproved !== null && numApproved !== undefined && numApproved > 0 && (\r\n                    <BufferedSearchBar\r\n                        onBufferedUpdate={() => group && dispatch(fetchGroupMembersRefresh(group.id, status))}\r\n                        bufferDelay={SEARCH_BUFFER_DELAY}\r\n                        placeholder={i18n.t(\"search\")}\r\n                        onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                        value={search}\r\n                        containerStyle={styles.searchBarContainer}\r\n                        inputContainerStyle={styles.searchBarInputContainer}\r\n                        inputStyle={styles.searchBarInput}\r\n                    />\r\n                )}\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={GROUP_MEMBERS_FETCH_LIMIT}\r\n                    fetchMore={() => group && dispatch(fetchGroupMembers(group.id, status, search))}\r\n                    fetching={pagination.fetching}\r\n                    canFetchMore={pagination.canFetchMore}\r\n                    currentPage={pagination.page}\r\n                    items={members}\r\n                    id={(member: GroupMember): string => member.profile.id}\r\n                    hideScrollIndicator\r\n                    noResultsComponent={<Text style={styles.noResultsText}>{noResultsText}</Text>}\r\n                    refresh={() => group && dispatch(fetchGroupMembersRefresh(group.id, status))}\r\n                    refreshOnFocus\r\n                    renderItem={(member: GroupMember) => renderItem(member)}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupMembersView);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport {deleteGroupMember} from \"../../state/groups/actions\";\r\n\r\nexport type DeleteGroupMemberModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile | null; pending?: boolean};\r\n\r\nexport class DeleteGroupMemberModalClass extends React.Component<DeleteGroupMemberModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, pending, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const translationRoot = pending ? \"groups.deletePendingMember\" : \"groups.deleteMember\";\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(`${translationRoot}.title`)}\r\n                text={\r\n                    profile ? i18n.t(`${translationRoot}.text`, {name: `${profile.firstName} ${profile.lastName}`}) : \"\"\r\n                }\r\n                justifyText\r\n                icon={(props) => <MaterialCommunityIcons name=\"account-remove\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(`${translationRoot}.action`),\r\n                        // No need to hide the modal since it will be unmounted anyway\r\n                        onPress: () => profile && dispatch(deleteGroupMember(groupId, profile.id, true)),\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteGroupMemberModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport {GroupMemberStatus} from \"../../api/dto\";\r\n\r\nexport type BanGroupMemberModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile | null; pending?: boolean};\r\n\r\nexport class BanGroupMemberModalClass extends React.Component<BanGroupMemberModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, pending, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const translationRoot = pending ? \"groups.banPendingMember\" : \"groups.banMember\";\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(`${translationRoot}.title`)}\r\n                text={\r\n                    profile ? i18n.t(`${translationRoot}.text`, {name: `${profile.firstName} ${profile.lastName}`}) : \"\"\r\n                }\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"block\" color={theme.error} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(`${translationRoot}.action`),\r\n                        onPress: async (hide) => {\r\n                            if (profile) {\r\n                                const success = await dispatch(\r\n                                    setGroupMemberStatus(groupId, profile.id, GroupMemberStatus.Banned),\r\n                                );\r\n                                if (success) hide();\r\n                            }\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(BanGroupMemberModalClass);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport store from \"../../state/store\";\r\nimport {setGroupMemberRole} from \"../../state/groups/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {GroupRole} from \"../../api/dto\";\r\n\r\nexport type GroupPromoteAdminModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {groupId: string; profile: UserProfile};\r\n\r\nexport class GroupPromoteAdminModalClass extends React.Component<GroupPromoteAdminModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, profile, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.promoteToAdmin.title\")}\r\n                text={i18n.t(\"groups.promoteToAdmin.text\", {name: `${profile.firstName} ${profile.lastName}`})}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons name=\"done\" color={theme.okay} {...props} />}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.promoteToAdmin.action\"),\r\n                        onPress: (hide) => {\r\n                            dispatch(setGroupMemberRole(groupId, profile.id, GroupRole.Admin));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupPromoteAdminModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport i18n from \"i18n-js\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport DeleteGroupMemberModal from \"../modals/DeleteGroupMemberModal\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport BanGroupMemberModal from \"../modals/BanGroupMemberModal\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {deleteGroupMember, setGroupMemberStatus} from \"../../state/groups/actions\";\r\nimport GroupPromoteAdminModal from \"../modals/GroupPromoteAdminModal\";\r\nimport store from \"../../state/store\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localUserId: state.profile.user?.id,\r\n}));\r\n\r\n// Component props\r\ntype GroupMemberCardProps = {\r\n    groupId: string;\r\n    member: GroupMember | null;\r\n    style?: StyleProp<ViewStyle>;\r\n    adminView: boolean;\r\n} & ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\nclass GroupMemberCard extends React.Component<GroupMemberCardProps> {\r\n    render(): JSX.Element {\r\n        const {theme, groupId, localUserId, member, adminView, style, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n        const isLocalUser = member && localUserId === member.profile.id;\r\n        const isMemberAdmin = member && member.role === GroupRole.Admin;\r\n\r\n        const deleteMemberButton = member && (\r\n            <DeleteGroupMemberModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={\r\n                            <MaterialCommunityIcons\r\n                                name=\"account-remove\"\r\n                                style={[styles.controlIcon, {color: theme.error}]}\r\n                            />\r\n                        }\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n                pending={member.status === GroupMemberStatus.Pending}\r\n            />\r\n        );\r\n        const banMemberButton = member && (\r\n            <BanGroupMemberModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={<MaterialIcons name=\"block\" style={[styles.controlIcon, {color: theme.error}]} />}\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n                pending={member.status === GroupMemberStatus.Pending}\r\n            />\r\n        );\r\n        const promoteAdminButton = member && (\r\n            <GroupPromoteAdminModal\r\n                activator={(show) => (\r\n                    <Button\r\n                        style={styles.controlButton}\r\n                        icon={\r\n                            <MaterialCommunityIcons\r\n                                name=\"account-star\"\r\n                                style={[styles.controlIcon, {color: theme.accentTernary}]}\r\n                            />\r\n                        }\r\n                        onPress={show}\r\n                    />\r\n                )}\r\n                groupId={groupId}\r\n                profile={member.profile}\r\n            />\r\n        );\r\n        const acceptMemberButton = member && (\r\n            <Button\r\n                style={styles.controlButton}\r\n                icon={<MaterialIcons name=\"person-add\" style={[styles.controlIcon, {color: theme.accent}]} />}\r\n                onPress={() => dispatch(setGroupMemberStatus(groupId, member.profile.id, GroupMemberStatus.Approved))}\r\n            />\r\n        );\r\n        const unbanMemberButton = member && member.status === GroupMemberStatus.Banned && (\r\n            <Button\r\n                style={styles.controlButton}\r\n                icon={<MaterialIcons name=\"cancel\" style={[styles.controlIcon, {color: theme.accent}]} />}\r\n                onPress={() => dispatch(deleteGroupMember(groupId, member.profile.id, false))}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, style]}\r\n                onPress={() => member && navigateToProfile(member.profile.id, store.getState())}\r\n                {...otherProps}\r\n            >\r\n                {member && (\r\n                    <>\r\n                        <EnlargeableAvatar\r\n                            profile={member.profile}\r\n                            size={50}\r\n                            rounded\r\n                            containerStyle={styles.avatarContainer}\r\n                        />\r\n                        <View style={{flexDirection: \"column\", flex: 1}}>\r\n                            <Text style={styles.name} numberOfLines={2}>\r\n                                {member.profile.firstName} {member.profile.lastName}\r\n                            </Text>\r\n                            {member.role !== \"basic\" && (\r\n                                <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                    {member.role === \"admin\" && (\r\n                                        <MaterialIcons name=\"verified-user\" style={styles.roleIcon} />\r\n                                    )}\r\n                                    <Text style={styles.role}>{i18n.t(`groups.roles.${member.role}`)}</Text>\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n                        <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                            {adminView &&\r\n                                member.status === GroupMemberStatus.Approved &&\r\n                                !isLocalUser &&\r\n                                !isMemberAdmin && (\r\n                                    <>\r\n                                        {promoteAdminButton}\r\n                                        {deleteMemberButton}\r\n                                        {banMemberButton}\r\n                                    </>\r\n                                )}\r\n                            {adminView && member.status === GroupMemberStatus.Banned && <>{unbanMemberButton}</>}\r\n                            {adminView && member.status === GroupMemberStatus.Pending && (\r\n                                <>\r\n                                    {acceptMemberButton}\r\n                                    {deleteMemberButton}\r\n                                    {banMemberButton}\r\n                                </>\r\n                            )}\r\n                        </View>\r\n                    </>\r\n                )}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 10,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n        avatarContainer: {\r\n            marginRight: 10,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        name: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        role: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n        roleIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 20,\r\n            marginRight: 3,\r\n        },\r\n        controlButton: {\r\n            padding: 6,\r\n        },\r\n        controlIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 24,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMemberCard));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupMembersScreenProps = StackScreenProps<TabGroupsRoot, \"GroupMembersScreen\">;\r\n\r\n// Component state\r\ntype GroupMembersScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupMembersScreen extends React.Component<GroupMembersScreenProps, GroupMembersScreenState> {\r\n    constructor(props: GroupMembersScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Approved}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.approved.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupMembersScreen;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {navigateToGroup, rootNavigate} from \"../../navigation/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\nexport type GroupMembersScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n        keepScreenTitle?: boolean;\r\n        noInviteButton?: boolean;\r\n    };\r\n\r\nclass GroupMembersScreenHeaderClass extends React.Component<GroupMembersScreenHeaderProps> {\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {keepScreenTitle, noInviteButton, groupId, ...stackProps} = this.props;\r\n\r\n        const group = this.getGroup();\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton\r\n                noAvatar\r\n                noShadow\r\n                {...(!keepScreenTitle ? {overrideTitle: group ? group.name : \"\"} : {})}\r\n                titleStyle={{fontSize: 18}}\r\n                navigateBackFallback={groupId ? () => navigateToGroup(groupId) : undefined}\r\n                rightButtons={\r\n                    group && !noInviteButton\r\n                        ? [\r\n                              ({buttonStyle, iconStyle}) => (\r\n                                  <TouchableOpacity\r\n                                      style={buttonStyle}\r\n                                      onPress={() =>\r\n                                          group &&\r\n                                          rootNavigate(\"TabGroups\", {\r\n                                              screen: \"GroupInviteScreen\",\r\n                                              params: {groupId: group.id},\r\n                                          })\r\n                                      }\r\n                                  >\r\n                                      <MaterialCommunityIcons name=\"account-plus-outline\" style={iconStyle} />\r\n                                  </TouchableOpacity>\r\n                              ),\r\n                          ]\r\n                        : []\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(\r\n    withTheme((props: GroupMembersScreenHeaderProps) => <GroupMembersScreenHeaderClass {...props} />),\r\n);\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity} from \"react-native\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {Group} from \"../../model/groups\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport i18n from \"i18n-js\";\r\nimport {navigateToGroup} from \"../../navigation/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    groupsDict: state.groups.groupsDict,\r\n}));\r\n\r\n// Component props\r\nexport type GroupInviteScreenHeaderProps = MainHeaderStackProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        groupId: string | null;\r\n    };\r\n\r\nclass GroupInviteScreenHeaderClass extends React.Component<GroupInviteScreenHeaderProps> {\r\n    private getGroup(): Group | null {\r\n        const {groupsDict, groupId} = this.props;\r\n        return groupId ? groupsDict[groupId] || null : null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, groupId, ...stackProps} = this.props;\r\n\r\n        // const group = this.getGroup();\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton\r\n                noAvatar\r\n                noShadow\r\n                noSettingsButton\r\n                overrideTitle={i18n.t(\"groups.inviteNew\")}\r\n                navigateBackFallback={groupId ? () => navigateToGroup(groupId) : undefined}\r\n                rightButtons={[\r\n                    () => (\r\n                        <TouchableOpacity style={{padding: 5}} onPress={() => stackProps.navigation?.goBack()}>\r\n                            <Text style={{fontSize: 16, color: theme.text}}>{i18n.t(\"apply\")}</Text>\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(\r\n    withTheme((props: GroupInviteScreenHeaderProps) => <GroupInviteScreenHeaderClass {...props} />),\r\n);\r\n","import React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal, {ConfirmationModalClass} from \"./ConfirmationModal\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {inviteToGroup} from \"../../state/groups/actions\";\r\nimport {GroupRole} from \"../../api/dto\";\r\nimport {Text} from \"react-native\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {Group} from \"../../model/groups\";\r\n\r\nexport type GroupInviteModalProps = ThemeProps & Partial<CustomModalProps> & {group: Group; profile: UserProfile};\r\n\r\nexport class GroupInviteModalClass extends React.Component<GroupInviteModalProps> {\r\n    modalRef = React.createRef<ConfirmationModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {group, profile, ...otherProps} = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const adminView = group.myRole === GroupRole.Admin;\r\n        const stillNeedsApproval = group.requiresApproval && !adminView;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                ref={this.modalRef}\r\n                title={i18n.t(\"groups.invite.title\")}\r\n                text={i18n.t(\"groups.invite.text\", {name: `${profile.firstName}`})}\r\n                justifyText\r\n                {...(stillNeedsApproval\r\n                    ? {\r\n                          additionalContent: (hide, textProps) => (\r\n                              <Text {...textProps} style={[textProps.style, {fontSize: 14}]}>\r\n                                  {i18n.t(\"groups.invite.approvalDisclaimerInviter\", {name: `${profile.firstName}`})}\r\n                              </Text>\r\n                          ),\r\n                      }\r\n                    : {})}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"groups.invite.invite\"),\r\n                        onPress: (hide) => {\r\n                            dispatch(inviteToGroup(group.id, profile));\r\n                            hide();\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(GroupInviteModalClass);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, StyleProp, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Group} from \"../../model/groups\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateToProfile} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport GroupInviteModal from \"../modals/GroupInviteModal\";\r\nimport store from \"../../state/store\";\r\n\r\n// Component props\r\ntype GroupProfileInviteCardProps = {\r\n    group: Group;\r\n    profile: UserProfile;\r\n    style?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass GroupProfileInviteCard extends React.Component<GroupProfileInviteCardProps> {\r\n    render(): JSX.Element {\r\n        const {theme, group, profile, style, ...otherProps} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[styles.container, style]}\r\n                onPress={() => navigateToProfile(profile.id, store.getState())}\r\n                {...otherProps}\r\n            >\r\n                <EnlargeableAvatar profile={profile} size={50} rounded containerStyle={styles.avatarContainer} />\r\n                <View style={{flexDirection: \"column\", flex: 1}}>\r\n                    <Text style={styles.name} numberOfLines={2}>\r\n                        {profile.firstName} {profile.lastName}\r\n                    </Text>\r\n                </View>\r\n                <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n                    <GroupInviteModal\r\n                        activator={(show) => (\r\n                            <Button\r\n                                style={styles.controlButton}\r\n                                icon={\r\n                                    <MaterialIcons\r\n                                        name=\"person-add\"\r\n                                        style={[styles.controlIcon, {color: theme.accent}]}\r\n                                    />\r\n                                }\r\n                                onPress={show}\r\n                            />\r\n                        )}\r\n                        group={group}\r\n                        profile={profile}\r\n                    />\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 10,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        avatarContainer: {\r\n            marginRight: 10,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        name: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        controlButton: {\r\n            padding: 6,\r\n        },\r\n        controlIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 24,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupProfileInviteCard);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport GroupProfileInviteCard from \"../../components/cards/GroupProfileInviteCard\";\r\nimport {fetchAvailableMatches} from \"../../state/groups/actions\";\r\nimport BufferedSearchBar from \"../../components/BufferedSearchBar\";\r\nimport {SEARCH_BUFFER_DELAY} from \"../../constants/config\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\nimport store from \"../../state/store\";\r\n\r\n// Component props\r\ntype GroupInviteScreenProps = ThemeProps & StackScreenProps<TabGroupsRoot, \"GroupInviteScreen\">;\r\n\r\n// Component state\r\ntype GroupInviteScreenState = {\r\n    search: string;\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupInviteScreen extends React.Component<GroupInviteScreenProps, GroupInviteScreenState> {\r\n    constructor(props: GroupInviteScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\", groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    private fetch(): void {\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const {groupId, search} = this.state;\r\n        if (groupId) dispatch(fetchAvailableMatches(groupId, search));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {search, groupId} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => this.fetch()}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) =>\r\n                        group && (\r\n                            <InfiniteScroller\r\n                                navigation={navigation}\r\n                                fetchLimit={1}\r\n                                fetchMore={() => this.fetch()}\r\n                                fetching={group.availableMatches.fetching}\r\n                                canFetchMore={group.availableMatches.profiles === null}\r\n                                currentPage={1}\r\n                                items={group.availableMatches.profiles || []}\r\n                                id={(p: UserProfile): string => p.id}\r\n                                hideScrollIndicator\r\n                                noResultsComponent={\r\n                                    <Text style={styles.noResultsText}>{i18n.t(\"groups.invite.nobodyToInvite\")}</Text>\r\n                                }\r\n                                refresh={() => this.fetch()}\r\n                                refreshOnFocus\r\n                                renderItem={(p: UserProfile) => (\r\n                                    <GroupProfileInviteCard key={`invite-${p.id}`} group={group} profile={p} />\r\n                                )}\r\n                                itemsContainerStyle={styles.itemsContainer}\r\n                            />\r\n                        )\r\n                    }\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 20,\r\n            marginTop: 10,\r\n        },\r\n        noResultsText: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            marginVertical: 5,\r\n            textAlign: \"center\",\r\n            maxWidth: 300,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(GroupInviteScreen);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupMembersApprovalScreenProps = StackScreenProps<TabGroupsRoot, \"GroupMembersApprovalScreen\">;\r\n\r\n// Component state\r\ntype GroupMembersApprovalScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupMembersApprovalScreen extends React.Component<\r\n    GroupMembersApprovalScreenProps,\r\n    GroupMembersApprovalScreenState\r\n> {\r\n    constructor(props: GroupMembersApprovalScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Pending}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group?.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.approval.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupMembersApprovalScreen;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {TabGroupsRoot} from \"../../navigation/types\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {GroupMember} from \"../../model/groups\";\r\nimport {getRouteParams} from \"../../navigation/utils\";\r\nimport GroupMembersView from \"../../components/GroupMembersView\";\r\nimport {GroupMemberStatus, GroupRole} from \"../../api/dto\";\r\nimport {NavigationProp} from \"@react-navigation/native\";\r\nimport GroupMemberCard from \"../../components/cards/GroupMemberCard\";\r\nimport i18n from \"i18n-js\";\r\nimport GroupProvider from \"../../components/providers/GroupProvider\";\r\n\r\n// Component props\r\ntype GroupBannedMembersScreenProps = StackScreenProps<TabGroupsRoot, \"GroupBannedMembersScreen\">;\r\n\r\n// Component state\r\ntype GroupBannedMembersScreenState = {\r\n    groupId: string | null;\r\n};\r\n\r\nclass GroupBannedMembersScreen extends React.Component<GroupBannedMembersScreenProps, GroupBannedMembersScreenState> {\r\n    constructor(props: GroupBannedMembersScreenProps) {\r\n        super(props);\r\n        this.state = {groupId: null};\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const groupId = getRouteParams(route).groupId as string;\r\n            this.setState({...this.state, groupId});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n        const {groupId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <GroupProvider groupId={groupId} redirectIfNotApproved>\r\n                    {({group}) => (\r\n                        <GroupMembersView\r\n                            group={group}\r\n                            navigation={(navigation as unknown) as NavigationProp<never>}\r\n                            status={GroupMemberStatus.Banned}\r\n                            renderItem={(member: GroupMember) =>\r\n                                group ? (\r\n                                    <GroupMemberCard\r\n                                        key={`${group.id}-${member.profile.id}`}\r\n                                        groupId={group.id}\r\n                                        member={member}\r\n                                        adminView={group.myRole === GroupRole.Admin}\r\n                                    />\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                            noResultsText={i18n.t(\"groups.members.banned.noResults\")}\r\n                        />\r\n                    )}\r\n                </GroupProvider>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupBannedMembersScreen;\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {TabGroupsRoot} from \"./types\";\r\nimport {getRouteParams, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport TabGroupsScreen from \"../screens/groups/TabGroupsScreen\";\r\nimport {CustomModalClass} from \"../components/modals/CustomModal\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {useRef} from \"react\";\r\nimport CreateGroupModal from \"../components/modals/CreateGroupModal\";\r\nimport GroupsExploreScreen from \"../screens/groups/GroupsExploreScreen\";\r\nimport GroupScreen from \"../screens/groups/GroupScreen\";\r\nimport GroupMembersScreen from \"../screens/groups/GroupMembersScreen\";\r\nimport GroupMembersScreenHeader from \"../components/headers/GroupMembersScreenHeader\";\r\nimport GroupInviteScreenHeader from \"../components/headers/GroupInviteScreenHeader\";\r\nimport GroupInviteScreen from \"../screens/groups/GroupInviteScreen\";\r\nimport GroupMembersApprovalScreen from \"../screens/groups/GroupMembersApprovalScreen\";\r\nimport GroupBannedMembersScreen from \"../screens/groups/GroupBannedMembersScreen\";\r\n\r\nconst GroupsStack = createStackNavigator<TabGroupsRoot>();\r\n\r\nexport const GroupsNavigator = (): JSX.Element => {\r\n    const createGroupModalRef = useRef<CustomModalClass>(null);\r\n    const header = (props: StackHeaderProps) => (\r\n        <MainHeader\r\n            {...props}\r\n            rightButtons={[\r\n                (props) => (\r\n                    <TouchableOpacity style={props.buttonStyle} onPress={() => createGroupModalRef.current?.show()}>\r\n                        <MaterialIcons name=\"add\" style={props.iconStyle} />\r\n                    </TouchableOpacity>\r\n                ),\r\n            ]}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <GroupsStack.Navigator headerMode=\"screen\">\r\n                <GroupsStack.Screen\r\n                    name=\"TabGroupsScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"TabGroupsScreen\"),\r\n                        header,\r\n                    })}\r\n                    component={TabGroupsScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupsExploreScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"GroupsExploreScreen\"),\r\n                        header: (headerProps) => <MainHeader {...headerProps} noAvatar backButton />,\r\n                    })}\r\n                    component={GroupsExploreScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupScreen\"\r\n                    options={() => ({\r\n                        title: screenTitle(\"GroupScreen\"),\r\n                        headerShown: false,\r\n                    })}\r\n                    component={GroupScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupMembersScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupMembersScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupMembersScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupBannedMembersScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupBannedMembersScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                keepScreenTitle\r\n                                noInviteButton\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupBannedMembersScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupMembersApprovalScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupMembersApprovalScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupMembersScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupMembersApprovalScreen}\r\n                />\r\n                <GroupsStack.Screen\r\n                    name=\"GroupInviteScreen\"\r\n                    options={(screenProps) => ({\r\n                        title: screenTitle(\"GroupInviteScreen\"),\r\n                        header: (headerProps) => (\r\n                            <GroupInviteScreenHeader\r\n                                groupId={getRouteParams(screenProps.route).groupId as string}\r\n                                {...headerProps}\r\n                            />\r\n                        ),\r\n                    })}\r\n                    component={GroupInviteScreen}\r\n                />\r\n            </GroupsStack.Navigator>\r\n            <CreateGroupModal ref={createGroupModalRef} />\r\n        </>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {MainTabBarIcon} from \"./MainTabBar\";\r\nimport {View, StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport themes from \"../../constants/themes\";\r\n\r\nconst reduxConnector = connect(({messaging}: AppState) => ({\r\n    firstRoom:\r\n        messaging.matchRoomsOrdered.length > 0 ? messaging.matchRooms[messaging.matchRoomsOrdered[0]] : undefined,\r\n    localChatUser: messaging.localChatUser,\r\n}));\r\n\r\nconst INDICATOR_SIZE = 16;\r\n\r\nexport type MessagingTabIconProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps & {focused: boolean; color: string; size: number};\r\n\r\nclass MessagingTabIcon extends React.Component<MessagingTabIconProps> {\r\n    render(): JSX.Element {\r\n        const {firstRoom, localChatUser, theme, ...props} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = firstRoom && firstRoom.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const lastMessage = firstRoom?.lastMessage;\r\n\r\n        // Check if there is an unread message\r\n        // Since we keep rooms ordered by most recent activity, if there is an unread message it will be on the first room\r\n        const isNotRead =\r\n            lastMessage &&\r\n            localUser &&\r\n            lastMessage.user._id !== localUser._id &&\r\n            ((localUser.lastMessageSeenDate !== null && localUser.lastMessageSeenDate < lastMessage.createdAt) ||\r\n                localUser.lastMessageSeenId != lastMessage._id);\r\n\r\n        const icon = <MainTabBarIcon name=\"message\" {...props} />;\r\n        let indicator = <></>;\r\n\r\n        if (isNotRead) {\r\n            indicator = (\r\n                <View style={styles.indicatorContainer}>\r\n                    <FontAwesome size={INDICATOR_SIZE - 4} name=\"exclamation\" color={themes.dark.text} />\r\n                </View>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View>\r\n                {icon}\r\n                {indicator}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        indicatorContainer: {\r\n            position: \"absolute\",\r\n            backgroundColor: theme.error,\r\n            width: INDICATOR_SIZE,\r\n            height: INDICATOR_SIZE,\r\n            borderRadius: INDICATOR_SIZE,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            left: 18,\r\n            bottom: 15,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MessagingTabIcon));\r\n","/* eslint-disable react/display-name */\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {MainNavigatorTabs, RootNavigatorScreens, TabHomeRoot} from \"../navigation/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {BottomTabBarButtonProps, BottomTabBarProps} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {TabMatchingNavigator} from \"./TabMatchingNavigator\";\r\nimport MainTabBar, {MainTabBarIcon} from \"../components/tabs/MainTabBar\";\r\nimport {getFocusedRouteNameFromRoute} from \"@react-navigation/native\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {GroupsNavigator} from \"./GroupsNavigator\";\r\nimport MessagingTabIcon from \"../components/tabs/MessagingTabIcon\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent(): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabMatching\"\r\n            tabBar={(props: BottomTabBarProps) => <MainTabBar {...props} />}\r\n        >\r\n            {/*<TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />*/}\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabGroups\"\r\n                component={GroupsNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"group\" {...props} />,\r\n                    // Override the button to make sure we redirect to the first screen instead of a nested one\r\n                    tabBarButton: (props: BottomTabBarButtonProps) => (\r\n                        <TouchableOpacity\r\n                            {...props}\r\n                            activeOpacity={1}\r\n                            onPress={() => rootNavigate(\"TabGroups\", {screen: \"TabGroupsScreen\"})}\r\n                        />\r\n                    ),\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={({route}) => ({\r\n                    tabBarVisible: getFocusedRouteNameFromRoute(route) !== \"ChatScreen\",\r\n                    tabBarIcon: (props) => <MessagingTabIcon {...props} />,\r\n                    // Override the button to make sure we redirect to the rooms screen instead of a previously open conversation\r\n                    tabBarButton: (props: BottomTabBarButtonProps) => (\r\n                        <TouchableOpacity\r\n                            {...props}\r\n                            activeOpacity={1}\r\n                            onPress={() => rootNavigate(\"TabMessaging\", {screen: \"ChatRoomsScreen\"})}\r\n                        />\r\n                    ),\r\n                })}\r\n            />\r\n            {/*\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n            */}\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\n/*\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n*/\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, StyleProp, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport {animateValue} from \"../polyfills\";\r\n\r\nexport type OnboardingProgressBarProps = {\r\n    index: number;\r\n    style?: StyleProp<ViewStyle>;\r\n    foregroundStyle?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass OnboardingProgressBar extends React.Component<OnboardingProgressBarProps> {\r\n    containerWidth = 0;\r\n    width = new ReAnimated.Value<number>(0);\r\n\r\n    componentDidMount() {\r\n        this.setIndex(this.props.index);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: OnboardingProgressBarProps): void {\r\n        const {index} = this.props;\r\n        if (oldProps.index !== index) this.setIndex(index);\r\n    }\r\n\r\n    private setIndex(index: number) {\r\n        const progress = (index + 1) / ONBOARDING_ORDER.length;\r\n        const targetWidth = progress * this.containerWidth;\r\n\r\n        animateValue(this.width, {\r\n            toValue: targetWidth,\r\n            duration: 150,\r\n            easing: Easing.sin,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, foregroundStyle, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <SafeAreaInsetsContext.Consumer>\r\n                {(insets) => (\r\n                    <View\r\n                        style={[styles.background, {bottom: (insets?.bottom || 0) + 15}, style]}\r\n                        onLayout={(layout) => {\r\n                            this.containerWidth = layout.nativeEvent.layout.width;\r\n                            this.setIndex(this.props.index);\r\n                        }}\r\n                    >\r\n                        <ReAnimated.View style={[styles.foreground, {width: this.width}, foregroundStyle]} />\r\n                    </View>\r\n                )}\r\n            </SafeAreaInsetsContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme, isWideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        background: {\r\n            position: \"absolute\",\r\n            left: isWideDevice ? \"55%\" : \"10%\",\r\n\r\n            width: isWideDevice ? \"40%\" : \"80%\",\r\n            height: 8,\r\n            borderRadius: 8,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        foreground: {\r\n            borderRadius: 8,\r\n            backgroundColor: theme.accent,\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingProgressBar);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport Button from \"./Button\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    settingsModalRef = React.createRef<CustomModalClass>();\r\n\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <View style={styles.titleLeft}>\r\n                        <CheckBox\r\n                            checked={isSomethingSelected}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                            containerStyle={styles.checkboxContainer}\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={styles.offerNameTouchable}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        >\r\n                            <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View style={{flexDirection: \"row\"}}>\r\n                        <TouchableOpacity\r\n                            style={styles.sideButton}\r\n                            onPress={() => this.settingsModalRef.current?.show()}\r\n                        >\r\n                            <FontAwesome style={styles.sideButtonIcon} name=\"gear\" />\r\n                        </TouchableOpacity>\r\n                        <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                            <MaterialIcons style={[styles.sideButton, styles.sideButtonIcon]} name=\"help\" />\r\n                        </CustomTooltip>\r\n                    </View>\r\n                </View>\r\n                {/*isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )*/}\r\n                <CustomModal\r\n                    ref={this.settingsModalRef}\r\n                    modalViewStyle={styles.settingsModal}\r\n                    renderContent={(hide: () => void) => (\r\n                        <>\r\n                            {offer.allowChooseGender && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.genders\")}</InputLabel>\r\n                                    <GenderToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        genders={genders}\r\n                                        onSelect={(selected: Gender[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowFemale: selected.indexOf(\"female\") != -1,\r\n                                                allowMale: selected.indexOf(\"male\") != -1,\r\n                                                allowOther: selected.indexOf(\"other\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n\r\n                            {offer.allowChooseProfileType && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.roles\")}</InputLabel>\r\n                                    <RoleToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        roles={roles}\r\n                                        onSelect={(selected: Role[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                                allowStudent: selected.indexOf(\"student\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            <Button\r\n                                style={styles.settingsModalButton}\r\n                                textStyle={styles.settingsModalButtonText}\r\n                                skin=\"rounded-filled\"\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={hide}\r\n                            />\r\n                        </>\r\n                    )}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        titleLeft: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        offerNameTouchable: {\r\n            flex: 1,\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        sideButton: {\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 5,\r\n        },\r\n        sideButtonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n\r\n        settingsModal: {\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 15,\r\n            alignItems: \"flex-start\",\r\n        },\r\n        settingsModalTargetType: {\r\n            width: \"100%\",\r\n            marginBottom: 10,\r\n        },\r\n        settingsModalButton: {\r\n            height: 38,\r\n            marginHorizontal: 5,\r\n            marginVertical: 0,\r\n            marginTop: 20,\r\n        },\r\n        settingsModalButtonText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {Theme} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n    theme: Theme,\r\n): JSX.Element {\r\n    const styles = onboardingOffersStyle(theme);\r\n    return (\r\n        <>\r\n            <Text style={styles.offerControlPreText}>{i18n.t(\"offersPreText\")}</Text>\r\n            {offers\r\n                .filter((offer: OfferDto) => offer.category == category)\r\n                .map((offer: OfferDto, i: number) => (\r\n                    <OfferControl\r\n                        key={i}\r\n                        offer={offer}\r\n                        value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                        onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                        style={styles.offerControl}\r\n                    />\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.type!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds.map((id) => ({id})),\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.type == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.type == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRoles: Object.keys(onboardingState.staffRoles)\r\n                .filter((k) => onboardingState.staffRoles[k])\r\n                .map((id: string) => ({id})),\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ScrollView, KeyboardAvoidingView, ViewStyle, StyleProp, Alert, Platform} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {logout} from \"../../state/auth/actions\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n    noKeyboardAvoidance?: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string | JSX.Element;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    background?: JSX.Element;\r\n    illustration?: JSX.Element;\r\n    textColor?: string;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nfunction ButtonSpacer(): JSX.Element {\r\n    return <View style={{width: 10, height: 1}}></View>;\r\n}\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            title,\r\n            subtitle,\r\n            index,\r\n            hideNavNext,\r\n            hasNext,\r\n            handleSubmit,\r\n            next,\r\n            containerStyle,\r\n            background,\r\n            illustration,\r\n            textColor,\r\n            noKeyboardAvoidance,\r\n            theme,\r\n        } = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        const wide = layout.isWideDevice;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth containerStyle={styles.root}>\r\n                {wide ? <View style={styles.wideDeviceLeftPanel}>{illustration}</View> : <></>}\r\n                <View style={styles.slideWrapper}>\r\n                    {background}\r\n                    <ScrollView\r\n                        style={styles.slideScrollView}\r\n                        contentContainerStyle={[containerStyle, styles.slideContentWrapper]}\r\n                    >\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"position\"\r\n                            keyboardVerticalOffset={70}\r\n                            enabled={!noKeyboardAvoidance}\r\n                            style={styles.slideContentContainer}\r\n                        >\r\n                            <View style={styles.header}>\r\n                                {title && typeof title === \"string\" && (\r\n                                    <Text style={[styles.title, textColor ? {color: textColor} : {}]}>{title}</Text>\r\n                                )}\r\n                                {title && typeof title !== \"string\" && title}\r\n                                {subtitle && (\r\n                                    <Text style={[styles.subtitle, textColor ? {color: textColor} : {}]}>\r\n                                        {subtitle}\r\n                                    </Text>\r\n                                )}\r\n                            </View>\r\n                            {!wide && illustration}\r\n                            {this.props.children}\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                    <SafeAreaInsetsContext.Consumer>\r\n                        {(insets) => (\r\n                            <View style={[styles.slideNavWrapper, {marginBottom: (insets?.bottom || 0) + 40}]}>\r\n                                <View style={styles.slideNavButtons}>\r\n                                    {hasPrevious && (\r\n                                        <Button\r\n                                            style={[styles.navButton, styles.navButtonBack]}\r\n                                            skin=\"rounded-hollow\"\r\n                                            text={i18n.t(\"onboarding.back\")}\r\n                                            onPress={() => this.props.previous()}\r\n                                        />\r\n                                    )}\r\n                                    {!hasPrevious && (\r\n                                        <Button\r\n                                            style={[styles.navButton, styles.navButtonBack]}\r\n                                            skin=\"rounded-hollow\"\r\n                                            text={i18n.t(\"onboarding.leave\")}\r\n                                            onPress={() => this.quitOnboarding()}\r\n                                        />\r\n                                    )}\r\n                                    {!hideNavNext && hasNext && (\r\n                                        <>\r\n                                            <ButtonSpacer />\r\n                                            <Button\r\n                                                style={styles.navButton}\r\n                                                skin=\"rounded-filled\"\r\n                                                text={i18n.t(\"onboarding.next\")}\r\n                                                onPress={navigateRight}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                    {!hasNext && (\r\n                                        <>\r\n                                            <ButtonSpacer />\r\n                                            <Button\r\n                                                style={styles.navButton}\r\n                                                skin=\"rounded-filled\"\r\n                                                text={i18n.t(\"onboarding.submit\")}\r\n                                                onPress={() => {\r\n                                                    if (handleSubmit) handleSubmit();\r\n                                                    finishOnboarding(store.getState().auth.onboarding);\r\n                                                }}\r\n                                            />\r\n                                        </>\r\n                                    )}\r\n                                </View>\r\n                            </View>\r\n                        )}\r\n                    </SafeAreaInsetsContext.Consumer>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n\r\n    quitOnboarding() {\r\n        const quit = () => store.dispatch(logout());\r\n\r\n        if (Platform.OS === \"web\") {\r\n            quit(); // no alerts on web\r\n        } else {\r\n            Alert.alert(i18n.t(\"onboarding.quit.title\"), i18n.t(\"onboarding.quit.text\"), [\r\n                {\r\n                    text: i18n.t(\"onboarding.quit.cancel\"),\r\n                    style: \"cancel\",\r\n                },\r\n                {text: i18n.t(\"onboarding.quit.yes\"), onPress: quit, style: \"destructive\"},\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard, View} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/forms/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    lastNameInputRef = React.createRef<FormTextInput>();\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <FormTextInput\r\n                                {...textInputProps(\"firstname\")}\r\n                                label={i18n.t(\"firstname\")}\r\n                                placeholder={i18n.t(\"firstname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"next\"\r\n                                blurOnSubmit={false}\r\n                                onSubmitEditing={() => this.lastNameInputRef.current?.focus()}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                {...textInputProps(\"lastname\")}\r\n                                ref={this.lastNameInputRef}\r\n                                label={i18n.t(\"lastname\")}\r\n                                placeholder={i18n.t(\"lastname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"done\"\r\n                                onSubmitEditing={() => handleSubmit()}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgWidth = wide ? 600 : 380;\r\n    const svgHeight = wide ? 350 : 200;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg1 = getLocalSvg(\"woman-holding-phone-2\", () => forceUpdate());\r\n    const Svg2 = getLocalSvg(\"man-holding-phone\", () => forceUpdate());\r\n    const Blob1 = getLocalSvg(\"blob-4\", () => forceUpdate());\r\n    const Blob2 = getLocalSvg(\"blob-5\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                width: svgWidth,\r\n                height: svgHeight,\r\n                alignSelf: \"center\",\r\n            }}\r\n        >\r\n            <Blob1\r\n                style={{position: \"absolute\", left: 0, top: 0}}\r\n                width={svgHeight * (260 / 250)}\r\n                height={svgHeight}\r\n                viewBox=\"0 0 260 250\" // necessary for web\r\n                preserveAspectRatio=\"xMinYMid\"\r\n            />\r\n            <Svg1\r\n                style={{position: \"absolute\", left: svgWidth * 0.15, top: svgHeight * 0.1}}\r\n                width={svgHeight * 0.8 * (140 / 200)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 140 200\"\r\n                preserveAspectRatio=\"xMinYMid\"\r\n            />\r\n            <Blob2\r\n                style={{position: \"absolute\", right: 0}}\r\n                width={svgHeight * (250 / 275)}\r\n                height={svgHeight}\r\n                viewBox=\"0 0 250 275\"\r\n                preserveAspectRatio=\"xMaxYMid\"\r\n            />\r\n            <Svg2\r\n                style={{position: \"absolute\", right: svgWidth * 0.12, top: svgHeight * 0.1}}\r\n                width={svgHeight * 0.8 * (150 / 200)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 150 200\"\r\n                preserveAspectRatio=\"xMaxYMid\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n    disabled?: boolean;\r\n    styleVariant?: ToggleStyleVariant;\r\n};\r\n\r\nfunction GenderToggle(props: GenderToggleProps & ThemeProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender, disabled, styleVariant, theme} = props;\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            disabled={disabled}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggle);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {\r\n    Country,\r\n    CountryCode,\r\n    DARK_THEME,\r\n    DEFAULT_THEME,\r\n    TranslationLanguageCode,\r\n} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onSelect} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (onSelect) onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n                theme={theme.id === \"dark\" ? DARK_THEME : DEFAULT_THEME}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet, StyleProp, ViewStyle, Text} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonValidStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, buttonStyle, buttonValidStyle, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, buttonStyle, nationality ? [styles.buttonOk, buttonValidStyle] : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {!nationality && <Text style={styles.placeholder}>{i18n.t(\"nationalityPicker.placeholder\")}</Text>}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        placeholder: {\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        //const day = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const day = date.getDate() + \"\";\r\n        const formattedDate = `${day} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {TextInput, TextInputProps, View, StyleSheet, StyleProp, TextStyle, ViewStyle, Platform} from \"react-native\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type DateInputProps = {\r\n    date?: Date;\r\n    onChange?: (date?: Date, error?: string) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputStyleFocused?: StyleProp<TextStyle>;\r\n    inputStyleValid?: StyleProp<TextStyle>;\r\n    minimumDate?: Date;\r\n    maximumDate?: Date;\r\n    autoFocus?: boolean;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype DateInputState = {\r\n    year: string;\r\n    month: string;\r\n    day: string;\r\n    touched: boolean;\r\n    error: string | undefined;\r\n    focused1: boolean;\r\n    focused2: boolean;\r\n    focused3: boolean;\r\n};\r\n\r\nconst dateInputProps = (\r\n    ref: React.RefObject<TextInput>,\r\n    value: string,\r\n    maxLength: number,\r\n    next?: React.RefObject<TextInput>,\r\n    onChange?: (v: string) => void,\r\n): TextInputProps => ({\r\n    autoCorrect: false,\r\n    clearTextOnFocus: true,\r\n    keyboardType: \"number-pad\",\r\n    returnKeyType: next ? \"next\" : \"done\",\r\n    value,\r\n    maxLength,\r\n    onSubmitEditing: () => {\r\n        if (next) next.current?.focus();\r\n    },\r\n    onChangeText: (text: string) => {\r\n        text = text.replace(/\\D+/g, \"\"); // only keep numbers\r\n        if (onChange) onChange(text);\r\n        if (text.length == maxLength) {\r\n            if (next) next.current?.focus();\r\n            else ref.current?.blur();\r\n        }\r\n    },\r\n});\r\n\r\nexport class DateInputClass extends React.Component<DateInputProps, DateInputState> {\r\n    constructor(props: DateInputProps) {\r\n        super(props);\r\n        this.state = this.deriveStateFromDate(props.date);\r\n    }\r\n\r\n    input1Ref = React.createRef<TextInput>();\r\n    input2Ref = React.createRef<TextInput>();\r\n    input3Ref = React.createRef<TextInput>();\r\n\r\n    componentDidUpdate(oldProps: DateInputProps): void {\r\n        if (this.props.date != oldProps.date) {\r\n            this.setState({...this.state, ...this.deriveStateFromDate(this.props.date)});\r\n        }\r\n    }\r\n\r\n    focus(): void {\r\n        this.input1Ref.current?.focus();\r\n    }\r\n\r\n    private validDate(): {date?: Date; error?: string} {\r\n        const {year, month, day} = this.state;\r\n        const parsable = year.length >= 4 && month.length > 0 && day.length > 0;\r\n\r\n        if (parsable) {\r\n            try {\r\n                const pyear = parseInt(year);\r\n                const pmonth = parseInt(month) - 1;\r\n                const pday = parseInt(day);\r\n                // Verify that all individual parts of the date are correct.\r\n                if (pyear > 0 && pmonth >= 0 && pmonth < 12 && pday > 0 && pday <= 31) {\r\n                    const date = new Date(pyear, pmonth, pday);\r\n                    const error = this.getError(date);\r\n                    if (error) return {error};\r\n                    else return {date};\r\n                }\r\n            } catch (e) {}\r\n            return {error: \"validation.date.invalid\"};\r\n        } else if (this.state.touched) return {error: \"validation.date.invalid\"};\r\n\r\n        // If one of the fields is empty, we only output an error if the input was touched\r\n        // i.e. it was completed before\r\n        return {};\r\n    }\r\n\r\n    private getError(date: Date): string | undefined {\r\n        const {minimumDate, maximumDate} = this.props;\r\n        if (maximumDate && date > maximumDate) return \"validation.date.tooYoung\";\r\n        else if (minimumDate && date < minimumDate) return \"validation.date.invalid\";\r\n        else return undefined;\r\n    }\r\n\r\n    deriveStateFromDate(date?: Date): DateInputState {\r\n        const year = date?.getFullYear();\r\n        const month = date?.getMonth();\r\n        const day = date?.getDate();\r\n\r\n        return {\r\n            year: year === undefined ? \"\" : year + \"\",\r\n            month: month === undefined ? \"\" : month + 1 + \"\",\r\n            day: day === undefined ? \"\" : day + \"\",\r\n            touched: date !== undefined,\r\n            error: date ? this.getError(date) : undefined,\r\n            focused1: this.state ? this.state.focused1 : false,\r\n            focused2: this.state ? this.state.focused2 : false,\r\n            focused3: this.state ? this.state.focused3 : false,\r\n        };\r\n    }\r\n\r\n    set(values: Partial<DateInputState>): void {\r\n        const {onChange} = this.props;\r\n        this.setState({...this.state, ...values}, () => {\r\n            if (onChange) {\r\n                const {date, error} = this.validDate();\r\n                if (date || error) {\r\n                    onChange(date, error);\r\n                    this.setState({...this.state, touched: true, error});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {inputStyle, containerStyle, autoFocus, theme} = this.props;\r\n        const {year, month, day, touched, error, focused1, focused2, focused3} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const valid = touched && !error;\r\n        const inputStyleValid = valid ? this.props.inputStyleValid : {};\r\n        const inputStyleFocused = [Platform.OS === \"web\" ? {outline: \"none\"} : {}, this.props.inputStyleFocused];\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <View style={styles.containerDay}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input1Ref, day, 2, this.input2Ref, (day) => this.set({day}))}\r\n                        ref={this.input1Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputDay,\r\n                            inputStyle,\r\n                            focused1 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        blurOnSubmit={false}\r\n                        returnKeyType=\"next\"\r\n                        placeholder={i18n.t(\"dateInput.dayPlaceholder\")}\r\n                        autoFocus={autoFocus}\r\n                        onBlur={() => this.setState({focused1: false})}\r\n                        onFocus={() => this.setState({focused1: true})}\r\n                    />\r\n                </View>\r\n                <View style={styles.containerMonth}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input2Ref, month, 2, this.input3Ref, (month) => this.set({month}))}\r\n                        ref={this.input2Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputMonth,\r\n                            inputStyle,\r\n                            focused2 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        blurOnSubmit={false}\r\n                        onSubmitEditing={() => this.input3Ref.current?.focus()}\r\n                        returnKeyType=\"next\"\r\n                        placeholder={i18n.t(\"dateInput.monthPlaceholder\")}\r\n                        onBlur={() => this.setState({focused2: false})}\r\n                        onFocus={() => this.setState({focused2: true})}\r\n                    />\r\n                </View>\r\n                <View style={styles.containerYear}>\r\n                    <TextInput\r\n                        {...dateInputProps(this.input3Ref, year, 4, undefined, (year) => this.set({year}))}\r\n                        ref={this.input3Ref}\r\n                        style={[\r\n                            styles.input,\r\n                            styles.inputYear,\r\n                            inputStyle,\r\n                            focused3 ? inputStyleFocused : {},\r\n                            inputStyleValid,\r\n                        ]}\r\n                        returnKeyType=\"done\"\r\n                        placeholder={i18n.t(\"dateInput.yearPlaceholder\")}\r\n                        onBlur={() => this.setState({focused3: false})}\r\n                        onFocus={() => this.setState({focused3: true})}\r\n                    />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        input: {\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n            paddingHorizontal: 6,\r\n            textAlign: \"center\",\r\n        },\r\n        containerDay: {flex: 1},\r\n        containerMonth: {flex: 1, paddingLeft: 10},\r\n        containerYear: {flex: 2, paddingLeft: 10},\r\n        inputDay: {},\r\n        inputMonth: {},\r\n        inputYear: {},\r\n    });\r\n});\r\n\r\nexport default withTheme(DateInputClass);\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateInput, {DateInputClass, DateInputProps} from \"./DateInput\";\r\n\r\n// Component props\r\nexport type BirthDateInputProps = Omit<Omit<DateInputProps, \"minimumDate\">, \"maximumDate\">;\r\n\r\nconst minDate = new Date(1920, 0, 0);\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nexport class BirthDateInputClass extends React.Component<BirthDateInputProps> {\r\n    dateInputRef = React.createRef<DateInputClass>();\r\n\r\n    focus(): void {\r\n        this.dateInputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const dateInputProps = this.props;\r\n        return <DateInput ref={this.dateInputRef} minimumDate={minDate} maximumDate={maxDate} {...dateInputProps} />;\r\n    }\r\n}\r\n\r\nexport default withTheme(BirthDateInputClass);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport GenderToggle from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {FormattedDate} from \"../../components/FormattedDate\";\r\nimport BirthDateInput from \"../../components/BirthDateInput\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"../../styles/onboarding\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingProfileScreen1Props = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingProfile1FormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen1 extends React.Component<OnboardingProfileScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingProfileScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingProfile1FormState) {\r\n        if (values.birthdate && values.gender && values.nationality && values.educationFields) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                    educationFields: values.educationFields,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n\r\n        const spacing = 30;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile1FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile1FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile1FormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        setFieldTouched,\r\n                    } = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile1.title\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            noKeyboardAvoidance={true}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateInput\r\n                                inputStyle={styles.dateTextInput}\r\n                                inputStyleFocused={styles.dateTextInputFocused}\r\n                                inputStyleValid={styles.dateTextInputValid}\r\n                                onChange={(date, error) => {\r\n                                    if (error) setFieldError(\"birthdate\", error);\r\n                                    else setFieldValue(\"birthdate\", date);\r\n                                    setFieldTouched(\"birthdate\", true);\r\n                                }}\r\n                            />\r\n                            {values.birthdate && !errors.birthdate && (\r\n                                <FormattedDate style={styles.birthdateText} date={values.birthdate} />\r\n                            )}\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                buttonStyle={styles.nationalityButton}\r\n                                buttonValidStyle={styles.nationalityButtonValid}\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                                styleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showChips={true}\r\n                                buttonStyleVariant=\"onboarding\"\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        dateTextInput: {\r\n            height: 48,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            paddingHorizontal: 10,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        dateTextInputFocused: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        dateTextInputValid: {\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        birthdateText: {\r\n            textAlign: \"right\",\r\n            marginTop: 4,\r\n            fontSize: 12,\r\n        },\r\n        nationalityButton: {\r\n            height: 48,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            paddingHorizontal: 10,\r\n            borderBottomWidth: 0,\r\n        },\r\n        nationalityButtonValid: {},\r\n    });\r\n});\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 400 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-3\", forceUpdate);\r\n    const Blob = getLocalSvg(\"blob-6\", forceUpdate);\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -200,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (350 / 360)} height={svgHeight} viewBox=\"0 0 350 360\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.075, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.1, top: svgHeight * 0.28}),\r\n                }}\r\n                width={svgHeight * (wide ? 0.9 : 0.7) * (275 / 385)}\r\n                height={svgHeight * (wide ? 0.9 : 0.7)}\r\n                viewBox=\"0 0 275 385\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingProfileScreen1));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level?: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, level, theme, buttonStyle, buttonStyleVariant} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={LANGUAGE_LEVELS}\r\n                label={(l: string) => i18n.t(`languageLevels.${l}`)}\r\n                placeholder={i18n.t(\"languageLevelPicker.placeholder\")}\r\n                selected={level ? [level] : []}\r\n                buttonStyle={[styles.button, buttonStyle]}\r\n                buttonStyleVariant={buttonStyleVariant}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as LanguageLevel);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            width: 70,\r\n            height: 32,\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LanguageLevelPicker);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle, Text, Alert, TouchableOpacity} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\nimport {ONBOARDING_INPUT_BORDER_RADIUS} from \"../styles/onboarding\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n    pickerButtonStyleVariant?: PickerButtonStyleVariant;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {languages};\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        this.setState({...this.state, languages});\r\n        const hasErrors = languages.filter((l) => !l.level).length > 0;\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length)\r\n            this.onChange(this.state.languages.filter((v, i) => i !== idx));\r\n    }\r\n\r\n    setLanguages(codes: string[]) {\r\n        const levelDict = new Map(this.state.languages.map((l) => [l.code, l.level]));\r\n        const languages = codes.map((code: string) => ({code, level: levelDict.get(code)}));\r\n        this.onChange(languages);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            languages,\r\n        });\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.map((l, i) => (i === idx ? {...l, level} : l));\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style, pickerButtonStyleVariant} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            return (\r\n                <View\r\n                    key={`spoken-languages-input-${sl.code}`}\r\n                    style={[styles.rowContainer, i === 0 ? styles.firstRowContainer : {}]}\r\n                >\r\n                    <View style={styles.languageLabelContainer}>\r\n                        <Text style={styles.languageLabel} numberOfLines={1}>\r\n                            {i18n.t(`languageNames.${sl.code}`)}\r\n                        </Text>\r\n                    </View>\r\n                    <LanguageLevelPicker\r\n                        level={sl.level}\r\n                        buttonStyle={styles.levelPicker}\r\n                        onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                        buttonStyleVariant={pickerButtonStyleVariant}\r\n                    />\r\n                    <TouchableOpacity style={styles.deleteIconContainer} onPress={() => this.removeRow(i)}>\r\n                        <MaterialIcons style={styles.deleteIcon} name=\"close\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <View style={style}>\r\n                <LanguagePicker\r\n                    multiple={true}\r\n                    languages={languages.map((l) => l.code || \"\")}\r\n                    style={styles.languagePicker}\r\n                    onChange={(languageCodes: string[]) => {\r\n                        if (languageCodes.length > MAX_SPOKEN_LANGUAGES)\r\n                            Alert.alert(`You cannot select more than ${MAX_SPOKEN_LANGUAGES} languages`);\r\n                        this.setLanguages(languageCodes.slice(0, MAX_SPOKEN_LANGUAGES));\r\n                    }}\r\n                    showChips={false}\r\n                    buttonStyleVariant={pickerButtonStyleVariant}\r\n                />\r\n                {rows}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: 32,\r\n            marginVertical: 3,\r\n        },\r\n        firstRowContainer: {\r\n            marginTop: 10,\r\n        },\r\n        deleteIconContainer: {\r\n            width: 30,\r\n            height: 30,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.error,\r\n            borderRadius: 100,\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 16,\r\n            color: themes.dark.text,\r\n        },\r\n        languagePicker: {},\r\n        languageLabelContainer: {\r\n            flex: 1,\r\n            paddingHorizontal: 10,\r\n            backgroundColor: theme.onboardingInputBackground,\r\n            borderRadius: ONBOARDING_INPUT_BORDER_RADIUS,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n        },\r\n        languageLabel: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        levelPicker: {\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS, VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\nimport layout from \"../../constants/layout\";\r\nimport {View} from \"react-native\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingProfileScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingProfileScreen2State = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingProfile2FormState = {\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen2 extends React.Component<OnboardingProfileScreen2Props, OnboardingProfileScreen2State> {\r\n    constructor(props: OnboardingProfileScreen2Props) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    submit(values: OnboardingProfile2FormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages, interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const {hasErrors} = this.state;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile2FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile2FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile2FormState>) => {\r\n                    const {handleSubmit, values, touched, setFieldValue, errors} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile2.title\")}\r\n                            illustration={<Illustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                                pickerButtonStyleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.languages && hasErrors && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.specifyLevel\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n                            {touched.languages && !hasErrors && values.languages.length == 0 && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.atLeastOne\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[]) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                }}\r\n                                showChips={true}\r\n                                buttonStyleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds} />}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Illustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 400 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-3\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-6\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -220,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (350 / 360)} height={svgHeight} viewBox=\"0 0 350 360\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.075, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.1, top: svgHeight * 0.28}),\r\n                }}\r\n                width={svgHeight * (wide ? 0.9 : 0.7) * (275 / 385)}\r\n                height={svgHeight * (wide ? 0.9 : 0.7)}\r\n                viewBox=\"0 0 275 385\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(OnboardingProfileScreen2);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, TouchableOpacity, View, Dimensions} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingRoleScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    type: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const StudentBlob = getLocalSvg(\"blob-9\", () => this.forceUpdate());\r\n        const StudentSvg = getLocalSvg(\"student\", () => this.forceUpdate());\r\n        const StaffBlob = getLocalSvg(\"blob-8\", () => this.forceUpdate());\r\n        const StaffSvg = getLocalSvg(\"staff\", () => this.forceUpdate());\r\n\r\n        let illustration = <></>;\r\n        if (layout.isWideDevice)\r\n            illustration = <LinearGradient style={{width: \"100%\", height: \"100%\"}} colors={[\"#007AC2\", \"#18ADB5\"]} />;\r\n\r\n        const svgHeight = (Dimensions.get(\"window\").height - 280) / 2;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.role.title\")}\r\n                hideNavNext={true}\r\n                illustration={illustration}\r\n                {...this.props}\r\n            >\r\n                <View style={[styles.buttonsContainer, {maxWidth: svgHeight * 1.3}]}>\r\n                    <TouchableOpacity\r\n                        style={{alignSelf: \"flex-start\"}}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.submit({type: \"student\"})}\r\n                    >\r\n                        <StudentBlob width={svgHeight * (300 / 280)} height={svgHeight} viewBox=\"0 0 300 280\" />\r\n                        <StudentSvg\r\n                            style={{position: \"absolute\", left: svgHeight * 0.26, top: svgHeight * 0.1}}\r\n                            width={svgHeight * 0.85 * (200 / 240)}\r\n                            height={svgHeight * 0.85}\r\n                            viewBox=\"0 0 200 240\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={{alignSelf: \"flex-end\", marginTop: -20}}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.submit({type: \"staff\"})}\r\n                    >\r\n                        <StaffBlob width={svgHeight * (290 / 305)} height={svgHeight} viewBox=\"0 0 290 305\" />\r\n                        <StaffSvg\r\n                            style={{position: \"absolute\", right: svgHeight * 0.1, top: svgHeight * 0.12}}\r\n                            width={svgHeight * 0.82 * (210 / 235)}\r\n                            height={svgHeight * 0.82}\r\n                            viewBox=\"0 0 210 235\"\r\n                        />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        buttonsContainer: {\r\n            width: \"100%\",\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleScreen));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Discover;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen1));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Collaborate;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen2));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport layout from \"../../constants/layout\";\r\nimport OfferCategoryIcon from \"../../components/OfferCategoryIcon\";\r\nimport {Dimensions} from \"react-native\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const wide = layout.isWideDevice;\r\n\r\n        const category = OfferCategory.Meet;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory\r\n                        category={category}\r\n                        textStyle={styles.categoryTitleText}\r\n                        fontSize={24}\r\n                        withoutIcon={wide}\r\n                    />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                illustration={\r\n                    wide ? <OfferCategoryIcon category={category} size={Dimensions.get(\"window\").width * 0.4} /> : <></>\r\n                }\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen3));\r\n","import * as React from \"react\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, theme, styleVariant} = this.props;\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                {...getToggleStyleProps(styleVariant, theme)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DegreeToggle);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet, Switch, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport layout from \"../../constants/layout\";\r\nimport {useState} from \"react\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            illustration={<StudentIllustration />}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                                styleVariant=\"onboarding\"\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme, onboardingState, dispatch} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n        const staffRoles = onboardingState.staffRoles;\r\n        const atLeastOne = Object.values(staffRoles).some((v) => v === true);\r\n\r\n        const setValue = (sr: StaffRole, b: boolean) =>\r\n            dispatch(setOnboardingValues({staffRoles: {...staffRoles, [sr]: b}}));\r\n\r\n        const buttons = STAFF_ROLES.map((sr: StaffRole, i: number) => (\r\n            <TouchableOpacity\r\n                key={i}\r\n                style={styles.button}\r\n                activeOpacity={0.6}\r\n                onPress={() => setValue(sr, !staffRoles[sr])}\r\n            >\r\n                <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.buttonIcon} />\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n                <Switch\r\n                    value={staffRoles[sr]}\r\n                    thumbColor={theme.accent}\r\n                    trackColor={{true: theme.accentTernary, false: theme.accentSlight}}\r\n                    onValueChange={(b: boolean) => setValue(sr, b)}\r\n                />\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.roleSpecific1.staff.title\")}\r\n                illustration={<StaffIllustration />}\r\n                hideNavNext={!atLeastOne}\r\n                {...this.props}\r\n            >\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        return (\r\n            <>\r\n                {onboardingState.type === \"student\" && this.studentRender()}\r\n                {onboardingState.type === \"staff\" && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nfunction StudentIllustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 500 : 275;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-4\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-10\", () => forceUpdate());\r\n\r\n    return (\r\n        <View style={[{height: svgHeight}, !wide && {marginLeft: svgHeight * 0.4}]}>\r\n            <Blob width={svgHeight * (405 / 365)} height={svgHeight} viewBox=\"0 0 405 365\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.25, top: svgHeight * 0.1}\r\n                        : {right: -svgHeight * 0.22, top: svgHeight * 0.12}),\r\n                }}\r\n                width={svgHeight * 0.85 * (225 / 320)}\r\n                height={svgHeight * 0.85}\r\n                viewBox=\"0 0 225 320\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction StaffIllustration(): JSX.Element {\r\n    const wide = layout.isWideDevice;\r\n    const svgHeight = wide ? 500 : 300;\r\n\r\n    const [value, setValue] = useState(0);\r\n    const forceUpdate = () => setValue(value + 1);\r\n\r\n    const Svg = getLocalSvg(\"woman-holding-phone-4\", () => forceUpdate());\r\n    const Blob = getLocalSvg(\"blob-11\", () => forceUpdate());\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {height: svgHeight, zIndex: -1},\r\n                !wide && {\r\n                    position: \"absolute\",\r\n                    top: -120,\r\n                    right: -150,\r\n                },\r\n            ]}\r\n        >\r\n            <Blob width={svgHeight * (415 / 450)} height={svgHeight} viewBox=\"0 0 415 450\" />\r\n            <Svg\r\n                style={{\r\n                    position: \"absolute\",\r\n                    ...(wide\r\n                        ? {left: svgHeight * 0.11, top: svgHeight * 0.1}\r\n                        : {left: svgHeight * 0.12, top: svgHeight * 0.06}),\r\n                }}\r\n                width={svgHeight * 0.8 * (225 / 320)}\r\n                height={svgHeight * 0.8}\r\n                viewBox=\"0 0 225 320\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {...otherProps} = this.props;\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"legal.modal.title\")}\r\n                text={i18n.t(\"legal.modal.disclaimer\")}\r\n                justifyText\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"legal.decline\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            });\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {TERMS_AND_CONDITIONS_URL} from \"../../constants/config\";\r\nimport {Linking} from \"expo\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\nimport layout from \"../../constants/layout\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Component props\r\ntype OnboardingLegalSlideProps = ThemeProps &\r\n    OnboardingScreenProps & {title: string; text: string; specialBackground?: boolean};\r\n\r\nclass OnboardingLegalSlide extends React.Component<OnboardingLegalSlideProps> {\r\n    render(): JSX.Element {\r\n        const {theme, title, text, specialBackground, next, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const wide = layout.isWideDevice;\r\n        const gradient = <LinearGradient style={styles.background} colors={[theme.accent, \"#862ADF\"]} />;\r\n        const textColor = specialBackground && !wide ? themes.dark.text : theme.textLight;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={title}\r\n                hideNavNext={true}\r\n                next={next}\r\n                {...(specialBackground && !wide\r\n                    ? {\r\n                          background: gradient,\r\n                          textColor: themes.dark.text,\r\n                      }\r\n                    : {})}\r\n                illustration={wide ? gradient : <></>}\r\n                {...otherProps}\r\n            >\r\n                <Text style={[styles.legalText, {color: textColor}]}>{text}</Text>\r\n                <Text style={[styles.readMoreText, {color: textColor}]}>\r\n                    {i18n.t(\"legal.readMore\")[0]}\r\n                    <TextLink\r\n                        onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                        text={i18n.t(\"legal.readMore\")[1]}\r\n                        style={{fontWeight: \"bold\"}}\r\n                    />\r\n                    {i18n.t(\"legal.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TOSDeclinedModal\r\n                        activator={(show) => (\r\n                            <TouchableOpacity style={[styles.actionButton, styles.actionButtonDecline]} onPress={show}>\r\n                                <Text style={styles.actionButtonText}>{i18n.t(\"legal.decline\")}</Text>\r\n                                <MaterialIcons name=\"close\" style={styles.actionButtonText} />\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    />\r\n                    <TouchableOpacity style={[styles.actionButton, styles.actionButtonAccept]} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonText}>{i18n.t(\"legal.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonText} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst buttonsRadius = 100;\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        background: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: buttonsRadius,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {width: 0, height: 5},\r\n            shadowOpacity: 0.34,\r\n            shadowRadius: 6.27,\r\n            elevation: 10,\r\n        },\r\n        actionButton: {\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 14,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n            borderTopLeftRadius: buttonsRadius,\r\n            borderBottomLeftRadius: buttonsRadius,\r\n        },\r\n        actionButtonAccept: {\r\n            backgroundColor: theme.okay,\r\n            borderTopRightRadius: buttonsRadius,\r\n            borderBottomRightRadius: buttonsRadius,\r\n        },\r\n        actionButtonText: {\r\n            fontSize: 18,\r\n            paddingHorizontal: 2,\r\n            color: themes.dark.text,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginVertical: 30,\r\n            letterSpacing: 0.4,\r\n        },\r\n        legalText: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            lineHeight: 22,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingLegalSlide);\r\n","import OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingProfileScreen1 from \"./OnboardingProfileScreen1\";\r\nimport OnboardingProfileScreen2 from \"./OnboardingProfileScreen2\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingLegalScreen1 from \"./OnboardingLegalScreen1\";\r\nimport OnboardingLegalScreen2 from \"./OnboardingLegalScreen2\";\r\nimport OnboardingLegalScreen3 from \"./OnboardingLegalScreen3\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingProfileScreen1,\r\n    OnboardingProfileScreen2,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingLegalScreen1,\r\n    OnboardingLegalScreen2,\r\n    OnboardingLegalScreen3,\r\n};\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal1.title\")}\r\n                text={i18n.t(\"onboarding.legal1.text\")}\r\n                specialBackground={true}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal2.title\")}\r\n                text={i18n.t(\"onboarding.legal2.text\")}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal3.title\")}\r\n                text={i18n.t(\"onboarding.legal3.text\")}\r\n                specialBackground={true}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {screenTitle} from \"./utils\";\r\nimport OnboardingProgressBar from \"../components/OnboardingProgressBar\";\r\nimport {nextOnboardingSlide, previousOnboardingSlide} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {ONBOARDING_SCREENS} from \"../screens/onboarding/screens\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => hasNext && store.dispatch(nextOnboardingSlide());\r\n    const previous = () => i > 0 && store.dispatch(previousOnboardingSlide());\r\n\r\n    const ComponentClass = ONBOARDING_SCREENS[name] as typeof React.Component;\r\n    function Wrapper(): JSX.Element {\r\n        return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={Wrapper} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingIndex: state.auth.onboardingIndex,\r\n}));\r\n\r\nfunction OnboardingNavigator({onboardingIndex}: {onboardingIndex: number}): JSX.Element {\r\n    return (\r\n        <>\r\n            <OnboardingStack.Navigator\r\n                initialRouteName={ONBOARDING_ORDER[onboardingIndex]}\r\n                tabBarOptions={{showLabel: false, showIcon: false}}\r\n                tabBar={() => <></>}\r\n                springConfig={{\r\n                    stiffness: 500,\r\n                    damping: 2000,\r\n                    mass: 5,\r\n                }}\r\n                swipeEnabled={false}\r\n                lazy={true}\r\n                lazyPreloadDistance={0}\r\n            >\r\n                {screens}\r\n            </OnboardingStack.Navigator>\r\n            <OnboardingProgressBar index={onboardingIndex} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(OnboardingNavigator);\r\n","import * as React from \"react\";\r\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\nimport {DEBUG_MODE} from \"../../constants/config\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const BackgroundSvg = getLocalSvg(\"large-wave-bg\", () => this.forceUpdate());\r\n        const ForegroundSvg = getLocalSvg(\"woman-holding-phone\", () => this.forceUpdate());\r\n\r\n        const width = Dimensions.get(\"window\").width;\r\n        const height = Dimensions.get(\"window\").height;\r\n        const svgHeight = width * (700 / 450);\r\n        const offset = Math.max(250, height - svgHeight + 30);\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <View style={styles.root}>\r\n                    {layout.isWideDevice ? (\r\n                        <View style={styles.wideDeviceLeftPanel}>\r\n                            <LinearGradient\r\n                                style={styles.gradient}\r\n                                colors={[\"#32C5FF\", \"#B620E0\", \"#F7B500\"]}\r\n                                locations={[0.0, 0.6, 1.0]}\r\n                                start={{x: 1, y: 0}}\r\n                                end={{x: 0.3, y: 0.6}}\r\n                            />\r\n                            <View style={{position: \"absolute\", bottom: -150, left: -100, width: \"100%\"}}>\r\n                                <ForegroundSvg />\r\n                            </View>\r\n                        </View>\r\n                    ) : (\r\n                        <>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    top: offset,\r\n                                }}\r\n                            >\r\n                                <BackgroundSvg width={width} height={width * (700 / 450)} viewBox=\"0 0 450 700\" />\r\n                            </View>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    top: offset + 100,\r\n                                    left: -100,\r\n                                }}\r\n                            >\r\n                                <ForegroundSvg width={width} height={width * (750 / 500)} viewBox=\"0 0 500 750\" />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                    <View style={styles.container}>\r\n                        <View>\r\n                            <Text style={styles.title}>{i18n.t(\"onboarding.success.title\")}</Text>\r\n                            <Text style={styles.subtitle}>{i18n.t(\"onboarding.success.subtitle\")}</Text>\r\n                            {layout.isWideDevice && (\r\n                                /* Hey, you have found an easter egg...plant */\r\n                                <Text style={styles.wideDeviceIcon}>{DEBUG_MODE ? \"🍆\" : \"🚀\"}</Text>\r\n                            )}\r\n                        </View>\r\n                        <Button\r\n                            text={i18n.t(\"onboarding.success.button\")}\r\n                            onPress={() => rootNavigate(\"MainScreen\")}\r\n                            skin=\"rounded-filled\"\r\n                            style={{opacity: 0.9}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        root: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        wideDeviceLeftPanel: {\r\n            width: \"50%\",\r\n        },\r\n        gradient: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        container: {\r\n            width: wideDevice ? \"50%\" : \"100%\",\r\n            height: \"100%\",\r\n            paddingTop: wideDevice ? 150 : 100,\r\n            paddingBottom: 100,\r\n            paddingHorizontal: 60,\r\n            justifyContent: \"space-between\",\r\n            alignItems: wideDevice ? \"center\" : \"flex-start\",\r\n        },\r\n        title: {\r\n            fontSize: 36,\r\n            letterSpacing: 0.5,\r\n            lineHeight: 40,\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            maxWidth: wideDevice ? 9999 : 200,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 18,\r\n            marginTop: 20,\r\n            color: theme.text,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        wideDeviceIcon: {\r\n            fontSize: 80,\r\n            textAlign: \"center\",\r\n            marginVertical: 100,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ResetPasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ResetPasswordFormProps = {token?: string; containerStyle?: StyleProp<ViewStyle>} & FormProps<FormState> &\r\n    ThemeProps;\r\n\r\n// Component state\r\ntype ResetPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ResetPasswordForm extends React.Component<ResetPasswordFormProps, ResetPasswordFormState> {\r\n    pwdRepeatRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ResetPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: ValidatedActionReturn) => {\r\n                    this.setState({remoteErrors: errors, submitting: false});\r\n                    if (errors && errors.fields) {\r\n                        const f = errors.fields;\r\n                        Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                    }\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({remoteErrors: {general: \"error.reset_password_no_token\", fields: {}}, submitting: false});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ResetPasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdRepeatRef.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdRepeatRef}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"resetPassword.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        title: {\r\n            width: \"100%\",\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ResetPasswordForm from \"../components/forms/ResetPasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype ResetPasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ResetPasswordScreenState = {token?: string};\r\n\r\nclass ResetPasswordScreen extends React.Component<ResetPasswordScreenProps, ResetPasswordScreenState> {\r\n    constructor(props: ResetPasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {token} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <ResetPasswordForm token={token} containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ResetPasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>{i18n.t(\"resetPassword.instructions\")}</Text>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordEmailSentScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport Button from \"../components/Button\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"resetPassword.success\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"login\")}\r\n                        icon={<MaterialCommunityIcons name=\"login\" style={styles.buttonIcon} />}\r\n                        onPress={() => {\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            });\r\n                        }}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...styleProps}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_ASPECT, AVATAR_QUALITY} from \"../constants/config\";\r\nimport ImageEditButton from \"./ImageEditButton\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, onPictureSelected} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ImageEditButton\r\n                style={[styles.button, style]}\r\n                quality={AVATAR_QUALITY}\r\n                aspect={AVATAR_ASPECT}\r\n                onPictureSelected={onPictureSelected}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {ArraySchema, Schema, ValidationError} from \"yup\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\n// Component props\r\ntype ValueCardProps<T> = {\r\n    label: string;\r\n    icon?: JSX.Element;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T, error?: string | null) => void) => JSX.Element;\r\n    validator?: Schema<unknown> | ArraySchema<unknown>;\r\n    initialValue?: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n    oneLine?: boolean;\r\n    onPress?: () => void;\r\n    onModalShown?: () => void;\r\n    blank?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype ValueCardState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T | undefined;\r\n};\r\n\r\nclass ValueCard<T> extends React.Component<ValueCardProps<T>, ValueCardState<T>> {\r\n    constructor(props: ValueCardProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        const {initialValue} = this.props;\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T, error?: string | null): void {\r\n        if (error === undefined) error = this.state.error;\r\n        this.setState({...this.state, value, error}, () => this.validate());\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            if (this.props.apply && this.state.value) this.props.apply(this.state.value);\r\n            this.setModal(false);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (theme: Theme): JSX.Element => {\r\n        const {label, renderInput, oneLine} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        const styles = themedStyles(oneLine)(theme);\r\n\r\n        return (\r\n            <>\r\n                <Text style={styles.modalLabel}>{label}</Text>\r\n                {renderInput && value ? (\r\n                    renderInput(value, error, (value: T, error?: string | null) => this.onChange(value, error))\r\n                ) : (\r\n                    <></>\r\n                )}\r\n                <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                <View style={styles.modalButtonsContainer}>\r\n                    <Button\r\n                        onPress={() => this.apply()}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"apply\")}\r\n                        skin=\"rounded-filled\"\r\n                    />\r\n                    <Button\r\n                        onPress={() => this.setModal(false)}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"cancel\")}\r\n                        skin=\"rounded-hollow\"\r\n                    />\r\n                </View>\r\n            </>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            label,\r\n            icon,\r\n            display,\r\n            overrideModal,\r\n            noModal,\r\n            style,\r\n            locked,\r\n            oneLine,\r\n            blank,\r\n            onPress,\r\n            onModalShown,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        const onShow = () => {\r\n            if (onModalShown) onModalShown();\r\n        };\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(oneLine)(theme);\r\n                    return (\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={[styles.cardWrapper, style]}\r\n                                activeOpacity={0.9}\r\n                                disabled={noModal && !onPress}\r\n                                onPress={() => {\r\n                                    if (!noModal) {\r\n                                        if (!locked) this.setModal(true);\r\n                                    } else if (onPress) onPress();\r\n                                }}\r\n                                {...otherProps}\r\n                            >\r\n                                <View style={styles.cardContent}>\r\n                                    <View style={styles.cardLabelContainer}>\r\n                                        {!blank && icon}\r\n                                        <Text style={styles.cardLabel}>{!blank && label}</Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        {!blank && display !== undefined && display}\r\n                                        {!blank && display === undefined && this.props.children}\r\n                                    </View>\r\n                                </View>\r\n                                {!noModal && (\r\n                                    <View style={styles.rightIconContainer}>\r\n                                        <MaterialIcons\r\n                                            name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                            size={locked ? 30 : 40}\r\n                                            style={styles.rightIcon}\r\n                                        />\r\n                                    </View>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                            {!noModal && (\r\n                                <>\r\n                                    {overrideModal !== undefined &&\r\n                                        modalOpen &&\r\n                                        overrideModal(() => this.setModal(false))}\r\n                                    {overrideModal === undefined && modalOpen && (\r\n                                        <CustomModal\r\n                                            visible={modalOpen}\r\n                                            modalViewStyle={styles.modalContent}\r\n                                            animationType=\"slide\"\r\n                                            renderContent={() => this.renderModalContent(theme)}\r\n                                            onShow={onShow}\r\n                                            onHide={() => this.setModal(false)}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (oneLine?: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            modalContent: {\r\n                alignItems: \"flex-start\",\r\n                paddingHorizontal: 20,\r\n            },\r\n            modalErrorText: {\r\n                fontSize: 12,\r\n                color: theme.error,\r\n            },\r\n            modalLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1.5,\r\n                fontSize: 13,\r\n                marginBottom: 12,\r\n            },\r\n            modalButtonsContainer: {\r\n                flexDirection: \"column\",\r\n                width: \"100%\",\r\n            },\r\n            modalButton: {\r\n                marginVertical: 0,\r\n                marginTop: 15,\r\n            },\r\n            cardWrapper: {\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                backgroundColor: theme.cardBackground,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"space-evenly\",\r\n                paddingVertical: 15,\r\n                minHeight: oneLine ? 0 : 80,\r\n                borderRadius: 10,\r\n            },\r\n            cardContent: {\r\n                flex: 1,\r\n                flexDirection: oneLine ? \"row\" : \"column\",\r\n                ...(oneLine ? {alignItems: \"center\"} : {}),\r\n                justifyContent: \"space-between\",\r\n            },\r\n            cardLabelContainer: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginBottom: oneLine ? 0 : 10,\r\n            },\r\n            cardLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1,\r\n                fontSize: 11,\r\n            },\r\n            rightIconContainer: {justifyContent: \"center\"},\r\n            rightIcon: {color: theme.textLight},\r\n        });\r\n    });\r\n\r\nexport default ValueCard;\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Text, View, ScrollView} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRolePicker from \"../StaffRolePicker\";\r\nimport GenderToggle from \"../GenderToggle\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport ValueCard from \"../cards/ValueCard\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Chips from \"../Chips\";\r\nimport WavyHeader from \"../headers/WavyHeader\";\r\nimport BirthDateInput, {BirthDateInputClass} from \"../BirthDateInput\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    uploadingAvatar: state.profile.uploadingAvatar,\r\n}));\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> & {\r\n        user: User | null;\r\n        onChange?: (fields: Partial<UserProfile>) => void;\r\n    };\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    birthDateInputRef = React.createRef<BirthDateInputClass>();\r\n\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user, uploadingAvatar} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        const profile = user?.profile;\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={user?.profile}\r\n                        size={140}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                        loading={uploadingAvatar}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {profile && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={profile.university}\r\n                        />\r\n                    )}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                    {!user && <ActivityIndicator size=\"large\" style={styles.loadingIndicator} color={theme.accent} />}\r\n\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user?.email}\r\n                        display={(user && <Text style={styles.cardText}>{user.email}</Text>) || undefined}\r\n                        locked={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile?.birthdate}\r\n                        display={profile && <FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        renderInput={(value: Date, _error, onChange) => (\r\n                            <BirthDateInput\r\n                                ref={this.birthDateInputRef}\r\n                                date={value}\r\n                                containerStyle={styles.birthdateInputContainer}\r\n                                inputStyle={styles.birthdateInput}\r\n                                onChange={(birthdate?: Date, inputError?: string) => {\r\n                                    onChange(birthdate || value, inputError || null);\r\n                                }}\r\n                            />\r\n                        )}\r\n                        onModalShown={() => this.birthDateInputRef.current?.focus()}\r\n                        apply={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile?.nationality}\r\n                        display={\r\n                            profile && (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            )\r\n                        }\r\n                        overrideModal={\r\n                            profile &&\r\n                            ((hide: () => void) => (\r\n                                <NationalityPicker\r\n                                    nationality={profile.nationality}\r\n                                    onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                    onHide={hide}\r\n                                />\r\n                            ))\r\n                        }\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile?.gender}\r\n                        display={\r\n                            profile && (\r\n                                <GenderToggle\r\n                                    gender={profile.gender}\r\n                                    onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile?.type}\r\n                        display={\r\n                            profile && (\r\n                                <>\r\n                                    <RoleToggle role={profile.type} disabled={true} />\r\n                                    {profile.type == \"staff\" && (\r\n                                        <StaffRolePicker\r\n                                            staffRoles={(profile as UserProfileStaff).staffRoles}\r\n                                            onChange={(staffRoles: StaffRole[]) => this.onFieldChanged({staffRoles})}\r\n                                            multiple={true}\r\n                                            atLeastOne={true}\r\n                                            buttonStyle={styles.staffRoleButton}\r\n                                        />\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <DegreeToggle\r\n                                            degree={(profile as UserProfileStudent).degree}\r\n                                            onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile?.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile?.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                                showChips={true}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile?.interests}\r\n                        display={\r\n                            profile && (\r\n                                <InterestsPicker\r\n                                    interests={profile.interests}\r\n                                    onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                                    showChips={true}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile?.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            profile && (\r\n                                <Chips\r\n                                    items={profile?.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            )\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <SpokenLanguagesInput\r\n                                languages={value}\r\n                                onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst offerReduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | undefined;\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n    theme: Theme;\r\n} & ConnectedProps<typeof offerReduxConnector>;\r\n\r\nconst OfferCategoryRow = offerReduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n        const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n        return (\r\n            <ValueCard\r\n                blank={!profileOffers}\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={\r\n                    items.length > 0 ? (\r\n                        <Chips\r\n                            items={items}\r\n                            label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                        />\r\n                    ) : (\r\n                        <Text style={{color: theme.textLight}}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                    )\r\n                }\r\n                renderInput={(value: OfferValueDto[], error, onChange) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10, width: \"100%\"}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        // Header-related styles\r\n        header: {\r\n            alignItems: \"center\",\r\n            paddingBottom: 10,\r\n        },\r\n        name: {\r\n            fontSize: 28,\r\n            color: themes.dark.text,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            top: 70,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n            width: \"100%\",\r\n        },\r\n\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n        staffRoleButton: {\r\n            marginTop: 10,\r\n        },\r\n        birthdateInputContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n        },\r\n        birthdateInput: {\r\n            height: 50,\r\n            fontSize: 16,\r\n            borderRadius: 10,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(EditProfileForm));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype MyProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens, \"MyProfileScreen\">;\r\n\r\nclass MyProfileScreen extends React.Component<MyProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {user, dispatch} = this.props;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MyProfileScreen));\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextProps, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender} from \"../constants/profile-constants\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type FormattedGenderProps = {\r\n    gender: Gender;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & TextProps &\r\n    ThemeProps;\r\n\r\nclass FormattedGender extends React.Component<FormattedGenderProps> {\r\n    render(): JSX.Element {\r\n        const {gender, containerStyle, iconStyle, theme, ...otherProps} = this.props;\r\n\r\n        const icon = gender === \"female\" ? \"female\" : gender === \"male\" ? \"male\" : undefined;\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {icon && <FontAwesome name={icon} size={24} color={theme.textLight} style={iconStyle} />}\r\n                <Text {...otherProps} style={[{marginLeft: icon ? 10 : 0}, otherProps.style]}>\r\n                    {i18n.t(`genders.${gender}`)}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormattedGender);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ScrollView} from \"react-native\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../model/user-profile\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {StaffRole} from \"../constants/profile-constants\";\r\nimport ValueCard from \"./cards/ValueCard\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {OfferCategory, OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport FormattedGender from \"./FormattedGender\";\r\nimport Chips from \"./Chips\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport WavyHeader from \"./headers/WavyHeader\";\r\nimport themes from \"../constants/themes\";\r\n\r\n// Component props\r\nexport type ProfileViewProps = ThemeProps & {\r\n    profile: UserProfile | null;\r\n    actionBar?: JSX.Element;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass ProfileView extends React.Component<ProfileViewProps> {\r\n    render() {\r\n        const {theme, profile, actionBar} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile ? profile.firstName + \" \" + profile.lastName : \"\";\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={profile || undefined}\r\n                        size={120}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    />\r\n                    {!profile && (\r\n                        <ActivityIndicator size=\"large\" color={themes.dark.text} style={styles.loadingIndicator} />\r\n                    )}\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    <FormattedUniversity\r\n                        containerStyle={styles.universityContainer}\r\n                        style={styles.university}\r\n                        university={profile?.university || null}\r\n                    />\r\n                    {actionBar}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        display={profile ? <FormattedDate style={styles.cardText} date={profile.birthdate} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"nationality\")}\r\n                        display={\r\n                            profile ? (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"gender\")}\r\n                        display={profile ? <FormattedGender style={styles.cardText} gender={profile.gender} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"profileType\")}\r\n                        display={\r\n                            profile ? (\r\n                                <>\r\n                                    <Text style={styles.cardText}>{i18n.t(`allRoles.${profile.type}`)}</Text>\r\n                                    {profile.type == \"staff\" && (\r\n                                        <>\r\n                                            {(profile as UserProfileStaff).staffRoles.map((sr: StaffRole) => (\r\n                                                <Text key={`profile-staff-role-${sr}`}>\r\n                                                    {i18n.t(`staffRoles.${sr}`)}\r\n                                                </Text>\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <Text style={styles.cardText}>\r\n                                            {i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)}\r\n                                        </Text>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.educationFields}\r\n                                    label={(item: string) => i18n.t(`educationFields.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"interests\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.interests}\r\n                                    label={(item: string) => i18n.t(`interestNames.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Meet} profileOffers={profile?.profileOffers || null} />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | null;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    withTheme(\r\n        ({category, profileOffers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n            const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n            const styles = themedStyles(theme);\r\n\r\n            return (\r\n                <ValueCard\r\n                    blank={!profileOffers}\r\n                    label={i18n.t(`offerCategories.${category}`)}\r\n                    display={\r\n                        items.length > 0 ? (\r\n                            <Chips\r\n                                items={items}\r\n                                label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                            />\r\n                        ) : (\r\n                            <Text style={styles.cardText}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                        )\r\n                    }\r\n                    noModal={true}\r\n                />\r\n            );\r\n        },\r\n    ),\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        header: {\r\n            alignItems: \"center\",\r\n        },\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 140,\r\n        },\r\n        name: {\r\n            fontSize: 24,\r\n            color: themes.dark.text,\r\n            marginTop: 10,\r\n            height: 30,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: themes.dark.text,\r\n        },\r\n        universityContainer: {\r\n            height: 25,\r\n            marginTop: 5,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 1,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileView);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile, cancelMatchAction} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\nexport type UnmatchProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {\r\n        onSubmit?: (block: boolean) => void;\r\n        profile: UserProfile | null;\r\n        matchId: string | null;\r\n    };\r\n\r\ntype UnmatchProfileModalState = {block: boolean};\r\n\r\nclass UnmatchProfileModal extends React.Component<UnmatchProfileModalProps, UnmatchProfileModalState> {\r\n    constructor(props: UnmatchProfileModalProps) {\r\n        super(props);\r\n        this.state = {block: false};\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, matchId, onSubmit, ...otherProps} = this.props;\r\n        const {block} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"unmatch.title\")}\r\n                text={profile ? i18n.t(\"unmatch.text\", {firstname: profile.firstName, lastname: profile.lastName}) : \"\"}\r\n                justifyText\r\n                icon={(props) => <MaterialIcons {...props} name=\"delete-sweep\" color={theme.error} />}\r\n                additionalContent={(hide, textProps) => (\r\n                    <>\r\n                        <Text {...textProps}>\r\n                            {profile\r\n                                ? i18n.t(\"unmatch.blockQuestion\", {\r\n                                      firstname: profile.firstName,\r\n                                      lastname: profile.lastName,\r\n                                  })\r\n                                : \"\"}\r\n                        </Text>\r\n                        <TouchableOpacity\r\n                            style={styles.blockTouchable}\r\n                            onPress={() => this.setState({...this.state, block: !block})}\r\n                        >\r\n                            <CheckBox\r\n                                containerStyle={styles.checkboxContainer}\r\n                                checked={block}\r\n                                onPress={() => this.setState({...this.state, block: !block})}\r\n                            />\r\n                            <Text {...textProps}>{i18n.t(\"block.action\")}</Text>\r\n                        </TouchableOpacity>\r\n                    </>\r\n                )}\r\n                buttons={[\r\n                    {preset: \"cancel\"},\r\n                    {\r\n                        preset: \"delete\",\r\n                        text: i18n.t(\"unmatch.action\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            if (matchId) (store.dispatch as MyThunkDispatch)(cancelMatchAction(matchId, true));\r\n                            if (profile && block) (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                            if (onSubmit) onSubmit(block);\r\n                        },\r\n                    },\r\n                ]}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        blockTouchable: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(UnmatchProfileModal);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport QuickFormReport from \"./forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport UnmatchProfileModal from \"./modals/UnmatchProfileModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {navigateBack, openChat} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ProfileActionBarProps = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n} & ThemeProps;\r\n\r\nfunction ProfileActionBar(props: ProfileActionBarProps): JSX.Element {\r\n    const {profile, isMatched, roomId, matchId, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    let buttons;\r\n\r\n    const buttonBlock = (\r\n        <BlockProfileModal\r\n            profile={profile}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.block\")} icon=\"block\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    const buttonReport = (\r\n        <QuickFormReport\r\n            entity={profile}\r\n            entityType={ReportEntityType.PROFILE_ENTITY}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.report\")} icon=\"report\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    if (isMatched) {\r\n        const buttonChat = (\r\n            <ActionButton\r\n                blank={!profile}\r\n                text={i18n.t(\"profile.action.chat\")}\r\n                icon=\"chat\"\r\n                onPress={() => roomId && openChat(roomId)}\r\n            />\r\n        );\r\n\r\n        // TODO implement chat mute\r\n        /*const buttonMute = (\r\n            <ActionButton blank={!profile} text={i18n.t(\"profile.action.mute\")} icon=\"notifications-off\" />\r\n        );*/\r\n        const buttonMute = <></>;\r\n\r\n        const buttonUnmatch = (\r\n            <UnmatchProfileModal\r\n                profile={profile}\r\n                matchId={matchId}\r\n                onSubmit={(block: boolean) => {\r\n                    if (block) navigateBack();\r\n                }}\r\n                activator={(open) => (\r\n                    <ActionButton\r\n                        blank={!profile}\r\n                        text={i18n.t(\"profile.action.unmatch\")}\r\n                        icon=\"close\"\r\n                        onPress={open}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n\r\n        buttons = (\r\n            <>\r\n                {buttonChat}\r\n                {buttonMute}\r\n                {buttonUnmatch}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    } else {\r\n        buttons = (\r\n            <>\r\n                {buttonBlock}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return <View style={styles.container}>{buttons}</View>;\r\n}\r\n\r\ntype ActionButtonProps = ThemeProps & {\r\n    text: string;\r\n    icon?: string;\r\n    onPress?: () => void;\r\n    blank?: boolean;\r\n};\r\n\r\nconst ActionButton = withTheme(\r\n    ({text, icon, onPress, blank, theme}: ActionButtonProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity style={styles.button} activeOpacity={0.75} onPress={blank ? undefined : onPress}>\r\n                {icon && (\r\n                    <View style={[styles.buttonTop, blank ? styles.buttonTopBlank : {}]}>\r\n                        {!blank && <MaterialIcons name={icon} style={styles.buttonTopIcon} />}\r\n                    </View>\r\n                )}\r\n                <Text style={styles.buttonText}>{text}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        button: {\r\n            width: 75,\r\n            marginHorizontal: 10,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonText: {\r\n            fontSize: 12,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.5,\r\n            color: themes.dark.text,\r\n            textAlign: \"center\",\r\n            ...styleTextLight,\r\n        },\r\n        buttonTop: {\r\n            fontSize: 24,\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 60,\r\n            marginBottom: 5,\r\n            backgroundColor: \"#fff4\",\r\n        },\r\n        buttonTopBlank: {\r\n            opacity: 0.4,\r\n            backgroundColor: \"transparent\",\r\n            borderColor: themes.dark.text,\r\n            borderWidth: 1,\r\n        },\r\n        buttonTopIcon: {\r\n            fontSize: 24,\r\n            color: theme.textInverted,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileActionBar);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ProfileView from \"../components/ProfileView\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../model/user-profile\";\r\nimport {fetchProfile} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ProfileActionBar from \"../components/ProfileActionBar\";\r\nimport {getRouteParams} from \"../navigation/utils\";\r\n\r\nconst reduxConnector = connect(() => ({}));\r\n\r\n// Component props\r\ntype ProfileScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype ProfileScreenState = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n};\r\n\r\nclass ProfileScreen extends React.Component<ProfileScreenProps, ProfileScreenState> {\r\n    constructor(props: ProfileScreenProps) {\r\n        super(props);\r\n        this.state = {profile: null, isMatched: false, roomId: null, matchId: null};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, navigation, route} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const {id} = getRouteParams(route);\r\n            if (id && (!this.state.profile || this.state.profile.id !== id)) {\r\n                (dispatch as MyThunkDispatch)(fetchProfile(id as string)).then(\r\n                    (profileWithMatchInfo: UserProfileWithMatchInfo | null) => {\r\n                        if (profileWithMatchInfo) {\r\n                            const {profile, isMatched, roomId, matchingId} = profileWithMatchInfo;\r\n                            this.setState({...this.state, profile, isMatched, roomId, matchId: matchingId});\r\n                        } else {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                profile: null,\r\n                                isMatched: false,\r\n                                roomId: null,\r\n                                matchId: null,\r\n                            });\r\n                        }\r\n                    },\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profile, isMatched, roomId, matchId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <ProfileView\r\n                    profile={profile}\r\n                    actionBar={\r\n                        <ProfileActionBar profile={profile} isMatched={isMatched} roomId={roomId} matchId={matchId} />\r\n                    }\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(ProfileScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {SupportedLocale, SUPPORTED_LOCALES} from \"../localization\";\r\nimport {PickerButtonStyleVariant} from \"../styles/picker\";\r\n\r\n// Component props\r\nexport type LocalePickerProps = {\r\n    locale?: SupportedLocale;\r\n    onChange?: (locale: SupportedLocale) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n    buttonStyleVariant?: PickerButtonStyleVariant;\r\n} & ThemeProps;\r\n\r\nclass LocalePicker extends React.Component<LocalePickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, locale, theme, buttonStyle, valueStyle, buttonStyleVariant} = this.props;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={SUPPORTED_LOCALES}\r\n                label={(l: string) => i18n.t(`locales.${l}`)}\r\n                selected={locale ? [locale] : []}\r\n                valueStyle={valueStyle}\r\n                buttonStyle={buttonStyle}\r\n                buttonStyleVariant={buttonStyleVariant}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as SupportedLocale);\r\n                }}\r\n                noOkUnderline\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({});\r\n});\r\n\r\nexport default withTheme(LocalePicker);\r\n","import {SupportedLocale} from \"../localization\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nexport type CookiesPreferences = {\r\n    auth: boolean;\r\n    cache: boolean;\r\n    settings: boolean;\r\n};\r\n\r\nexport const COOKIES_PREFERENCES_KEYS = [\"auth\", \"cache\", \"settings\"];\r\n\r\nexport type UserSettings = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    cookies: CookiesPreferences;\r\n    cookieConsentDate: Date | null;\r\n};\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {AppState} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CookiesPreferences, COOKIES_PREFERENCES_KEYS} from \"../../model/user-settings\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {saveCookiesPreferences} from \"../../state/settings/actions\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n}));\r\n\r\n// Component props\r\nexport type CustomizeCookiesModalProps = ThemeProps & Partial<CustomModalProps> & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CustomizeCookiesModalState = {cookies: CookiesPreferences};\r\n\r\nclass CustomizeCookiesModal extends React.Component<CustomizeCookiesModalProps, CustomizeCookiesModalState> {\r\n    constructor(props: CustomizeCookiesModalProps) {\r\n        super(props);\r\n        this.state = {cookies: props.cookies};\r\n    }\r\n\r\n    private onShow(): void {\r\n        const storeCookies = this.props.cookies as {[key: string]: boolean};\r\n        const localCookies = this.state.cookies as {[key: string]: boolean};\r\n\r\n        // Update component cookies state with the state from the store if it is different\r\n        const changed = Object.keys(storeCookies).some((key: string) => storeCookies[key] != localCookies[key]);\r\n        if (changed) this.setState({...this.state, cookies: this.props.cookies});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...otherProps} = this.props;\r\n        const {cookies} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const cookieDict = this.state.cookies as {[key: string]: boolean};\r\n\r\n        const toggleCookie = (key: string) =>\r\n            this.setState({...this.state, cookies: {...cookies, [key]: !cookieDict[key]}});\r\n\r\n        return (\r\n            <ConfirmationModal\r\n                title={i18n.t(\"cookies.title\")}\r\n                text={i18n.t(\"cookies.preferences.text\")}\r\n                justifyText\r\n                additionalContent={() => (\r\n                    <>\r\n                        {COOKIES_PREFERENCES_KEYS.map((k) => (\r\n                            <View style={styles.preferenceRow} key={`cookie-preference-${k}`}>\r\n                                <TouchableOpacity style={styles.preferenceRowButton} onPress={() => toggleCookie(k)}>\r\n                                    <CheckBox\r\n                                        checked={cookieDict[k]}\r\n                                        containerStyle={styles.checkBoxContainer}\r\n                                        onPress={() => toggleCookie(k)}\r\n                                    />\r\n                                    <Text style={styles.preferenceName}>{i18n.t(`cookies.preferences.${k}.name`)}</Text>\r\n                                </TouchableOpacity>\r\n                                <Text style={styles.preferenceDescription}>\r\n                                    {i18n.t(`cookies.preferences.${k}.description`)}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                buttons={[\r\n                    {\r\n                        preset: \"cancel\",\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            this.setState({...this.state, cookies: this.props.cookies});\r\n                        },\r\n                    },\r\n                    {\r\n                        preset: \"confirm\",\r\n                        text: i18n.t(\"save\"),\r\n                        onPress: (hide) => {\r\n                            hide();\r\n                            store.dispatch(saveCookiesPreferences(cookies));\r\n                        },\r\n                    },\r\n                ]}\r\n                onShow={() => {\r\n                    this.onShow();\r\n                    if (otherProps.onShow) otherProps.onShow();\r\n                }}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        preferenceRow: {\r\n            marginBottom: 10,\r\n        },\r\n        preferenceRowButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkBoxContainer: {\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        preferenceName: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        preferenceDescription: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CustomizeCookiesModal));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Alert, Dimensions, Platform, ScrollView, StyleSheet, Switch, Text, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ValueCard from \"../components/cards/ValueCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {AppState} from \"../state/types\";\r\nimport {setLocale, setTheme} from \"../state/settings/actions\";\r\nimport LocalePicker from \"../components/LocalePicker\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {APP_VERSION, BUG_REPORT_EMAIL_ADDRESS, TERMS_AND_CONDITIONS_URL} from \"../constants/config\";\r\nimport LocalImage from \"../components/LocalImage\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport CustomizeCookiesModal from \"../components/modals/CustomizeCookiesModal\";\r\nimport Button from \"../components/Button\";\r\nimport * as Linking from \"expo-linking\";\r\nimport store from \"../state/store\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    settings: state.settings.userSettings,\r\n}));\r\n\r\n// Component props\r\ntype SettingsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nlet versionClickCount = 0;\r\n\r\nclass SettingsScreen extends React.Component<SettingsScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, settings, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.container}>\r\n                    <Section theme={theme} title={i18n.t(\"settings.sections.general\")}>\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.language\")}\r\n                            icon={<FontAwesome name=\"language\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <LocalePicker\r\n                                    locale={settings.locale}\r\n                                    onChange={(l: SupportedLocale) => dispatch(setLocale(l))}\r\n                                    buttonStyle={styles.localeButton}\r\n                                    valueStyle={styles.localButtonValue}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.darkTheme\")}\r\n                            icon={<MaterialCommunityIcons name=\"theme-light-dark\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))}\r\n                            display={\r\n                                <Switch\r\n                                    value={settings.theme === \"dark\"}\r\n                                    onValueChange={() =>\r\n                                        dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))\r\n                                    }\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.logOut\")}\r\n                            icon={<MaterialCommunityIcons name=\"logout\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.logOut\")}\r\n                                    onPress={() => dispatch(logout())}\r\n                                    skin=\"rounded-filled\"\r\n                                    textStyle={styles.cardButtonText}\r\n                                    style={[styles.oneLineCardButton, styles.redBackground]}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.customizeCookies\")}\r\n                            icon={<MaterialCommunityIcons name=\"cookie\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            overrideModal={(hide) => <CustomizeCookiesModal visible={true} onHide={hide} />}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.about\")}\r\n                        icon={{name: \"info\", color: theme.accent}}\r\n                    >\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.version\")}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                // Easter-egg trigger\r\n                                versionClickCount++;\r\n                                if (versionClickCount === 7) {\r\n                                    versionClickCount = 0;\r\n                                    Alert.alert(\"Insert easter egg here\");\r\n                                }\r\n                                setTimeout(() => (versionClickCount = Math.max(0, versionClickCount - 1)), 3000);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{APP_VERSION}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.termsOfService\")}\r\n                            oneLine={true}\r\n                            onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.reportABug\")}\r\n                            icon={<MaterialIcons name=\"bug-report\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                const {width, height} = Dimensions.get(\"window\");\r\n                                const fromEmail = store.getState().profile.user?.email;\r\n                                let text = \"\";\r\n                                text += `Platform: ${Platform.OS} (${Platform.Version})\\n`;\r\n                                text += `Dimensions: ${Math.round(width)} x ${Math.round(height)}\\n`;\r\n                                text += `App version: ${APP_VERSION}\\n`;\r\n                                text += `User: ${fromEmail}\\n`;\r\n                                text += `_______________________\\n\\n`;\r\n                                text += `${i18n.t(\"bugReport.mailTitle\")}\\n\\n`;\r\n\r\n                                const subject = i18n.t(\"bugReport.mailSubject\");\r\n                                Linking.openURL(`mailto:${BUG_REPORT_EMAIL_ADDRESS}?subject=${subject}&body=${text}`);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.danger\")}\r\n                        icon={{name: \"warning\", color: theme.warn}}\r\n                    >\r\n                        <ValueCard\r\n                            style={[styles.card, {height: 100}]}\r\n                            label={i18n.t(\"settings.deleteAccount\")}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.deleteMyAccount\")}\r\n                                    onPress={() => rootNavigate(\"DeleteAccountScreen\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.cardButton, styles.redBackground]}\r\n                                    textStyle={styles.cardButtonText}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <View style={styles.logosContainer}>\r\n                        <LocalImage\r\n                            imageKey=\"logos.sea-eu-around.small\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoSeaEuAround]}\r\n                        />\r\n                        <LocalImage\r\n                            imageKey=\"logos.erasmusLeft\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoErasmus]}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\ntype SectionProps = {\r\n    theme: Theme;\r\n    title: string;\r\n    icon?: {name: string; color: string};\r\n};\r\n\r\nclass Section extends React.Component<SectionProps> {\r\n    render(): JSX.Element {\r\n        const {title, icon, theme, children} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.section}>\r\n                <View style={styles.sectionTitleContainer}>\r\n                    {icon && <MaterialIcons name={icon.name} color={icon.color} style={styles.sectionIcon} />}\r\n                    <Text style={styles.sectionTitle}>{title}</Text>\r\n                </View>\r\n                {children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            maxWidth: 700,\r\n            alignSelf: \"center\",\r\n            paddingTop: 10,\r\n            paddingBottom: 50,\r\n            paddingHorizontal: 20,\r\n        },\r\n        section: {\r\n            paddingVertical: 10,\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        sectionTitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        sectionTitle: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n        },\r\n        sectionIcon: {\r\n            fontSize: 16,\r\n            marginRight: 5,\r\n        },\r\n        card: {\r\n            marginVertical: 6,\r\n            height: 60,\r\n        },\r\n        cardIcon: {\r\n            marginRight: 6,\r\n            padding: 0,\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        localeButton: {\r\n            height: 30,\r\n        },\r\n        localButtonValue: {\r\n            fontSize: 14,\r\n            marginHorizontal: 10,\r\n        },\r\n        cardButton: {\r\n            height: 42,\r\n            marginVertical: 0,\r\n        },\r\n        oneLineCardButton: {\r\n            width: 140,\r\n            height: 40,\r\n            marginVertical: 0,\r\n        },\r\n        cardButtonText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n\r\n        infoText: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        logosContainer: {},\r\n        logo: {\r\n            marginTop: 30,\r\n            width: \"100%\",\r\n        },\r\n        logoErasmus: {height: 40},\r\n        logoSeaEuAround: {height: 60},\r\n        /*logoJA: {height: 40},\r\n        developedBy: {\r\n            textTransform: \"uppercase\",\r\n            textAlign: \"center\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n            marginTop: 40,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SettingsScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport Button from \"../components/Button\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype DeleteAccountSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountSuccessScreen extends React.Component<DeleteAccountSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success1\")}</Text>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success2\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"deleteAccount.leave\")}\r\n                        icon={<MaterialCommunityIcons name=\"logout\" style={styles.buttonIcon} />}\r\n                        onPress={() => rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"})}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 25,\r\n            marginTop: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n            backgroundColor: theme.error,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: themes.dark.text,\r\n            marginLeft: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {deleteAccount} from \"../../state/auth/actions\";\r\n\r\ntype FormState = {password: string};\r\n\r\nconst initialState = (): FormState => ({password: \"\"});\r\n\r\n// Use Yup to create the validation schema\r\nconst DeleteAccountFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Component props\r\ntype DeleteAccountFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype DeleteAccountFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass DeleteAccountForm extends React.Component<DeleteAccountFormProps, DeleteAccountFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: DeleteAccountFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(deleteAccount(values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"deleteAccount.title\")}</Text>\r\n                    <MaterialIcons name=\"warning\" style={styles.warningIcon} />\r\n                    <Text style={styles.warning}>{i18n.t(\"deleteAccount.warning\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={DeleteAccountFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    label={i18n.t(\"deleteAccount.inputLabel\")}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"deleteAccount.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        warning: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        warningIcon: {\r\n            color: theme.warn,\r\n            fontSize: 32,\r\n            marginTop: 20,\r\n        },\r\n        button: {\r\n            backgroundColor: theme.error,\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport DeleteAccountForm from \"../components/forms/DeleteAccountForm\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype DeleteAccountScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountScreen extends React.Component<DeleteAccountScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <DeleteAccountForm containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteAccountScreen);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport AsyncButton from \"../components/AsyncButton\";\r\nimport {connectToBackend} from \"../hooks/useCachedResources\";\r\nimport {getInitialRoute, rootNavigate} from \"../navigation/utils\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type BackendUnreachableScreenProps = StackScreenProps<RootNavigatorScreens, \"BackendUnreachableScreen\"> &\r\n    ThemeProps;\r\n\r\nclass BackendUnreachableScreen extends React.Component<BackendUnreachableScreenProps> {\r\n    private async retry(): Promise<void> {\r\n        const {reachable, userLoggedInFromCache} = await connectToBackend();\r\n        if (reachable)\r\n            rootNavigate(getInitialRoute(!!userLoggedInFromCache, userLoggedInFromCache?.onboarded || false));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth containerStyle={{justifyContent: \"center\"}}>\r\n                <View style={styles.iconBanner}>\r\n                    <MaterialCommunityIcons name=\"server-network-off\" style={styles.icon} />\r\n                </View>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>{i18n.t(\"backendUnreachable.title\")}</Text>\r\n                    <Text style={styles.subtitle}>{i18n.t(\"backendUnreachable.subtitle\")}</Text>\r\n                    <AsyncButton\r\n                        style={styles.retryButton}\r\n                        icon={<MaterialIcons style={styles.retryIcon} name=\"refresh\" />}\r\n                        onPress={async () => await this.retry()}\r\n                        loadingIndicatorColor={theme.text}\r\n                        loadingIndicatorStyle={styles.retryLoading}\r\n                        loadingIndicatorSize={36}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: 40,\r\n        },\r\n        iconBanner: {\r\n            width: \"100%\",\r\n            height: 80,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.error,\r\n        },\r\n        icon: {\r\n            fontSize: 48,\r\n            color: themes.dark.text,\r\n        },\r\n        title: {\r\n            fontSize: 36,\r\n            maxWidth: 450,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 18,\r\n            maxWidth: 400,\r\n            marginTop: 40,\r\n            marginBottom: 20,\r\n            textAlign: \"center\",\r\n            color: theme.textLight,\r\n        },\r\n        retryButton: {\r\n            padding: 10,\r\n        },\r\n        retryIcon: {\r\n            fontSize: 48,\r\n            color: theme.text,\r\n        },\r\n        retryLoading: {\r\n            marginTop: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BackendUnreachableScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SemiHighlightedText from \"../components/SemiHighlightedText\";\r\nimport Button from \"../components/Button\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {getRouteParams, rootNavigate} from \"../navigation/utils\";\r\nimport AsyncButton from \"../components/AsyncButton\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {requestSendVerificationEmail} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport themes from \"../constants/themes\";\r\n\r\nexport type ResendVerifyEmailScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResendVerifyEmailScreen extends React.Component<ResendVerifyEmailScreenProps> {\r\n    private getLoginEmail(): string | null {\r\n        // Get the room ID from the route parameters\r\n        const {email} = getRouteParams(this.props.route);\r\n        return (email as string) || null;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        return (\r\n            <ScreenWrapper containerStyle={styles.container}>\r\n                <View style={styles.topContainer}>\r\n                    <SemiHighlightedText\r\n                        text={i18n.t(\"resendVerifyScreen.title\")}\r\n                        fontSize={28}\r\n                        textStyle={styles.title}\r\n                    />\r\n                    <Text style={styles.infoText}>{i18n.t(\"resendVerifyScreen.text\")}</Text>\r\n                </View>\r\n\r\n                <View style={styles.actionsContainer}>\r\n                    <AsyncButton\r\n                        text={i18n.t(\"resendVerifyScreen.send\")}\r\n                        onPress={() => {\r\n                            // There should always be an email here\r\n                            const email = this.getLoginEmail();\r\n                            if (email) return dispatch(requestSendVerificationEmail(email));\r\n                            else return new Promise<void>((resolve) => resolve());\r\n                        }}\r\n                        skin=\"rounded-filled\"\r\n                        icon={\r\n                            <MaterialIcons\r\n                                name=\"mail-outline\"\r\n                                style={{color: themes.dark.text, fontSize: 24, marginLeft: 10}}\r\n                            />\r\n                        }\r\n                    />\r\n                    <Button\r\n                        text={i18n.t(\"cancel\")}\r\n                        onPress={() =>\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            })\r\n                        }\r\n                        skin=\"rounded-hollow\"\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            maxWidth: \"85%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        topContainer: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewayBold\",\r\n        },\r\n        infoText: {\r\n            color: theme.themeAwareAccent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 18,\r\n            lineHeight: 22,\r\n            textAlign: \"justify\",\r\n            marginTop: 25,\r\n            maxWidth: 500,\r\n        },\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResendVerifyEmailScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {NavigationContainer, DefaultTheme, DarkTheme, NavigationState} from \"@react-navigation/native\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {NavigatorRoute, RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle, unauthorizedRedirect} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\nimport MyProfileScreen from \"../screens/MyProfileScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport {AUTHENTICATED_ROUTES} from \"../constants/route-settings\";\r\nimport store from \"../state/store\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport DeleteAccountSuccessScreen from \"../screens/DeleteAccountSuccessScreen\";\r\nimport DeleteAccountScreen from \"../screens/DeleteAccountScreen\";\r\nimport {handleRouteChangeForChat} from \"./MessagingNavigator\";\r\nimport {DEBUG_FORCE_INITIAL_ROUTE, DEBUG_MODE} from \"../constants/config\";\r\nimport {BackHandler} from \"react-native\";\r\nimport BackendUnreachableScreen from \"../screens/BackendUnreachableScreen\";\r\nimport ResendVerifyEmailScreen from \"../screens/ResendVerifyEmailScreen\";\r\nimport themes from \"../constants/themes\";\r\n\r\ntype RootNavigationProps = React.PropsWithRef<ThemeProps & {initialRoute?: keyof RootNavigatorScreens}> & {\r\n    onReady?: () => void;\r\n};\r\n\r\n// The root stack navigator\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\nlet consumedInitialRoute = false;\r\nlet previousRoute: NavigatorRoute | undefined = undefined;\r\nlet prePreviousRoute: NavigatorRoute | undefined = undefined;\r\nlet savedNavigationState: NavigationState | undefined = undefined;\r\n\r\n// Handle route changes\r\nfunction onStateChange(state: NavigationState | undefined) {\r\n    if (state) savedNavigationState = state;\r\n    const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute | undefined;\r\n    if (route) {\r\n        // Handle redirecting when not authenticated\r\n        if (!DEBUG_MODE) {\r\n            if (!store.getState().auth.authenticated && AUTHENTICATED_ROUTES.includes(route)) unauthorizedRedirect();\r\n        }\r\n\r\n        handleRouteChangeForChat(route, previousRoute);\r\n\r\n        prePreviousRoute = previousRoute;\r\n        previousRoute = route;\r\n    }\r\n}\r\n\r\nfunction Navigation({theme, initialRoute, onReady}: RootNavigationProps): JSX.Element {\r\n    // Ensure we do not go back to the initial route when the navigation container updates (e.g. on theme change)\r\n    let initialRouteName = consumedInitialRoute ? (previousRoute as keyof RootNavigatorScreens) : initialRoute;\r\n    consumedInitialRoute = true;\r\n\r\n    if (DEBUG_MODE && DEBUG_FORCE_INITIAL_ROUTE !== undefined)\r\n        initialRouteName = DEBUG_FORCE_INITIAL_ROUTE as keyof RootNavigatorScreens;\r\n\r\n    const reactNavigationTheme = {\r\n        dark: theme.id === \"dark\",\r\n        colors: {\r\n            ...(theme.id === \"dark\" ? DarkTheme : DefaultTheme).colors,\r\n            background: theme.background,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            initialState={savedNavigationState}\r\n            linking={LinkingConfiguration}\r\n            theme={reactNavigationTheme}\r\n            onReady={() => {\r\n                onStateChange(undefined);\r\n                // Prevent going back to a screen where the user shouldn't go\r\n                BackHandler.addEventListener(\"hardwareBackPress\", () => {\r\n                    if (prePreviousRoute) {\r\n                        const toAuthRoute = AUTHENTICATED_ROUTES.indexOf(prePreviousRoute) !== -1;\r\n                        const authenticated = store.getState().auth.authenticated;\r\n                        if (toAuthRoute && !authenticated) return true;\r\n                        if (!toAuthRoute && authenticated) return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (onReady) onReady();\r\n            }}\r\n            onStateChange={onStateChange}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={initialRouteName}>\r\n                <Stack.Screen name=\"LoginRoot\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordScreen\"\r\n                    component={ResetPasswordScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen\r\n                    name=\"MyProfileScreen\"\r\n                    component={MyProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"MyProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noAvatar={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={themes.dark.text}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ProfileScreen\"\r\n                    component={ProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"ProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={themes.dark.text}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"SettingsScreen\"\r\n                    component={SettingsScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"SettingsScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader {...props} backButton={true} noSettingsButton={true} />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountScreen\"\r\n                    component={DeleteAccountScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"DeleteAccountScreen\"),\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} backButton={true} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountSuccessScreen\"\r\n                    component={DeleteAccountSuccessScreen}\r\n                    options={{title: screenTitle(\"DeleteAccountSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"BackendUnreachableScreen\"\r\n                    component={BackendUnreachableScreen}\r\n                    options={{title: screenTitle(\"BackendUnreachableScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResendVerifyEmailScreen\"\r\n                    component={ResendVerifyEmailScreen}\r\n                    options={{title: screenTitle(\"ResendVerifyEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.userSettings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {acceptAllCookies} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport CustomizeCookiesModal from \"./modals/CustomizeCookiesModal\";\r\nimport {hasUserGivenCookieConsent} from \"../state/static-storage-middleware\";\r\nimport Button from \"./Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n    consentDate: state.settings.userSettings.cookieConsentDate,\r\n}));\r\n\r\n// Component props\r\nexport type CookieBannerProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CookieBannerState = {showCustomize: boolean};\r\n\r\nclass CookieBanner extends React.Component<CookieBannerProps, CookieBannerState> {\r\n    constructor(props: CookieBannerProps) {\r\n        super(props);\r\n        this.state = {showCustomize: false};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, consentDate} = this.props;\r\n        const {showCustomize} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        if (hasUserGivenCookieConsent(consentDate)) return <></>;\r\n\r\n        return (\r\n            <>\r\n                <CustomModal\r\n                    visible={!showCustomize}\r\n                    animationType=\"slide\"\r\n                    fullWidth\r\n                    bottom\r\n                    nonDismissable\r\n                    modalViewStyle={styles.modalView}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <Text style={styles.cookieText}>{i18n.t(\"cookies.bannerText\")}</Text>\r\n                            <View style={styles.actions}>\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.acceptAll\")}\r\n                                    onPress={() => (store.dispatch as MyThunkDispatch)(acceptAllCookies())}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-filled\"\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.customize\")}\r\n                                    onPress={() => this.setState({...this.state, showCustomize: true})}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-hollow\"\r\n                                />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                />\r\n                <CustomizeCookiesModal\r\n                    visible={showCustomize}\r\n                    onHide={() => this.setState({...this.state, showCustomize: false})}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalView: {\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            justifyContent: \"center\",\r\n        },\r\n        cookieText: {\r\n            fontSize: 14,\r\n            lineHeight: 20,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        actions: {\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            maxWidth: 350,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            height: 40,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CookieBanner));\r\n","import * as React from \"react\";\r\n\r\nexport default class BottomSheetModalProvider extends React.Component<React.PropsWithChildren<unknown>> {\r\n    render(): JSX.Element {\r\n        return <>{this.props.children}</>;\r\n    }\r\n}\r\n","import {registerRootComponent} from \"expo\";\r\nimport React, {useState} from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\nimport {configureNotifications} from \"./notifications\";\r\nimport {initPolyfills} from \"./polyfills\";\r\nimport CookieBanner from \"./components/CookieBanner\";\r\nimport BottomSheetModalProvider from \"./components/bottom-sheet/BottomSheetModalProvider\";\r\n\r\nfunction App() {\r\n    initPolyfills();\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n    configureNotifications();\r\n\r\n    const [navigationReady, setNavigationReady] = useState<boolean>(false);\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <BottomSheetModalProvider>\r\n                            <Navigation onReady={() => setNavigationReady(true)} initialRoute={initialRoute} />\r\n                            {navigationReady && <ThemedStatusBar />}\r\n                        </BottomSheetModalProvider>\r\n                        <CookieBanner />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n","import * as Notifications from \"expo-notifications\";\r\nimport {Platform} from \"react-native\";\r\nimport {openChat, rootNavigate} from \"./navigation/utils\";\r\nimport {ResponseChatMessageDto} from \"./api/dto\";\r\nimport {receiveChatMessage} from \"./state/messaging/actions\";\r\nimport {areNotificationsSupported, getNotificationData} from \"./notifications-utils\";\r\nimport store from \"./state/store\";\r\nimport {DEBUG_MODE} from \"./constants/config\";\r\n\r\nexport function configureNotifications(): void {\r\n    if (!areNotificationsSupported()) return;\r\n\r\n    Notifications.setNotificationHandler({\r\n        handleNotification: async () => ({\r\n            shouldShowAlert: true,\r\n            shouldPlaySound: true,\r\n            shouldSetBadge: false,\r\n        }),\r\n    });\r\n\r\n    Notifications.addNotificationReceivedListener((notification) => {\r\n        const data = getNotificationData(notification);\r\n\r\n        if (DEBUG_MODE) {\r\n            console.log(\"Notification received:\");\r\n            console.log(data);\r\n        }\r\n\r\n        if (data.roomId && data.text) {\r\n            const message = data as ResponseChatMessageDto;\r\n            store.dispatch(receiveChatMessage(message));\r\n            /*\r\n                Since we shouldn't receive notifications when we're connected to the chat,\r\n                we don't have to take care of informing the server we've read the message here\r\n                (if we're receiving a notification, we're not on a screen where the message\r\n                is read on reception)\r\n            */\r\n        }\r\n    });\r\n\r\n    Notifications.addNotificationResponseReceivedListener((response) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const data = response.notification ? getNotificationData(response.notification) : (response as any).body;\r\n\r\n        if (data.roomId) {\r\n            openChat(data.roomId as string);\r\n\r\n            Notifications.getPresentedNotificationsAsync().then((notifs: Notifications.Notification[]) => {\r\n                // Dismiss all notifications of the same room\r\n                notifs\r\n                    .filter((n) => getNotificationData(n).roomId === data.roomId)\r\n                    .map((n) => n.request.identifier)\r\n                    .forEach(Notifications.dismissNotificationAsync);\r\n            });\r\n        }\r\n\r\n        if (data.groupId) rootNavigate(\"MainScreen\", {screen: \"TabGroups\", params: {screen: \"TabGroupsScreen\"}});\r\n    });\r\n\r\n    if (Platform.OS === \"android\") {\r\n        Notifications.setNotificationChannelAsync(\"default\", {\r\n            name: \"default\",\r\n            importance: Notifications.AndroidImportance.MAX,\r\n            vibrationPattern: [0, 250, 250, 250],\r\n            lightColor: \"#FF231F7C\",\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}