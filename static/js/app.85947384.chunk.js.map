{"version":3,"sources":["web-build/register-service-worker.js","assets/fonts/Raleway-VariableFont_wght.ttf","src/constants/config.ts","src/api/utils.ts","src/state/types.ts","src/constants/http-status.ts","src/api/converters.ts","src/state/profile/actions.ts","src/state/persistent-storage/static.ts","src/state/auth/actions.ts","src/api/errors.ts","src/state/persistent-storage/auth.ts","src/constants/universities.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/actions.ts","src/state/settings/reducer.ts","src/state/profile/reducer.ts","src/state/matching/actions.ts","src/state/matching/reducer.ts","src/state/messaging/actions.ts","src/api/chat-socket.ts","src/state/messaging/reducer.ts","src/api/dto.ts","src/navigation/utils.ts","src/state/navigation-middleware.ts","src/state/store.ts","src/state/auth-storage-middleware.ts","src/state/static-storage-middleware.ts","src/hooks/useCachedResources.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/ScreenWrapper.tsx","src/styles/general.ts","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/LoginTabBar.tsx","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/FormTextInput.tsx","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/FormSubmitButton.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/components/SvgPlaceholder.tsx","src/assets.ts","src/components/LocalImage.tsx","src/components/forms/ScrollFormWrapper.tsx","src/screens/TabLoginScreen.tsx","src/components/forms/SignupForm.tsx","src/screens/TabSignupFormScreen.tsx","src/navigation/LoginNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabNotImplementedScreen.tsx","src/components/modals/CustomModal.tsx","src/components/modals/BlockProfileModal.tsx","src/components/FormattedUniversity.tsx","src/components/ProfileAvatar.tsx","src/components/Chips.tsx","src/components/ProfilePreview.tsx","src/screens/TabMatchingScreen.tsx","src/styles/picker.ts","src/components/MultiPicker.tsx","src/components/MultiUniversityPicker.tsx","src/styles/toggles.ts","src/components/DegreeToggleMulti.tsx","src/components/LanguagePicker.tsx","src/components/RoleToggleMulti.tsx","src/components/FormattedOfferCategory.tsx","src/screens/MatchFilteringScreen.tsx","src/components/messaging/ChatRoomCard.tsx","src/screens/messaging/IndividualMessagingTab.tsx","src/screens/messaging/GroupMessagingTab.tsx","src/styles/headers.ts","src/components/headers/MainHeader.tsx","src/navigation/MessagingNavigator.tsx","src/screens/TabHomeScreen.tsx","src/components/headers/MatchScreenHeader.tsx","src/components/headers/FilteringScreenHeader.tsx","src/navigation/MainNavigator.tsx","src/styles/onboarding.ts","src/components/GenderToggleMulti.tsx","src/styles/tooltips.ts","src/components/CustomTooltip.tsx","src/components/OfferControl.tsx","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/FormattedDate.tsx","src/components/BirthDatePicker.tsx","src/components/BirthDateControl.tsx","src/components/GenderToggle.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/NationalityControl.tsx","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/screens/onboarding/OnboardingPersonalInfoScreen.tsx","src/components/PopUpSelector.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/screens/onboarding/OnboardingLanguageScreen.tsx","src/components/InterestsPicker.tsx","src/screens/onboarding/OnboardingInterestsScreen.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/components/DegreeToggle.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingTosScreen.tsx","src/screens/onboarding/OnboardingPrivacyScreen.tsx","src/screens/onboarding/index.ts","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/components/AsyncButton.tsx","src/screens/MatchSuccessScreen.tsx","src/components/forms/ResetPasswordForm.tsx","src/screens/ResetPasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/screens/messaging/ChatScreen.tsx","src/components/headers/ChatScreenHeader.tsx","src/components/RoleToggle.tsx","src/components/StaffRolePicker.tsx","src/components/utility/ErrorBoundary.tsx","src/components/BirthDatePicker.native.tsx","src/components/AvatarEditButton.tsx","src/components/forms/ValueCard.tsx","src/components/EnlargeableAvatar.tsx","src/components/forms/EditProfileForm.tsx","src/screens/MyProfileScreen.tsx","src/components/FormattedGender.tsx","src/components/ProfileView.tsx","src/screens/ProfileScreen.tsx","src/components/LocalePicker.tsx","src/screens/SettingsScreen.tsx","src/screens/DeleteAccountSuccessScreen.tsx","src/components/forms/DeleteAccountForm.tsx","src/screens/DeleteAccountScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/ThemedStatusBar.tsx","src/App.tsx"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports","Environment","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_HOST","SERVER_URL","CHAT_CONNECTED_ROUTES","encodeRequestParams","args","str","Object","keys","filter","key","undefined","map","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","length","requestBackend","endpoint","a","async","method","params","body","authToken","verbose","headers","Accept","Alert","alert","errorType","description","status","Authorization","accessToken","formattedParams","response","log","JSON","stringify","fetch","json","HttpStatusCode","stripSuperfluousOffers","offers","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","complete","common","avatarUrl","avatar","birthdate","Date","educationFields","id","profileOffers","interests","i","languages","type","staffDto","staffRoles","r","studentDto","degree","convertPartialProfileToCreateDto","profile","toJSON","staff","student","convertDtoToUser","convertDtoToRoom","users","profiles","p","_id","name","firstName","lastName","lastMessageSeenId","lastMessageSeenDate","lastMessage","msg","sender","find","u","senderId","convertDtoToChatMessage","messages","writing","messagePagination","page","canFetchMore","fetching","user","createdAt","updatedAt","PROFILE_ACTION_TYPES","storeStaticData","data","storageObject","AsyncStorage","setItem","readCachedStaticData","getItem","raw","parse","AUTH_ACTION_TYPES","setProfileFieldsSuccess","fields","PROFILE_SET_FIELDS_SUCCESS","createProfileSuccess","PROFILE_CREATE_SUCCESS","createProfile","dispatch","getState","token","auth","CREATED","payload","loadProfileOffersSuccess","fromCache","LOAD_PROFILE_OFFERS_SUCCESS","loadProfileInterestsSuccess","LOAD_PROFILE_INTERESTS_SUCCESS","fetchUserSuccess","FETCH_USER_SUCCESS","fetchProfileSuccess","FETCH_PROFILE_SUCCESS","localizeError","err","i18n","t","defaultValue","extractError","code","gatherValidationErrors","resp","OK","output","general","UNPROCESSABLE_ENTITY","errors","forEach","e","property","codes","generalError","readCachedCredentials","registerBegin","email","password","REGISTER_BEGIN","requestRegister","locale","settings","userSettings","registerSuccess","success","registerFailure","REGISTER_SUCCESS","REGISTER_FAILURE","loginSuccess","usingCachedCredentials","LOG_IN_SUCCESS","loginFailure","LOG_IN_FAILURE","requestLogin","logout","LOG_OUT","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","deleteAccountSuccess","DELETE_ACCOUNT_SUCCESS","setOnboardingValues","values","SET_ONBOARDING_VALUES","PARTNER_UNIVERSITIES","domain","country","extractNamesFromEmail","splitName","split","capitalize","toUpperCase","slice","firstname","lastname","getUniversityFromEmail","trim","uni","initialState","authenticated","validated","registerEmail","validatedEmail","onboarded","onboarding","gender","nationality","offerValues","interestIds","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","STAFF_ROLE_ICONS","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","en","locales","fr","welcome","picker","callToAction","login","tabsignin","tabsignup","emailAddress","passwordRepeat","send","forgotPassword","newPassword","forgotPasswordExplanation","cancel","ok","signupWelcome","noResultsFound","tos","modal","disclaimer1","disclaimer2","decline","accept","readMore","privacy","emailNotificationsLabel","emailValidation","validating","createAccount","validation","atLeastOne","addAtLeastOne","invalid","invalidDomain","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","language","specifyLevel","error_user_not_verified","user_not_found","email_or_password_incorrect","reset_password_no_token","unique","is_email","pageNotFound","pageDoesntExist","goHome","tabs","home","matching","messaging","notifications","myProfile","editProfile","educationFieldsPicker","placeholder","searchPlaceholder","multiple","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","university","search","selectCountry","countryPickerLanguageCode","profileType","profileTypes","allRoles","teaching","research","administration","technical","other","genders","male","female","dateOfBirth","months","0","1","2","3","4","5","6","7","8","9","10","11","fieldsOfEducation","apply","universities","universitiesPicker","logOut","title","subtitle","personalInfo","role","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","submit","getStarted","profileCreated","spokenLanguages","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageLevels","a1","a2","b1","b2","c1","c2","native","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","tango","sneakers","baking","tarot","art","tea","picnicking","motorcycles","parties","shopping","couchsurfing","netflix","cooking","vegan","brunch","politics","bbq","surfing","spirituality","gardening","astrology","climbing","tennis","writer","comedy","wine","diy","coffee","sailing","music","cycling","activism","trivia","travel","instagram","museum","karaoke","fashion","blogging","yoga","investing","petanque","theater","environmentalism","crossfit","dancing","hiking","running","golf","photography","vlogging","volunteering","tattoos","outdoors","esports","snowboarding","athlete","extrovert","podcasts","walking","vegetarian","reading","movies","foodie","soccer","skiing","sushi","introvert","skateboarder","festivals","fishing","swimming","expositions","gamer","piano","offerCategories","meet","discover","collaborate","allOffers","help","block","warning","action","resetPassword","instructions","button","deleteAccount","success1","success2","leave","inputLabel","tabIndividual","tabGroup","noMatches","noResults","noResultsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","chat","continue","noOffersSelected","screenTitles","suffix","LoginForm","ForgotPassword","TabSignup","OnboardingNameScreen","OnboardingPersonalInfoScreen","OnboardingLanguageScreen","OnboardingInterestsScreen","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingTosScreen","OnboardingPrivacyScreen","MessagingScreen","IndividualMessagingTab","GroupMessagingTab","ChatScreen","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","TabNotificationsScreen","MyProfileScreen","ProfileScreen","SettingsScreen","DeleteAccountScreen","DeleteAccountSuccessScreen","ValidationEmailSentScreen","ValidateEmailScreen","ResetPasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","MatchSuccessScreen","ForgotPasswordEmailSentScreen","sections","danger","about","darkTheme","deleteMyAccount","termsOfService","reportABug","developedBy","signup","SUPPORTED_LOCALES","getDefaultLocale","l","Localization","SETTINGS_ACTION_TYPES","LANGUAGES_CODES","toggleTheme","TOGGLE_THEME","getLocalizedLanguageItems","dict","translations","label","value","theme","localizedLanguageItems","MATCHING_ACTION_TYPES","offerIdToCategory","Map","fetchProfilesFailure","FETCH_PROFILES_FAILURE","fetchProfilesSuccess","FETCH_PROFILES_SUCCESS","refreshFetchedProfiles","FETCH_PROFILES_REFRESH","likeProfileSuccess","profileId","matchStatus","roomId","LIKE_PROFILE_SUCCESS","dislikeProfileSuccess","DISLIKE_PROFILE_SUCCESS","blockProfileSuccess","BLOCK_PROFILE_SUCCESS","MESSAGING_ACTION_TYPES","filters","types","fetchedProfiles","profilesPagination","myMatches","fetchingMyMatches","SOCKET_LOCATION","this","socket","connectCallbacks","writingTimeout","lastSentWritingState","connecting","connected","connectedState","f","listeners","on","consumeConnectCallbacks","m","onMessageReceived","onMessageRead","onWritingStateChange","emit","room","state","clearTimeout","setTimeout","sendWritingState","callback","push","connect","query","authorization","reconnectionDelay","reconnectionAttempts","registerListeners","readMessage","text","messageId","date","refreshWritingTimeout","disconnect","fetchMatchRoomsSuccess","rooms","FETCH_MATCH_ROOMS_SUCCESS","connectToChat","socketState","fail","CONNECT_TO_CHAT_FAILURE","CONNECT_TO_CHAT_BEGIN","chatSocket","activeRoom","receiveChatMessage","readChatMessage","receiveChatWriting","hasConnected","CONNECT_TO_CHAT_SUCCESS","joinChatRoomBegin","JOIN_CHAT_ROOM_BEGIN","joinChatRoomSuccess","JOIN_CHAT_ROOM_SUCCESS","joinChatRoom","JOIN_CHAT_ROOM_FAILURE","joinRoom","sendChatMessageSuccess","message","SEND_MESSAGE_SUCCESS","sendChatMessage","localChatUser","sent","sendMessage","SEND_MESSAGE_FAILURE","RECEIVE_MESSAGE","RECEIVE_WRITING_STATE","READ_MESSAGE","beginFetchEarlierMessages","FETCH_EARLIER_MESSAGES_BEGIN","fetchEarlierMessagesFailure","FETCH_EARLIER_MESSAGES_FAILURE","fetchEarlierMessagesSuccess","FETCH_EARLIER_MESSAGES_SUCCESS","fetchMatchRoom","matchRooms","matchRoomsOrdered","matchRoomsPagination","toLocalChatUser","updateRoom","setAsFirst","otherRooms","concat","OfferCategory","MatchActionStatus","initOfferValue","val","genderVal","allowChooseGender","typeVal","allowChooseProfileType","offerId","rootNavigationRef","React","rootNavigate","route","current","navigate","screenTitle","headerTitle","rootReducer","combineReducers","verificationToken","names","SET_ONBOARDING_OFFER_VALUE","SET_THEME","SET_LOCALE","category","sort","b","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","SET_FILTERS","FETCH_PROFILES_BEGIN","pagination","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","FETCH_MATCH_ROOMS_BEGIN","FETCH_MATCH_ROOMS_FAILURE","FETCH_MATCH_ROOMS_REFRESH","DISCONNECT_FROM_CHAT","LEAVE_ROOM","existingMessage","combinedMiddleware","applyMiddleware","thunk","next","toStore","storeAuthInformation","removeItem","Matched","createStore","loggedInFromCache","light","textWhite","textBlack","textLight","textInverted","background","cardBackground","accent","accentSlight","accentSecondary","accentTernary","tint","actionNeutral","okay","warn","tabIconDefault","tabIconSelected","componentBorder","chatBubble","dark","preTheme","generator","styles","themes","ScreenWrapper","props","themedStyles","View","style","wrapper","container","children","StyleSheet","create","flex","backgroundColor","justifyContent","flexDirection","alignItems","Platform","OS","maxWidth","withTheme","styleTextThin","fontFamily","fontWeight","styleTextLight","webFontFamily","navigation","Text","TouchableOpacity","onPress","replace","link","linkText","padding","fontSize","textAlign","color","marginTop","paddingVertical","reduxConnector","store","Staging","ActivityIndicator","size","successText","path","fallbackRoute","fallback","location","attemptRedirectToApp","width","marginVertical","lineHeight","FontAwesome","mailIcon","config","prefixes","Linking","screens","LoginScreen","TabSignin","MainScreen","TabHome","TabMatching","MAtchFilteringScren","TabMessaging","TabNotifications","ValidateEmailSentScreen","OnboardingScreen","TabBarComponent","height","ReAnimated","Value","insets","top","Dimensions","get","setValue","getFullHeight","Keyboard","addListener","timing","toValue","getCollapsedHeight","duration","easing","Easing","ease","start","index","isFocused","event","target","canPreventDefault","defaultPrevented","descriptors","position","tabBarWrapper","tabBar","routes","options","toLowerCase","inputRange","_","opacity","Animated","interpolate","outputRange","tabButton","tabButtonBg","accessibilityRole","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","onLongPress","tabButtonText","tabButtonTextFocused","Component","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","letterSpacing","textTransform","waveImageStyle","bottom","margin","withSafeAreaInsets","InputLabel","otherProps","InputErrorText","errorStr","marginBottom","ValidatedTextInput","inputRef","createRef","focused","focus","showErrorText","wrapperStyle","untouched","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","onBlur","onFocus","showError","paddingBottom","TextInput","ref","setState","defaultProps","emailProps","keyboardType","autoCompleteType","textContentType","autoCapitalize","autoCorrect","passwordProps","secureTextEntry","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","isEmail","isPassword","formStyles","inputErrorText","inputRow","actionRow","buttonMajor","borderRadius","buttonMajorText","getLoginTextInputsStyleProps","wrapperVerticalMargin","outline","commonStyle","textInputWrapper","textInput","paddingHorizontal","borderWidth","textInputError","borderBottomWidth","borderBottomColor","textInputValid","placeholderTextColor","loginTabsStyles","versionInfoContainer","left","versionText","versionDisclaimerContainer","versionDisclaimerIcon","debugContainer","debugTitle","debugButton","debugButtonText","toggleThemeContainer","right","toggleThemeButton","toggleThemeIcon","erasmusLogo","FormError","FormSubmitButton","submitting","icon","textStyle","loadingIndicatorStyle","LoginFormSchema","shape","pwdInputRef","setFieldValue","oldProps","onSuccessfulSubmit","setFieldError","remoteErrors","fstyles","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","returnKeyType","blurOnSubmit","onSubmitEditing","loginButton","MaterialCommunityIcons","loginButtonIcon","forgotPwdLink","forgotPasswordText","marginLeft","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","formikCfg","goBack","buttonCancel","buttonSend","marginRight","SvgPlaceholder","loaded","assetDictEn","assetDictFr","getLocalImage","onLoad","finish","default","assetDictCommon","LocalImage","imageKey","img","forceUpdate","Image","source","ScrollFormWrapper","keyboardShown","ScrollView","keyboardShouldPersistTaps","contentContainerStyle","minHeight","onLayout","nativeEvent","layout","KeyboardAvoidingView","behavior","LoginTabComponent","resizeMode","n","Math","round","random","level","MaterialIcons","ForgotPasswordTabComponent","SubTabLogin","SubTabForgotPassword","SignupFormSchema","SignupForm","pwdField1Ref","pwdField2Ref","validateOnChange","createAccountButton","inlineInputs","inlineInputLeft","inlineInputRight","SignupTabComponent","SigninStack","createStackNavigator","Tab","createMaterialTopTabNavigator","LoginNavigator","Navigator","LoginTabBar","Screen","component","headerShown","TabSignupFormScreen","LogOutButton","onLogOut","TabNotImplementedScreen","FontAwesome5","constructionIcon","separator","logoutButton","CustomModalClass","modalVisible","visible","setModalVisible","onHide","modalViewStyle","onClick","cursor","boxShadow","renderContent","BlockProfileModal","onBlock","CustomModal","hide","actionButtonsWrapper","TouchableHighlight","actionButton","actionButtonCancel","actionText","actionButtonDecline","FormattedUniversity","containerStyle","countryCode","flagSize","withEmoji","ProfileAvatar","avatarProps","avatarTitle","avatarSource","uri","Chips","items","removable","onRemove","chipStyle","Chip","chip","chipText","chipRemoveButton","chipRemoveIcon","flexWrap","ProfilePreview","expanded","PROFILE_PREVIEW_COLLAPSED_HEIGHT","blockModalOpen","animating","x","y","PROFILE_PREVIEW_EXPANDED_HEIGHT","elastic","out","linear","onFinish","onHidden","collapse","expand","onExpand","univ","fullName","chipStyleProps","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","useNativeAnimations","friction","onSwipeableRightWillOpen","onSwipeLeft","onSwipeableLeftWillOpen","onSwipeRight","leftThreshold","rightThreshold","renderRightActions","swipeAction","swipeActionRight","swipeActionContent","swipeActionContentRight","swipeActionText","renderLeftActions","swipeActionLeft","swipeActionContentLeft","toggleExpanded","activeOpacity","touchable","collapsedContent","avatarContainer","rounded","infoContainer","infoText","expandedContent","expandedSectionTitle","blockButton","blockButtonIcon","toProfileId","overflow","marginHorizontal","paddingRight","sideMargin","paddingLeft","alignSelf","verticalSpacing","cardPadding","flexShrink","flexGrow","actionContainer","fetchingProfiles","justRefreshed","scrollViewRef","hiddenIds","notEmpty","k","filterParams","limit","paginated","meta","currentPage","totalPages","fetchMore","previewComponents","scroll","scrollTo","animated","hideProfile","scroller","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","layoutMeasurement","contentOffset","contentSize","matchContainer","loadingIndicatorContainer","noResultsContainer","noResultsText1","noResultsText2","topBar","flexBasis","paddingTop","borderStyle","borderColor","filtersIcon","headerContainer","pickerStyles","overlay","maxHeight","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","openButton","openButtonText","chipContainer","MultiPicker","tempSelected","open","dropdownWrapperHeight","has","set","genLabel","updateItems","selected","onChange","multipleText","searchablePlaceholder","showChips","single","viewProps","selectedItems","toString","item","overlayStyle","isVisible","onRequestClose","close","onBackdropPress","searchable","onChangeItem","scrollViewProps","showArrow","dropDownMaxHeight","selectedLabelStyle","display","itemStyle","activeItemStyle","activeLabelStyle","showSelected","MultiUniversityPicker","univKey","getToggleStyleProps","nobuttonBariant","innerBorderStyle","buttonContainerStyle","buttonStyle","selectedButtonStyle","selectedTextStyle","disabledStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonLabels","noButtonVariant","onSelect","styleProps","idx","selectMultiple","selectedIndexes","indexOf","buttons","LanguagePicker","languageId","roles","FormattedOfferCategory","iconProps","iconSize","translationKey","SvgIcon","getLocalSvg","textContainer","underline","zIndex","textShadowColor","textShadowOffset","textShadowRadius","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","entryContainer","entryLabel","Switch","onValueChange","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","resetButtonIcon","sectionTitle","entryControls","ClearFilterButton","twoLineEntryContainer","ChatRoomCard","CARD_HEIGHT","localUser","lastMessageComponent","isRead","pad","num","padStart","lastMessageText","lastMessageTextNew","numberOfLines","lastMessageTime","getHours","getMinutes","noMessageText","overshootRight","SwipeActionButton","avatarStyle","swipeActionButton","swipeActionButtonIcon","ACTION_BUTTON_WIDTH","borderTopRightRadius","borderBottomRightRadius","roomIds","fetchingRooms","scrollContent","noMatchesContainer","noMatchesText","searchBarContainer","searchBarInputContainer","headerStyles","wrapperNoShadow","backButton","backButtonIcon","rightButton","rightIcon","MainHeaderClass","nav","canGoBack","navigateBack","rightButtons","noShadow","noSettingsButton","noAvatar","scene","textColor","back","titleStyle","pressAvatar","ButtonComponent","iconStyle","MainHeaderComp","MainHeader","Stack","Header","stackProps","hstyles","MessagingNavigator","screenOptions","header","initialRouteName","tabBarLabel","alphaText","MatchScreenHeaderClass","MatchScreenHeader","FilteringScreenHeaderClass","actionIcon","applyFilters","FilteringScreenHeaderComp","FilteringScreenHeader","TabNavigator","createBottomTabNavigator","TabBarIcon","TabBarLabel","TabHomeStack","TabHomeNavigator","TabMatchingStack","TabMatchingNavigator","TabNotificationsStack","TabNotificationsNavigator","useSafeAreaInsets","tabBarOptions","activeTintColor","tabStyle","tabBarIcon","onboardingStyle","slideScrollView","slideContentWrapper","slideNavWrapper","navButton","navButtonIcon","finishButtonText","tosSlideStyle","actionsWrapper","actionButtonTextDecline","actionButtonTextAccept","readMoreText","onboardingOffersStyle","categoryTitleText","tooltipStyles","alignContent","CustomTooltip","popover","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","checked","setAllValues","checkboxContainer","offerName","helpIcon","buttonsWrapper","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","OnboardingSlide","hideNavNext","hasNext","hasPrevious","keyboardVerticalOffset","previous","VALIDATION_SCHEMA","lastNameInputRef","nextProps","prev","dismiss","getOnboardingTextInputsStyleProps","enablesReturnKeyAutomatically","FormattedDate","localizedMonth","getMonth","formattedDate","getDate","getFullYear","minDate","maxDate","now","setFullYear","formatDate","d","toISOString","BirthDatePicker","max","BirthDateControl","buttonOk","showModal","dateText","hideModal","disabled","selectedIndex","NationalityPicker","filterProps","withFlag","withFilter","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","DARK_THEME","DEFAULT_THEME","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","NationalityControl","SectionedMultiPicker","selectRef","section","genSectionLabel","_toggleSelector","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","select","onSelectedItemsChange","uniqueKey","displayKey","subKey","onCancel","onConfirm","IconRenderer","icons","showDropDowns","readOnlyHeadings","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsComponent","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","confirmFontFamily","itemFontFamily","searchTextFontFamily","subItemFontFamily","modalWrapper","EducationFieldCategory","scrollView","overflowY","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","subItemText","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","PopUpSelector","modalRef","valueDict","fromSelectedProp","newValue","valueStyle","pstyles","show","rowContainer","toggleValue","checkboxWrapper","checkedIcon","uncheckedIcon","some","LanguageLevelPicker","SpokenLanguagesInput","hasErrors","levelDict","rows","languageLabel","levelPicker","setLanguageLevel","removeRow","deleteIcon","languageCodes","setLanguages","textAlignVertical","allInterests","updateValues","interest","interestId","roleButton","roleButtonIconStudent","roleButtonTextStudent","roleButtonIconStaff","roleButtonTextStaff","studentColor","staffColor","roleButtonText","roleButtonIcon","OnboardingOfferScreen1","Discover","OnboardingOfferScreen2","Collaborate","OnboardingOfferScreen3","Meet","DegreeToggle","onUpdate","studentThemedStyles","staffThemedStyles","buttonIcon","buttonText","thumbColor","trackColor","true","false","studentRender","staffRender","TOSDeclinedModal","TextLink","textProps","declined","ONBOARDING_SCREENS","ONBOARDING_ORDER","OnboardingStack","ComponentClass","temp","OnboardingNavigator","showLabel","showIcon","springConfig","stiffness","damping","mass","swipeEnabled","lazy","lazyPreloadDistance","AsyncButton","loading","getRoomId","connectPromise","Promise","resolve","all","ResetPasswordFormSchema","ResetPasswordForm","pwdRepeatRef","connectToRoom","leaveRoom","fetchEarlier","beforeDate","convertDto","chatComponent","isWritingId","userWriting","lastMessageDict","renderSend","sendContainer","renderBubble","renderTicks","currentMessage","messageTicksContainer","received","messageTick","bubbleTextLeft","bubbleTextRight","bubbleWrapperLeft","bubbleWrapperRight","renderMessage","lm","messageReadContainer","messageReadAvatar","messageReadAvatarText","renderInputToolbar","inputToolbarContainer","primaryStyle","inputToolbarPrimary","renderFooter","ChatFooter","renderActions","ChatActions","actionsProps","onInputTextChanged","setWriting","onSend","loadEarlier","isLoadingEarlier","onLoadEarlier","timeFormat","listViewProps","onEndReached","autoFocus","multiline","minInputToolbarHeight","MIN_INPUT_HEIGHT","showUserAvatar","renderAvatar","renderCustomView","dotColor","dotAmplitude","dotSpeed","dotMargin","dotRadius","dotX","dotY","ImagePicker","mediaTypes","Images","allowsEditing","aspect","words","floor","GiftedChat","messageIdGenerator","borderTopWidth","minWidth","ChatScreenHeaderClass","ChatScreenHeaderComp","ChatScreenHeader","ErrorBoundary","componentStack","minimumDate","maximumDate","mode","AvatarEditButton","ensurePermission","Permissions","showPicker","quality","result","cancelled","onPictureSelected","ValueCard","renderModalContent","renderInput","oneLine","modalTouchable","setModal","modalLabel","modalErrorText","modalActions","modalCancel","modalActionText","modalOk","modalOpen","initialValue","validate","validator","validateSync","setError","overrideModal","noModal","locked","cardWrapper","cardContent","cardLabelContainer","cardLabel","rightIconContainer","Modal","transparent","animationType","EnlargeableAvatar","enlarged","toggleEnlarged","backdropStyle","overlayBackdrop","enlargedAvatarContainer","enlargedAvatar","aspectRatio","Spacer","EditProfileForm","profileFieldComponents","cardText","onFieldChanged","cc","staffRoleButton","OfferCategoryRow","onApply","screenWrapper","topView","imageInfo","image","mimeType","SET_AVATAR_FAILURE","fileName","s3Url","blob","imageBlob","response2","payload2","universityContainer","scrollWrapper","formWrapper","offerVal","updatedVal","avatarAccessory","PROFILE_SET_FIELDS_FAILURE","setProfileFields","FormattedGender","ProfileView","getRouteParams","fetchProfile","LocalePicker","versionClickCount","card","cardIcon","localeButton","localButtonValue","redActionButton","logoutText","deleteAccountText","logosContainer","logo","logoSeaEuAround","logoErasmus","logoJA","Section","sectionTitleContainer","sectionIcon","DeleteAccountFormSchema","DeleteAccountForm","warningIcon","consumedInitialRoute","previousRoute","onStateChange","getCurrentRoute","toChat","fromChat","initialRoute","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","onReady","MainNavigator","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","forFadeFromBottomAndroid","currentTheme","StatusBar","registerRootComponent","isLoadingComplete","setLoadingComplete","SplashScreen","cacheIsGood","Font","font","raleway","require","credentials","loadResourcesAndDataAsync","useCachedResources","fallbacks"],"mappings":"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KC,GDHCC,GAA4B,CACrC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,O,SCvLQD,K,+BAAAA,E,qCAAAA,E,kCAAAA,Q,KAsBL,IAGME,GAAc,iBAA0B,CAAClqB,KAAMgqB,GAAsBG,e,qkBCvBlF,SAASC,GAA0BrkB,GAC/B,IAAMskB,EAAOC,GACP5V,EAAiB2V,EAAKtkB,GAAQ2O,eAAiB2V,EAAI,GAAO3V,cAChE,OAAOuV,GAAgBztB,KAAI,SAACoI,GAAD,MAAmB,CAC1C2lB,MAAO7V,EAAc9P,IAAd,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","file":"static/js/app.85947384.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Raleway-VariableFont_wght.ttf\";","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport Constants from \"expo-constants\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = Constants.manifest.version!;\r\nexport const APP_SCHEME: string = Constants.manifest.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const SERVER_HOST: string = extra.SERVER_HOST;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\n\r\n/**\r\n * The number of resources fetched per request when scrolling in infinite scrolling containers.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8; // Matching tab\r\nexport const ROOMS_FETCH_LIMIT = 10; // Messaging tab\r\nexport const MESSAGES_FETCH_LIMIT = 12; // Chat\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n\r\nexport const CHAT_CONNECTED_ROUTES: NavigatorRoute[] = [\r\n    \"ChatScreen\",\r\n    \"IndividualMessagingTab\",\r\n    \"GroupMessagingTab\",\r\n    \"MessagingScreen\",\r\n];\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport {RequestResponse, TokenDto} from \"./dto\";\r\n\r\n// Request-related types\r\ntype Primitive = string | number | boolean | Primitive[] | undefined;\r\ntype URLParams = {[key: string]: Primitive};\r\ntype URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    authToken: TokenDto | null | undefined = undefined,\r\n    verbose = false,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (authToken !== undefined) {\r\n        if (authToken === null) {\r\n            console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {errorType: \"error.no-auth\", description: \"Endpoint requires authentication\", status: 401};\r\n        } else headers.Authorization = `Bearer ${authToken.accessToken}`;\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n    let response: Response | null = null;\r\n\r\n    try {\r\n        if (verbose) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        const json = {...(await response.json()), status: response.status};\r\n        if (verbose) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        console.error(\r\n            `An unexpected error occured with a request to ${endpoint}. ` +\r\n                `Method = ${method}, authToken = ${authToken}, params=${JSON.stringify(params)}, ` +\r\n                `body=${JSON.stringify(body)}`,\r\n        );\r\n        console.error(error);\r\n        console.error(\"Response received from server:\", response);\r\n        return {errorType: \"error.unknown\", description: \"A client-side exception was raised.\", status: 400};\r\n    }\r\n}\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {\r\n    InterestDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    RemoteValidationErrors,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {ChatRoom, ChatRoomUser} from \"../model/chat-room\";\r\nimport {UserSettings} from \"../model/user-settings\";\r\n\r\nexport type FailableActionReturn = {success: boolean; errors?: string[]};\r\nexport type FailableThunkAction = AppThunk<Promise<FailableActionReturn>>;\r\nexport type ValidatedActionReturn = {success: boolean; errors?: RemoteValidationErrors};\r\nexport type ValidatedThunkAction = AppThunk<Promise<ValidatedActionReturn>>;\r\n\r\nexport type PaginatedState = {page: number; canFetchMore: boolean; fetching: boolean};\r\nexport const initialPaginatedState = (): PaginatedState => ({page: 1, canFetchMore: true, fetching: false});\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    type: Role | null;\r\n    degree: Degree | null;\r\n    staffRoles: {[key: string]: boolean};\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n};\r\n\r\nexport type SettingsState = {\r\n    userSettings: UserSettings;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    fetchedProfiles: UserProfile[];\r\n    profilesPagination: PaginatedState;\r\n    myMatches: UserProfile[];\r\n    fetchingMyMatches: boolean;\r\n};\r\n\r\nexport type MessagingState = {\r\n    socketState: {connecting: boolean; connected: boolean};\r\n    matchRooms: {[key: string]: ChatRoom}; // store by id for faster access\r\n    matchRoomsOrdered: string[];\r\n    matchRoomsPagination: PaginatedState;\r\n    activeRoom: ChatRoom | null;\r\n    localChatUser: ChatRoomUser | null;\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n    messaging: MessagingState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n","/**\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n * @see {@link https://gist.github.com/scokmen/f813c904ef79022e84ab2409574d1b45}\r\n */\r\nexport enum HttpStatusCode {\r\n    /**\r\n     * The server has received the request headers and the client should proceed to send the request body\r\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n     */\r\n    CONTINUE = 100,\r\n\r\n    /**\r\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n     */\r\n    SWITCHING_PROTOCOLS = 101,\r\n\r\n    /**\r\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n     * This prevents the client from timing out and assuming the request was lost.\r\n     */\r\n    PROCESSING = 102,\r\n\r\n    /**\r\n     * Standard response for successful HTTP requests.\r\n     * The actual response will depend on the request method used.\r\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n     */\r\n    OK = 200,\r\n\r\n    /**\r\n     * The request has been fulfilled, resulting in the creation of a new resource.\r\n     */\r\n    CREATED = 201,\r\n\r\n    /**\r\n     * The request has been accepted for processing, but the processing has not been completed.\r\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n     */\r\n    ACCEPTED = 202,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The server is a transforming proxy that received a 200 OK from its origin,\r\n     * but is returning a modified version of the origin's response.\r\n     */\r\n    NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n    /**\r\n     * The server successfully processed the request and is not returning any content.\r\n     */\r\n    NO_CONTENT = 204,\r\n\r\n    /**\r\n     * The server successfully processed the request, but is not returning any content.\r\n     * Unlike a 204 response, this response requires that the requester reset the document view.\r\n     */\r\n    RESET_CONTENT = 205,\r\n\r\n    /**\r\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n     * or split a download into multiple simultaneous streams.\r\n     */\r\n    PARTIAL_CONTENT = 206,\r\n\r\n    /**\r\n     * The message body that follows is an XML message and can contain a number of separate response codes,\r\n     * depending on how many sub-requests were made.\r\n     */\r\n    MULTI_STATUS = 207,\r\n\r\n    /**\r\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n     * and are not being included again.\r\n     */\r\n    ALREADY_REPORTED = 208,\r\n\r\n    /**\r\n     * The server has fulfilled a request for the resource,\r\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n     */\r\n    IM_USED = 226,\r\n\r\n    /**\r\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n     * For example, this code could be used to present multiple video format options,\r\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n     */\r\n    MULTIPLE_CHOICES = 300,\r\n\r\n    /**\r\n     * This and all future requests should be directed to the given URI.\r\n     */\r\n    MOVED_PERMANENTLY = 301,\r\n\r\n    /**\r\n     * This is an example of industry practice contradicting the standard.\r\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n     * use the 302 status code as if it were the 303.\r\n     */\r\n    FOUND = 302,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The response to the request can be found under another URI using a GET method.\r\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n     * the server has received the data and should issue a redirect with a separate GET message.\r\n     */\r\n    SEE_OTHER = 303,\r\n\r\n    /**\r\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n     */\r\n    NOT_MODIFIED = 304,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n     */\r\n    USE_PROXY = 305,\r\n\r\n    /**\r\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n     */\r\n    SWITCH_PROXY = 306,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n     * For example, a POST request should be repeated using another POST request.\r\n     */\r\n    TEMPORARY_REDIRECT = 307,\r\n\r\n    /**\r\n     * The request and all future requests should be repeated using another URI.\r\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n     */\r\n    PERMANENT_REDIRECT = 308,\r\n\r\n    /**\r\n     * The server cannot or will not process the request due to an apparent client error\r\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n     */\r\n    BAD_REQUEST = 400,\r\n\r\n    /**\r\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n     */\r\n    UNAUTHORIZED = 401,\r\n\r\n    /**\r\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n     */\r\n    PAYMENT_REQUIRED = 402,\r\n\r\n    /**\r\n     * The request was valid, but the server is refusing action.\r\n     * The user might not have the necessary permissions for a resource.\r\n     */\r\n    FORBIDDEN = 403,\r\n\r\n    /**\r\n     * The requested resource could not be found but may be available in the future.\r\n     * Subsequent requests by the client are permissible.\r\n     */\r\n    NOT_FOUND = 404,\r\n\r\n    /**\r\n     * A request method is not supported for the requested resource;\r\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n     */\r\n    METHOD_NOT_ALLOWED = 405,\r\n\r\n    /**\r\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n     */\r\n    NOT_ACCEPTABLE = 406,\r\n\r\n    /**\r\n     * The client must first authenticate itself with the proxy.\r\n     */\r\n    PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n    /**\r\n     * The server timed out waiting for the request.\r\n     * According to HTTP specifications:\r\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n     */\r\n    REQUEST_TIMEOUT = 408,\r\n\r\n    /**\r\n     * Indicates that the request could not be processed because of conflict in the request,\r\n     * such as an edit conflict between multiple simultaneous updates.\r\n     */\r\n    CONFLICT = 409,\r\n\r\n    /**\r\n     * Indicates that the resource requested is no longer available and will not be available again.\r\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n     * Clients such as search engines should remove the resource from their indices.\r\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n     */\r\n    GONE = 410,\r\n\r\n    /**\r\n     * The request did not specify the length of its content, which is required by the requested resource.\r\n     */\r\n    LENGTH_REQUIRED = 411,\r\n\r\n    /**\r\n     * The server does not meet one of the preconditions that the requester put on the request.\r\n     */\r\n    PRECONDITION_FAILED = 412,\r\n\r\n    /**\r\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n     */\r\n    PAYLOAD_TOO_LARGE = 413,\r\n\r\n    /**\r\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n     * in which case it should be converted to a POST request.\r\n     * Called \"Request-URI Too Long\" previously.\r\n     */\r\n    URI_TOO_LONG = 414,\r\n\r\n    /**\r\n     * The request entity has a media type which the server or resource does not support.\r\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n     */\r\n    UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n    /**\r\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n     * Called \"Requested Range Not Satisfiable\" previously.\r\n     */\r\n    RANGE_NOT_SATISFIABLE = 416,\r\n\r\n    /**\r\n     * The server cannot meet the requirements of the Expect request-header field.\r\n     */\r\n    EXPECTATION_FAILED = 417,\r\n\r\n    /**\r\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n     */\r\n    I_AM_A_TEAPOT = 418,\r\n\r\n    /**\r\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n     */\r\n    MISDIRECTED_REQUEST = 421,\r\n\r\n    /**\r\n     * The request was well-formed but was unable to be followed due to semantic errors.\r\n     */\r\n    UNPROCESSABLE_ENTITY = 422,\r\n\r\n    /**\r\n     * The resource that is being accessed is locked.\r\n     */\r\n    LOCKED = 423,\r\n\r\n    /**\r\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n     */\r\n    FAILED_DEPENDENCY = 424,\r\n\r\n    /**\r\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n     */\r\n    UPGRADE_REQUIRED = 426,\r\n\r\n    /**\r\n     * The origin server requires the request to be conditional.\r\n     * Intended to prevent \"the 'lost update' problem, where a client\r\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n     */\r\n    PRECONDITION_REQUIRED = 428,\r\n\r\n    /**\r\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n     */\r\n    TOO_MANY_REQUESTS = 429,\r\n\r\n    /**\r\n     * The server is unwilling to process the request because either an individual header field,\r\n     * or all the header fields collectively, are too large.\r\n     */\r\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n    /**\r\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n     */\r\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n    /**\r\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n     */\r\n    INTERNAL_SERVER_ERROR = 500,\r\n\r\n    /**\r\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n     */\r\n    NOT_IMPLEMENTED = 501,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n     */\r\n    BAD_GATEWAY = 502,\r\n\r\n    /**\r\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n     * Generally, this is a temporary state.\r\n     */\r\n    SERVICE_UNAVAILABLE = 503,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n     */\r\n    GATEWAY_TIMEOUT = 504,\r\n\r\n    /**\r\n     * The server does not support the HTTP protocol version used in the request\r\n     */\r\n    HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n    /**\r\n     * Transparent content negotiation for the request results in a circular reference.\r\n     */\r\n    VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n    /**\r\n     * The server is unable to store the representation needed to complete the request.\r\n     */\r\n    INSUFFICIENT_STORAGE = 507,\r\n\r\n    /**\r\n     * The server detected an infinite loop while processing the request.\r\n     */\r\n    LOOP_DETECTED = 508,\r\n\r\n    /**\r\n     * Further extensions to the request are required for the server to fulfill it.\r\n     */\r\n    NOT_EXTENDED = 510,\r\n\r\n    /**\r\n     * The client needs to authenticate to gain network access.\r\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n     */\r\n    NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import {\r\n    ChatRoomProfileDto,\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    OfferValueDto,\r\n    ResponseChatMessageDto,\r\n    ResponseProfileDto,\r\n    ResponseProfileDtoStaff,\r\n    ResponseProfileDtoStudent,\r\n    ResponseRoomDto,\r\n    ResponseUserDto,\r\n} from \"./dto\";\r\nimport {UserProfile, UserProfileCommon, UserProfileStaff, UserProfileStudent} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../model/chat-room\";\r\nimport {initialPaginatedState} from \"../state/types\";\r\nimport {Role, StaffRole} from \"../constants/profile-constants\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    const common: UserProfileCommon = {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: (dto.interests || []).map((i) => i.id),\r\n        languages: dto.languages || [],\r\n    };\r\n\r\n    let complete: UserProfile;\r\n    if (dto.type === \"staff\") {\r\n        const staffDto = dto as ResponseProfileDtoStaff;\r\n        complete = {...common, staffRoles: (staffDto.staffRoles || []).map((r) => r.id as StaffRole)};\r\n    } else {\r\n        const studentDto = dto as ResponseProfileDtoStudent;\r\n        complete = {...common, degree: studentDto.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        interests: profile.interests.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    let complete: CreateProfileDto;\r\n    if (profile.type === \"staff\") {\r\n        const staff = profile as UserProfileStaff;\r\n        complete = {...common, staffRoles: staff.staffRoles.map((id: string) => ({id}))};\r\n    } else {\r\n        const student = profile as UserProfileStudent;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(\r\n    profile: Partial<UserProfile>,\r\n    type?: Role,\r\n): Partial<CreateProfileDto> {\r\n    const common: Partial<CreateProfileDtoCommon> = {\r\n        ...profile,\r\n        type,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        interests: profile.interests?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n\r\n    let complete: Partial<CreateProfileDto>;\r\n    if (type === \"staff\") {\r\n        const staff = profile as Partial<UserProfileStaff>;\r\n        complete = {...common, staffRoles: (staff.staffRoles || []).map((id: string) => ({id}))};\r\n    } else {\r\n        const student = profile as Partial<UserProfileStudent>;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToRoom(dto: ResponseRoomDto): ChatRoom {\r\n    const users: ChatRoomUser[] = dto.profiles.map((p: ChatRoomProfileDto) => ({\r\n        _id: p.id,\r\n        name: `${p.firstName} ${p.lastName}`,\r\n        avatar: p.avatar || \"\",\r\n        lastMessageSeenId: p.lastMessageSeenId,\r\n        lastMessageSeenDate: p.lastMessageSeenDate ? new Date(p.lastMessageSeenDate) : null,\r\n    }));\r\n\r\n    // Try to find the sender of the last message in the list of users that are in the room\r\n    let lastMessage = null;\r\n    if (dto.lastMessage) {\r\n        const msg: ResponseChatMessageDto = dto.lastMessage;\r\n        const sender = users.find((u) => u._id == msg.senderId);\r\n        if (sender) lastMessage = convertDtoToChatMessage(sender, msg);\r\n    }\r\n\r\n    return {\r\n        ...dto,\r\n        users,\r\n        messages: [],\r\n        lastMessage,\r\n        writing: {},\r\n        messagePagination: initialPaginatedState(),\r\n    };\r\n}\r\n\r\nexport function convertDtoToChatMessage(user: ChatRoomUser, dto: ResponseChatMessageDto): ChatRoomMessage {\r\n    return {\r\n        ...dto,\r\n        _id: dto.id,\r\n        createdAt: new Date(dto.updatedAt),\r\n        user,\r\n    };\r\n}\r\n","import {AppThunk} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    RequestResponse,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n    SignedUrlResponseDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {convertDtoToProfile, convertDtoToUser, convertPartialProfileToCreateDto} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {readCachedStaticData} from \"../persistent-storage/static\";\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_FAILURE = \"PROFILE/SET_FIELDS_FAILURE\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    FETCH_PROFILE_SUCCESS = \"PROFILE/FETCH_PROFILE_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type SetProfileFieldsFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\n\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type FetchProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\n\r\nexport type SetAvatarFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | SetProfileFieldsFailureAction\r\n    | SetProfileFieldsSuccessAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | FetchProfileSuccessAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\nconst setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nconst setProfileFieldsFailure = (): SetProfileFieldsFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_FAILURE,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const type = getState().profile.user?.profile?.type;\r\n\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields, type);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(setProfileFieldsSuccess(fields));\r\n    else dispatch(setProfileFieldsFailure());\r\n};\r\n\r\nconst createProfileSuccess = (profile: UserProfile): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profile = convertDtoToProfile(payload as ResponseProfileDto);\r\n        dispatch(createProfileSuccess(profile));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"offers\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const offers = payload as OfferDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = offers.length == 0;\r\n                dispatch(loadProfileOffersSuccess(cacheIsGood ? fromCache.data : offers, cacheIsGood));\r\n            } else dispatch(loadProfileOffersSuccess(offers));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"interests\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const interests = payload as InterestDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = interests.length == 0;\r\n                dispatch(loadProfileInterestsSuccess(cacheIsGood ? fromCache.data : interests, cacheIsGood));\r\n            } else dispatch(loadProfileInterestsSuccess(interests));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const user = convertDtoToUser(payload as ResponseUserDto);\r\n        dispatch(fetchUserSuccess(user));\r\n    }\r\n};\r\n\r\nconst fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const fetchProfile = (id: string): AppThunk<Promise<UserProfile | null>> => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(`profiles/${id}`, \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profile = convertDtoToProfile(payload as ResponseProfileDto);\r\n        dispatch(fetchProfileSuccess(profile));\r\n        return profile;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst fetchProfileSuccess = (profile: UserProfile): FetchProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nconst setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nconst setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, token);\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {fileName, s3Url} = payload as SignedUrlResponseDto;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(s3Url, {\r\n                method: \"PUT\",\r\n                body: imageBlob,\r\n            });\r\n\r\n            // Submit the file name to the server\r\n            const response2 = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, token);\r\n\r\n            if (response2.status === HttpStatusCode.OK) {\r\n                const payload2 = (response2 as SuccessfulRequestResponse).data;\r\n                const {avatar} = payload2 as AvatarSuccessfulUpdatedDto;\r\n                dispatch(setAvatarSuccess(avatar));\r\n            } else fail();\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            fail();\r\n        }\r\n    } else fail();\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n */\r\nexport function storeStaticData<T>(key: string, data: T): void {\r\n    console.log(`Updating cache entry for '${key}'.`);\r\n\r\n    // Store the data along with the date\r\n    const storageObject = {\r\n        updatedAt: new Date().toJSON(),\r\n        data,\r\n    };\r\n\r\n    AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {AppThunk, OnboardingState, ValidatedThunkAction} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, SuccessfulRequestResponse, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {readCachedCredentials} from \"../persistent-storage/auth\";\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n    DELETE_ACCOUNT_SUCCESS = \"AUTH/DELETE_ACCOUNT_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type RegisterSuccessAction = {type: string; user: User};\r\n\r\nexport type RegisterFailureAction = {type: string};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\n\r\nexport type LogOutAction = {type: string};\r\n\r\nexport type LogInFailureAction = {type: string};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ValidateAccountFailureAction = {type: string};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {type: string};\r\n\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {type: string};\r\n\r\nexport type DeleteAccountSuccessAction = {type: string};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction\r\n    | DeleteAccountSuccessAction;\r\n\r\n// Register actions\r\n\r\nconst registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = getState().settings.userSettings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const successResp = response as SuccessfulRequestResponse;\r\n        dispatch(registerSuccess(successResp.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nconst registerFailure = (): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n});\r\n\r\n// Log in actions\r\n\r\nconst loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nconst loginFailure = (): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<boolean>> => async (dispatch): Promise<boolean> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n\r\n        if (response.status == HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data as ResponseUserDto;\r\n            dispatch(loginSuccess(token, convertDtoToUser(payload), true));\r\n            return true;\r\n        } else dispatch(loginFailure()); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return false;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, convertDtoToUser(payload.user), false));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(loginFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const logout = (): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {email} = payload as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure());\r\n    }\r\n};\r\n\r\nconst validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst validateAccountFailure = (): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(forgotPasswordFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst forgotPasswordFailure = (): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const deleteAccount = (password: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"users\", \"DELETE\", {}, {password}, token, true);\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(deleteAccountSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deleteAccountSuccess = (): DeleteAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch, getState) => {\r\n    const n = Math.round(1e3 * Math.random());\r\n    const email = `test${n}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"staff\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + n,\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [{id: \"baking\"}, {id: \"art\"}, {id: \"brunch\"}],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"talk-a-bit\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [],\r\n                //degree: \"m2\",\r\n                staffRoles: [{id: \"research\"}, {id: \"teaching\"}],\r\n            }),\r\n        );\r\n    }\r\n};\r\n","import i18n from \"i18n-js\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {ErrorRequestResponse, RemoteValidationErrors, RequestResponse, UnprocessableEntityRequestResponse} from \"./dto\";\r\n\r\nexport const localizeError = (err: string): string => i18n.t(err, {defaultValue: err});\r\n\r\nconst extractError = ({code, description}: {code: string; description: string}): string => {\r\n    const isMissingLocalization = i18n.t(code, {defaultValue: \"missing\"}) == \"missing\";\r\n    return isMissingLocalization ? description : code;\r\n};\r\n\r\nexport function gatherValidationErrors(resp: RequestResponse): RemoteValidationErrors | undefined {\r\n    if (resp.status == HttpStatusCode.OK) return undefined;\r\n    else {\r\n        const {errorType, description} = resp as ErrorRequestResponse;\r\n        const output: RemoteValidationErrors = {general: extractError({code: errorType, description}), fields: {}};\r\n        if (resp.status == HttpStatusCode.UNPROCESSABLE_ENTITY) {\r\n            const {errors} = resp as UnprocessableEntityRequestResponse;\r\n            //errors.forEach((e) => (output.fields[e.property] = e.codes.map(extractError)));\r\n            // Only keep the first error (makes displaying errors a lot easier)\r\n            errors.forEach((e) => (output.fields[e.property] = extractError(e.codes[0])));\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the non-specific error field from remote errors. If field-specific errors are available, yields undefined instead.\r\n * @param errors - Remote validation errors.\r\n */\r\nexport function generalError(errors?: RemoteValidationErrors): string | undefined {\r\n    if (!errors) return undefined;\r\n    else if (Object.keys(errors.fields).length > 0) return undefined;\r\n    else return errors.general;\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {TokenDto} from \"../../api/dto\";\r\nimport {CredentialsStorageObject} from \"../../types\";\r\n\r\n/**\r\n * Override auth information in secure.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nexport function storeAuthInformation(email: string, token: TokenDto): void {\r\n    const toStore: CredentialsStorageObject = {email, token};\r\n    AsyncStorage.setItem(\"auth\", JSON.stringify(toStore));\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from storage.\r\n */\r\nexport function discardAuthInformation(): void {\r\n    AsyncStorage.removeItem(\"auth\");\r\n}\r\n\r\n/**\r\n * Read auth information from storage.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const raw = await AsyncStorage.getItem(\"auth\");\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    domain: string;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        domain: \"uca.es\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        domain: \"univ-brest.fr\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        domain: \"ug.edu.pl\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        domain: \"um.edu.mt\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        domain: \"kms.uni-kiel.de\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        domain: \"unist.hr\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Extracts a partner university from a given email.\r\n * @param email A valid email address.\r\n * @returns a University object if one matches the given email, null otherwise.\r\n */\r\nexport function getUniversityFromEmail(email: string): University | null {\r\n    const split = email.split(\"@\");\r\n    if (split.length > 0) {\r\n        const domain = split[1].trim();\r\n        return PARTNER_UNIVERSITIES.find((uni: University) => uni.domain == domain) || null;\r\n    }\r\n    return null;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {AuthState, OnboardingState} from \"../types\";\r\nimport {\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n} from \"./actions\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    type: null,\r\n    degree: null,\r\n    staffRoles: {},\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = <RegisterBeginAction>action;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = <RegisterSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = <ValidateAccountSuccessAction>action;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = <LogInSuccessAction>action;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = <SetOnboardingValuesAction>action;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = <SetOnboardingOfferValueAction>action;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole = \"teaching\" | \"research\" | \"administration\" | \"technical\" | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\"teaching\", \"research\", \"administration\", \"technical\", \"other\"];\r\n\r\n// MaterialIcons\r\nexport const STAFF_ROLE_ICONS = [\"school\", \"library-books\", \"account-balance\", \"build\", \"help\"];\r\n// \"verified-user\" icon for ambassadors?\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 18;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\n\r\n// Email domains are not verified to allow for server-side whitelisting of specific adresses.\r\n// const VALID_EMAIL_DOMAINS = PARTNER_UNIVERSITIES.map((uni: University) => uni.domain);\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n/*.test(\r\n    \"email-domain\",\r\n    \"validation.email.invalidDomain\",\r\n    (value: string | null | undefined) =>\r\n        value !== null && value !== undefined && VALID_EMAIL_DOMAINS.some((domain) => value.endsWith(domain)),\r\n);*/\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n","import {MIN_PASSWORD_LENGTH} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        locales: {\r\n            en: \"English\",\r\n            fr: \"French\",\r\n        },\r\n        welcome: \"Welcome\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n        login: \"Log in\",\r\n        tabsignin: \"Log in\",\r\n        tabsignup: \"Sign up\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        send: \"Send\",\r\n        forgotPassword: \"Forgot Password\",\r\n        newPassword: \"New Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        cancel: \"Cancel\",\r\n        ok: \"OK\",\r\n        signupWelcome: \"We can't wait for you to join our community!\\n\\nJust one more step.\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        noResultsFound: \"No results found\",\r\n        tos: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\",\r\n                disclaimer2: \"Declining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms of service \", \"here\", \".\"],\r\n        },\r\n        privacy: {\r\n            readMore: [\"Read more about our privacy policy \", \"here\", \".\"],\r\n        },\r\n        emailNotificationsLabel: \"Send me useful notifications by email.\",\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        createAccount: \"Create account\",\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n                invalidDomain: \"Your email address must match one of our partner universities.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Please select at least one language.\",\r\n                specifyLevel: \"Please specify a level for your languages.\",\r\n            },\r\n        },\r\n        error: {\r\n            error_user_not_verified: \"This account's email address has not been verified yet.\",\r\n            user_not_found: \"User not found.\",\r\n            email_or_password_incorrect: \"Incorrect email or password.\",\r\n            reset_password_no_token: \"Could not fulfill this request.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"This email address is already in use.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Please provide a valid email address.\",\r\n                },\r\n            },\r\n        },\r\n        pageNotFound: \"404: Page not found.\",\r\n        pageDoesntExist: \"This page doesn't exist.\",\r\n        goHome: \"Go to home screen\",\r\n        tabs: {\r\n            home: \"Home\",\r\n            matching: \"Matching\",\r\n            messaging: \"Messaging\",\r\n            notifications: \"Notifications\",\r\n        },\r\n        myProfile: \"My Profile\",\r\n        editProfile: \"Edit profile\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        search: \"Search\",\r\n        selectCountry: \"Select country\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            research: \"Research\",\r\n            administration: \"Administration\",\r\n            technical: \"Technical\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        fieldsOfEducation: \"Fields of education\",\r\n        apply: \"Apply\",\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        logOut: \"Log out\",\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            personalInfo: {\r\n                title: \"Profile\",\r\n            },\r\n            language: {\r\n                title: \"Languages\",\r\n            },\r\n            interests: {\r\n                title: \"Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff roles\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            tos: {\r\n                title: \"Terms of service\",\r\n                subtitle:\r\n                    \"I am aware that I am entering a space of intercultural exchange and I am committed to caring and respectful exchanges with other members. My name and surname will be visible by other users.\",\r\n            },\r\n            privacy: {\r\n                title: \"Privacy policy\",\r\n                subtitle:\r\n                    \"I am entering a university community. I agree to provide some personal data, that will not be shared with anyone but the SEA-EU Around community.\",\r\n            },\r\n            submit: \"Submit\",\r\n            getStarted: \"Get Started\",\r\n            profileCreated: \"Welcome! Your profile is now created.\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Native\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            \"language-exchange\": \"Language exchange\",\r\n            \"second-hand-apparel\": \"Second hand apparel\",\r\n            \"board-games\": \"Board games\",\r\n            \"road-trips\": \"Road trips\",\r\n            tango: \"Tango\",\r\n            sneakers: \"Sneakers\",\r\n            sports: \"Sports\",\r\n            baking: \"Baking\",\r\n            tarot: \"Tarot\",\r\n            art: \"Art\",\r\n            tea: \"Tea\",\r\n            picnicking: \"Picnicking\",\r\n            motorcycles: \"Motorcycles\",\r\n            parties: \"Parties\",\r\n            shopping: \"Shopping\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            netflix: \"Netflix\",\r\n            cooking: \"Cooking\",\r\n            vegan: \"Vegan\",\r\n            brunch: \"Brunch\",\r\n            \"motor-sports\": \"Motor sports\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            \"working-out\": \"Working out\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            \"amateur-cook\": \"Amateur cook\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            \"vintage-fashion\": \"Vintage fashion\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            \"second-hand-shopping\": \"Second hand shopping\",\r\n            politics: \"Politics\",\r\n            bbq: \"BBQ\",\r\n            surfing: \"Surfing\",\r\n            spirituality: \"Spirituality\",\r\n            gardening: \"Gardening\",\r\n            astrology: \"Astrology\",\r\n            climbing: \"Climbing\",\r\n            tennis: \"Tennis\",\r\n            writer: \"Writer\",\r\n            comedy: \"Comedy\",\r\n            wine: \"Wine\",\r\n            diy: \"Diy\",\r\n            coffee: \"Coffee\",\r\n            sailing: \"Sailing\",\r\n            music: \"Music\",\r\n            cycling: \"Cycling\",\r\n            activism: \"Activism\",\r\n            trivia: \"Trivia\",\r\n            travel: \"Travel\",\r\n            instagram: \"Instagram\",\r\n            museum: \"Museum\",\r\n            karaoke: \"Karaoke\",\r\n            fashion: \"Fashion\",\r\n            blogging: \"Blogging\",\r\n            yoga: \"Yoga\",\r\n            investing: \"Investing\",\r\n            petanque: \"Petanque\",\r\n            theater: \"Theater\",\r\n            environmentalism: \"Environmentalism\",\r\n            crossfit: \"Crossfit\",\r\n            dancing: \"Dancing\",\r\n            hiking: \"Hiking\",\r\n            running: \"Running\",\r\n            golf: \"Golf\",\r\n            photography: \"Photography\",\r\n            vlogging: \"Vlogging\",\r\n            volunteering: \"Volunteering\",\r\n            tattoos: \"Tattoos\",\r\n            outdoors: \"Outdoors\",\r\n            esports: \"Esports\",\r\n            snowboarding: \"Snowboarding\",\r\n            athlete: \"Athlete\",\r\n            extrovert: \"Extrovert\",\r\n            podcasts: \"Podcasts\",\r\n            walking: \"Walking\",\r\n            vegetarian: \"Vegetarian\",\r\n            reading: \"Reading\",\r\n            movies: \"Movies\",\r\n            foodie: \"Foodie\",\r\n            soccer: \"Soccer\",\r\n            skiing: \"Skiing\",\r\n            sushi: \"Sushi\",\r\n            introvert: \"Introvert\",\r\n            skateboarder: \"Skateboarder\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            swimming: \"Swimming\",\r\n            expositions: \"Expositions\",\r\n            gamer: \"Gamer\",\r\n            piano: \"Piano\",\r\n            \"foodie-tour\": \"Foodie Tour\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n        },\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offers: \"Offers\",\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Provide a couch\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"do-a-campus-tour\": {\r\n                name: \"Do a campus tour\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"help-on-a-project\": {\r\n                name: \"Help on a project\",\r\n                help: \"I am open to helping someone work on a project.\",\r\n            },\r\n            \"look-for-collaborators\": {\r\n                name: \"Look for collaborators\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-questions\": {\r\n                name: \"Answer questions\",\r\n                help: \"I can give information about my university or answer to general questions.\",\r\n            },\r\n            \"talk-a-bit\": {\r\n                name: \"Talk a bit\",\r\n                help: \"I would like to get to know new people.\",\r\n            },\r\n            \"chat-to-practice\": {\r\n                name: \"Chat to practice\",\r\n                help: \"I would not mind chatting with other users who would like to improve their language skills\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        block: {\r\n            warning:\r\n                \"Are you sure you want to block this user? You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions: \"To choose a new password, click the link in the email we just sent you.\",\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: \"Your password has been updated.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Delete your account\",\r\n            warning:\r\n                \"Please be aware that this action is irreversible. Your account and all associated data will be deleted within six months.\",\r\n            button: \"Delete\",\r\n            success1: \"Your request has been received and will be processed shortly.\",\r\n            success2: \"We are sorry to see you go.\",\r\n            leave: \"Leave\",\r\n            inputLabel: \"Enter password to confirm\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            tabIndividual: \"Matches\",\r\n            tabGroup: \"Groups\",\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noResultsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match !\",\r\n                chat: \"Start chatting\",\r\n                continue: \"Keep scrolling\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            LoginForm: \"Login\",\r\n            ForgotPassword: \"Forgot Password\",\r\n            TabSignup: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingPersonalInfoScreen: \"Profile\",\r\n            OnboardingLanguageScreen: \"Profile\",\r\n            OnboardingInterestsScreen: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingTosScreen: \"Terms of Service\",\r\n            OnboardingPrivacyScreen: \"Privacy Policy\",\r\n            MessagingScreen: \"Messages\",\r\n            IndividualMessagingTab: \"Messages\",\r\n            GroupMessagingTab: \"Groups\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Filters\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profile\",\r\n            ProfileScreen: \"Profile\",\r\n            SettingsScreen: \"Settings\",\r\n            DeleteAccountScreen: \"Delete Account\",\r\n            DeleteAccountSuccessScreen: \"Account Deleted\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ResetPasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            MatchSuccessScreen: \"Match!\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"General\",\r\n                danger: \"Danger zone\",\r\n                about: \"About\",\r\n            },\r\n            language: \"Language\",\r\n            darkTheme: \"Dark theme\",\r\n            deleteAccount: \"Delete Account\",\r\n            deleteMyAccount: \"Delete my account\",\r\n            version: \"Version\",\r\n            termsOfService: \"Terms of Service\",\r\n            reportABug: \"Report a Bug\",\r\n            logOut: \"Log out\",\r\n            developedBy: \"Developed by\",\r\n        },\r\n    },\r\n    fr: {\r\n        locales: {\r\n            en: \"Anglais\",\r\n            fr: \"Français\",\r\n        },\r\n        welcome: \"Bienvenue\",\r\n        login: \"Connexion\",\r\n        signup: \"Inscription\",\r\n        emailAddress: \"Adresse email\",\r\n        password: \"Mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    return SUPPORTED_LOCALES.find((l: SupportedLocale) => l == Localization.locale) || \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // Set the locale on startup\r\n    i18n.locale = getDefaultLocale();\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"hr\",\r\n    \"en\",\r\n    \"fr\",\r\n    \"de\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"es\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction;\r\n\r\nexport const setTheme = (theme: ThemeKey): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_LOCALE, locale} as SetLocaleAction;\r\n};\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport translations from \"../../constants/translations\";\r\nimport {SetLocaleAction, SetThemeAction, SettingsAction, SETTINGS_ACTION_TYPES} from \"./actions\";\r\nimport {SettingsState} from \"../types\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const dict = translations as {[key: string]: {[key: string]: unknown}};\r\n    const languageNames = (dict[locale].languageNames || dict[\"en\"].languageNames) as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    userSettings: {\r\n        theme: \"light\",\r\n        locale: getDefaultLocale(),\r\n    },\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = action as SetThemeAction;\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            const theme = state.userSettings.theme == \"light\" ? \"dark\" : \"light\";\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = action as SetLocaleAction;\r\n            return {\r\n                ...state,\r\n                localizedLanguageItems: getLocalizedLanguageItems(locale),\r\n                userSettings: {...state.userSettings, locale},\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferDto} from \"../../api/dto\";\r\nimport {AuthAction, AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {ProfileState} from \"../types\";\r\nimport {\r\n    CreateProfileSuccessAction,\r\n    FetchUserSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    SetAvatarSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n};\r\n\r\nexport const profileReducer = (\r\n    state: ProfileState = initialState,\r\n    action: ProfileAction | AuthAction,\r\n): ProfileState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = action as SetProfileFieldsSuccessAction;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return state.user ? {...state, user: {...state.user, profile}} : state;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers} = action as LoadProfileOffersSuccessAction;\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = action as LoadProfileInterestsSuccessAction;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = action as SetAvatarSuccessAction;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {convertDtoToProfile} from \"../../api/converters\";\r\nimport {\r\n    MatchActionResponseDto,\r\n    MatchActionStatus,\r\n    PaginatedRequestResponse,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MatchingFiltersState, AppThunk} from \"../types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n    matchStatus: MatchActionStatus;\r\n    roomId: string | null;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type FetchProfilesRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type BeginFetchProfilesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type BeginFetchMyMatchesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | BeginFetchProfilesAction\r\n    | FetchProfilesSuccessAction\r\n    | FetchProfilesFailureAction\r\n    | FetchProfilesRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | BeginFetchMyMatchesAction\r\n    | FetchMyMatchesFailureAction\r\n    | FetchMyMatchesSuccessAction;\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst beginFetchProfiles = (): BeginFetchProfilesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {filters, profilesPagination},\r\n    } = getState();\r\n\r\n    if (profilesPagination.fetching || !profilesPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    // Replaces empty arrays with \"undefined\"\r\n    function notEmpty<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n\r\n    const filterParams = {\r\n        universities: notEmpty(filters.universities),\r\n        spokenLanguages: notEmpty(filters.languages),\r\n        degrees: notEmpty(filters.degrees),\r\n        types: notEmpty(filters.types),\r\n        offers: notEmpty(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: profilesPagination.page,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const profiles = (paginated.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(profiles, canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nconst fetchProfilesFailure = (): FetchProfilesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nconst fetchProfilesSuccess = (profiles: UserProfile[], canFetchMore: boolean): FetchProfilesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    profiles,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): FetchProfilesRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nconst likeProfileSuccess = (\r\n    profileId: string,\r\n    matchStatus: MatchActionStatus,\r\n    roomId: string | null,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n    matchStatus,\r\n    roomId,\r\n});\r\n\r\nexport const likeProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {status, roomId} = payload as MatchActionResponseDto;\r\n        dispatch(likeProfileSuccess(profileId, status, roomId));\r\n    }\r\n};\r\n\r\nconst dislikeProfileSuccess = (profileId: string): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const dislikeProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(dislikeProfileSuccess(profileId));\r\n};\r\n\r\nconst blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nconst beginFetchMyMatches = (): BeginFetchMyMatchesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nconst fetchMyMatchesFailure = (): FetchMyMatchesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nconst fetchMyMatchesSuccess = (profiles: UserProfile[]): FetchMyMatchesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    profiles,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching,\r\n    } = getState();\r\n    if (matching.fetchingMyMatches) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profiles = (payload as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchMyMatchesSuccess(profiles));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n","import {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES} from \"../auth/actions\";\r\nimport {initialPaginatedState, MatchingFiltersState, MatchingState} from \"../types\";\r\nimport {\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    FetchProfilesSuccessAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    FetchMyMatchesSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    types: [],\r\n});\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    fetchedProfiles: [],\r\n    profilesPagination: initialPaginatedState(),\r\n    myMatches: [],\r\n    fetchingMyMatches: false,\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = <SetOfferFilterAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = <SetMatchingFiltersAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {profiles, canFetchMore} = <FetchProfilesSuccessAction>action;\r\n            const pagination = state.profilesPagination;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.concat(profiles),\r\n                profilesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, fetchingMyMatches: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {...state, fetchingMyMatches: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {profiles} = <FetchMyMatchesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                myMatches: profiles,\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <LikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <DislikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = <BlockProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n                myMatches: [],\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import chatSocket from \"../../api/chat-socket\";\r\nimport {convertDtoToChatMessage, convertDtoToRoom} from \"../../api/converters\";\r\nimport {\r\n    PaginatedRequestResponse,\r\n    ResponseChatMessageDto,\r\n    ResponseChatMessageReadDto,\r\n    ResponseChatWritingDto,\r\n    ResponseRoomDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MESSAGES_FETCH_LIMIT, ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ChatRoom, ChatRoomMessage} from \"../../model/chat-room\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum MESSAGING_ACTION_TYPES {\r\n    FETCH_MATCH_ROOMS_BEGIN = \"MESSAGING/FETCH_MATCH_ROOMS_BEGIN\",\r\n    FETCH_MATCH_ROOMS_FAILURE = \"MESSAGING/FETCH_MATCH_ROOMS_FAILURE\",\r\n    FETCH_MATCH_ROOMS_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOMS_SUCCESS\",\r\n    FETCH_MATCH_ROOMS_REFRESH = \"MESSAGING/FETCH_MATCH_ROOMS_REFRESH\",\r\n    CONNECT_TO_CHAT_BEGIN = \"MESSAGING/CONNECT_TO_CHAT_BEGIN\",\r\n    CONNECT_TO_CHAT_FAILURE = \"MESSAGING/CONNECT_TO_CHAT_FAILURE\",\r\n    CONNECT_TO_CHAT_SUCCESS = \"MESSAGING/CONNECT_TO_CHAT_SUCCESS\",\r\n    DISCONNECT_FROM_CHAT = \"MESSAGING/DISCONNECT_FROM_CHAT\",\r\n    JOIN_CHAT_ROOM_BEGIN = \"MESSAGING/JOIN_CHAT_ROOM_BEGIN\",\r\n    JOIN_CHAT_ROOM_FAILURE = \"MESSAGING/JOIN_CHAT_ROOM_FAILURE\",\r\n    JOIN_CHAT_ROOM_SUCCESS = \"MESSAGING/JOIN_CHAT_ROOM_SUCCESS\",\r\n    LEAVE_ROOM = \"MESSAGING/LEAVE_ROOM\",\r\n    SEND_MESSAGE_FAILURE = \"MESSAGING/SEND_MESSAGE_FAILURE\",\r\n    SEND_MESSAGE_SUCCESS = \"MESSAGING/SEND_MESSAGE_SUCCESS\",\r\n    RECEIVE_MESSAGE = \"MESSAGING/RECEIVE_MESSAGE\",\r\n    RECEIVE_WRITING_STATE = \"MESSAGING/RECEIVE_WRITING_STATE\",\r\n    READ_MESSAGE = \"MESSAGING/READ_MESSAGE\",\r\n    FETCH_EARLIER_MESSAGES_BEGIN = \"MESSAGING/FETCH_EARLIER_MESSAGES_BEGIN\",\r\n    FETCH_EARLIER_MESSAGES_FAILURE = \"MESSAGING/FETCH_EARLIER_MESSAGES_FAILURE\",\r\n    FETCH_EARLIER_MESSAGES_SUCCESS = \"MESSAGING/FETCH_EARLIER_MESSAGES_SUCCESS\",\r\n}\r\n\r\nexport type FetchMatchRoomsBeginAction = {type: string};\r\nexport type FetchMatchRoomsFailureAction = {type: string};\r\nexport type FetchMatchRoomsSuccessAction = {\r\n    type: string;\r\n    rooms: ChatRoom[];\r\n    canFetchMore: boolean;\r\n};\r\nexport type FetchMatchRoomsRefreshAction = {type: string};\r\n\r\nexport type ConnectToChatBeginAction = {type: string};\r\nexport type ConnectToChatFailureAction = {type: string};\r\nexport type ConnectToChatSuccessAction = {type: string};\r\n\r\nexport type JoinChatRoomBeginAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomFailureAction = {type: string};\r\nexport type JoinChatRoomSuccessAction = {type: string; room: ChatRoom};\r\nexport type LeaveChatRoomAction = {type: string};\r\n\r\nexport type DisconnectFromChatAction = {type: string};\r\n\r\nexport type SendMessageFailureAction = {type: string};\r\nexport type SendMessageSuccessAction = {type: string; message: ChatRoomMessage};\r\nexport type ReceiveChatMessageAction = {type: string; message: ResponseChatMessageDto};\r\nexport type ReceiveChatWritingAction = {type: string; payload: ResponseChatWritingDto};\r\nexport type ReadChatMessageAction = {type: string; payload: ResponseChatMessageReadDto};\r\n\r\nexport type FetchEarlierMessagesBeginAction = {type: string; room: ChatRoom};\r\nexport type FetchEarlierMessagesFailureAction = {type: string; room: ChatRoom};\r\nexport type FetchEarlierMessagesSuccessAction = {\r\n    type: string;\r\n    room: ChatRoom;\r\n    messages: ChatRoomMessage[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type MessagingAction =\r\n    | FetchMatchRoomsFailureAction\r\n    | FetchMatchRoomsSuccessAction\r\n    | FetchMatchRoomsRefreshAction\r\n    | ConnectToChatBeginAction\r\n    | ConnectToChatFailureAction\r\n    | ConnectToChatSuccessAction\r\n    | JoinChatRoomBeginAction\r\n    | JoinChatRoomFailureAction\r\n    | JoinChatRoomSuccessAction\r\n    | LeaveChatRoomAction\r\n    | DisconnectFromChatAction\r\n    | SendMessageFailureAction\r\n    | SendMessageSuccessAction\r\n    | ReceiveChatMessageAction\r\n    | FetchEarlierMessagesBeginAction\r\n    | FetchEarlierMessagesFailureAction\r\n    | FetchEarlierMessagesSuccessAction;\r\n\r\nconst beginFetchMatchRooms = (): FetchMatchRoomsBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN,\r\n});\r\n\r\nconst fetchMatchRoomsFailure = (): FetchMatchRoomsFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE,\r\n});\r\n\r\nconst fetchMatchRoomsSuccess = (rooms: ChatRoom[], canFetchMore: boolean): FetchMatchRoomsSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS,\r\n    rooms,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchMatchRooms = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const token = state.auth.token;\r\n    const pagination = state.messaging.matchRoomsPagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchMatchRooms());\r\n\r\n    const response = await requestBackend(\r\n        \"rooms\",\r\n        \"GET\",\r\n        {page: pagination.page, limit: ROOMS_FETCH_LIMIT, search},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const rooms = (paginated.data as ResponseRoomDto[]).map(convertDtoToRoom);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMatchRoomsSuccess(rooms, canFetchMore));\r\n    } else dispatch(fetchMatchRoomsFailure());\r\n};\r\n\r\nexport const refreshMatchRooms = (): FetchMatchRoomsRefreshAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH,\r\n});\r\n\r\nconst connectToChatBegin = (): ConnectToChatBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN,\r\n});\r\n\r\nconst connectToChatFailure = (): ConnectToChatFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE,\r\n});\r\n\r\nconst connectToChatSuccess = (): ConnectToChatSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS,\r\n});\r\n\r\nexport const connectToChat = (callback?: (connected: boolean) => void): AppThunk => async (dispatch, getState) => {\r\n    const {connected, connecting} = getState().messaging.socketState;\r\n    const authToken = getState().auth.token;\r\n\r\n    const fail = () => {\r\n        dispatch(connectToChatFailure());\r\n        if (callback) callback(false);\r\n    };\r\n\r\n    if (connected) {\r\n        if (callback) callback(true);\r\n    } else if (!connecting) {\r\n        if (authToken) {\r\n            dispatch(connectToChatBegin());\r\n            chatSocket.connect(\r\n                authToken,\r\n                {\r\n                    onMessageReceived: (m) => {\r\n                        const {activeRoom} = getState().messaging;\r\n                        // Tell the server we've read the message if this is the active room\r\n                        if (activeRoom && m.roomId == activeRoom.id)\r\n                            chatSocket.readMessage(activeRoom.id, m.id, m.updatedAt);\r\n                        dispatch(receiveChatMessage(m));\r\n                    },\r\n                    onMessageRead: (p) => dispatch(readChatMessage(p)),\r\n                    onWritingStateChange: (m) => dispatch(receiveChatWriting(m)),\r\n                },\r\n                (hasConnected: boolean) => {\r\n                    if (hasConnected) {\r\n                        dispatch(connectToChatSuccess());\r\n                        if (callback) callback(true);\r\n                    } else fail();\r\n                },\r\n            );\r\n        } else fail();\r\n    }\r\n};\r\n\r\nexport const disconnectFromChat = (): DisconnectFromChatAction => {\r\n    chatSocket.disconnect();\r\n    return {type: MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT};\r\n};\r\n\r\nconst joinChatRoomBegin = (room: ChatRoom): JoinChatRoomBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomFailure = (): JoinChatRoomFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE,\r\n});\r\n\r\nconst joinChatRoomSuccess = (room: ChatRoom): JoinChatRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const joinChatRoom = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        socketState: {connected},\r\n        activeRoom,\r\n    } = getState().messaging;\r\n\r\n    if (activeRoom || !connected) dispatch(joinChatRoomFailure());\r\n    else {\r\n        dispatch(joinChatRoomBegin(room));\r\n        chatSocket.joinRoom(room);\r\n        dispatch(joinChatRoomSuccess(room));\r\n    }\r\n};\r\n\r\nexport const leaveChatRoom = (room: ChatRoom): LeaveChatRoomAction => {\r\n    chatSocket.leaveRoom(room);\r\n    return {type: MESSAGING_ACTION_TYPES.LEAVE_ROOM};\r\n};\r\n\r\nconst sendChatMessageFailure = (): SendMessageFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_FAILURE,\r\n});\r\n\r\nconst sendChatMessageSuccess = (message: ChatRoomMessage): SendMessageSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n});\r\n\r\nexport const sendChatMessage = (id: string, text: string, createdAt: Date): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        socketState: {connected},\r\n        activeRoom,\r\n        localChatUser,\r\n    } = getState().messaging;\r\n\r\n    if (connected && activeRoom && localChatUser) {\r\n        const message: ChatRoomMessage = {\r\n            _id: id,\r\n            createdAt,\r\n            user: localChatUser,\r\n            text,\r\n            sent: false,\r\n        };\r\n        dispatch(sendChatMessageSuccess(message));\r\n        chatSocket.sendMessage(activeRoom.id, id, text);\r\n    } else dispatch(sendChatMessageFailure());\r\n};\r\n\r\nconst receiveChatMessage = (message: ResponseChatMessageDto): ReceiveChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE,\r\n    message,\r\n});\r\n\r\nconst receiveChatWriting = (payload: ResponseChatWritingDto): ReceiveChatWritingAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE,\r\n    payload,\r\n});\r\n\r\nconst readChatMessage = (payload: ResponseChatMessageReadDto): ReadChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.READ_MESSAGE,\r\n    payload,\r\n});\r\n\r\nconst beginFetchEarlierMessages = (room: ChatRoom): FetchEarlierMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesFailure = (room: ChatRoom): FetchEarlierMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesSuccess = (\r\n    room: ChatRoom,\r\n    messages: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchEarlierMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS,\r\n    room,\r\n    messages,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchEarlierMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {\r\n        socketState: {connected},\r\n        localChatUser,\r\n    } = state.messaging;\r\n    const token = state.auth.token;\r\n    const pagination = room.messagePagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    if (connected && localChatUser) {\r\n        dispatch(beginFetchEarlierMessages(room));\r\n\r\n        // Fetch messages only before the date of the earliest message we have\r\n        const beforeDate =\r\n            room.messages.length > 0 ? room.messages[room.messages.length - 1].createdAt.toJSON() : undefined;\r\n\r\n        const response = await requestBackend(\r\n            `rooms/${room.id}/messages`,\r\n            \"GET\",\r\n            {page: pagination.page, limit: MESSAGES_FETCH_LIMIT, beforeDate},\r\n            {},\r\n            token,\r\n            true,\r\n        );\r\n\r\n        const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n            const user = room.users.find((u) => u._id === dto.senderId);\r\n            return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n        };\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const paginated = response as PaginatedRequestResponse;\r\n            const messages = (paginated.data as ResponseChatMessageDto[])\r\n                .map(convertDto)\r\n                .filter((m) => m !== undefined);\r\n            const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n            dispatch(fetchEarlierMessagesSuccess(room, messages as ChatRoomMessage[], canFetchMore));\r\n            return;\r\n        }\r\n    }\r\n\r\n    dispatch(fetchEarlierMessagesFailure(room));\r\n};\r\n\r\nexport const fetchMatchRoom = (roomId: string): AppThunk<Promise<ChatRoom | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    const response = await requestBackend(`rooms/${roomId}`, \"GET\", {}, {}, token, true);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        return convertDtoToRoom(payload as ResponseRoomDto);\r\n    } else return null;\r\n};\r\n","import io from \"socket.io-client\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport {ChatRoom} from \"../model/chat-room\";\r\nimport {ResponseChatWritingDto, ResponseChatMessageDto, TokenDto, ResponseChatMessageReadDto} from \"./dto\";\r\n\r\nconst SOCKET_LOCATION = `${BACKEND_URL}/chat`;\r\n\r\nconst WRITING_STATE_DELAY = 1000;\r\nconst CONNECT_TIMEOUT = 6500;\r\nconst RECONNECT_DELAY = 2000;\r\nconst RECONNECT_ATTEMPTS = 3;\r\n\r\nexport type ChatSocketEventListeners = {\r\n    onMessageReceived: (m: ResponseChatMessageDto) => void;\r\n    onWritingStateChange: (m: ResponseChatWritingDto) => void;\r\n    onMessageRead: (m: ResponseChatMessageReadDto) => void;\r\n};\r\n\r\nclass ChatSocket {\r\n    private socket: SocketIOClient.Socket | null;\r\n    private connectCallbacks: ((connected: boolean) => void)[];\r\n    private writingTimeout: NodeJS.Timeout | null;\r\n    private lastSentWritingState: boolean;\r\n    private connecting: boolean;\r\n    private connected: boolean;\r\n\r\n    constructor() {\r\n        this.socket = null;\r\n        this.connectCallbacks = [];\r\n        this.writingTimeout = null;\r\n        this.lastSentWritingState = false;\r\n        this.connecting = false;\r\n        this.connected = false;\r\n    }\r\n\r\n    private consumeConnectCallbacks(connectedState: boolean) {\r\n        this.connectCallbacks.forEach((f) => f(connectedState));\r\n        this.connectCallbacks = [];\r\n    }\r\n\r\n    private registerListeners(listeners: ChatSocketEventListeners) {\r\n        if (!this.socket) return;\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            console.log(\"[ChatSocket] connected\");\r\n            this.consumeConnectCallbacks(true);\r\n            this.connecting = false;\r\n            this.connected = true;\r\n        });\r\n\r\n        this.socket.on(\"connect_failed\", () => {\r\n            console.log(\"[ChatSocket] connect_failed\");\r\n        });\r\n        this.socket.on(\"connect_error\", () => {\r\n            console.log(\"[ChatSocket] connect_error\");\r\n        });\r\n\r\n        this.socket.on(\"close\", () => {\r\n            this.connecting = false;\r\n            this.connected = false;\r\n            console.log(\"[ChatSocket] close\");\r\n        });\r\n\r\n        this.socket.on(\"error\", () => {\r\n            console.log(\"[ChatSocket]\", \"Error.\");\r\n        });\r\n\r\n        this.socket.on(\"exception\", (e: unknown) => {\r\n            console.log(\"[ChatSocket] <----\", \"Exception\", JSON.stringify(e));\r\n        });\r\n\r\n        this.socket.on(\"disconnect\", () => {\r\n            this.connecting = false;\r\n            this.connected = false;\r\n            console.log(\"[ChatSocket] disconnected\");\r\n        });\r\n\r\n        this.socket.on(\"receiveMessage\", (m: ResponseChatMessageDto) => listeners.onMessageReceived(m));\r\n        this.socket.on(\"readMessage\", (m: ResponseChatMessageReadDto) => listeners.onMessageRead(m));\r\n        this.socket.on(\"isWriting\", (m: ResponseChatWritingDto) => listeners.onWritingStateChange(m));\r\n    }\r\n\r\n    private emit(msg: string, payload: unknown) {\r\n        console.log(`[ChatSocket] ----> '${msg}' - payload: ${JSON.stringify(payload)}`);\r\n        this.socket?.emit(msg, payload);\r\n    }\r\n\r\n    private sendWritingState(room: ChatRoom, state: boolean) {\r\n        this.lastSentWritingState = state;\r\n        this.emit(\"isWriting\", {roomId: room.id, state});\r\n    }\r\n\r\n    private refreshWritingTimeout(room: ChatRoom) {\r\n        if (this.writingTimeout !== null) {\r\n            clearTimeout(this.writingTimeout);\r\n            this.writingTimeout = null;\r\n        }\r\n        this.writingTimeout = setTimeout(() => {\r\n            this.sendWritingState(room, false);\r\n        }, WRITING_STATE_DELAY);\r\n    }\r\n\r\n    connect(authToken: TokenDto, listeners: ChatSocketEventListeners, callback?: (connected: boolean) => void) {\r\n        console.log(\"Connecting to\", SOCKET_LOCATION);\r\n\r\n        if (callback) this.connectCallbacks.push(callback);\r\n\r\n        // Check if we're already attempting to connect\r\n        if (this.connecting) return;\r\n        this.connecting = true;\r\n\r\n        if (this.socket) this.socket.connect();\r\n        else {\r\n            console.log(\"[ChatSocket] ----> Authenticating - token =\", authToken.accessToken);\r\n            this.socket = io(SOCKET_LOCATION, {\r\n                query: {authorization: authToken.accessToken},\r\n                reconnectionDelay: RECONNECT_DELAY,\r\n                reconnectionAttempts: RECONNECT_ATTEMPTS,\r\n            });\r\n            this.registerListeners(listeners);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (!this.connected) {\r\n                this.connecting = false;\r\n                this.consumeConnectCallbacks(false);\r\n            }\r\n        }, CONNECT_TIMEOUT);\r\n    }\r\n\r\n    joinRoom(room: ChatRoom) {\r\n        this.emit(\"joinRoom\", {roomId: room.id});\r\n        // Inform the server that we have read the last message of the room\r\n        if (room.lastMessage) this.readMessage(room.id, room.lastMessage._id, room.lastMessage.createdAt.toJSON());\r\n    }\r\n\r\n    leaveRoom(room: ChatRoom) {\r\n        this.emit(\"leaveRoom\", {roomId: room.id});\r\n    }\r\n\r\n    sendMessage(roomId: string, id: string, text: string) {\r\n        this.emit(\"sendMessage\", {roomId, id, text});\r\n    }\r\n\r\n    readMessage(roomId: string, messageId: string, createdAt: string) {\r\n        this.emit(\"readMessage\", {roomId, messageId, date: createdAt});\r\n    }\r\n\r\n    setWriting(room: ChatRoom) {\r\n        // Refesh the timeout - in a fixed amount of time, this will tell the server we are no longer writing\r\n        this.refreshWritingTimeout(room);\r\n\r\n        // If we are beginning to write, inform the server now\r\n        if (this.lastSentWritingState === false) this.sendWritingState(room, true);\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.socket) this.socket.disconnect();\r\n    }\r\n}\r\n\r\nexport default new ChatSocket();\r\n","import {convertDtoToChatMessage} from \"../../api/converters\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {CreateProfileSuccessAction, FetchUserSuccessAction, PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {MessagingState, initialPaginatedState} from \"../types\";\r\nimport {\r\n    FetchEarlierMessagesBeginAction,\r\n    FetchEarlierMessagesFailureAction,\r\n    FetchEarlierMessagesSuccessAction,\r\n    FetchMatchRoomsSuccessAction,\r\n    JoinChatRoomSuccessAction,\r\n    MessagingAction,\r\n    MESSAGING_ACTION_TYPES,\r\n    ReadChatMessageAction,\r\n    ReceiveChatMessageAction,\r\n    ReceiveChatWritingAction,\r\n    SendMessageSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: MessagingState = {\r\n    matchRooms: {},\r\n    matchRoomsOrdered: [],\r\n    matchRoomsPagination: initialPaginatedState(),\r\n    socketState: {connected: false, connecting: false},\r\n    activeRoom: null,\r\n    localChatUser: null,\r\n};\r\n\r\nfunction toLocalChatUser(profile: UserProfile): ChatRoomUser | null {\r\n    return {\r\n        _id: profile.id,\r\n        name: `${profile.firstName} ${profile.lastName}`,\r\n        avatar: profile.avatarUrl || \"\",\r\n        lastMessageSeenDate: null,\r\n        lastMessageSeenId: null,\r\n    };\r\n}\r\n\r\n// TODO reset rooms when disconnecting from chat?\r\n\r\nexport const messagingReducer = (state: MessagingState = initialState, action: MessagingAction): MessagingState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(profile)};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN: {\r\n            return {...state, matchRoomsPagination: {...state.matchRoomsPagination, fetching: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                matchRoomsPagination: {...state.matchRoomsPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS: {\r\n            const {rooms, canFetchMore} = <FetchMatchRoomsSuccessAction>action;\r\n            const pagination = state.matchRoomsPagination;\r\n            const matchRooms = {...state.matchRooms};\r\n            // Add entries in the rooms dictionary\r\n            rooms.forEach((r: ChatRoom) => (matchRooms[r.id] = r));\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms,\r\n                matchRoomsOrdered: state.matchRoomsOrdered.concat(rooms.map((r: ChatRoom) => r.id)),\r\n                matchRoomsPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH: {\r\n            return {\r\n                ...state,\r\n                matchRooms: {},\r\n                matchRoomsOrdered: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN: {\r\n            return {...state, socketState: {connected: false, connecting: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS: {\r\n            return {...state, socketState: {connected: true, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS: {\r\n            const {room} = action as JoinChatRoomSuccessAction;\r\n            return {...state, activeRoom: room};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.LEAVE_ROOM: {\r\n            return {...state, activeRoom: null};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS: {\r\n            const {message} = action as SendMessageSuccessAction;\r\n            if (state.activeRoom) {\r\n                return updateRoom(state, true, {\r\n                    ...state.activeRoom,\r\n                    messages: [message].concat(state.activeRoom.messages),\r\n                    lastMessage: message,\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE: {\r\n            const {message} = action as ReceiveChatMessageAction;\r\n\r\n            let room = state.matchRooms[message.roomId];\r\n            if (room) {\r\n                room = {...room};\r\n                // Start by checking if this is an existing message (e.g. our own message)\r\n                const existingMessage = room.messages.find((m: ChatRoomMessage) => m._id === message.id);\r\n                if (existingMessage) {\r\n                    const msg = {...existingMessage, sent: true, text: message.text};\r\n\r\n                    // Update the message in the list\r\n                    room.messages = room.messages.map((m: ChatRoomMessage) => (m._id === message.id ? msg : m));\r\n\r\n                    // Also update the last message\r\n                    if (!room.lastMessage || msg.createdAt >= room.lastMessage.createdAt) room.lastMessage = msg;\r\n                } else {\r\n                    const user = room.users.find((u: ChatRoomUser) => u._id == message.senderId);\r\n                    if (user) {\r\n                        const msg = convertDtoToChatMessage(user, message);\r\n                        room.messages = [msg].concat(room.messages);\r\n                        room.lastMessage = msg;\r\n                        room.writing[message.senderId] = false;\r\n                    }\r\n                }\r\n                return updateRoom(state, true, room);\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE: {\r\n            const payload = (action as ReceiveChatWritingAction).payload;\r\n            const {profileId, roomId} = payload;\r\n\r\n            // Just ignore if this is about our own writing state\r\n            if (state.localChatUser && state.localChatUser._id === profileId) return state;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    writing: {...room.writing, [profileId]: payload.state},\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.READ_MESSAGE: {\r\n            const {roomId, date, messageId, profileId} = (action as ReadChatMessageAction).payload;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    users: room.users.map((u: ChatRoomUser) =>\r\n                        u._id == profileId\r\n                            ? {...u, lastMessageSeenDate: new Date(date), lastMessageSeenId: messageId}\r\n                            : u,\r\n                    ),\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN: {\r\n            const {room} = action as FetchEarlierMessagesBeginAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: true},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE: {\r\n            const {room} = action as FetchEarlierMessagesFailureAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: false, canFetchMore: false},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS: {\r\n            const {room, messages, canFetchMore} = action as FetchEarlierMessagesSuccessAction;\r\n            const pagination = room.messagePagination;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messages: room.messages.concat(messages),\r\n                messagePagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            });\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                activeRoom: null,\r\n                matchRooms: {},\r\n                matchRoomsOrdered: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n                localChatUser: null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateRoom(state: MessagingState, setAsFirst: boolean, room: ChatRoom): MessagingState {\r\n    const activeRoom = state.activeRoom && state.activeRoom.id == room.id ? room : state.activeRoom;\r\n\r\n    if (setAsFirst) {\r\n        const otherRooms = state.matchRoomsOrdered.filter((id: string) => id !== room.id);\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            matchRoomsOrdered: [room.id].concat(otherRooms),\r\n            activeRoom,\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            activeRoom,\r\n        };\r\n    }\r\n}\r\n","import {Degree, Gender, LanguageLevel, Role} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\n\r\n/* General response-related types */\r\n\r\n// Any response from the server should follow this structure\r\nexport type RequestResponse = SuccessfulRequestResponse | UnprocessableEntityRequestResponse | ErrorRequestResponse;\r\nexport type SuccessfulRequestResponse = {status: number; data: unknown} & {[key: string]: unknown};\r\nexport type PaginatedRequestResponse = SuccessfulRequestResponse & {\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type ErrorRequestResponse = {status: number; errorType: string; description: string};\r\n\r\n// Only on 422 status\r\nexport type UnprocessableEntityRequestResponse = ErrorRequestResponse & {\r\n    errors: {property: string; codes: {description: string; code: string}[]}[];\r\n};\r\n\r\nexport type RemoteValidationErrors = {general: string; fields: {[key: string]: string}};\r\n\r\n/* Specific DTOs */\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: ResponseUserDto;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: InterestDto[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRoles: StaffRoleDto[];\r\n};\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDtoCommon = CreateProfileDtoCommon & {\r\n    id: string;\r\n    university: UniversityKey;\r\n    avatar: string;\r\n};\r\nexport type ResponseProfileDtoStudent = ResponseProfileDtoCommon & CreateProfileDtoStudent;\r\nexport type ResponseProfileDtoStaff = ResponseProfileDtoCommon & CreateProfileDtoStaff;\r\nexport type ResponseProfileDto = ResponseProfileDtoStudent | ResponseProfileDtoStaff;\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type StaffRoleDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type ChatRoomProfileDto = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatar: string | null;\r\n    lastMessageSeenId: string | null;\r\n    lastMessageSeenDate: string | null;\r\n};\r\n\r\nexport type ResponseRoomDto = {\r\n    id: string;\r\n    profiles: ChatRoomProfileDto[];\r\n    lastMessage: ResponseChatMessageDto | null;\r\n};\r\n\r\nexport type ResponseChatMessageDto = {\r\n    roomId: string;\r\n    id: string;\r\n    senderId: string;\r\n    sent: boolean;\r\n    text: string;\r\n    updatedAt: string;\r\n};\r\n\r\nexport type ResponseChatMessageReadDto = {\r\n    roomId: string;\r\n    date: string;\r\n    messageId: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type ResponseChatWritingDto = {\r\n    roomId: string;\r\n    profileId: string;\r\n    state: boolean;\r\n};\r\n\r\nexport enum MatchActionStatus {\r\n    Declined = \"declined\",\r\n    Blocked = \"blocked\",\r\n    Matched = \"matched\",\r\n    Requested = \"requested\",\r\n}\r\n\r\nexport type MatchActionResponseDto = {\r\n    roomId: string | null;\r\n    status: MatchActionStatus;\r\n};\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef} from \"@react-navigation/native\";\r\nimport {NavigatorRoute} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype RouteParams = Record<string, string | object | undefined | null>;\r\n\r\nexport function rootNavigate(route: NavigatorRoute, params?: RouteParams): void {\r\n    rootNavigationRef.current?.navigate(route as string, params);\r\n}\r\n\r\nexport function navigateBack(fallback?: NavigatorRoute): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else if (fallback) nav.navigate(fallback);\r\n    }\r\n}\r\n\r\nexport function attemptRedirectToApp(path: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS == \"web\") {\r\n        const link = `${APP_SCHEME}://${path}`;\r\n        window.location.replace(link);\r\n\r\n        console.log(`window.location.replace(${link})`);\r\n        // TODO fallback after a timeout ?\r\n        setTimeout(fallback, 5000);\r\n    } else fallback();\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n\r\nexport function headerTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`);\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {LikeProfileSuccessAction, MATCHING_ACTION_TYPES} from \"./matching/actions\";\r\nimport {PROFILE_ACTION_TYPES} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (/*store: MiddlewareAPI<Dispatch, AppState>*/) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    // TEMP action printing\r\n    console.log(action.type);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            rootNavigate(user.onboarded ? \"MainScreen\" : \"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            rootNavigate(\"LoginScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            // Let the user click\r\n            // attemptRedirectToApp(\"login\", \"TabSignin\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            return;\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {matchStatus, roomId} = action as LikeProfileSuccessAction;\r\n            if (matchStatus == MatchActionStatus.Matched) rootNavigate(\"MatchSuccessScreen\", {roomId});\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport {messagingReducer} from \"./messaging/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n    messaging: messagingReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(thunk, authStorageMiddleware, staticStorageMiddleware, navigationMiddleware);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {AppState} from \"./types\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {discardAuthInformation, storeAuthInformation} from \"./persistent-storage/auth\";\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n            // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n            if (!usingCachedCredentials) storeAuthInformation(user.email, token);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {storeStaticData} from \"./persistent-storage/static\";\r\nimport {\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the interests cache.\");\r\n                storeStaticData(\"interests\", interests);\r\n            }\r\n            break;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the offers cache.\");\r\n                storeStaticData(\"offers\", offers);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {attemptLoginFromCache} from \"../state/auth/actions\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\n\r\nlet loggedInFromCache = false;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // TODO Improve data loading\r\n                //  - show something if the backend couldn't be reached\r\n\r\n                // Load static data\r\n                await dispatch(loadProfileOffers());\r\n                await dispatch(loadProfileInterests());\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    raleway: require(\"@assets/fonts/Raleway-VariableFont_wght.ttf\"),\r\n                    //\"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n                });\r\n\r\n                // Attempt to authenticate using cached data\r\n                loggedInFromCache = await dispatch(attemptLoginFromCache());\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (loggedInFromCache) initialRoute = \"MainScreen\";\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst tintColorLight = \"#2f95dc\";\r\nconst tintColorDark = \"#fff\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fafafa\",\r\n        cardBackground: \"#ffffff\", //\"#f7f7f7\",\r\n        accent: \"#003da5\", // Pantone 293c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#009ace\", // Pantone 801c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorLight,\r\n        error: \"#ff4a6a\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorLight,\r\n        componentBorder: \"#eee\",\r\n        chatBubble: \"#ededed\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#333\",\r\n        cardBackground: \"#3d3d3d\",\r\n        accent: \"#009ace\", // Pantone 801c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\", // Pantone 293c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorDark,\r\n        error: \"#f9819d\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorDark,\r\n        componentBorder: \"#555\",\r\n        chatBubble: \"#333\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStyles<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import * as React from \"react\";\r\nimport {Platform, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\ntype ScreenWrapperProps = ThemeProps;\r\n\r\nclass ScreenWrapper extends React.Component<ScreenWrapperProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <View style={styles.container}>{this.props.children}</View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            backgroundColor: theme.background,\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n        },\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            ...(Platform.OS === \"web\" ? {maxWidth: 1000} : {}),\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ScreenWrapper);\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-thin\"} : {fontWeight: \"100\"};\r\n\r\nexport const styleTextLight: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-light\"} : {fontWeight: \"200\"};\r\n\r\nexport const webFontFamily =\r\n    Platform.OS == \"web\" ? {fontFamily: `\"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif`} : {};\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>{i18n.t(\"pageNotFound\")}</Text>\r\n                    <Text style={styles.subtitle}>{i18n.t(\"pageDoesntExist\")}</Text>\r\n                    <TouchableOpacity onPress={() => navigation.replace(\"LoginScreen\")} style={styles.link}>\r\n                        <Text style={styles.linkText}>{i18n.t(\"goHome\")}</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n        },\r\n        title: {\r\n            fontSize: 48,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            marginTop: 50,\r\n            color: theme.text,\r\n        },\r\n        link: {\r\n            paddingVertical: 10,\r\n        },\r\n        linkText: {\r\n            fontSize: 16,\r\n            color: \"#2e78b7\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"TabSignin\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To validate your account, click the link in the email we just sent to\r\n                    </Text>\r\n                    <Text style={styles.email}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={{marginVertical: 30, textAlign: \"center\", fontSize: 16, color: \"blue\"}}>\r\n                                debug: click here\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        email: {\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginScreen: {\r\n                screens: {\r\n                    TabSignin: {\r\n                        screens: {\r\n                            LoginForm: \"login\",\r\n                            ForgotPassword: \"forgot-password\",\r\n                        },\r\n                    },\r\n                    TabSignup: \"signup\",\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MAtchFilteringScren: \"match/filters\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            IndividualMessagingTab: \"messaging\",\r\n                            GroupMessagingTab: \"messaging/group\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ResetPasswordScreen: \"reset-password/:token\",\r\n            ResetPasswordSuccessScreen: \"password-reset\",\r\n            MyProfileScreen: \"profile\",\r\n            ProfileScreen: \"profile/:id\",\r\n            SettingsScreen: \"settings\",\r\n            DeleteAccountScreen: \"delete-account\",\r\n            DeleteAccountSuccessScreen: \"account-deleted\",\r\n            ChatScreen: \"chat/:roomId\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingPersonalInfoScreen: \"onboarding/info\",\r\n                    OnboardingLanguageScreen: \"onboarding/language\",\r\n                    OnboardingInterestsScreen: \"onboarding/interests\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingTosScreen: \"onboarding/tos\",\r\n                    OnboardingPrivacyScreen: \"onboarding/privacy\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            MatchSuccessScreen: \"match/success\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport {MaterialTopTabBarProps} from \"@react-navigation/material-top-tabs\";\r\nimport {View, Text, StyleSheet, Dimensions, Keyboard, TouchableOpacity} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport Animated from \"react-native-reanimated\";\r\n\r\n// Component props\r\ntype LoginTabBarProps = ThemeProps & MaterialTopTabBarProps & {insets: EdgeInsets};\r\n\r\nclass TabBarComponent extends React.Component<LoginTabBarProps> {\r\n    height = new ReAnimated.Value<number>(0);\r\n\r\n    getCollapsedHeight(): number {\r\n        return 50 + this.props.insets.top;\r\n    }\r\n\r\n    getFullHeight(): number {\r\n        return Dimensions.get(\"window\").height * 0.25 + this.props.insets.top;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.height.setValue(this.getFullHeight());\r\n        Keyboard.addListener(\"keyboardDidShow\", () => {\r\n            ReAnimated.timing(this.height, {\r\n                toValue: this.getCollapsedHeight(),\r\n                duration: 50,\r\n                easing: Easing.ease,\r\n            }).start();\r\n        });\r\n        Keyboard.addListener(\"keyboardDidHide\", () => {\r\n            ReAnimated.timing(this.height, {\r\n                toValue: this.getFullHeight(),\r\n                duration: 0,\r\n                easing: Easing.ease,\r\n            }).start();\r\n        });\r\n    }\r\n\r\n    onPress(route: {name: string; key: string}, index: number): void {\r\n        const {navigation} = this.props;\r\n        const isFocused = index == this.props.state.index;\r\n\r\n        const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n        });\r\n\r\n        if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n        }\r\n    }\r\n\r\n    onLongPress(route: {name: string; key: string}): void {\r\n        const {navigation} = this.props;\r\n        navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {state, descriptors, position, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ReAnimated.View style={[styles.tabBarWrapper, {height: this.height}]}>\r\n                {/*<Text style={styles.appTitle}>SEA-EU Around</Text>*/}\r\n                <View style={styles.tabBar}>\r\n                    {state.routes.map((route, index) => {\r\n                        const {options} = descriptors[route.key];\r\n                        const label = i18n.t(route.name.toLowerCase());\r\n                        const isFocused = state.index === index;\r\n\r\n                        const inputRange = state.routes.map((_, i) => i);\r\n                        const opacity = Animated.interpolate(position, {\r\n                            inputRange,\r\n                            outputRange: inputRange.map((i) => (i === index ? 0.15 : 0)),\r\n                        });\r\n\r\n                        return (\r\n                            <View key={index} style={styles.tabButton}>\r\n                                <Animated.View style={[styles.tabButtonBg, {opacity}]} />\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                                    testID={options.tabBarTestID}\r\n                                    onPress={() => this.onPress(route, index)}\r\n                                    onLongPress={() => this.onLongPress(route)}\r\n                                >\r\n                                    <Text style={[styles.tabButtonText, isFocused ? styles.tabButtonTextFocused : {}]}>\r\n                                        {label}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        tabBarWrapper: {\r\n            backgroundColor: theme.accent,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 6,\r\n            },\r\n            shadowOpacity: 0.37,\r\n            shadowRadius: 7.49,\r\n            elevation: 12,\r\n        },\r\n        tabBar: {\r\n            width: \"100%\",\r\n            maxWidth: 420,\r\n            height: 48,\r\n            flexDirection: \"row\",\r\n        },\r\n        tabButton: {\r\n            flex: 1,\r\n        },\r\n        tabButtonBg: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        tabButtonText: {\r\n            fontSize: 18,\r\n            lineHeight: 48,\r\n            letterSpacing: 1,\r\n            textTransform: \"capitalize\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n        },\r\n        tabButtonTextFocused: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        waveImageStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            padding: 0,\r\n            margin: 0,\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        },\r\n        /*appTitle: {\r\n            fontSize: 16,\r\n            color: theme.textInverted,\r\n            letterSpacing: 2,\r\n            marginBottom: 70,\r\n            ...styleTextThin,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default withSafeAreaInsets(withTheme(TabBarComponent));\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {localizeError} from \"../api/errors\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? localizeError(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {TextStyle, StyleProp, View, TextInputProps, TextInput} from \"react-native\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    style?: StyleProp<TextStyle>;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n} & Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nclass ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            style,\r\n            wrapperStyle,\r\n            error,\r\n            value,\r\n            label,\r\n            untouched,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        const showError = showErrorText && !untouched && error;\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    wrapperStyle,\r\n                    {width: \"100%\", flexDirection: \"column\", position: \"relative\", paddingBottom: showError ? 0 : 6},\r\n                ]}\r\n            >\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <TextInput\r\n                    ref={this.inputRef}\r\n                    style={[\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                    onBlur={(e) => {\r\n                        if (onBlur) onBlur(e);\r\n                        this.setState({focused: false});\r\n                    }}\r\n                    onFocus={(e) => {\r\n                        if (onFocus) onFocus(e);\r\n                        this.setState({focused: true});\r\n                    }}\r\n                    value={value}\r\n                    {...otherProps}\r\n                />\r\n                {showError && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidatedTextInput;\r\n","import React from \"react\";\r\nimport {TextInputProps} from \"react-native\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"./ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n    isEmail?: boolean;\r\n    isPassword?: boolean;\r\n} & ValidatedTextInputProps;\r\n\r\nconst emailProps: Partial<TextInputProps> = {\r\n    keyboardType: \"email-address\",\r\n    autoCompleteType: \"email\",\r\n    textContentType: \"emailAddress\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\nconst passwordProps: Partial<TextInputProps> = {\r\n    secureTextEntry: true,\r\n    autoCompleteType: \"password\",\r\n    textContentType: \"password\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    inputRef = React.createRef<ValidatedTextInput>();\r\n\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        handleChange: (): void => {},\r\n        handleBlur: (): void => {},\r\n        /* eslint-ensable @typescript-eslint/no-empty-function */\r\n    };\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            field,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            error,\r\n            onBlur,\r\n            onChangeText,\r\n            isEmail,\r\n            isPassword,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <ValidatedTextInput\r\n                ref={this.inputRef}\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(this.props.field)(e);\r\n                }}\r\n                {...(isEmail ? emailProps : {})}\r\n                {...(isPassword ? passwordProps : {})}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, Platform, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormTextInputProps} from \"../components/FormTextInput\";\r\nimport {FormCheckBoxProps} from \"../components/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const formStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        inputErrorText: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n        },\r\n        inputRow: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n        },\r\n        actionRow: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            marginTop: 25,\r\n        },\r\n        buttonMajor: {\r\n            justifyContent: \"center\",\r\n            height: 55,\r\n            borderRadius: 8,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n        },\r\n        buttonMajorText: {\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n            fontSize: 16,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): Partial<FormTextInputProps> {\r\n    const focusedStyle = Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            paddingHorizontal: 20,\r\n            borderRadius: 5,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.accentSlight,\r\n            color: theme.textBlack,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        label: {\r\n            marginBottom: 4,\r\n        },\r\n    });\r\n\r\n    return {\r\n        placeholderTextColor: \"#222\",\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        labelStyle: commonStyle.label,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n\r\nexport function getLoginCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n\r\nexport const loginTabsStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"column\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight},\r\n        versionDisclaimerContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        versionDisclaimerIcon: {color: theme.error},\r\n        debugContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 10,\r\n        },\r\n        debugTitle: {\r\n            fontWeight: \"bold\",\r\n            width: 75,\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            letterSpacing: 0.8,\r\n        },\r\n        debugButton: {\r\n            padding: 6,\r\n        },\r\n        debugButtonText: {\r\n            fontSize: 16,\r\n            color: theme.error,\r\n        },\r\n        toggleThemeContainer: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        toggleThemeButton: {\r\n            width: 48,\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        toggleThemeIcon: {\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n        erasmusLogo: {\r\n            width: \"100%\",\r\n            height: 40,\r\n            marginTop: 40,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): Partial<FormTextInputProps> {\r\n    const focusedStyle =\r\n        Platform.OS === \"web\"\r\n            ? ({\r\n                  backgroundColor: \"transparent\",\r\n                  outline: \"none\",\r\n              } as TextStyle)\r\n            : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {localizeError} from \"../../api/errors\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error?: string;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {error && error.length > 0 && (\r\n                    <View style={[styles.wrapper, style]} {...otherProps}>\r\n                        <Text style={styles.text}>{error ? localizeError(error) : \"\"}</Text>\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginTop: 5,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, Text, TextStyle, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\n\r\n// Component props\r\ntype FormSubmitButtonProps = {\r\n    onPress: () => void;\r\n    submitting: boolean;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    text: string;\r\n    icon?: JSX.Element;\r\n} & ThemeProps;\r\n\r\nclass FormSubmitButton extends React.Component<FormSubmitButtonProps> {\r\n    render(): JSX.Element {\r\n        const {submitting, onPress, text, icon, style, textStyle, loadingIndicatorStyle, theme} = this.props;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                {...{onPress: submitting ? undefined : onPress}}\r\n                style={[{flexDirection: \"row\", alignItems: \"center\"}, style]}\r\n            >\r\n                {submitting && <ActivityIndicator color={theme.accentTernary} style={loadingIndicatorStyle} />}\r\n                {!submitting && (\r\n                    <>\r\n                        <Text style={textStyle}>{text}</Text>\r\n                        {icon}\r\n                    </>\r\n                )}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormSubmitButton);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validatedEmail: state.auth.validatedEmail,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<FormState> & {\r\n        navigation: StackNavigationProp<TabLoginSigninScreens, \"LoginForm\">;\r\n    };\r\n\r\ntype LoginFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    pwdInputRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{email: \"\", password: \"\"} as FormState}\r\n                validationSchema={LoginFormSchema}\r\n                validateOnBlur={false}\r\n                onSubmit={(values) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<FormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                    } = formikProps;\r\n                    const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                    this.setFieldValue = setFieldValue;\r\n                    this.setFieldError = setFieldError;\r\n\r\n                    return (\r\n                        <>\r\n                            <FormTextInput\r\n                                field=\"email\"\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                error={errors.email}\r\n                                value={values.email}\r\n                                touched={touched.email}\r\n                                isEmail={true}\r\n                                returnKeyType=\"next\"\r\n                                blurOnSubmit={false}\r\n                                onSubmitEditing={() => this.pwdInputRef.current?.focus()}\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                ref={this.pwdInputRef}\r\n                                field=\"password\"\r\n                                placeholder={i18n.t(\"password\")}\r\n                                accessibilityLabel={i18n.t(\"password\")}\r\n                                error={errors.password}\r\n                                value={values.password}\r\n                                touched={touched.password}\r\n                                isPassword={true}\r\n                                returnKeyType=\"done\"\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormError error={generalError(remoteErrors)} />\r\n\r\n                            <View style={fstyles.actionRow}>\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={[fstyles.buttonMajor, styles.loginButton]}\r\n                                    textStyle={fstyles.buttonMajorText}\r\n                                    text={i18n.t(\"login\")}\r\n                                    icon={<MaterialCommunityIcons name=\"login\" style={styles.loginButtonIcon} />}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </View>\r\n\r\n                            <TouchableOpacity\r\n                                accessibilityRole=\"link\"\r\n                                accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n                                style={styles.forgotPwdLink}\r\n                            >\r\n                                <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        loginButton: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        loginButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n        },\r\n        forgotPwdLink: {\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            marginTop: 20,\r\n            padding: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LoginForm));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormError from \"./FormError\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {\r\n    navigation: StackNavigationProp<TabLoginSigninScreens, \"ForgotPassword\">;\r\n};\r\n\r\n// Component state\r\nexport type ForgotPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps, ForgotPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ForgotPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit({email}: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email)).then(({errors}: ValidatedActionReturn) => {\r\n            if (errors && errors.fields) {\r\n                const f = errors.fields;\r\n                Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n            }\r\n            this.setState({remoteErrors: errors, submitting: false});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as FormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikCfg: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => navigation.goBack()}\r\n                                        style={[fstyles.buttonMajor, styles.buttonCancel]}\r\n                                    >\r\n                                        <Text style={fstyles.buttonMajorText}>{i18n.t(\"cancel\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.buttonSend]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"send\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        buttonCancel: {\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type SvgPlaceholderProps = SvgProps;\r\n\r\nfunction SvgPlaceholder(): JSX.Element {\r\n    return <></>;\r\n}\r\n\r\nexport default SvgPlaceholder;\r\n","import {SvgProps} from \"react-native-svg\";\r\nimport SvgPlaceholder from \"./components/SvgPlaceholder\";\r\nimport {SupportedLocale} from \"./localization\";\r\nimport store from \"./state/store\";\r\nimport {ThemeKey} from \"./types\";\r\n\r\nlet loaded: {[key: string]: number} = {};\r\nlet locale: SupportedLocale | null = null;\r\nlet theme: ThemeKey | null = null;\r\n\r\nasync function assetDictCommon(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"offers.categories.discover\":\r\n            return import(\"@assets/images/offers/discover.svg\");\r\n        case \"offers.categories.meet\":\r\n            return import(\"@assets/images/offers/meet.svg\");\r\n        case \"offers.categories.collaborate\":\r\n            return import(\"@assets/images/offers/collaborate.svg\");\r\n        case \"logos.junior-atlantique\":\r\n            return theme === \"light\"\r\n                ? import(\"@assets/images/logos/junior-atlantique-light.png\")\r\n                : import(\"@assets/images/logos/junior-atlantique-dark.png\");\r\n        case \"logos.sea-eu-around.small\":\r\n            return import(\"@assets/images/logos/sea-eu-around.small.png\");\r\n        default:\r\n            return import(\"@assets/images/placeholder.png\");\r\n    }\r\n}\r\n\r\nasync function assetDictEn(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_en_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nasync function assetDictFr(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_fr_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function getLocalImage(key: string, onLoad: () => void): number {\r\n    const settings = store.getState().settings.userSettings;\r\n    if (locale != settings.locale || theme != settings.theme) loaded = {};\r\n    locale = settings.locale;\r\n    theme = settings.theme;\r\n\r\n    if (loaded[key]) return loaded[key];\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const finish = (v: any) => {\r\n        loaded[key] = v.default;\r\n        onLoad();\r\n    };\r\n\r\n    const localizedDict = locale === \"en\" ? assetDictEn : assetDictFr;\r\n\r\n    localizedDict(theme, key).then((v) => {\r\n        // Fallback to the common dict if needed\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        if (v === null) assetDictCommon(theme!, key).then((v) => finish(v));\r\n        else finish(v);\r\n    });\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getLocalSvg(key: string, onLoad: () => void): React.FC<SvgProps> {\r\n    const raw = getLocalImage(key, onLoad);\r\n    if (raw === 0) return SvgPlaceholder;\r\n    return (raw as unknown) as React.FC<SvgProps>;\r\n}\r\n","import * as React from \"react\";\r\nimport {ImageProps, Image} from \"react-native\";\r\nimport {getLocalImage} from \"../assets\";\r\n\r\n// Component props\r\nexport type LocalImageProps = Partial<ImageProps> & {imageKey: string};\r\n\r\nclass LocalImage extends React.Component<LocalImageProps> {\r\n    render(): JSX.Element {\r\n        const {imageKey, ...otherProps} = this.props;\r\n        const img = getLocalImage(imageKey, () => this.forceUpdate());\r\n        return img ? <Image source={img} {...otherProps} /> : <></>;\r\n    }\r\n}\r\n\r\nexport default LocalImage;\r\n","import * as React from \"react\";\r\nimport {ScrollView, LayoutChangeEvent, StyleProp, ViewStyle, Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype ScrollFormWrapperProps = ThemeProps & {contentStyle?: StyleProp<ViewStyle>};\r\n\r\ntype ScrollFormWrapperState = {height: number};\r\n\r\n// TODO clean-up\r\nclass ScrollFormWrapper extends React.Component<ScrollFormWrapperProps, ScrollFormWrapperState> {\r\n    keyboardShown = false;\r\n\r\n    constructor(props: ScrollFormWrapperProps) {\r\n        super(props);\r\n        this.state = {height: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        Keyboard.addListener(\"keyboardDidShow\", () => {\r\n            /*const coords = e.endCoordinates;\r\n            console.log(coords);\r\n            if (coords) this.setState({...this.state, height: coords.height, keyboardTopY: coords.screenY, keyboardOpen: true});*/\r\n            this.keyboardShown = true;\r\n        });\r\n        Keyboard.addListener(\"keyboardDidHide\", () => (this.keyboardShown = false));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        //const {theme} = this.props;\r\n        const {height} = this.state;\r\n\r\n        return (\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"always\"\r\n                style={{flex: 1, width: \"100%\"}}\r\n                contentContainerStyle={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    minHeight: height,\r\n                }}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    if (!this.keyboardShown) this.setState({...this.state, height: e.nativeEvent.layout.height});\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    behavior=\"padding\"\r\n                    style={{\r\n                        flex: 1,\r\n                        width: \"75%\",\r\n                        maxWidth: 300,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ScrollFormWrapper);\r\n","import * as React from \"react\";\r\nimport {View, Text, TouchableOpacity} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {debugConnect} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport store from \"../state/store\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION, DEBUG_MODE} from \"../constants/config\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {toggleTheme} from \"../state/settings/actions\";\r\nimport {TabLoginSigninScreens} from \"../navigation/types\";\r\nimport LocalImage from \"../components/LocalImage\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype TabLoginScreenProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"LoginForm\">;\r\n\r\nclass LoginTabComponent extends React.Component<TabLoginScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <LoginForm navigation={navigation} />\r\n\r\n                    <LocalImage resizeMode={\"contain\"} style={styles.erasmusLogo} imageKey={\"logos.erasmusLeft\"} />\r\n\r\n                    {DEBUG_MODE && (\r\n                        <View style={styles.debugContainer}>\r\n                            <Text style={styles.debugTitle}>[DEBUG]</Text>\r\n                            <TouchableOpacity style={styles.debugButton} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                                <Text style={styles.debugButtonText}>access</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => {\r\n                                    (store.dispatch as MyThunkDispatch)(debugConnect());\r\n                                }}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>register</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => rootNavigate(\"OnboardingScreen\")}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>on-boarding</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    )}\r\n                </ScrollFormWrapper>\r\n                <View style={styles.versionInfoContainer}>\r\n                    <Text style={styles.versionText}>\r\n                        <Text style={{fontWeight: \"bold\"}}>Version:</Text>\r\n                        <Text> {APP_VERSION}</Text>\r\n                    </Text>\r\n                    <View style={styles.versionDisclaimerContainer}>\r\n                        <MaterialIcons style={styles.versionDisclaimerIcon} name=\"warning\" size={16}></MaterialIcons>\r\n                        <Text style={styles.versionText}> This is an alpha version</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.toggleThemeContainer}>\r\n                    <TouchableOpacity style={styles.toggleThemeButton} onPress={() => store.dispatch(toggleTheme())}>\r\n                        <MaterialCommunityIcons style={styles.toggleThemeIcon} name=\"theme-light-dark\" color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\ntype TabForgotPasswordProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"ForgotPassword\">;\r\n\r\nclass ForgotPasswordTabComponent extends React.Component<TabForgotPasswordProps> {\r\n    render(): JSX.Element {\r\n        const {navigation} = this.props;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <ForgotPasswordForm navigation={navigation}></ForgotPasswordForm>\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const SubTabLogin = withTheme(LoginTabComponent);\r\nexport const SubTabForgotPassword = withTheme(ForgotPasswordTabComponent);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, TextInput, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<FormState> & ThemeProps;\r\n\r\n// Component state\r\ntype SignupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormState> {\r\n    pwdField1Ref = React.createRef<FormTextInput>();\r\n    pwdField2Ref = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField1Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField1Ref}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField2Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField2Ref}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    accessibilityLabel={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.createAccountButton]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"createAccount\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype SignupFormProps = ThemeProps;\r\n\r\nclass SignupTabComponent extends React.Component<SignupFormProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <SignupForm />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(SignupTabComponent);\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport LoginTabBar from \"../components/LoginTabBar\";\r\nimport {SubTabLogin, SubTabForgotPassword} from \"../screens/TabLoginScreen\";\r\nimport TabSignupFormScreen from \"../screens/TabSignupFormScreen\";\r\nimport {TabLoginRoot, TabLoginSigninScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst SigninStack = createStackNavigator<TabLoginSigninScreens>();\r\nconst Tab = createMaterialTopTabNavigator<TabLoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator tabBar={(props) => <LoginTabBar {...props} />}>\r\n        <Tab.Screen name=\"TabSignin\">\r\n            {() => (\r\n                <SigninStack.Navigator>\r\n                    <SigninStack.Screen\r\n                        name=\"LoginForm\"\r\n                        component={SubTabLogin}\r\n                        options={{headerShown: false, title: screenTitle(\"LoginForm\")}}\r\n                    />\r\n                    <SigninStack.Screen\r\n                        name=\"ForgotPassword\"\r\n                        component={SubTabForgotPassword}\r\n                        options={{headerShown: false, title: screenTitle(\"ForgotPassword\")}}\r\n                    />\r\n                </SigninStack.Navigator>\r\n            )}\r\n        </Tab.Screen>\r\n        <Tab.Screen name=\"TabSignup\" component={TabSignupFormScreen} options={{title: screenTitle(\"TabSignup\")}} />\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut?: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                    <Text style={styles.title}>Under construction</Text>\r\n                    <View style={styles.separator} />\r\n                    <LogOutButton style={styles.logoutButton} />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","import React from \"react\";\r\nimport {ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\n\r\nexport type CustomModalProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: ViewStyle;\r\n    visible?: boolean;\r\n};\r\n\r\ntype CustomModalState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nexport class CustomModalClass extends React.Component<CustomModalProps, CustomModalState> {\r\n    constructor(props: CustomModalProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: CustomModalProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, modalViewStyle} = this.props;\r\n        const {modalVisible} = this.state;\r\n        return (\r\n            <>\r\n                {modalVisible && (\r\n                    <>\r\n                        <div\r\n                            onClick={() => this.setModalVisible(false)}\r\n                            style={{\r\n                                position: \"fixed\",\r\n                                width: \"100%\",\r\n                                height: \"100%\",\r\n                                left: 0,\r\n                                top: 0,\r\n                                backgroundColor: \"rgba(0,0,0,0.05)\",\r\n                                cursor: \"pointer\",\r\n                            }}\r\n                        ></div>\r\n                        <div\r\n                            style={{\r\n                                // Centering\r\n                                position: \"absolute\",\r\n                                left: 0,\r\n                                right: 0,\r\n                                margin: \"auto\",\r\n                                // Actual styling\r\n                                width: \"50%\",\r\n                                maxWidth: 300,\r\n                                borderRadius: 3,\r\n                                padding: \"20px 30px\",\r\n                                alignItems: \"center\",\r\n                                boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.05)\",\r\n                                backgroundColor: theme.background,\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                ...(modalViewStyle as any), // (circumvent typing)\r\n                            }}\r\n                        >\r\n                            {this.props.renderContent(() => this.setModalVisible(false))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomModalClass);\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock: () => void; profile: UserProfile};\r\n\r\nclass BlockProfileModal extends React.Component<BlockProfileModalProps> {\r\n    render() {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    if (onBlock) onBlock();\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"block.action\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textWhite,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BlockProfileModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag countryCode={university.country} flagSize={18} withEmoji={false}></Flag>\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Avatar, AvatarProps} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\n\r\n// Component props\r\nexport type ProfileAvatarProps = {profile?: UserProfile} & AvatarProps;\r\n\r\nclass ProfileAvatar extends React.Component<ProfileAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, profile, ...avatarProps} = this.props;\r\n\r\n        const avatarTitle = profile ? (profile.firstName[0] + profile.lastName[0]).toUpperCase() : \"\";\r\n        const avatarSource = profile && profile.avatarUrl ? {uri: profile.avatarUrl} : undefined;\r\n\r\n        return (\r\n            <Avatar\r\n                {...avatarProps}\r\n                source={avatarProps.source || avatarSource}\r\n                title={avatarProps.title || avatarTitle}\r\n            >\r\n                {children}\r\n            </Avatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleProp, Text, View, ViewStyle, StyleSheet, TextStyle, TouchableOpacity} from \"react-native\";\r\nimport {ThemeConsumer, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ChipsProps<T> = {\r\n    items: T[];\r\n    label?: (item: T) => string;\r\n    removable?: boolean;\r\n    onRemove?: (item: T) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    chipStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nclass Chips<T> extends React.Component<ChipsProps<T>> {\r\n    render(): JSX.Element {\r\n        const {items, label, removable, onRemove, containerStyle, chipStyle, textStyle} = this.props;\r\n\r\n        return (\r\n            // Use a theme consumer instead of the withTheme() pattern because it breaks genericity\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    return (\r\n                        <View style={[styles.container, containerStyle]}>\r\n                            {items.map((it: T, i: number) => (\r\n                                <Chip\r\n                                    key={`chips-${i}-${it}`}\r\n                                    text={label ? label(it) : typeof it === \"string\" ? it : JSON.stringify(it)}\r\n                                    removable={removable}\r\n                                    onRemove={() => {\r\n                                        if (onRemove) onRemove(it);\r\n                                    }}\r\n                                    chipStyle={chipStyle}\r\n                                    textStyle={textStyle}\r\n                                />\r\n                            ))}\r\n                        </View>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\ntype ChipProps = {\r\n    text: string;\r\n    removable?: boolean;\r\n    onRemove?: () => void;\r\n    chipStyle: StyleProp<ViewStyle>;\r\n    textStyle: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nconst Chip = withTheme(\r\n    ({text, removable, onRemove, theme, chipStyle, textStyle}: ChipProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={[styles.chip, chipStyle]}>\r\n                <Text style={[styles.chipText, textStyle]}>{text}</Text>\r\n                {removable && (\r\n                    <TouchableOpacity\r\n                        style={styles.chipRemoveButton}\r\n                        onPress={() => {\r\n                            if (onRemove) onRemove();\r\n                        }}\r\n                    >\r\n                        <MaterialIcons name=\"close\" style={styles.chipRemoveIcon} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        chip: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.accentSlight,\r\n            paddingVertical: 4,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 20,\r\n            marginRight: 4,\r\n            marginBottom: 4,\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n        chipRemoveButton: {\r\n            padding: 2,\r\n        },\r\n        chipRemoveIcon: {\r\n            fontSize: 22,\r\n            color: theme.textBlack,\r\n        },\r\n    });\r\n});\r\n\r\nexport default Chips;\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n    Platform,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile, UserProfileStudent} from \"../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {blockProfile} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport {styleTextLight, styleTextThin} from \"../styles/general\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport Chips from \"./Chips\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n    blockModalOpen: boolean;\r\n};\r\n\r\nclass ProfilePreview extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            blockModalOpen: false,\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        this.setState({...this.state, animating: true});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n            duration,\r\n            easing: Easing.elastic(1.0),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n    }\r\n\r\n    collapse() {\r\n        const duration = 100;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n            duration,\r\n            easing: Easing.out(Easing.linear),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style} = this.props;\r\n        const {expanded, animating, height, blockModalOpen} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        const chipStyleProps = {chipStyle: styles.chip};\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    useNativeAnimations={Platform.OS !== \"web\"}\r\n                    friction={1}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        this.hide();\r\n                        if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                    }}\r\n                    onSwipeableLeftWillOpen={() => {\r\n                        this.hide();\r\n                        if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                    }}\r\n                    leftThreshold={100}\r\n                    rightThreshold={100}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={[styles.swipeAction, styles.swipeActionRight]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentRight]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                    renderLeftActions={() => (\r\n                        <View style={[styles.swipeAction, styles.swipeActionLeft]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentLeft]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => this.toggleExpanded()}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.collapsedContent}>\r\n                            <View style={styles.avatarContainer}>\r\n                                <ProfileAvatar profile={profile} size={120} rounded containerStyle={styles.avatar} />\r\n                            </View>\r\n                            <View style={styles.infoContainer}>\r\n                                <Text style={styles.name}>{fullName}</Text>\r\n                                {university && <FormattedUniversity style={styles.infoText} university={university} />}\r\n                                <Text style={styles.infoText}>\r\n                                    {i18n.t(`genders.${profile.gender}`)}\r\n                                    {\", \"}\r\n                                    {i18n.t(`allRoles.${profile.type}`)}\r\n                                    {profile.type == \"student\"\r\n                                        ? ` (${i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)})`\r\n                                        : \"\"}\r\n                                </Text>\r\n                                {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                            </View>\r\n                        </View>\r\n                        {(expanded || animating) && (\r\n                            <View style={styles.expandedContent}>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                                <Chips\r\n                                    items={profile.languages}\r\n                                    label={(v: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${v.code}`)}${\r\n                                            v.level != \"native\" ? ` (${v.level.toUpperCase()})` : \"\"\r\n                                        }`\r\n                                    }\r\n                                    {...chipStyleProps}\r\n                                />\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                                <Chips\r\n                                    items={profile.profileOffers}\r\n                                    label={(o: OfferValueDto) => i18n.t(`allOffers.${o.offerId}.name`)}\r\n                                    {...chipStyleProps}\r\n                                />\r\n\r\n                                {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                <TouchableOpacity\r\n                                    style={styles.blockButton}\r\n                                    onPress={() => this.setState({...this.state, blockModalOpen: true})}\r\n                                >\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                                <BlockProfileModal\r\n                                    profile={profile}\r\n                                    visible={blockModalOpen}\r\n                                    onHide={() => this.setState({...this.state, blockModalOpen: false})}\r\n                                    onBlock={() => {\r\n                                        this.hide(() => (store.dispatch as MyThunkDispatch)(blockProfile(profile.id)));\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 10;\r\nconst cardPadding = 10;\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 180;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 400;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n            padding: cardPadding,\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"column\",\r\n        },\r\n        swipeAction: {\r\n            width: \"100%\",\r\n            marginHorizontal: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionLeft: {\r\n            paddingRight: sideMargin * 2,\r\n        },\r\n        swipeActionRight: {\r\n            paddingLeft: sideMargin * 2,\r\n        },\r\n        swipeActionContent: {\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"flex-end\",\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        // Card content\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n            height: PROFILE_PREVIEW_COLLAPSED_HEIGHT - verticalSpacing * 2 - cardPadding * 2,\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chip: {\r\n            //borderRadius: 6,\r\n            paddingHorizontal: 5,\r\n            paddingVertical: 2,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n        },\r\n\r\n        expandedSectionTitle: {\r\n            ...styleTextLight,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        actionContainer: {\r\n            flexDirection: \"column\",\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfilePreview);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    LayoutRectangle,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfilePreview from \"../components/ProfilePreview\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profiles: state.matching.fetchedProfiles,\r\n    fetchingProfiles: state.matching.profilesPagination.fetching,\r\n    justRefreshed: state.matching.profilesPagination.page == 1,\r\n}));\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"TabMatchingScreen\">;\r\n\r\n// Component state\r\ntype TabMatchingScreenState = {\r\n    hiddenIds: {[key: string]: boolean};\r\n};\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps, TabMatchingScreenState> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n\r\n    constructor(props: TabMatchingScreenProps) {\r\n        super(props);\r\n        this.state = {hiddenIds: {}};\r\n    }\r\n\r\n    fetchMore() {\r\n        const {fetchingProfiles, navigation, dispatch} = this.props;\r\n        if (!fetchingProfiles && navigation.isFocused()) (dispatch as MyThunkDispatch)(fetchProfiles());\r\n    }\r\n\r\n    hideProfile(p: UserProfile) {\r\n        this.setState({...this.state, hiddenIds: {...this.state.hiddenIds, [p.id]: true}});\r\n    }\r\n\r\n    componentDidMount() {\r\n        const shownProfiles = this.props.profiles.length - Object.keys(this.state.hiddenIds).length;\r\n        if (shownProfiles == 0) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: TabMatchingScreenProps) {\r\n        if (this.props.navigation.isFocused()) {\r\n            const shownProfiles = this.props.profiles.filter((p) => !this.state.hiddenIds[p.id]).length;\r\n            if (shownProfiles < PROFILES_FETCH_LIMIT) this.fetchMore();\r\n            // Reset the hidden profiles when the user purposedly refreshes\r\n            if (!oldProps.justRefreshed && this.props.justRefreshed) this.setState({...this.state, hiddenIds: {}});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profiles, theme, fetchingProfiles, dispatch} = this.props;\r\n        const {hiddenIds} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const previewComponents = profiles\r\n            .filter((p) => !hiddenIds[p.id])\r\n            .map((profile: UserProfile) => (\r\n                <ProfilePreview\r\n                    key={profile.id}\r\n                    profile={profile}\r\n                    onExpand={(layout: LayoutRectangle) => {\r\n                        const scroll = this.scrollViewRef.current;\r\n                        if (scroll) scroll.scrollTo({y: layout.y, animated: true});\r\n                    }}\r\n                    onSwipeRight={() => (dispatch as MyThunkDispatch)(likeProfile(profile.id))}\r\n                    onSwipeLeft={() => (dispatch as MyThunkDispatch)(dislikeProfile(profile.id))}\r\n                    onHidden={() => this.hideProfile(profile)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView\r\n                    ref={this.scrollViewRef}\r\n                    style={styles.scroller}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingProfiles}\r\n                            onRefresh={() => store.dispatch(refreshFetchedProfiles())}\r\n                        />\r\n                    }\r\n                    onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                        const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                        if (distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                    }}\r\n                >\r\n                    <View style={styles.matchContainer}>\r\n                        {previewComponents}\r\n                        <View style={styles.loadingIndicatorContainer}>\r\n                            {fetchingProfiles && profiles.length > 0 && (\r\n                                <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                            )}\r\n                        </View>\r\n                        {!fetchingProfiles && previewComponents.length == 0 && (\r\n                            <View style={styles.noResultsContainer}>\r\n                                <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                                <Text style={styles.noResultsText2}>{i18n.t(\"matching.noResultsAdvice\")}</Text>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        matchContainer: {\r\n            flex: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderWidth: 0,\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginVertical: 10,\r\n            height: 50,\r\n        },\r\n        filtersIcon: {\r\n            paddingHorizontal: 5,\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        dropdownWrapper: {\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n        },\r\n        openButton: {\r\n            width: \"100%\",\r\n            height: 30,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 20,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderRadius: 2,\r\n            backgroundColor: theme.background,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        openButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        chipContainer: {\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {Overlay, withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport Chips from \"./Chips\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    single?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.tempSelected = this.props.selected || [];\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        this.apply();\r\n    }\r\n\r\n    apply() {\r\n        if (this.props.onChange) this.props.onChange(this.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            single,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                this.tempSelected = this.tempSelected.filter((v) => v !== item);\r\n                                this.apply();\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <View>\r\n                        {/*showChips &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))*/}\r\n                    </View>\r\n                </View>\r\n                {this.state.open && (\r\n                    <Overlay\r\n                        overlayStyle={[styles.overlay, {height: 150 + items.length * 40}]}\r\n                        isVisible={this.state.open}\r\n                        onRequestClose={() => this.close()}\r\n                        onBackdropPress={() => this.close()}\r\n                    >\r\n                        <>\r\n                            <View\r\n                                style={styles.dropdownWrapper}\r\n                                onLayout={(e: LayoutChangeEvent) => {\r\n                                    this.setState({...this.state, dropdownWrapperHeight: e.nativeEvent.layout.height});\r\n                                }}\r\n                            >\r\n                                <DropDownPicker\r\n                                    items={items}\r\n                                    multiple={!single}\r\n                                    searchable={true}\r\n                                    defaultValue={selected}\r\n                                    onChangeItem={(values: string[]) => {\r\n                                        this.tempSelected = values;\r\n                                    }}\r\n                                    placeholder={placeholder}\r\n                                    multipleText={multipleText}\r\n                                    searchablePlaceholder={searchablePlaceholder}\r\n                                    scrollViewProps={{keyboardShouldPersistTaps: \"handled\"}} // ensures items are clickable even when the keyboard is open\r\n                                    isVisible={true}\r\n                                    showArrow={false}\r\n                                    dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                    // Style props\r\n                                    selectedLabelStyle={{display: \"none\"}}\r\n                                    style={styles.dropdownStyle}\r\n                                    itemStyle={styles.dropdownItemStyle}\r\n                                    activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                    activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                    labelStyle={styles.dropdownLabelStyle}\r\n                                />\r\n                            </View>\r\n                            <View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                    </Overlay>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport {Theme} from \"../types\";\r\n\r\nexport function getToggleStyleProps(nobuttonBariant: boolean, theme: Theme): Partial<ButtonGroupProps> {\r\n    if (nobuttonBariant) {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.componentBorder,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.componentBorder,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    noButtonVariant?: boolean;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(noButtonVariant || false, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            buttonContainerStyle={[styleProps.buttonContainerStyle, {marginHorizontal: 2}]}\r\n            buttonStyle={[styleProps.buttonStyle, {paddingHorizontal: 0}]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type LanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n    multiple?: boolean;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, multiple, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                single={!multiple}\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguagePicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, noButtonVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type FormattedOfferCategoryProps = {\r\n    category: OfferCategory;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconProps?: Partial<SvgProps>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconSize?: number;\r\n} & ThemeProps;\r\n\r\nclass FormattedOfferCategory extends React.Component<FormattedOfferCategoryProps> {\r\n    render(): JSX.Element {\r\n        const {containerStyle, category, theme, textStyle, iconProps, iconSize} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const translationKey = `onboarding.offers${category[0].toUpperCase() + category.slice(1)}.title`;\r\n        const SvgIcon = getLocalSvg(`offers.categories.${category}`, () => this.forceUpdate());\r\n\r\n        const size = iconSize || 75;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <SvgIcon width={size} height={size} {...iconProps} />\r\n                <View style={styles.textContainer}>\r\n                    <View style={styles.underline} />\r\n                    <Text style={[styles.text, textStyle]}>{i18n.t(translationKey)}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginLeft: -10,\r\n        },\r\n        textContainer: {\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontSize: 24,\r\n            fontFamily: \"raleway\",\r\n            fontWeight: \"bold\",\r\n            color: theme.accent,\r\n            paddingHorizontal: 8,\r\n            zIndex: 2,\r\n\r\n            // Make it more readable with the dark theme\r\n            ...(theme.id === \"dark\"\r\n                ? {\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.6)\",\r\n                      textShadowOffset: {width: 0, height: 1},\r\n                      textShadowRadius: 1,\r\n                  }\r\n                : {}),\r\n        },\r\n        underline: {\r\n            position: \"absolute\",\r\n            bottom: 2,\r\n            width: \"100%\",\r\n            height: 12,\r\n            backgroundColor: theme.accentTernary,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedOfferCategory);\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport LanguagePicker from \"../components/LanguagePicker\";\r\nimport {Degree, Role} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport FormattedOfferCategory from \"../components/FormattedOfferCategory\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nexport const filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        // <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator />\r\n                <FormattedOfferCategory category={category} iconSize={60} />\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            />\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n                    <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                        <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                        <MaterialIcons name=\"refresh\" style={styles.resetButtonIcon} />\r\n                    </TouchableOpacity>\r\n                    <View style={styles.sectionContainer}>\r\n                        <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <MultiUniversityPicker\r\n                                    universities={filters.universities}\r\n                                    showChips={false}\r\n                                    onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <LanguagePicker\r\n                                    multiple={true}\r\n                                    languages={filters.languages}\r\n                                    showChips={false}\r\n                                    onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                            <RoleToggleMulti\r\n                                roles={filters.types}\r\n                                onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                                noButtonVariant={true}\r\n                            />\r\n                        </View>\r\n                        {filters.types.indexOf(\"student\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                                <DegreeToggleMulti\r\n                                    degrees={filters.degrees}\r\n                                    onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                    style={{width: \"100%\"}}\r\n                                    noButtonVariant={true}\r\n                                />\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                    {offerSections}\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            padding: 40,\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.textBlack,\r\n        },\r\n        resetButtonIcon: {\r\n            fontSize: 16,\r\n            color: theme.textBlack,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localChatUser: state.messaging.localChatUser,\r\n}));\r\n\r\n// Component props\r\nexport type ChatRoomCardProps = {\r\n    room: ChatRoom;\r\n    style?: ViewStyle;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nclass ChatRoomCard extends React.Component<ChatRoomCardProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ChatRoomCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            height: new ReAnimated.Value(CARD_HEIGHT),\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = 120;\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    render() {\r\n        const {theme, room, style, onPress, localChatUser} = this.props;\r\n        const {height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = room.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const user = room.users.filter((p: ChatRoomUser) => p._id !== localChatUser?._id)[0];\r\n\r\n        let lastMessageComponent = <></>;\r\n\r\n        if (room.lastMessage) {\r\n            const date = room.lastMessage.createdAt;\r\n            const isRead =\r\n                localUser &&\r\n                localUser.lastMessageSeenDate &&\r\n                (localUser.lastMessageSeenDate >= date || localUser.lastMessageSeenId == room.lastMessage._id);\r\n            const pad = (num: number) => (num + \"\").padStart(2, \"0\");\r\n            lastMessageComponent = (\r\n                <>\r\n                    <Text style={[styles.lastMessageText, isRead ? {} : styles.lastMessageTextNew]} numberOfLines={1}>\r\n                        {room.lastMessage.user.name.split(\" \")[0]}: {room.lastMessage.text}\r\n                    </Text>\r\n                    <Text style={styles.lastMessageTime}>\r\n                        {pad(date.getHours())}:{pad(date.getMinutes())}\r\n                    </Text>\r\n                </>\r\n            );\r\n        } else {\r\n            lastMessageComponent = (\r\n                <Text style={styles.noMessageText} numberOfLines={1}>\r\n                    {room.users.length === 2 ? `Say hi to ${user.name}!` : \"Say hi\"}\r\n                </Text>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        //this.hide();\r\n                    }}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={styles.swipeAction}>\r\n                            <View style={styles.swipeActionContent}>\r\n                                <SwipeActionButton icon=\"notifications-off\" color={\"#ccc\"}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"report\" color={theme.warn}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"close\" color={theme.error}></SwipeActionButton>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            if (onPress) onPress();\r\n                            rootNavigate(\"ChatScreen\", {roomId: room.id});\r\n                        }}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.avatarContainer}>\r\n                            <GiftedAvatar avatarStyle={styles.avatar} user={user}></GiftedAvatar>\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{user.name}</Text>\r\n                            <View style={styles.lastMessage}>{lastMessageComponent}</View>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n                            <Avatar\r\n                                size={CARD_HEIGHT - verticalSpacing * 2 - 20}\r\n                                rounded\r\n                                title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                containerStyle={styles.avatar}\r\n                                source={profile.avatar && profile.avatar !== \"\" ? {uri: profile.avatar} : undefined}\r\n                            ></Avatar>\r\n                            *\r\n/*\r\n<Text style={styles.infoText}>\r\n    {i18n.t(`allRoles.${profile.staffRole ? \"staff\" : \"student\"}`)} (\r\n    {profile.staffRole\r\n        ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n        : i18n.t(`degrees.${profile.degree}`)}\r\n    )\r\n</Text>\r\n*/\r\ntype SwipeActionProps = {icon: string; color?: string; onPress?: () => void};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, color, onPress, theme} = props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor: color}]}>\r\n                <MaterialIcons style={styles.swipeActionButtonIcon} name={icon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 5;\r\nconst CARD_HEIGHT = 75;\r\nconst ACTION_BUTTON_WIDTH = CARD_HEIGHT - verticalSpacing * 2;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            //paddingHorizontal: 20,\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n            padding: 10,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        swipeAction: {\r\n            width: ACTION_BUTTON_WIDTH * 3,\r\n            //marginHorizontal: sideMargin,\r\n            marginLeft: -sideMargin - 2,\r\n            marginRight: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionContent: {\r\n            flexDirection: \"row\",\r\n            borderTopRightRadius: 4,\r\n            borderBottomRightRadius: 4,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n        swipeActionButton: {\r\n            width: ACTION_BUTTON_WIDTH,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 22,\r\n        },\r\n\r\n        // Card content\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n            width: 45,\r\n            height: 45,\r\n            borderRadius: 50,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        lastMessage: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n        },\r\n        noMessageText: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageText: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageTextNew: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        lastMessageTime: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomCard));\r\n","import * as React from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    RefreshControl,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMatchRooms, refreshMatchRooms} from \"../../state/messaging/actions\";\r\nimport {MaterialTopTabScreenProps} from \"@react-navigation/material-top-tabs\";\r\nimport {TabMessagingTabs} from \"../../navigation/types\";\r\nimport ChatRoomCard from \"../../components/messaging/ChatRoomCard\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    roomIds: state.messaging.matchRoomsOrdered,\r\n    fetchingRooms: state.messaging.matchRoomsPagination.fetching,\r\n}));\r\n\r\ntype IndividualMessagingTabProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    MaterialTopTabScreenProps<TabMessagingTabs>;\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass IndividualMessagingTab extends React.Component<IndividualMessagingTabProps> {\r\n    fetchMore() {\r\n        const {fetchingRooms, dispatch} = this.props;\r\n        if (!fetchingRooms) (dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        if (this.props.roomIds.length < ROOMS_FETCH_LIMIT) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {roomIds, navigation} = this.props;\r\n        if (navigation.isFocused() && roomIds.length < ROOMS_FETCH_LIMIT) this.fetchMore();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, rooms, roomIds, fetchingRooms, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView\r\n                    style={styles.scroll}\r\n                    contentContainerStyle={styles.scrollContent}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingRooms}\r\n                            onRefresh={() => (dispatch as MyThunkDispatch)(refreshMatchRooms())}\r\n                        />\r\n                    }\r\n                    onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                        const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                        if (distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                    }}\r\n                >\r\n                    {roomIds.map((id: string) => (\r\n                        <ChatRoomCard key={id} room={rooms[id]} />\r\n                    ))}\r\n                    {!fetchingRooms && roomIds.length == 0 && (\r\n                        <View style={styles.noMatchesContainer}>\r\n                            <Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>\r\n                        </View>\r\n                    )}\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            paddingTop: 20,\r\n            paddingBottom: 40,\r\n        },\r\n        noMatchesContainer: {\r\n            width: \"80%\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 40,\r\n        },\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n        },\r\n\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"90%\",\r\n            marginBottom: 10,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 45,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(IndividualMessagingTab));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\n\r\nconst reduxConnector = connect(() => ({}));\r\n\r\ntype GroupMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass GroupMessagingTab extends React.Component<GroupMessagingTabProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.wrapper}>\r\n                    <Text style={styles.text}>Not implemented</Text>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n        },\r\n        text: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMessagingTab));\r\n","import {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {StyleSheet} from \"react-native\";\r\n\r\nexport const headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            backgroundColor: theme.background,\r\n            paddingHorizontal: 5,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 1,\r\n            },\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 1.41,\r\n            elevation: 2,\r\n        },\r\n        wrapperNoShadow: {\r\n            shadowColor: \"transparent\",\r\n            elevation: 0,\r\n        },\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            height: 60,\r\n            paddingHorizontal: 10,\r\n        },\r\n        backButton: {\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 5,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        backButtonIcon: {\r\n            fontSize: 28,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accent,\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        avatarTitle: {\r\n            color: theme.textWhite,\r\n        },\r\n        title: {\r\n            flex: 1,\r\n            color: theme.text,\r\n            fontWeight: \"normal\",\r\n            fontSize: 20,\r\n        },\r\n        rightButton: {\r\n            paddingHorizontal: 5,\r\n            paddingVertical: 5,\r\n        },\r\n        rightIcon: {\r\n            fontSize: 26,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {headerTitle, navigateBack, rootNavigate} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\nexport type HeaderButtonProps = {\r\n    buttonStyle: StyleProp<ViewStyle>;\r\n    iconStyle: StyleProp<TextStyle>;\r\n};\r\n\r\ntype AdditionalProps = {\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    rightButtons?: ((props: HeaderButtonProps) => JSX.Element)[];\r\n    backButton?: boolean;\r\n    noSettingsButton?: boolean;\r\n    noAvatar?: boolean;\r\n    color?: string;\r\n    noShadow?: boolean;\r\n};\r\n\r\n// Component props\r\nexport type MainHeaderProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackHeaderProps & AdditionalProps;\r\n\r\nclass MainHeaderClass extends React.Component<MainHeaderProps> {\r\n    back(): void {\r\n        navigateBack(\"MainScreen\");\r\n    }\r\n\r\n    pressAvatar(): void {\r\n        rootNavigate(\"MyProfileScreen\");\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            backButton,\r\n            rightButtons,\r\n            wrapperStyle,\r\n            color,\r\n            noShadow,\r\n            noSettingsButton,\r\n            noAvatar,\r\n            user,\r\n            insets,\r\n            scene,\r\n        } = this.props;\r\n        const styles = headerStyles(theme);\r\n\r\n        const title = headerTitle(scene.route.name as NavigatorRoute);\r\n        const textColor = color || theme.text;\r\n\r\n        return (\r\n            <View\r\n                style={[{paddingTop: insets.top}, styles.wrapper, noShadow ? styles.wrapperNoShadow : {}, wrapperStyle]}\r\n            >\r\n                <View style={styles.container}>\r\n                    {backButton && (\r\n                        <TouchableOpacity style={styles.backButton} onPress={() => this.back()}>\r\n                            <MaterialIcons style={[styles.backButtonIcon, {color: textColor}]} name=\"arrow-back\" />\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!noAvatar && (\r\n                        <ProfileAvatar\r\n                            profile={user?.profile}\r\n                            rounded\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            titleStyle={styles.avatarTitle}\r\n                            activeOpacity={0.75}\r\n                            onPress={() => this.pressAvatar()}\r\n                        />\r\n                    )}\r\n                    <Text style={[styles.title, {marginLeft: 12, color: textColor}]} numberOfLines={1}>\r\n                        {title}\r\n                    </Text>\r\n                    {rightButtons?.map((ButtonComponent, i) => (\r\n                        <ButtonComponent\r\n                            key={`header-button-${scene.route.key}-${i}`}\r\n                            buttonStyle={styles.rightButton}\r\n                            iconStyle={[styles.rightIcon, {color: textColor}]}\r\n                        />\r\n                    ))}\r\n                    {!noSettingsButton && (\r\n                        <TouchableOpacity style={styles.rightButton} onPress={() => rootNavigate(\"SettingsScreen\")}>\r\n                            <MaterialIcons name=\"settings\" style={styles.rightIcon} color={textColor} />\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainHeaderComp = reduxConnector(withTheme(MainHeaderClass));\r\n\r\nexport default function MainHeader(props: StackHeaderProps & AdditionalProps): JSX.Element {\r\n    return <MainHeaderComp {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport IndividualMessagingTab from \"../screens/messaging/IndividualMessagingTab\";\r\nimport GroupMessagingTab from \"../screens/messaging/GroupMessagingTab\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMessagingRoot, TabMessagingTabs} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {headerStyles} from \"../styles/headers\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\nconst Tab = createMaterialTopTabNavigator<TabMessagingTabs>();\r\n\r\nconst Header = (stackProps: StackHeaderProps) => (\r\n    <ThemeConsumer>\r\n        {({theme}: ThemeProps) => {\r\n            const hstyles = headerStyles(theme);\r\n            return (\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    wrapperStyle={[hstyles.wrapperNoShadow, {backgroundColor: theme.cardBackground}]}\r\n                />\r\n            );\r\n        }}\r\n    </ThemeConsumer>\r\n);\r\n\r\nconst MessagingNavigator = (): JSX.Element => (\r\n    <Stack.Navigator screenOptions={{header: Header}}>\r\n        <Stack.Screen name=\"MessagingScreen\">\r\n            {() => (\r\n                <Tab.Navigator initialRouteName=\"IndividualMessagingTab\">\r\n                    <Tab.Screen\r\n                        name=\"IndividualMessagingTab\"\r\n                        options={{\r\n                            tabBarLabel: i18n.t(\"messaging.tabIndividual\"),\r\n                            title: screenTitle(\"IndividualMessagingTab\"),\r\n                        }}\r\n                        component={IndividualMessagingTab}\r\n                    />\r\n                    <Tab.Screen\r\n                        name=\"GroupMessagingTab\"\r\n                        options={{\r\n                            tabBarLabel: i18n.t(\"messaging.tabGroup\"),\r\n                            title: screenTitle(\"GroupMessagingTab\"),\r\n                        }}\r\n                        component={GroupMessagingTab}\r\n                    />\r\n                </Tab.Navigator>\r\n            )}\r\n        </Stack.Screen>\r\n    </Stack.Navigator>\r\n);\r\n\r\nexport default MessagingNavigator;\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome style={styles.icon} name=\"heart\" />\r\n                    <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                    <View style={styles.separator} />\r\n                    <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                        Found a bug or have some feedback for us or ideas for the app?\r\n                    </Text>\r\n                    <Text style={styles.alphaText}>\r\n                        Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                    </Text>\r\n                    <LogOutButton style={styles.logoutButton} />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport MainHeader from \"./MainHeader\";\r\n\r\n// Component props\r\nexport type MatchScreenHeaderProps = StackHeaderProps;\r\n\r\nclass MatchScreenHeaderClass extends React.Component<MatchScreenHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {...stackProps} = this.props;\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                rightButtons={[\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity\r\n                            style={buttonStyle}\r\n                            onPress={() => stackProps.navigation.navigate(\"MatchFilteringScreen\")}\r\n                        >\r\n                            <FontAwesome name=\"sliders\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default function MatchScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <MatchScreenHeaderClass {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {headerTitle} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {filteringScreenRef} from \"../../screens/MatchFilteringScreen\";\r\nimport {refreshFetchedProfiles} from \"../../state/matching/actions\";\r\n\r\n// Component props\r\nexport type FilteringScreenHeaderProps = ThemeProps & StackHeaderProps;\r\n\r\nclass FilteringScreenHeaderClass extends React.Component<FilteringScreenHeaderProps> {\r\n    back() {\r\n        const nav = this.props.navigation;\r\n        if (nav.canGoBack()) nav.goBack();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, insets, scene, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const title = headerTitle(scene.route.name as NavigatorRoute);\r\n\r\n        return (\r\n            <View style={[{paddingTop: insets.top}, hstyles.wrapper]}>\r\n                <View style={hstyles.container}>\r\n                    <TouchableOpacity style={{paddingVertical: 10}} onPress={() => this.back()}>\r\n                        <MaterialIcons name=\"close\" style={styles.actionIcon} />\r\n                    </TouchableOpacity>\r\n                    <Text style={[hstyles.title, {textAlign: \"center\"}]} numberOfLines={1}>\r\n                        {title}\r\n                    </Text>\r\n                    <TouchableOpacity\r\n                        style={{paddingVertical: 10}}\r\n                        onPress={() => {\r\n                            if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                            navigation.navigate(\"TabMatchingScreen\");\r\n                            store.dispatch(refreshFetchedProfiles());\r\n                        }}\r\n                    >\r\n                        <MaterialIcons name=\"check\" style={styles.actionIcon} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionIcon: {\r\n            fontSize: 32,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst FilteringScreenHeaderComp = withTheme(FilteringScreenHeaderClass);\r\n\r\nexport default function FilteringScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <FilteringScreenHeaderComp {...props} />;\r\n}\r\n","/* eslint-disable react/display-name */\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport TabNotImplementedScreen from \"../screens/TabNotImplementedScreen\";\r\nimport {\r\n    MainNavigatorTabs,\r\n    RootNavigatorScreens,\r\n    TabHomeRoot,\r\n    TabMatchingRoot,\r\n    TabNotificationsRoot,\r\n} from \"../navigation/types\";\r\nimport i18n from \"i18n-js\";\r\nimport TabMatchingScreen from \"../screens/TabMatchingScreen\";\r\nimport MatchFilteringScreen from \"../screens/MatchFilteringScreen\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {Text} from \"react-native\";\r\nimport {LabelPosition} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {screenTitle} from \"./utils\";\r\nimport {useSafeAreaInsets} from \"react-native-safe-area-context\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport MatchScreenHeader from \"../components/headers/MatchScreenHeader\";\r\nimport FilteringScreenHeader from \"../components/headers/FilteringScreenHeader\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent({theme}: MainNavigatorProps): JSX.Element {\r\n    const {bottom} = useSafeAreaInsets();\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabHome\"\r\n            tabBarOptions={{\r\n                activeTintColor: theme.tint,\r\n                style: {height: 55 + bottom, paddingTop: 5, paddingBottom: 5},\r\n                tabStyle: {flexDirection: \"column\", paddingBottom: bottom},\r\n                iconStyle: {flex: 1},\r\n            }}\r\n        >\r\n            <TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.home\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.matching\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.messaging\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"message\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.notifications\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\ntype TabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\ntype TabBarLabelProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    position: LabelPosition;\r\n};\r\n\r\nfunction TabBarIcon({name, color}: {name: string} & TabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nfunction TabBarLabel({text, color}: {text: string} & TabBarLabelProps): JSX.Element {\r\n    return <Text style={{color, fontSize: 12}}>{text}</Text>;\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nconst TabMatchingNavigator = (): JSX.Element => (\r\n    <TabMatchingStack.Navigator>\r\n        <TabMatchingStack.Screen\r\n            name=\"TabMatchingScreen\"\r\n            component={TabMatchingScreen}\r\n            options={() => ({\r\n                headerShown: true,\r\n                title: screenTitle(\"TabMatchingScreen\"),\r\n                header: MatchScreenHeader,\r\n            })}\r\n        />\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchFilteringScreen\"\r\n            component={MatchFilteringScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchFilteringScreen\"),\r\n                header: FilteringScreenHeader,\r\n            }}\r\n        />\r\n    </TabMatchingStack.Navigator>\r\n);\r\n\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import {StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideScrollView: {\r\n            width: \"100%\",\r\n            marginBottom: 80, // leave some space for the navigation controls\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"75%\",\r\n            flexDirection: \"column\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 150,\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 20,\r\n        },\r\n        navButton: {\r\n            padding: 10,\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const tosSlideStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        actionButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        actionButtonTextDecline: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.error,\r\n        },\r\n        actionButtonTextAccept: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.okay,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginBottom: 40,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport const onboardingOffersStyle = preTheme(() => {\r\n    return StyleSheet.create({\r\n        categoryTitleText: {},\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const tooltipStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            width: undefined, // override default width so it adjusts based on the content\r\n            maxWidth: 240,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n","import React from \"react\";\r\nimport {Text} from \"react-native\";\r\nimport {Tooltip, withTheme} from \"react-native-elements\";\r\nimport {tooltipStyles} from \"../styles/tooltips\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type CustomTooltipProps = {\r\n    text: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\nexport type CustomTooltipState = {\r\n    height: number | undefined;\r\n};\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps, CustomTooltipState> {\r\n    constructor(props: CustomTooltipProps) {\r\n        super(props);\r\n        this.state = {height: undefined};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {height} = this.state;\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <Tooltip\r\n                popover={\r\n                    <Text\r\n                        style={styles.text}\r\n                        onLayout={(e) => {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                height: e.nativeEvent.layout.height,\r\n                            });\r\n                        }}\r\n                    >\r\n                        {text}\r\n                    </Text>\r\n                }\r\n                backgroundColor={theme.accentSlight}\r\n                containerStyle={styles.container}\r\n                height={height}\r\n            >\r\n                {this.props.children}\r\n            </Tooltip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <CheckBox\r\n                        checked={isSomethingSelected}\r\n                        onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        containerStyle={styles.checkboxContainer}\r\n                    ></CheckBox>\r\n                    <TouchableOpacity onPress={() => this.setAllValues(!isSomethingSelected)}>\r\n                        <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                    </TouchableOpacity>\r\n                    <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                        <MaterialIcons style={styles.helpIcon} name=\"help\"></MaterialIcons>\r\n                    </CustomTooltip>\r\n                </View>\r\n                {isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                noButtonVariant={true}\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                noButtonVariant={true}\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        helpIcon: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.textLight,\r\n        },\r\n        buttonsWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            margin: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n): JSX.Element[] {\r\n    return offers\r\n        .filter((offer: OfferDto) => offer.category == category)\r\n        .map((offer: OfferDto, i: number) => (\r\n            <OfferControl\r\n                key={i}\r\n                offer={offer}\r\n                value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                style={{marginVertical: 20}}\r\n            />\r\n        ));\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.type!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds.map((id) => ({id})),\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.type == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.type == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRoles: Object.keys(onboardingState.staffRoles)\r\n                .filter((k) => onboardingState.staffRoles[k])\r\n                .map((id: string) => ({id})),\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {Text, View, TouchableOpacity, ScrollView, KeyboardAvoidingView, ViewStyle, StyleProp} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string | JSX.Element;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {title, subtitle, index, hideNavNext, hasNext, handleSubmit, next, containerStyle, theme} = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView\r\n                    style={styles.slideScrollView}\r\n                    contentContainerStyle={[containerStyle, styles.slideContentWrapper]}\r\n                >\r\n                    <KeyboardAvoidingView behavior=\"position\" keyboardVerticalOffset={60}>\r\n                        <View style={styles.header}>\r\n                            {title && typeof title === \"string\" && <Text style={styles.title}>{title}</Text>}\r\n                            {title && typeof title !== \"string\" && title}\r\n                            {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n                        </View>\r\n                        {this.props.children}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n                <View style={styles.slideNavWrapper}>\r\n                    {hasPrevious && (\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => this.props.previous()}>\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-left\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hideNavNext && hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            /*onPress={() => this.props.navigation.navigate(next)}*/ onPress={navigateRight}\r\n                        >\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-right\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            onPress={() => {\r\n                                if (handleSubmit) handleSubmit();\r\n                                finishOnboarding(store.getState().auth.onboarding);\r\n                            }}\r\n                        >\r\n                            <Text style={styles.finishButtonText}>{i18n.t(\"onboarding.submit\")}</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    lastNameInputRef = React.createRef<FormTextInput>();\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <FormTextInput\r\n                                {...textInputProps(\"firstname\")}\r\n                                label={i18n.t(\"firstname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"next\"\r\n                                blurOnSubmit={false}\r\n                                onSubmitEditing={() => this.lastNameInputRef.current?.focus()}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                {...textInputProps(\"lastname\")}\r\n                                ref={this.lastNameInputRef}\r\n                                label={i18n.t(\"lastname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"done\"\r\n                                onSubmitEditing={() => this.props.next()}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        const paddedDay = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const formattedDate = `${paddedDay} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\n\r\n// Component props\r\nexport type BirthDatePickerProps = {\r\n    date?: Date;\r\n    open: boolean;\r\n    onSelect?: (date: Date) => void;\r\n    style?: React.CSSProperties;\r\n};\r\n\r\nconst minDate = new Date(1900, 0, 0);\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nconst formatDate = (d: Date) => d.toISOString().split(\"T\")[0];\r\n\r\nclass BirthDatePicker extends React.Component<BirthDatePickerProps> {\r\n    onChange(date: Date | undefined): void {\r\n        if (date && this.props.onSelect) this.props.onSelect(date);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, style} = this.props;\r\n        return (\r\n            <input\r\n                type=\"date\"\r\n                min={formatDate(minDate)}\r\n                max={formatDate(maxDate)}\r\n                value={formatDate(date || maxDate)}\r\n                onChange={(e) => this.onChange(new Date(e.target.value))}\r\n                style={style}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BirthDatePicker;\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, Platform, TouchableOpacity} from \"react-native\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport BirthDatePicker from \"./BirthDatePicker\";\r\nimport {webFontFamily} from \"../styles/general\";\r\n\r\n// Component props\r\nexport type BirthDateControlProps = ThemeProps & {\r\n    date?: Date;\r\n    onSelect?: (date: Date) => void;\r\n};\r\n\r\n// Component state\r\nexport type BirthDateControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass BirthDateControl extends React.Component<BirthDateControlProps, BirthDateControlState> {\r\n    constructor(props: BirthDateControlProps) {\r\n        super(props);\r\n        this.state = {open: false};\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) this.setState({...this.state, open: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, onSelect, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                {Platform.OS !== \"web\" ? (\r\n                    <>\r\n                        <TouchableOpacity\r\n                            style={[styles.button, date ? styles.buttonOk : {}]}\r\n                            onPress={() => this.showModal()}\r\n                        >\r\n                            {date && <FormattedDate style={styles.dateText} date={date} />}\r\n                            {/*!date && <Text>Click to change value</Text>*/}\r\n                        </TouchableOpacity>\r\n                        <BirthDatePicker\r\n                            date={date}\r\n                            open={open}\r\n                            onSelect={(date: Date) => {\r\n                                this.hideModal();\r\n                                if (onSelect) onSelect(date);\r\n                            }}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <BirthDatePicker\r\n                        date={date}\r\n                        open={true}\r\n                        onSelect={(date) => {\r\n                            if (onSelect) onSelect(date);\r\n                        }}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: 60,\r\n                            borderRadius: 0,\r\n                            borderWidth: 0,\r\n                            borderBottomWidth: 1,\r\n                            borderBottomColor: theme.accentTernary,\r\n                            backgroundColor: \"transparent\",\r\n                            justifyContent: \"center\",\r\n                            outline: 0,\r\n                            fontSize: 20,\r\n                            color: theme.text,\r\n                            ...webFontFamily,\r\n                            ...(date ? {borderBottomWidth: 2, borderBottomColor: theme.okay} : {}),\r\n                        }}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        dateText: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BirthDateControl);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n    disabled?: boolean;\r\n};\r\n\r\nfunction GenderToggle(props: GenderToggleProps & ThemeProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender, disabled, theme} = props;\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            disabled={disabled}\r\n            {...styleProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggle);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {\r\n    Country,\r\n    CountryCode,\r\n    DARK_THEME,\r\n    DEFAULT_THEME,\r\n    TranslationLanguageCode,\r\n} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (this.props.onSelect) this.props.onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n                theme={theme.id === \"dark\" ? DARK_THEME : DEFAULT_THEME}\r\n            ></CountryPicker>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, nationality ? styles.buttonOk : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                ></NationalityPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet, Platform, LayoutChangeEvent} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight, webFontFamily} from \"../styles/general\";\r\nimport Chips from \"./Chips\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n    width: number;\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n            width: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        if (this.state.open && this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (apply) this.apply(this.state.tempSelected);\r\n    }\r\n\r\n    apply(items: string[]) {\r\n        if (this.props.onChange) this.props.onChange(items);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const {tempSelected, width} = this.state;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        const select = this.state.items.get(locale) ? (\r\n            <SectionedMultiSelect\r\n                ref={this.selectRef}\r\n                items={this.state.items.get(locale)}\r\n                onSelectedItemsChange={(items) =>\r\n                    this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                }\r\n                selectedItems={tempSelected}\r\n                uniqueKey=\"id\"\r\n                displayKey=\"label\"\r\n                subKey=\"children\"\r\n                // Listeners\r\n                onCancel={() => this.close(false)}\r\n                onConfirm={() => this.close(true)}\r\n                // Dirty work-arounds to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                icons={undefined as never}\r\n                // Customization\r\n                showDropDowns={true}\r\n                readOnlyHeadings={true}\r\n                showChips={false}\r\n                showCancelButton={true}\r\n                selectedIconOnLeft={true}\r\n                animateDropDowns={false}\r\n                hideSelect={true}\r\n                noResultsComponent={<Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>}\r\n                searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                // Localization\r\n                confirmText={i18n.t(\"apply\")}\r\n                searchPlaceholderText={searchablePlaceholder}\r\n                // Styling\r\n                colors={{\r\n                    primary: theme.accent,\r\n                    cancel: theme.error,\r\n                    success: theme.okay,\r\n                    text: theme.text,\r\n                    subText: theme.textLight,\r\n                    searchPlaceholderTextColor: theme.textLight,\r\n                    selectToggleTextColor: theme.error,\r\n                    itemBackground: theme.cardBackground,\r\n                    subItemBackground: theme.cardBackground,\r\n                }}\r\n                confirmFontFamily={webFontFamily}\r\n                itemFontFamily={webFontFamily}\r\n                searchTextFontFamily={webFontFamily}\r\n                subItemFontFamily={webFontFamily}\r\n                styles={{\r\n                    ...multiSelectStyles,\r\n                    ...(Platform.OS === \"web\"\r\n                        ? {\r\n                              modalWrapper: {width},\r\n                              container: [multiSelectStyles.container, {width}],\r\n                          }\r\n                        : {}),\r\n                }}\r\n            />\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        return (\r\n            <View\r\n                {...viewProps}\r\n                style={{position: \"relative\"}}\r\n                onLayout={(e: LayoutChangeEvent) => this.setState({...this.state, width: e.nativeEvent.layout.width})}\r\n            >\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                const selected = this.state.tempSelected.filter((v) => v !== item);\r\n                                this.setState({...this.state, tempSelected: selected});\r\n                                this.apply(selected);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {(Platform.OS === \"android\" || Platform.OS === \"ios\") && <View>{select}</View>}\r\n                {Platform.OS === \"web\" && this.state.open && select}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            backgroundColor: theme.cardBackground,\r\n            ...(Platform.OS === \"web\"\r\n                ? {\r\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                      position: \"fixed\" as any,\r\n                      top: 50,\r\n                      bottom: 50,\r\n                      alignSelf: \"center\",\r\n                      borderWidth: 0,\r\n                      maxWidth: 700,\r\n                      maxHeight: 600,\r\n                      boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.1)\",\r\n                  }\r\n                : {}),\r\n        },\r\n        scrollView: {paddingVertical: 10, ...(Platform.OS === \"web\" ? {overflowY: \"auto\"} : {})},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            ...styleTextLight,\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        subItemText: {\r\n            marginLeft: 5,\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport SectionedMultiPicker, {SectionedMultiPickerProps} from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<SectionedMultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport BirthDateControl from \"../../components/BirthDateControl\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport GenderToggle from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingPersonalInfoScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingPersonalInfoFormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingPersonalInfoScreen extends React.Component<OnboardingPersonalInfoScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingPersonalInfoScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingPersonalInfoFormState) {\r\n        if (values.birthdate && values.gender && values.nationality) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingPersonalInfoFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingPersonalInfoFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingPersonalInfoFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.personalInfo.title\")}\r\n                            //subtitle={i18n.t(\"onboarding.personalInfo.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateControl\r\n                                date={values.birthdate || undefined}\r\n                                onSelect={(birthdate: Date) => setFieldValue(\"birthdate\", birthdate)}\r\n                            />\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showChips={false}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingPersonalInfoScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, ScrollView, TouchableOpacity, TextStyle, ViewStyle, StyleProp} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type PopUpSelectorProps = ThemeProps & {\r\n    values: string[];\r\n    selected: string[];\r\n    label: (value: string, i: number) => string;\r\n    icon?: (value: string, i: number) => JSX.Element;\r\n    onSelect?: (selected: string[]) => void;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\n// Component state\r\nexport type PopUpSelectorState = {\r\n    valueDict: {[key: string]: boolean};\r\n};\r\n\r\nclass PopUpSelector extends React.Component<PopUpSelectorProps, PopUpSelectorState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: PopUpSelectorProps) {\r\n        super(props);\r\n        this.state = {valueDict: {}};\r\n    }\r\n\r\n    private fromSelectedProp() {\r\n        const valueDict: {[key: string]: boolean} = {};\r\n        this.props.selected.forEach((v) => (valueDict[v] = true));\r\n        this.setState({...this.state, valueDict});\r\n    }\r\n\r\n    show(): void {\r\n        this.fromSelectedProp();\r\n        if (this.modalRef.current) this.modalRef.current.setModalVisible(true);\r\n    }\r\n\r\n    hide(apply: boolean): void {\r\n        if (this.modalRef.current) this.modalRef.current.setModalVisible(false);\r\n        if (apply) this.apply();\r\n        else this.fromSelectedProp();\r\n    }\r\n\r\n    toggleValue(v: string) {\r\n        const dict = this.state.valueDict;\r\n        const newValue = !dict[v];\r\n\r\n        if (this.props.multiple) {\r\n            this.setState({...this.state, valueDict: {...dict, [v]: newValue}});\r\n        } else {\r\n            this.setState({...this.state, valueDict: {[v]: newValue}}, () => {\r\n                if (newValue) this.hide(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        const {onSelect} = this.props;\r\n        const valueDict = this.state.valueDict;\r\n        if (onSelect) {\r\n            const selected = Object.keys(valueDict).filter((val: string) => valueDict[val]);\r\n            onSelect(selected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {values, selected, label, icon, multiple, atLeastOne, buttonStyle, valueStyle, theme} = this.props;\r\n        const {valueDict} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const pstyles = pickerStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={[styles.button, selected.length > 0 ? styles.buttonOk : {}, buttonStyle]}\r\n                    onPress={() => this.show()}\r\n                >\r\n                    <Text style={[styles.value, valueStyle]} numberOfLines={2}>\r\n                        {selected.map(label).join(\", \")}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    modalViewStyle={{width: \"100%\", paddingHorizontal: 0, paddingVertical: 0}}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContent}>\r\n                                {values.map((v: string, index: number) => (\r\n                                    <TouchableOpacity\r\n                                        key={`popup-selector-row-${v}`}\r\n                                        style={styles.rowContainer}\r\n                                        onPress={() => this.toggleValue(v)}\r\n                                        activeOpacity={0.5}\r\n                                    >\r\n                                        {icon && icon(v, index)}\r\n                                        <Text style={styles.label}>{label(v, index)}</Text>\r\n                                        <CheckBox\r\n                                            checked={valueDict[v]}\r\n                                            containerStyle={styles.checkboxContainer}\r\n                                            wrapperStyle={styles.checkboxWrapper}\r\n                                            onPress={() => this.toggleValue(v)}\r\n                                            size={26}\r\n                                            {...(multiple\r\n                                                ? {}\r\n                                                : {checkedIcon: \"check-circle\", uncheckedIcon: \"circle-o\"})}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </ScrollView>\r\n                            {multiple && (!atLeastOne || Object.values(valueDict).some((v) => v === true)) && (\r\n                                <TouchableOpacity\r\n                                    onPress={() => this.hide(true)}\r\n                                    style={[pstyles.okButton, {width: \"100%\"}]}\r\n                                >\r\n                                    <Text style={pstyles.okButtonText}>{i18n.t(\"ok\")}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        value: {},\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            width: \"100%\",\r\n            paddingVertical: 2,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        label: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            flexGrow: 1,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginRight: 0,\r\n        },\r\n        checkboxWrapper: {\r\n            padding: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PopUpSelector);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level?: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, level, theme, buttonStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={LANGUAGE_LEVELS}\r\n                label={(l: string) => i18n.t(`languageLevels.${l}`)}\r\n                selected={level ? [level] : []}\r\n                valueStyle={styles.value}\r\n                buttonStyle={[styles.button, buttonStyle]}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as LanguageLevel);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            width: 75,\r\n            height: 40,\r\n            alignItems: \"center\",\r\n        },\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LanguageLevelPicker);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle, Text, Alert} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {languages};\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        this.setState({...this.state, languages});\r\n        const hasErrors = languages.filter((l) => !l.level).length > 0;\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length)\r\n            this.onChange(this.state.languages.filter((v, i) => i !== idx));\r\n    }\r\n\r\n    setLanguages(codes: string[]) {\r\n        const levelDict = new Map(this.state.languages.map((l) => [l.code, l.level]));\r\n        const languages = codes.map((code: string) => ({code, level: levelDict.get(code)}));\r\n        this.onChange(languages);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            languages,\r\n        });\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.map((l, i) => (i === idx ? {...l, level} : l));\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            return (\r\n                <View key={`spoken-languages-input-${sl.code}`} style={styles.rowContainer}>\r\n                    <Text style={styles.languageLabel}>{i18n.t(`languageNames.${sl.code}`)}</Text>\r\n                    <LanguageLevelPicker\r\n                        level={sl.level}\r\n                        buttonStyle={styles.levelPicker}\r\n                        onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                    />\r\n                    <MaterialIcons onPress={() => this.removeRow(i)} style={styles.deleteIcon} name=\"delete\" />\r\n                </View>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <View style={style}>\r\n                <LanguagePicker\r\n                    multiple={true}\r\n                    languages={languages.map((l) => l.code || \"\")}\r\n                    style={styles.languagePicker}\r\n                    onChange={(languageCodes: string[]) => {\r\n                        if (languageCodes.length > MAX_SPOKEN_LANGUAGES)\r\n                            Alert.alert(`You cannot select more than ${MAX_SPOKEN_LANGUAGES} languages`);\r\n                        this.setLanguages(languageCodes.slice(0, MAX_SPOKEN_LANGUAGES));\r\n                    }}\r\n                    showChips={false}\r\n                />\r\n                {rows}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 24,\r\n            color: theme.error,\r\n            paddingHorizontal: 4,\r\n            height: \"100%\",\r\n            textAlignVertical: \"center\",\r\n        },\r\n        languagePicker: {},\r\n        languageLabel: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        levelPicker: {\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n});\r\n\r\ntype OnboardingLanguageScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingLanguageScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingLanguageFormState = {\r\n    languages: SpokenLanguageDto[];\r\n};\r\n\r\nclass OnboardingLanguageScreen extends React.Component<OnboardingLanguageScreenProps, OnboardingLanguageScreenState> {\r\n    constructor(props: OnboardingLanguageScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    submit(values: OnboardingLanguageFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const {hasErrors} = this.state;\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingLanguageFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingLanguageFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingLanguageFormState>) => {\r\n                    const {handleSubmit, values, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.language.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            />\r\n                            {touched.languages && hasErrors && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.specifyLevel\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n                            {touched.languages && !hasErrors && values.languages.length == 0 && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.atLeastOne\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingLanguageScreen);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingInterestsScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingInterestsFormState = {\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingInterestsScreen extends React.Component<OnboardingInterestsScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingInterestsScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.interestIds != next.interestIds;\r\n    }\r\n\r\n    submit(values: OnboardingInterestsFormState) {\r\n        this.props.dispatch(setOnboardingValues({interestIds: values.interestIds}));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingInterestsFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingInterestsFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingInterestsFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.interests.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[]) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                }}\r\n                                showChips={true}\r\n                            />\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds} />}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingInterestsScreen);\r\n","import * as React from \"react\";\r\nimport {Text, ViewStyle, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport store from \"../../state/store\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\ntype OnboardingRoleScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    type: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        store.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.role.title\")} hideNavNext={true} {...this.props}>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({type: \"student\"})}>\r\n                    <MaterialIcons name={\"school\"} style={styles.roleButtonIconStudent}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStudent}>{i18n.t(\"allRoles.student\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({type: \"staff\"})}>\r\n                    <MaterialIcons name={\"group\"} style={styles.roleButtonIconStaff}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStaff}>{i18n.t(\"allRoles.staff\")}</Text>\r\n                </TouchableOpacity>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    const studentColor = theme.accent;\r\n    const staffColor = theme.okay;\r\n\r\n    const common = StyleSheet.create({\r\n        roleButtonText: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n        },\r\n        roleButtonIcon: {\r\n            fontSize: 50,\r\n            marginRight: 15,\r\n        },\r\n    });\r\n\r\n    return StyleSheet.create({\r\n        roleButton: {\r\n            height: 100,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        } as ViewStyle,\r\n        roleButtonTextStaff: {\r\n            ...common.roleButtonText,\r\n            color: staffColor,\r\n        },\r\n        roleButtonTextStudent: {\r\n            ...common.roleButtonText,\r\n            color: studentColor,\r\n        },\r\n        roleButtonIconStaff: {\r\n            ...common.roleButtonIcon,\r\n            color: staffColor,\r\n        },\r\n        roleButtonIconStudent: {\r\n            ...common.roleButtonIcon,\r\n            color: studentColor,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingRoleScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Discover;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={<FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} />}\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen1));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Collaborate;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={<FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} />}\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen2));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Meet;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={<FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} />}\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen3));\r\n","import * as React from \"react\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n} & ThemeProps;\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, theme} = this.props;\r\n        const styleProps = getToggleStyleProps(false, theme);\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                {...styleProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DegreeToggle);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet, Switch} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme, onboardingState, dispatch} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n        const staffRoles = onboardingState.staffRoles;\r\n        const atLeastOne = Object.values(staffRoles).some((v) => v === true);\r\n\r\n        const setValue = (sr: StaffRole, b: boolean) =>\r\n            dispatch(setOnboardingValues({staffRoles: {...staffRoles, [sr]: b}}));\r\n\r\n        const buttons = STAFF_ROLES.map((sr: StaffRole, i: number) => (\r\n            <TouchableOpacity\r\n                key={i}\r\n                style={styles.button}\r\n                activeOpacity={0.6}\r\n                onPress={() => setValue(sr, !staffRoles[sr])}\r\n            >\r\n                <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.buttonIcon} />\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n                <Switch\r\n                    value={staffRoles[sr]}\r\n                    thumbColor={theme.accent}\r\n                    trackColor={{true: theme.accentTernary, false: theme.accentSlight}}\r\n                    onValueChange={(b: boolean) => setValue(sr, b)}\r\n                />\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.roleSpecific1.staff.title\")}\r\n                hideNavNext={!atLeastOne}\r\n                {...this.props}\r\n            >\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        return (\r\n            <>\r\n                {onboardingState.type === \"student\" && this.studentRender()}\r\n                {onboardingState.type === \"staff\" && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {theme, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"tos.modal.disclaimer1\")}\r\n                            {\"\\n\\n\"}\r\n                            {i18n.t(\"tos.modal.disclaimer2\")}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={[styles.actionText]}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    rootNavigate(\"LoginScreen\");\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"tos.decline\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textInverted,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingTosScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingTosScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingTosScreen extends React.Component<OnboardingTosScreenProps, OnboardingTosScreenState> {\r\n    constructor(props: OnboardingTosScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.tos.title\")}\r\n                subtitle={i18n.t(\"onboarding.tos.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"tos.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"tos.readMore\")[1]} />\r\n                    {i18n.t(\"tos.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal visible={true} onHide={() => this.setState({...this.state, declined: false})} />\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingTosScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingPrivacyScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingPrivacyScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingPrivacyScreen extends React.Component<OnboardingPrivacyScreenProps, OnboardingPrivacyScreenState> {\r\n    constructor(props: OnboardingPrivacyScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.privacy.title\")}\r\n                subtitle={i18n.t(\"onboarding.privacy.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"privacy.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"privacy.readMore\")[1]} />\r\n                    {i18n.t(\"privacy.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal visible={true} onHide={() => this.setState({...this.state, declined: false})} />\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingPrivacyScreen);\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\nimport OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingPersonalInfoScreen from \"./OnboardingPersonalInfoScreen\";\r\nimport OnboardingLanguageScreen from \"./OnboardingLanguageScreen\";\r\nimport OnboardingInterestsScreen from \"./OnboardingInterestsScreen\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingTosScreen from \"./OnboardingTosScreen\";\r\nimport OnboardingPrivacyScreen from \"./OnboardingPrivacyScreen\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingPersonalInfoScreen,\r\n    OnboardingLanguageScreen,\r\n    OnboardingInterestsScreen,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingTosScreen,\r\n    OnboardingPrivacyScreen,\r\n};\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingTosScreen\",\r\n    \"OnboardingPrivacyScreen\",\r\n    \"OnboardingPersonalInfoScreen\",\r\n    \"OnboardingLanguageScreen\",\r\n    \"OnboardingInterestsScreen\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER, ONBOARDING_SCREENS} from \"../screens/onboarding\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const ComponentClass = ONBOARDING_SCREENS[name];\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => {\r\n        if (hasNext) rootNavigate(ONBOARDING_ORDER[i + 1]);\r\n    };\r\n    const previous = () => {\r\n        if (i > 0) rootNavigate(ONBOARDING_ORDER[i - 1]);\r\n    };\r\n\r\n    class temp extends React.Component {\r\n        render(): JSX.Element {\r\n            return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n        }\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={temp} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nexport default function OnboardingNavigator(): JSX.Element {\r\n    return (\r\n        <OnboardingStack.Navigator\r\n            initialRouteName={ONBOARDING_ORDER[0]}\r\n            tabBarOptions={{showLabel: false, showIcon: false}}\r\n            tabBar={() => <></>}\r\n            springConfig={{\r\n                stiffness: 500,\r\n                damping: 2000,\r\n                mass: 5,\r\n            }}\r\n            swipeEnabled={false}\r\n            lazy={true}\r\n            lazyPreloadDistance={0}\r\n        >\r\n            {screens}\r\n        </OnboardingStack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"home\"></FontAwesome>\r\n                <Text style={styles.title}>{i18n.t(\"onboarding.profileCreated\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity style={styles.button} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                    <Text style={styles.buttonText}>{i18n.t(\"onboarding.getStarted\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"85%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            color: theme.text,\r\n            fontSize: 40,\r\n            marginVertical: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        button: {\r\n            marginVertical: 20,\r\n            padding: 5,\r\n            borderBottomWidth: 0.75,\r\n            borderBottomColor: theme.textLight,\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 20,\r\n            letterSpacing: 1.5,\r\n            textTransform: \"uppercase\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, Text, TextStyle, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type AsyncButtonProps = {\r\n    onPress: () => Promise<unknown>;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    color?: string;\r\n    text: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype AsyncButtonState = {\r\n    loading: boolean;\r\n};\r\n\r\nclass AsyncButton extends React.Component<AsyncButtonProps, AsyncButtonState> {\r\n    constructor(props: AsyncButtonProps) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    onPress() {\r\n        if (!this.state.loading) {\r\n            this.setState({...this.state, loading: true});\r\n            this.props.onPress().then(() => this.setState({...this.state, loading: false}));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {text, style, textStyle, loadingIndicatorStyle, color, theme} = this.props;\r\n        const {loading} = this.state;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                {...{onPress: loading ? undefined : () => this.onPress()}}\r\n                style={style}\r\n            >\r\n                {loading && (\r\n                    <ActivityIndicator\r\n                        color={color || theme.accentTernary}\r\n                        style={[\r\n                            {position: \"absolute\", top: 0, right: 0, bottom: 0, left: 0, margin: \"auto\"},\r\n                            loadingIndicatorStyle,\r\n                        ]}\r\n                    />\r\n                )}\r\n                <Text style={[{opacity: loading ? 0 : 1}, textStyle]}>{text}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(AsyncButton);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport store from \"../state/store\";\r\nimport {styleTextThin} from \"../styles/general\";\r\nimport {connectToChat, fetchMatchRoom} from \"../state/messaging/actions\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport AsyncButton from \"../components/AsyncButton\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type MatchSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass MatchSuccessScreen extends React.Component<MatchSuccessScreenProps> {\r\n    getRoomId(): string | null {\r\n        const params = this.props.route.params;\r\n        if (params) {\r\n            const roomId = (params as {[key: string]: string}).roomId;\r\n            return roomId || null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async chat(): Promise<void> {\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n        const roomId = this.getRoomId();\r\n\r\n        if (roomId) {\r\n            const connectPromise = new Promise((resolve) =>\r\n                dispatch(connectToChat((connected: boolean) => resolve(connected))),\r\n            );\r\n\r\n            // Once we have fetched the room and we are connected to the chat\r\n            const [room, connected] = await Promise.all([dispatch(fetchMatchRoom(roomId)), connectPromise]);\r\n\r\n            if (room) {\r\n                if (connected) rootNavigate(\"ChatScreen\", {roomId: room.id});\r\n                return;\r\n            }\r\n        }\r\n        // If we haven't been able to join the chat\r\n        rootNavigate(\"TabMessaging\");\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                    <View style={styles.separator} />\r\n                    <AsyncButton\r\n                        text={i18n.t(\"matching.success.chat\")}\r\n                        textStyle={styles.actionText}\r\n                        style={styles.actionButton}\r\n                        onPress={async () => await this.chat()}\r\n                    />\r\n                    <TouchableOpacity\r\n                        style={[styles.actionButton, {backgroundColor: theme.actionNeutral}]}\r\n                        onPress={() => rootNavigate(\"TabMatchingScreen\")}\r\n                    >\r\n                        <Text style={styles.actionText}>{i18n.t(\"matching.success.continue\")}</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.okay,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 32,\r\n            color: theme.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n            opacity: 0.3,\r\n        },\r\n        actionButton: {\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 30,\r\n            paddingVertical: 10,\r\n            marginVertical: 20,\r\n            borderRadius: 20,\r\n        },\r\n        actionText: {\r\n            color: theme.textWhite,\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MatchSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, TextInput, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ResetPasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ResetPasswordFormProps = {token?: string} & FormProps<FormState> & ThemeProps;\r\n\r\n// Component state\r\ntype ResetPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ResetPasswordForm extends React.Component<ResetPasswordFormProps, ResetPasswordFormState> {\r\n    pwdRepeatRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ResetPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: ValidatedActionReturn) => {\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                    if (errors && errors.fields) {\r\n                        const f = errors.fields;\r\n                        Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                    }\r\n                    this.setState({remoteErrors: errors, submitting: false});\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({remoteErrors: {general: \"error.reset_password_no_token\", fields: {}}, submitting: false});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ResetPasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdRepeatRef.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdRepeatRef}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.button]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"resetPassword.button\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ResetPasswordForm from \"../components/forms/ResetPasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype ResetPasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ResetPasswordScreenState = {token?: string};\r\n\r\nclass ResetPasswordScreen extends React.Component<ResetPasswordScreenProps, ResetPasswordScreenState> {\r\n    constructor(props: ResetPasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {token} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <ResetPasswordForm token={token} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ResetPasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>{i18n.t(\"resetPassword.instructions\")}</Text>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordEmailSentScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport {formStyles} from \"../styles/forms\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"resetPassword.success\")}</Text>\r\n                    <TouchableOpacity\r\n                        style={[fstyles.buttonMajor, styles.button]}\r\n                        onPress={() => rootNavigate(\"LoginScreen\")}\r\n                    >\r\n                        <Text style={fstyles.buttonMajorText}>{i18n.t(\"login\")}</Text>\r\n                        <MaterialCommunityIcons name=\"login\" style={styles.buttonIcon} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            paddingHorizontal: 25,\r\n            marginTop: 20,\r\n            backgroundColor: theme.accent,\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {\r\n    Actions,\r\n    ActionsProps,\r\n    Bubble,\r\n    BubbleProps,\r\n    GiftedAvatar,\r\n    GiftedAvatarProps,\r\n    GiftedChat,\r\n    IMessage,\r\n    InputToolbar,\r\n    InputToolbarProps,\r\n    Message,\r\n    MessageProps,\r\n    Send,\r\n    SendProps,\r\n} from \"react-native-gifted-chat\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport chatSocket from \"../../api/chat-socket\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {\r\n    connectToChat,\r\n    fetchEarlierMessages,\r\n    fetchMatchRoom,\r\n    joinChatRoom,\r\n    leaveChatRoom,\r\n    sendChatMessage,\r\n} from \"../../state/messaging/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {TypingAnimation} from \"react-native-typing-animation\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport store from \"../../state/store\";\r\nimport {MESSAGES_FETCH_LIMIT} from \"../../constants/config\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    activeRoom: state.messaging.activeRoom,\r\n    localChatUser: state.messaging.localChatUser,\r\n    connected: state.messaging.socketState.connected,\r\n    connecting: state.messaging.socketState.connecting,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nconst MIN_INPUT_HEIGHT = 45;\r\nconst INPUT_VERTICAL_MARGIN = 10;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    ref = React.createRef<GiftedChat>();\r\n\r\n    connectToRoom() {\r\n        const {route} = this.props;\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // Get the room ID from the route parameters\r\n        if (route.params) {\r\n            const params = route.params as {[key: string]: string};\r\n            const {roomId} = params;\r\n\r\n            // If a roomId parameter was given, we first ensure we have that room (in storage or we fetch it) before joining it.\r\n            if (roomId) {\r\n                const room = store.getState().messaging.matchRooms[roomId];\r\n                if (room) dispatch(joinChatRoom(room));\r\n                else {\r\n                    dispatch(fetchMatchRoom(roomId)).then((r) => {\r\n                        if (r) dispatch(joinChatRoom(r));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {connected, connecting, dispatch} = this.props;\r\n\r\n        // If are already connected to the chat, connect to the room\r\n        if (connected) this.connectToRoom();\r\n        // If we are not connected nor connecting to the chat, connect to the chat first\r\n        else if (!connecting) (dispatch as MyThunkDispatch)(connectToChat());\r\n\r\n        this.props.navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onBlur() {\r\n        // Leave the room when navigating to another screen\r\n        const {dispatch, activeRoom} = this.props;\r\n        if (activeRoom) (dispatch as MyThunkDispatch)(leaveChatRoom(activeRoom));\r\n    }\r\n\r\n    onFocus() {\r\n        // Fetch earlier messages if we need to\r\n        const room = this.props.activeRoom;\r\n        if (room && room.messages.length < MESSAGES_FETCH_LIMIT) this.fetchEarlier();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ChatScreenProps) {\r\n        const {activeRoom, connected} = this.props;\r\n        // If we've just connected to the chat, connect to the room\r\n        if (!oldProps.connected && connected) this.connectToRoom();\r\n        // If we're at the beginning of the messages pagination\r\n        if (!oldProps.activeRoom && activeRoom && activeRoom.messagePagination.page == 1) this.fetchEarlier();\r\n    }\r\n\r\n    fetchEarlier() {\r\n        const {dispatch, activeRoom} = this.props;\r\n        if (activeRoom && !activeRoom.messagePagination.fetching)\r\n            (dispatch as MyThunkDispatch)(fetchEarlierMessages(activeRoom));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localChatUser, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const room = this.props.activeRoom;\r\n        let chatComponent = <></>;\r\n        if (room && localChatUser) {\r\n            const isWritingId = Object.keys(room.writing).find((id: string) => room.writing[id] === true);\r\n            const userWriting = isWritingId ? room.users.find((u) => u._id == isWritingId) : undefined;\r\n\r\n            // Store in a messageId -> user map whether each message is the last seen message of a user\r\n            const lastMessageDict: {[key: string]: ChatRoomUser[]} = {};\r\n            if (room.messages.length > 0) {\r\n                room.users.forEach((u: ChatRoomUser) => {\r\n                    if (u._id != localChatUser._id && u.lastMessageSeenId) {\r\n                        if (lastMessageDict[u.lastMessageSeenId]) lastMessageDict[u.lastMessageSeenId].push(u);\r\n                        else lastMessageDict[u.lastMessageSeenId] = [u];\r\n                    }\r\n                });\r\n            }\r\n\r\n            chatComponent = (\r\n                <GiftedChat\r\n                    ref={this.ref}\r\n                    messages={room.messages}\r\n                    user={localChatUser}\r\n                    renderSend={(props: SendProps<IMessage>) => (\r\n                        <Send {...props} containerStyle={styles.sendContainer}>\r\n                            <MaterialIcons name=\"send\" style={styles.send} />\r\n                        </Send>\r\n                    )}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            renderTicks={(currentMessage: IMessage) => (\r\n                                <View style={styles.messageTicksContainer}>\r\n                                    {currentMessage.received && (\r\n                                        <MaterialIcons name=\"check\" style={styles.messageTick} />\r\n                                    )}\r\n                                    {currentMessage.sent && <MaterialIcons name=\"check\" style={styles.messageTick} />}\r\n                                </View>\r\n                            )}\r\n                            textStyle={{left: styles.bubbleTextLeft, right: styles.bubbleTextRight}}\r\n                            wrapperStyle={{left: styles.bubbleWrapperLeft, right: styles.bubbleWrapperRight}}\r\n                        />\r\n                    )}\r\n                    renderMessage={(props: MessageProps<IMessage>) => {\r\n                        const lm = props.currentMessage ? lastMessageDict[props.currentMessage._id] : undefined;\r\n                        return lm ? (\r\n                            <View>\r\n                                <Message {...props} containerStyle={{right: {marginBottom: 0}, left: {}}} />\r\n                                <View style={styles.messageReadContainer}>\r\n                                    {lm.map((u: ChatRoomUser) => (\r\n                                        <GiftedAvatar\r\n                                            key={`read-message-${u._id}`}\r\n                                            user={u}\r\n                                            avatarStyle={styles.messageReadAvatar}\r\n                                            textStyle={styles.messageReadAvatarText}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                            </View>\r\n                        ) : (\r\n                            <Message {...props} />\r\n                        );\r\n                    }}\r\n                    renderInputToolbar={(props: InputToolbarProps) => (\r\n                        <InputToolbar\r\n                            {...props}\r\n                            containerStyle={styles.inputToolbarContainer}\r\n                            primaryStyle={styles.inputToolbarPrimary}\r\n                        />\r\n                    )}\r\n                    renderFooter={() => <ChatFooter userWriting={userWriting} theme={theme} />}\r\n                    renderActions={(props: ActionsProps) => <ChatActions actionsProps={props} theme={theme} />}\r\n                    //renderLoadEarlier={() => <></>}\r\n                    onInputTextChanged={(t) => {\r\n                        if (t.length > 0) chatSocket.setWriting(room);\r\n                    }}\r\n                    onSend={(messages) => {\r\n                        messages.forEach((m) =>\r\n                            (dispatch as MyThunkDispatch)(sendChatMessage(m._id + \"\", m.text, m.createdAt as Date)),\r\n                        );\r\n                    }}\r\n                    loadEarlier={room.messagePagination.canFetchMore && room.messagePagination.fetching}\r\n                    isLoadingEarlier={room.messagePagination.fetching}\r\n                    onLoadEarlier={() => {\r\n                        this.fetchEarlier();\r\n                    }}\r\n                    timeFormat={\"HH:mm\"}\r\n                    listViewProps={{\r\n                        onEndReached: () => this.fetchEarlier(),\r\n                        //onEndReachedThreshold: 1,\r\n                    }}\r\n                    textInputProps={{autoFocus: false, style: styles.textInput, multiline: true}}\r\n                    minInputToolbarHeight={MIN_INPUT_HEIGHT + INPUT_VERTICAL_MARGIN * 2}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <View style={styles.container}>{chatComponent}</View>;\r\n    }\r\n}\r\n\r\nfunction ChatFooter({userWriting, theme}: {userWriting?: ChatRoomUser; theme: Theme}): JSX.Element {\r\n    if (userWriting) {\r\n        return (\r\n            <View style={{height: 50, paddingTop: 10}}>\r\n                <Message\r\n                    key=\"isWriting\"\r\n                    user={userWriting}\r\n                    showUserAvatar={true}\r\n                    position=\"left\"\r\n                    renderAvatar={(props: GiftedAvatarProps) => <GiftedAvatar {...props} user={userWriting} />}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            wrapperStyle={{\r\n                                left: {backgroundColor: \"transparent\"},\r\n                                right: {},\r\n                            }}\r\n                            renderCustomView={() => (\r\n                                <TypingAnimation\r\n                                    dotColor={theme.textLight}\r\n                                    dotAmplitude={3}\r\n                                    dotSpeed={0.16}\r\n                                    dotMargin={8}\r\n                                    dotRadius={4}\r\n                                    dotX={20}\r\n                                    dotY={-25}\r\n                                />\r\n                            )}\r\n                        />\r\n                    )}\r\n                ></Message>\r\n            </View>\r\n        );\r\n    } else return <></>;\r\n}\r\n\r\nfunction ChatActions({actionsProps, theme}: {actionsProps: ActionsProps; theme: Theme}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <>\r\n            <Actions\r\n                {...actionsProps}\r\n                containerStyle={styles.actionContainer}\r\n                icon={() => <MaterialIcons style={styles.actionIcon} name=\"photo-camera\" />}\r\n                options={{\r\n                    \"Send a picture\": async () => {\r\n                        await ImagePicker.launchImageLibraryAsync({\r\n                            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                            allowsEditing: true,\r\n                            aspect: [1, 1],\r\n                            //quality: AVATAR_QUALITY,\r\n                        });\r\n                    },\r\n                }}\r\n            ></Actions>\r\n            <Actions\r\n                {...actionsProps}\r\n                containerStyle={styles.actionContainer}\r\n                icon={() => <MaterialIcons style={styles.actionIcon} name=\"build\" />}\r\n                options={{\r\n                    \"Spam Lorem Ipsum\": async () => {\r\n                        const text =\r\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\";\r\n                        const words = text.split(\" \");\r\n                        let i = 0;\r\n                        while (i < words.length) {\r\n                            const n = 1 + Math.min(Math.floor(Math.random() * 12), words.length - 1 - i);\r\n                            const msg = words.slice(i, i + n).join(\" \");\r\n                            const id = GiftedChat.defaultProps.messageIdGenerator();\r\n                            (store.dispatch as MyThunkDispatch)(sendChatMessage(id, msg, new Date()));\r\n                            i += n;\r\n                        }\r\n                    },\r\n                }}\r\n            ></Actions>\r\n        </>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            backgroundColor: theme.cardBackground,\r\n            justifyContent: \"center\",\r\n        },\r\n        inputToolbarContainer: {\r\n            justifyContent: \"center\",\r\n            borderTopWidth: 0,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        inputToolbarPrimary: {\r\n            alignItems: \"flex-end\",\r\n        },\r\n        textInput: {\r\n            backgroundColor: theme.cardBackground,\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n            borderRadius: 20,\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginHorizontal: 20,\r\n            minHeight: MIN_INPUT_HEIGHT,\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 5,\r\n            fontSize: 15,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            alignSelf: \"flex-end\",\r\n            textAlignVertical: \"center\",\r\n            color: theme.text,\r\n        },\r\n        send: {\r\n            fontSize: 30,\r\n            color: theme.accent,\r\n        },\r\n        sendContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginRight: 10,\r\n        },\r\n        actionContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n        },\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            width: 28,\r\n            height: 28,\r\n            color: theme.text,\r\n        },\r\n        bubbleWrapperLeft: {\r\n            backgroundColor: theme.chatBubble,\r\n        },\r\n        bubbleWrapperRight: {},\r\n        bubbleTextLeft: {\r\n            color: theme.text,\r\n        },\r\n        bubbleTextRight: {},\r\n        messageReadContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"flex-end\",\r\n            paddingRight: 8,\r\n            paddingTop: 2,\r\n            paddingBottom: 8,\r\n        },\r\n        messageReadAvatar: {\r\n            width: 20,\r\n            height: 20,\r\n        },\r\n        messageReadAvatarText: {\r\n            fontSize: 12,\r\n        },\r\n        messageTicksContainer: {\r\n            marginRight: 4,\r\n            minWidth: 15,\r\n        },\r\n        messageTick: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatScreen));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    activeRoom: state.messaging.activeRoom,\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenHeaderProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackHeaderProps;\r\n\r\nclass ChatScreenHeaderClass extends React.Component<ChatScreenHeaderProps> {\r\n    back() {\r\n        rootNavigate(\"TabMessaging\");\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, activeRoom, profileId, insets} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        if (activeRoom) {\r\n            const user = activeRoom.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n            return (\r\n                <View style={[{paddingTop: insets.top}, hstyles.wrapper]}>\r\n                    <View style={hstyles.container}>\r\n                        <TouchableOpacity style={hstyles.backButton} onPress={() => this.back()}>\r\n                            <MaterialIcons style={[hstyles.backButtonIcon, {color: theme.text}]} name=\"arrow-back\" />\r\n                        </TouchableOpacity>\r\n                        <GiftedAvatar\r\n                            avatarStyle={[hstyles.avatarContainer, styles.avatar]}\r\n                            user={user}\r\n                            onPress={() => rootNavigate(\"ProfileScreen\", {id: user._id})}\r\n                        />\r\n                        <Text style={styles.name} numberOfLines={1}>\r\n                            {user.name}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        avatar: {\r\n            marginRight: 10,\r\n        },\r\n        name: {\r\n            flex: 1,\r\n            fontSize: 18,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst ChatScreenHeaderComp = reduxConnector(withTheme(ChatScreenHeaderClass));\r\n\r\nexport default function ChatScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <ChatScreenHeaderComp {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...styleProps}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {StyleProp, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRoles: StaffRole[];\r\n    onChange?: (staffRoles: StaffRole[]) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n};\r\n\r\nfunction StaffRolePicker(props: StaffRoleToggleProps & ThemeProps): JSX.Element {\r\n    const {staffRoles, multiple, atLeastOne, buttonStyle, onChange, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <PopUpSelector\r\n            values={STAFF_ROLES}\r\n            label={(r: string) => i18n.t(`staffRoles.${r}`)}\r\n            icon={(_, i: number) => <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.icon} />}\r\n            selected={staffRoles}\r\n            valueStyle={styles.value}\r\n            buttonStyle={[styles.button, buttonStyle]}\r\n            onSelect={(values: string[]) => {\r\n                if (onChange) onChange(values as StaffRole[]);\r\n            }}\r\n            multiple={multiple}\r\n            atLeastOne={atLeastOne}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            alignItems: \"center\",\r\n        },\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            fontSize: 20,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(StaffRolePicker);\r\n","import * as React from \"react\";\r\n\r\ntype ErrorBoundaryProps = React.PropsWithChildren<Record<string, unknown>>;\r\n\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps> {\r\n    componentDidCatch(e: Error, info: React.ErrorInfo): void {\r\n        console.log(`Error caught by ErrorBoundary: ${e.name} - ${e.message}`);\r\n        console.log(\"Stack :\", info.componentStack);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return <>{this.props.children}</>;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateTimePicker, {Event} from \"@react-native-community/datetimepicker\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {Platform} from \"react-native\";\r\nimport {ErrorBoundary} from \"./utility/ErrorBoundary\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\n// Component props\r\nexport type BirthDatePickerProps = {\r\n    date?: Date;\r\n    open: boolean;\r\n    onSelect?: (date: Date) => void;\r\n} & ThemeProps;\r\n\r\nconst minDate = new Date(1920, 0, 0);\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nclass BirthDatePicker extends React.Component<BirthDatePickerProps> {\r\n    onChange(date: Date | undefined): void {\r\n        if (date && this.props.onSelect) this.props.onSelect(date);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, open, theme} = this.props;\r\n\r\n        const picker = (\r\n            <DateTimePicker\r\n                minimumDate={minDate}\r\n                maximumDate={maxDate}\r\n                value={date || maxDate}\r\n                display=\"default\"\r\n                mode=\"date\"\r\n                textColor={theme.text}\r\n                {...(Platform.OS === \"ios\" ? {style: {width: \"100%\"}} : {})}\r\n                onChange={(e: Event, date: Date | undefined) => this.onChange(date)}\r\n            />\r\n        );\r\n\r\n        if (Platform.OS === \"ios\") return <CustomModal visible={open} renderContent={() => picker} />;\r\n        // Wrap with an ErrorBoundary to prevent crashes on Android which we can't do much about\r\n        else if (open) return <ErrorBoundary>{picker}</ErrorBoundary>;\r\n        else return <></>;\r\n    }\r\n}\r\n\r\nexport default withTheme(BirthDatePicker);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_QUALITY} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect: [1, 1],\r\n                    quality: AVATAR_QUALITY,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return <MaterialIcons onPress={() => this.showPicker()} style={styles.buttonStyle} name=\"edit\" />;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        buttonStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n            fontSize: 20,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Modal, Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet, Platform} from \"react-native\";\r\nimport {formStyles} from \"../../styles/forms\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {ArraySchema, Schema, ValidationError} from \"yup\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\n\r\n// Component props\r\ntype ValueCardProps<T> = {\r\n    label: string;\r\n    icon?: JSX.Element;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T) => void) => JSX.Element;\r\n    validator?: Schema<unknown> | ArraySchema<unknown>;\r\n    initialValue?: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n    oneLine?: boolean;\r\n    onPress?: () => void;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype ValueCardState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T | undefined;\r\n};\r\n\r\nclass ValueCard<T> extends React.Component<ValueCardProps<T>, ValueCardState<T>> {\r\n    constructor(props: ValueCardProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: this.props.initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T): void {\r\n        this.setState({...this.state, value}, () => {\r\n            this.validate();\r\n        });\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            this.setModal(false);\r\n            if (this.props.apply && this.state.value) this.props.apply(this.state.value);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (): JSX.Element => {\r\n        const {label, renderInput, oneLine} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(oneLine)(theme);\r\n                    const fstyles = formStyles(theme);\r\n                    return (\r\n                        <TouchableOpacity\r\n                            style={styles.modalTouchable}\r\n                            onPress={() => this.setModal(false)}\r\n                            activeOpacity={1}\r\n                        >\r\n                            <TouchableOpacity activeOpacity={1} style={styles.modalWrapper}>\r\n                                <Text style={styles.modalLabel}>{label}</Text>\r\n                                {renderInput && value ? (\r\n                                    renderInput(value, error, (value: T) => this.onChange(value))\r\n                                ) : (\r\n                                    <></>\r\n                                )}\r\n                                <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                                <View style={[fstyles.actionRow, styles.modalActions]}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => this.setModal(false)}\r\n                                        style={[fstyles.buttonMajor, styles.modalCancel]}\r\n                                    >\r\n                                        <Text style={[fstyles.buttonMajorText, styles.modalActionText]}>\r\n                                            {i18n.t(\"cancel\")}\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"apply\")}\r\n                                        onPress={() => this.apply()}\r\n                                        style={[fstyles.buttonMajor, styles.modalOk]}\r\n                                    >\r\n                                        <Text style={[fstyles.buttonMajorText, styles.modalActionText]}>\r\n                                            {i18n.t(\"apply\")}\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </TouchableOpacity>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            label,\r\n            icon,\r\n            display,\r\n            overrideModal,\r\n            noModal,\r\n            style,\r\n            locked,\r\n            oneLine,\r\n            onPress,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(oneLine)(theme);\r\n                    return (\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={[styles.cardWrapper, style]}\r\n                                activeOpacity={0.9}\r\n                                disabled={noModal && !onPress}\r\n                                onPress={() => {\r\n                                    if (!noModal) {\r\n                                        if (!locked) this.setModal(true);\r\n                                    } else if (onPress) onPress();\r\n                                }}\r\n                                {...otherProps}\r\n                            >\r\n                                <View style={styles.cardContent}>\r\n                                    <View style={styles.cardLabelContainer}>\r\n                                        {icon}\r\n                                        <Text style={styles.cardLabel}>{label}</Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        {display !== undefined && display}\r\n                                        {display === undefined && this.props.children}\r\n                                    </View>\r\n                                </View>\r\n                                {!noModal && (\r\n                                    <View style={styles.rightIconContainer}>\r\n                                        <MaterialIcons\r\n                                            name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                            size={locked ? 30 : 40}\r\n                                            style={styles.rightIcon}\r\n                                        ></MaterialIcons>\r\n                                    </View>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                            {!noModal && (\r\n                                <>\r\n                                    {overrideModal !== undefined &&\r\n                                        modalOpen &&\r\n                                        overrideModal(() => this.setModal(false))}\r\n                                    {overrideModal === undefined &&\r\n                                        modalOpen &&\r\n                                        (Platform.OS === \"web\" ? (\r\n                                            <CustomModal\r\n                                                visible={modalOpen}\r\n                                                renderContent={() => this.renderModalContent()}\r\n                                            />\r\n                                        ) : (\r\n                                            <Modal transparent={true} visible={modalOpen} animationType=\"slide\">\r\n                                                {this.renderModalContent()}\r\n                                            </Modal>\r\n                                        ))}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (oneLine?: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            modalTouchable: {\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"rgba(0,0,0,0.5)\",\r\n            },\r\n            modalWrapper: {\r\n                width: \"80%\",\r\n                maxWidth: 500,\r\n                backgroundColor: theme.cardBackground,\r\n                paddingHorizontal: 10,\r\n                paddingVertical: 20,\r\n                borderRadius: 4,\r\n                borderColor: \"#ccc\",\r\n                borderWidth: 0.5,\r\n                borderStyle: \"solid\",\r\n            },\r\n            modalErrorText: {\r\n                fontSize: 12,\r\n                color: theme.error,\r\n            },\r\n            modalLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1.5,\r\n                fontSize: 13,\r\n                marginBottom: 12,\r\n            },\r\n            modalActions: {\r\n                height: 50,\r\n                marginTop: 20,\r\n            },\r\n            modalCancel: {\r\n                flex: 1,\r\n                backgroundColor: theme.actionNeutral,\r\n                marginRight: 6,\r\n                height: 50,\r\n            },\r\n            modalOk: {\r\n                flex: 1,\r\n                backgroundColor: theme.accent,\r\n                marginLeft: 6,\r\n                height: 50,\r\n            },\r\n            modalActionText: {\r\n                lineHeight: 50,\r\n            },\r\n            cardWrapper: {\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                backgroundColor: theme.cardBackground,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"space-evenly\",\r\n                paddingVertical: 15,\r\n                minHeight: oneLine ? 0 : 80,\r\n\r\n                shadowColor: \"#000\",\r\n                shadowOffset: {width: 0, height: 1},\r\n                shadowOpacity: 0.18,\r\n                shadowRadius: 1.0,\r\n                elevation: 1,\r\n            },\r\n            cardContent: {\r\n                flex: 1,\r\n                flexDirection: oneLine ? \"row\" : \"column\",\r\n                //justifyContent: \"space-evenly\",\r\n                justifyContent: \"space-between\",\r\n            },\r\n            cardLabelContainer: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginBottom: oneLine ? 0 : 10,\r\n            },\r\n            cardLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1,\r\n                fontSize: 11,\r\n            },\r\n            rightIconContainer: {justifyContent: \"center\"},\r\n            rightIcon: {color: theme.textLight},\r\n        });\r\n    });\r\n\r\nexport default ValueCard;\r\n","import * as React from \"react\";\r\nimport {AvatarProps, Overlay, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = {profile?: UserProfile} & AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    toggleEnlarged() {\r\n        this.setState({...this.state, enlarged: !this.state.enlarged});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, profile, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.toggleEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <ProfileAvatar\r\n                    profile={profile}\r\n                    {...avatarProps}\r\n                    {...(avatarProps.source || profile?.avatarUrl ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </ProfileAvatar>\r\n                <Overlay\r\n                    isVisible={enlarged}\r\n                    onBackdropPress={() => this.toggleEnlarged()}\r\n                    overlayStyle={styles.overlay}\r\n                    backdropStyle={styles.overlayBackdrop}\r\n                >\r\n                    <ProfileAvatar\r\n                        profile={profile}\r\n                        source={avatarProps.source}\r\n                        containerStyle={styles.enlargedAvatarContainer}\r\n                        avatarStyle={styles.enlargedAvatar}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.toggleEnlarged()}\r\n                    />\r\n                </Overlay>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"100%\",\r\n            aspectRatio: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n        },\r\n        overlayBackdrop: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, KeyboardAvoidingView, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {ScrollView, StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRolePicker from \"../StaffRolePicker\";\r\nimport GenderToggle from \"../GenderToggle\";\r\nimport BirthDatePicker from \"../BirthDatePicker.native\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport ValueCard from \"./ValueCard\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport {getUniversityFromEmail} from \"../../model/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Chips from \"../Chips\";\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps & {\r\n    user: User | null;\r\n    onChange?: (fields: Partial<UserProfile>) => void;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        let profileFieldComponents = <></>;\r\n\r\n        if (user && user.profile) {\r\n            const profile = user.profile;\r\n\r\n            profileFieldComponents = (\r\n                <>\r\n                    <ValueCard\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user.email}\r\n                        display={<Text style={styles.cardText}>{user.email}</Text>}\r\n                        locked={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile.birthdate}\r\n                        display={<FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <BirthDatePicker\r\n                                date={profile.birthdate}\r\n                                open={true}\r\n                                onSelect={(birthdate: Date) => {\r\n                                    this.onFieldChanged({birthdate});\r\n                                    hide();\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile.nationality}\r\n                        display={<FormattedNationality style={styles.cardText} countryCode={profile.nationality} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <NationalityPicker\r\n                                nationality={profile.nationality}\r\n                                onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile.gender}\r\n                        display={\r\n                            <GenderToggle\r\n                                gender={profile.gender}\r\n                                onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile.type}\r\n                        display={\r\n                            <>\r\n                                <RoleToggle\r\n                                    role={profile.type}\r\n                                    /*onSelect={(role: Role) => onFieldChanged({role})}*/\r\n                                    disabled={true}\r\n                                />\r\n                                {profile.type == \"staff\" && (\r\n                                    <StaffRolePicker\r\n                                        staffRoles={(profile as UserProfileStaff).staffRoles}\r\n                                        onChange={(staffRoles: StaffRole[]) => this.onFieldChanged({staffRoles})}\r\n                                        multiple={true}\r\n                                        atLeastOne={true}\r\n                                        buttonStyle={styles.staffRoleButton}\r\n                                    />\r\n                                )}\r\n                                {profile.type == \"student\" && (\r\n                                    <DegreeToggle\r\n                                        degree={(profile as UserProfileStudent).degree}\r\n                                        onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                                showChips={true}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile.interests}\r\n                        display={\r\n                            <InterestsPicker\r\n                                interests={profile.interests}\r\n                                onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                                showChips={true}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            <Chips\r\n                                items={profile.languages}\r\n                                label={(item: SpokenLanguageDto) =>\r\n                                    `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                        `languageLevels.${item.level}`,\r\n                                    )})`\r\n                                }\r\n                            />\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <SpokenLanguagesInput\r\n                                languages={value}\r\n                                onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                            />\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={styles.screenWrapper}>\r\n                <View style={styles.topView}>\r\n                    <EnlargeableAvatar\r\n                        profile={user?.profile}\r\n                        size={140}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {user && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={getUniversityFromEmail(user.email)}\r\n                        ></FormattedUniversity>\r\n                    )}\r\n                </View>\r\n                <ScrollView style={styles.scrollWrapper} keyboardShouldPersistTaps=\"always\">\r\n                    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={-100} style={styles.formWrapper}>\r\n                        <View style={styles.titleWrapper}>\r\n                            <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                        </View>\r\n                        {profileFieldComponents}\r\n                        {!user && <ActivityIndicator size=\"large\" color={theme.accent} />}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[];\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n    theme: Theme;\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n        const items = profileOffers.filter((o) => offerIdToCategory.get(o.offerId) == category);\r\n        return (\r\n            <ValueCard\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={\r\n                    items.length > 0 ? (\r\n                        <Chips\r\n                            items={items}\r\n                            label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                        />\r\n                    ) : (\r\n                        <Text style={{color: theme.textLight}}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                    )\r\n                }\r\n                renderInput={(\r\n                    value: OfferValueDto[],\r\n                    error: string | null,\r\n                    onChange: (value: OfferValueDto[]) => void,\r\n                ) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        screenWrapper: {\r\n            backgroundColor: theme.background,\r\n            width: \"100%\",\r\n        },\r\n        topView: {\r\n            /*width: \"160%\",\r\n            borderBottomLeftRadius: 200,\r\n            borderBottomRightRadius: 200,*/\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        scrollWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 40,\r\n            marginBottom: 300,\r\n        },\r\n        name: {\r\n            fontSize: 30,\r\n            color: theme.textWhite,\r\n            marginTop: 15,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n        staffRoleButton: {\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditProfileForm);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype MyProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens, \"MyProfileScreen\">;\r\n\r\nclass MyProfileScreen extends React.Component<MyProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {user, dispatch} = this.props;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MyProfileScreen));\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextProps, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender} from \"../constants/profile-constants\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type FormattedGenderProps = {\r\n    gender: Gender;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & TextProps &\r\n    ThemeProps;\r\n\r\nclass FormattedGender extends React.Component<FormattedGenderProps> {\r\n    render(): JSX.Element {\r\n        const {gender, containerStyle, iconStyle, theme, ...otherProps} = this.props;\r\n\r\n        const icon = gender === \"female\" ? \"female\" : gender === \"male\" ? \"male\" : undefined;\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {icon && <FontAwesome name={icon} size={24} color={theme.textLight} style={iconStyle} />}\r\n                <Text {...otherProps} style={[{marginLeft: icon ? 10 : 0}, otherProps.style]}>\r\n                    {i18n.t(`genders.${gender}`)}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormattedGender);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, KeyboardAvoidingView, StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ScrollView} from \"react-native\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../model/user-profile\";\r\nimport {PARTNER_UNIVERSITIES} from \"../constants/universities\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {StaffRole} from \"../constants/profile-constants\";\r\nimport ValueCard from \"./forms/ValueCard\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {OfferCategory, OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport FormattedGender from \"./FormattedGender\";\r\nimport Chips from \"./Chips\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Component props\r\nexport type ProfileViewProps = ThemeProps & {\r\n    profile: UserProfile | null;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass ProfileView extends React.Component<ProfileViewProps> {\r\n    render() {\r\n        const {theme, profile} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile ? profile.firstName + \" \" + profile.lastName : \"\";\r\n        const university = profile ? PARTNER_UNIVERSITIES.find((u) => u.key === profile.university) : undefined;\r\n\r\n        let profileFieldComponents = <></>;\r\n\r\n        if (profile) {\r\n            profileFieldComponents = (\r\n                <>\r\n                    <ValueCard\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        display={<FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"nationality\")}\r\n                        display={<FormattedNationality style={styles.cardText} countryCode={profile.nationality} />}\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"gender\")}\r\n                        display={<FormattedGender gender={profile.gender} />}\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"profileType\")}\r\n                        display={\r\n                            <>\r\n                                <Text>{i18n.t(`allRoles.${profile.type}`)}</Text>\r\n                                {profile.type == \"staff\" && (\r\n                                    <>\r\n                                        {(profile as UserProfileStaff).staffRoles.map((sr: StaffRole) => (\r\n                                            <Text key={`profile-staff-role-${sr}`}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n                                        ))}\r\n                                    </>\r\n                                )}\r\n                                {profile.type == \"student\" && (\r\n                                    <Text>{i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)}</Text>\r\n                                )}\r\n                            </>\r\n                        }\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        display={\r\n                            <Chips\r\n                                items={profile.educationFields}\r\n                                label={(item: string) => i18n.t(`educationFields.${item}`)}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"interests\")}\r\n                        display={\r\n                            <Chips\r\n                                items={profile.interests}\r\n                                label={(item: string) => i18n.t(`interestNames.${item}`)}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        display={\r\n                            <Chips\r\n                                items={profile.languages}\r\n                                label={(item: SpokenLanguageDto) =>\r\n                                    `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                        `languageLevels.${item.level}`,\r\n                                    )})`\r\n                                }\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                        initialValue={undefined}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Discover} profileOffers={profile.profileOffers} />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Collaborate} profileOffers={profile.profileOffers} />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Meet} profileOffers={profile.profileOffers} />\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={styles.screenWrapper}>\r\n                <View style={styles.topView}>\r\n                    <EnlargeableAvatar\r\n                        profile={profile || undefined}\r\n                        size={140}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    />\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {university && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={university}\r\n                        />\r\n                    )}\r\n                </View>\r\n                <ScrollView style={styles.scrollWrapper} keyboardShouldPersistTaps=\"always\">\r\n                    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={-100} style={styles.formWrapper}>\r\n                        {/*<View style={styles.titleWrapper}>\r\n                            <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                        </View>*/}\r\n                        {profileFieldComponents}\r\n                        {!profile && <ActivityIndicator size=\"large\" color={theme.accent} />}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[];\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, offerIdToCategory}: OfferCategoryRowProps): JSX.Element => {\r\n        const items = profileOffers.filter((o) => offerIdToCategory.get(o.offerId) == category);\r\n\r\n        return (\r\n            <ValueCard\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                display={\r\n                    items.length > 0 ? (\r\n                        <Chips\r\n                            items={items}\r\n                            label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                        />\r\n                    ) : (\r\n                        <Text>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                    )\r\n                }\r\n                noModal={true}\r\n                initialValue={undefined}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        screenWrapper: {\r\n            backgroundColor: theme.background,\r\n            width: \"100%\",\r\n        },\r\n        topView: {\r\n            /*width: \"160%\",\r\n            borderBottomLeftRadius: 200,\r\n            borderBottomRightRadius: 200,*/\r\n            width: \"100%\",\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        scrollWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 40,\r\n            marginBottom: 300,\r\n        },\r\n        name: {\r\n            fontSize: 30,\r\n            color: theme.textWhite,\r\n            marginTop: 15,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileView);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ProfileView from \"../components/ProfileView\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {fetchProfile} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect(() => ({}));\r\n\r\n// Component props\r\ntype ProfileScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype ProfileScreenState = {profile: UserProfile | null};\r\n\r\nclass ProfileScreen extends React.Component<ProfileScreenProps, ProfileScreenState> {\r\n    constructor(props: ProfileScreenProps) {\r\n        super(props);\r\n        this.state = {profile: null};\r\n    }\r\n\r\n    getRouteParams(): {[key: string]: string} {\r\n        const params = this.props.route.params;\r\n        return params ? (params as {[key: string]: string}) : {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n\r\n        const {id} = this.getRouteParams();\r\n        if (id)\r\n            (dispatch as MyThunkDispatch)(fetchProfile(id)).then((profile) => this.setState({...this.state, profile}));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profile} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ProfileView profile={profile} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(ProfileScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {SupportedLocale, SUPPORTED_LOCALES} from \"../localization\";\r\n\r\n// Component props\r\nexport type LocalePickerProps = {\r\n    locale?: SupportedLocale;\r\n    onChange?: (locale: SupportedLocale) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass LocalePicker extends React.Component<LocalePickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, locale, theme, buttonStyle, valueStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={SUPPORTED_LOCALES}\r\n                label={(l: string) => i18n.t(`locales.${l}`)}\r\n                selected={locale ? [locale] : []}\r\n                valueStyle={[styles.value, valueStyle]}\r\n                buttonStyle={buttonStyle}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as SupportedLocale);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LocalePicker);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Alert, ScrollView, StyleSheet, Switch, Text, TouchableHighlight, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ValueCard from \"../components/forms/ValueCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {AppState} from \"../state/types\";\r\nimport {setLocale, toggleTheme} from \"../state/settings/actions\";\r\nimport LocalePicker from \"../components/LocalePicker\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport LocalImage from \"../components/LocalImage\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {logout} from \"../state/auth/actions\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    settings: state.settings.userSettings,\r\n}));\r\n\r\n// Component props\r\ntype SettingsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nlet versionClickCount = 0;\r\n\r\nclass SettingsScreen extends React.Component<SettingsScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, settings, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.container}>\r\n                    <Section theme={theme} title={i18n.t(\"settings.sections.general\")}>\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.language\")}\r\n                            icon={<FontAwesome name=\"language\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <LocalePicker\r\n                                    locale={settings.locale}\r\n                                    onChange={(l: SupportedLocale) => {\r\n                                        if (l == \"fr\") {\r\n                                            // TEMP FR Translation disclaimer\r\n                                            Alert.alert(\r\n                                                \"Disclaimer\",\r\n                                                \"The application has not been translated to french yet.\",\r\n                                            );\r\n                                        }\r\n                                        dispatch(setLocale(l));\r\n                                    }}\r\n                                    buttonStyle={styles.localeButton}\r\n                                    valueStyle={styles.localButtonValue}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.darkTheme\")}\r\n                            icon={<MaterialCommunityIcons name=\"theme-light-dark\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => dispatch(toggleTheme())}\r\n                            display={\r\n                                <Switch\r\n                                    value={settings.theme === \"dark\"}\r\n                                    onValueChange={() => dispatch(toggleTheme())}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.about\")}\r\n                        icon={{name: \"info\", color: theme.accent}}\r\n                    >\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.version\")}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                // Easter-egg trigger\r\n                                versionClickCount++;\r\n                                if (versionClickCount === 7) {\r\n                                    versionClickCount = 0;\r\n                                    Alert.alert(\"Insert easter egg here\");\r\n                                }\r\n                                setTimeout(() => (versionClickCount = Math.max(0, versionClickCount - 1)), 3000);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{APP_VERSION}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.termsOfService\")}\r\n                            oneLine={true}\r\n                            onPress={() => Alert.alert(\"Not implemented\")} // TODO Implement TOS link\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.reportABug\")}\r\n                            icon={<MaterialIcons name=\"bug-report\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => Alert.alert(\"Not implemented\")} // TODO Implement bug reports\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.logOut\")}\r\n                            icon={<MaterialCommunityIcons name=\"logout\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <TouchableOpacity\r\n                                    style={[styles.redActionButton, styles.logoutButton]}\r\n                                    onPress={() => dispatch(logout())}\r\n                                >\r\n                                    <Text style={styles.logoutText}>{i18n.t(\"settings.logOut\")}</Text>\r\n                                </TouchableOpacity>\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.danger\")}\r\n                        icon={{name: \"warning\", color: theme.warn}}\r\n                    >\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.deleteAccount\")}\r\n                            display={\r\n                                // TODO enable Delete Account\r\n                                <TouchableHighlight\r\n                                    style={styles.redActionButton}\r\n                                    //onPress={() => rootNavigate(\"DeleteAccountScreen\")}\r\n                                    onPress={() => Alert.alert(\"Coming very soon\")}\r\n                                >\r\n                                    <Text style={styles.deleteAccountText}>{i18n.t(\"settings.deleteMyAccount\")}</Text>\r\n                                </TouchableHighlight>\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <View style={styles.logosContainer}>\r\n                        <LocalImage\r\n                            imageKey=\"logos.sea-eu-around.small\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoSeaEuAround]}\r\n                        />\r\n                        <LocalImage\r\n                            imageKey=\"logos.erasmusLeft\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoErasmus]}\r\n                        />\r\n\r\n                        <Text style={styles.developedBy}>{i18n.t(\"settings.developedBy\")}</Text>\r\n                        <LocalImage\r\n                            imageKey=\"logos.junior-atlantique\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoJA]}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\ntype SectionProps = {\r\n    theme: Theme;\r\n    title: string;\r\n    icon?: {name: string; color: string};\r\n};\r\n\r\nclass Section extends React.Component<SectionProps> {\r\n    render(): JSX.Element {\r\n        const {title, icon, theme, children} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.section}>\r\n                <View style={styles.sectionTitleContainer}>\r\n                    {icon && <MaterialIcons name={icon.name} color={icon.color} style={styles.sectionIcon} />}\r\n                    <Text style={styles.sectionTitle}>{title}</Text>\r\n                </View>\r\n                {children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            maxWidth: 700,\r\n            alignSelf: \"center\",\r\n            paddingTop: 10,\r\n            paddingBottom: 50,\r\n            paddingHorizontal: 20,\r\n        },\r\n        section: {\r\n            paddingVertical: 10,\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        sectionTitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        sectionTitle: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n        },\r\n        sectionIcon: {\r\n            fontSize: 16,\r\n            marginRight: 5,\r\n        },\r\n        card: {\r\n            marginVertical: 6,\r\n        },\r\n        cardIcon: {\r\n            marginRight: 6,\r\n            padding: 0,\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        localeButton: {\r\n            height: 30,\r\n        },\r\n        localButtonValue: {\r\n            fontSize: 14,\r\n            marginHorizontal: 10,\r\n        },\r\n        redActionButton: {\r\n            backgroundColor: theme.error,\r\n            borderRadius: 4,\r\n            height: 40,\r\n            paddingHorizontal: 20,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            elevation: 2,\r\n        },\r\n        deleteAccountText: {\r\n            color: theme.textWhite,\r\n            fontSize: 16,\r\n        },\r\n        logoutButton: {},\r\n        logoutText: {\r\n            color: theme.textWhite,\r\n            fontSize: 16,\r\n        },\r\n        infoText: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        logosContainer: {},\r\n        logo: {\r\n            marginTop: 30,\r\n            width: \"100%\",\r\n        },\r\n        logoErasmus: {height: 40},\r\n        logoSeaEuAround: {height: 60},\r\n        logoJA: {height: 40},\r\n        developedBy: {\r\n            textTransform: \"uppercase\",\r\n            textAlign: \"center\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n            marginTop: 40,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SettingsScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport store from \"../state/store\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {formStyles} from \"../styles/forms\";\r\n\r\ntype DeleteAccountSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// TODO implement\r\nclass DeleteAccountSuccessScreen extends React.Component<DeleteAccountSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success1\")}</Text>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success2\")}</Text>\r\n                    <TouchableOpacity\r\n                        style={[fstyles.buttonMajor, styles.button]}\r\n                        onPress={() => store.dispatch(logout())}\r\n                    >\r\n                        <Text style={fstyles.buttonMajorText}>{i18n.t(\"deleteAccount.leave\")}</Text>\r\n                        <MaterialCommunityIcons name=\"logout\" style={styles.buttonIcon} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 25,\r\n            marginTop: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            paddingHorizontal: 25,\r\n            marginTop: 40,\r\n            backgroundColor: theme.error,\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {deleteAccount} from \"../../state/auth/actions\";\r\n\r\ntype FormState = {password: string};\r\n\r\nconst initialState = (): FormState => ({password: \"\"});\r\n\r\n// Use Yup to create the validation schema\r\nconst DeleteAccountFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Component props\r\ntype DeleteAccountFormProps = FormProps<FormState> & ThemeProps;\r\n\r\n// Component state\r\ntype DeleteAccountFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass DeleteAccountForm extends React.Component<DeleteAccountFormProps, DeleteAccountFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: DeleteAccountFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(deleteAccount(values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"deleteAccount.title\")}</Text>\r\n                    <MaterialIcons name=\"warning\" style={styles.warningIcon} />\r\n                    <Text style={styles.warning}>{i18n.t(\"deleteAccount.warning\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={DeleteAccountFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    label={i18n.t(\"deleteAccount.inputLabel\")}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.button]}\r\n                                        textStyle={[fstyles.buttonMajorText, styles.buttonText]}\r\n                                        text={i18n.t(\"deleteAccount.button\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        warning: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        warningIcon: {\r\n            color: theme.warn,\r\n            fontSize: 32,\r\n            marginTop: 20,\r\n        },\r\n        button: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.error,\r\n        },\r\n        buttonText: {\r\n            color: theme.textWhite,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport DeleteAccountForm from \"../components/forms/DeleteAccountForm\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype DeleteAccountScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountScreen extends React.Component<DeleteAccountScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <DeleteAccountForm />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteAccountScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {NavigationContainer, DefaultTheme, DarkTheme} from \"@react-navigation/native\";\r\nimport {CardStyleInterpolators, createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport MatchSuccessScreen from \"../screens/MatchSuccessScreen\";\r\nimport {Platform} from \"react-native\";\r\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport ChatScreenHeader from \"../components/headers/ChatScreenHeader\";\r\nimport MyProfileScreen from \"../screens/MyProfileScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport {CHAT_CONNECTED_ROUTES} from \"../constants/config\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {connectToChat, disconnectFromChat} from \"../state/messaging/actions\";\r\nimport store from \"../state/store\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport DeleteAccountSuccessScreen from \"../screens/DeleteAccountSuccessScreen\";\r\nimport DeleteAccountScreen from \"../screens/DeleteAccountScreen\";\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\nlet consumedInitialRoute = false;\r\nlet previousRoute: string | undefined = undefined;\r\n\r\nfunction onStateChange() {\r\n    const route = rootNavigationRef.current?.getCurrentRoute();\r\n    if (route) {\r\n        const toChat = CHAT_CONNECTED_ROUTES.find((r) => r === route.name);\r\n        const fromChat = previousRoute && CHAT_CONNECTED_ROUTES.find((r) => r === previousRoute);\r\n        if (!fromChat && toChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n        if (fromChat && !toChat) (store.dispatch as MyThunkDispatch)(disconnectFromChat());\r\n        previousRoute = route.name;\r\n    }\r\n}\r\n\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nfunction Navigation({theme, initialRoute}: ThemeProps & {initialRoute?: keyof RootNavigatorScreens}): JSX.Element {\r\n    // Ensure we do not go back to the initial route when the navigation container updates (e.g. on theme change)\r\n    const initialRouteName = consumedInitialRoute ? (previousRoute as keyof RootNavigatorScreens) : initialRoute;\r\n    consumedInitialRoute = true;\r\n\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            linking={LinkingConfiguration}\r\n            theme={theme.id === \"dark\" ? DarkTheme : DefaultTheme}\r\n            onReady={onStateChange}\r\n            onStateChange={onStateChange}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={initialRouteName}>\r\n                <Stack.Screen name=\"LoginScreen\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordScreen\"\r\n                    component={ResetPasswordScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ChatScreen\"\r\n                    component={ChatScreen}\r\n                    options={{header: ChatScreenHeader, headerShown: true, title: screenTitle(\"ChatScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"MyProfileScreen\"\r\n                    component={MyProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"MyProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noAvatar={true}\r\n                                noShadow={true}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={theme.textWhite}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ProfileScreen\"\r\n                    component={ProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"ProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noShadow={true}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={theme.textWhite}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"SettingsScreen\"\r\n                    component={SettingsScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"SettingsScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader {...props} backButton={true} noSettingsButton={true} />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountScreen\"\r\n                    component={DeleteAccountScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"DeleteAccountScreen\"),\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} backButton={true} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountSuccessScreen\"\r\n                    component={DeleteAccountSuccessScreen}\r\n                    options={{title: screenTitle(\"DeleteAccountSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"MatchSuccessScreen\"\r\n                    component={MatchSuccessScreen}\r\n                    options={{\r\n                        headerShown: false,\r\n                        cardStyleInterpolator:\r\n                            Platform.OS == \"ios\"\r\n                                ? CardStyleInterpolators.forVerticalIOS\r\n                                : CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                        title: screenTitle(\"MatchSuccessScreen\"),\r\n                    }}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.userSettings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ThemeProps;\r\n\r\nfunction ThemedStatusBar(props: ThemedStatusBarProps): JSX.Element {\r\n    const {theme} = props;\r\n    return <StatusBar style={theme.id == \"dark\" ? \"light\" : \"dark\"} />;\r\n}\r\n\r\nexport default withTheme(ThemedStatusBar);\r\n","import {registerRootComponent} from \"expo\";\r\nimport React from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\n\r\nfunction App() {\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <Navigation initialRoute={initialRoute} />\r\n                        <ThemedStatusBar />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n"],"sourceRoot":""}