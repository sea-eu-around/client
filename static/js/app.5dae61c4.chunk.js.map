{"version":3,"sources":["web-build/register-service-worker.js","assets/fonts/Raleway-Regular.ttf","assets/fonts/Raleway-Thin.ttf","assets/fonts/Raleway-Light.ttf","assets/fonts/Raleway-SemiBold.ttf","assets/fonts/Raleway-Bold.ttf","src/constants/config.ts","src/constants/http-status.ts","src/api/utils.ts","src/state/types.ts","src/constants/universities.ts","src/api/converters.ts","src/state/profile/actions.ts","src/state/persistent-storage/static.ts","src/state/auth/actions.ts","src/api/errors.ts","src/state/persistent-storage/auth.ts","src/state/settings/actions.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/reducer.ts","src/state/profile/reducer.ts","src/api/dto.ts","src/state/matching/actions.ts","src/state/matching/reducer.ts","src/api/chat-socket.ts","src/state/messaging/actions.ts","src/state/messaging/reducer.ts","src/state/notifications/reducer.ts","src/state/reports/reducer.ts","src/navigation/utils.ts","src/screens/onboarding/index.ts","src/state/static-storage-middleware.ts","src/state/auth-storage-middleware.ts","src/state/notifications/actions.ts","src/notifications.ts","src/state/store.ts","src/state/navigation-middleware.ts","src/state/notifications-middleware.ts","src/hooks/useCachedResources.ts","src/constants/layout.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/ScreenWrapper.tsx","src/styles/general.ts","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/forms/FormTextInput.tsx","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/Button.tsx","src/components/forms/FormSubmitButton.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/components/forms/ScrollFormWrapper.tsx","src/components/forms/SignupForm.tsx","src/components/SvgPlaceholder.tsx","src/assets.ts","src/components/headers/LoginHeader.tsx","src/screens/LoginScreens.tsx","src/components/SemiHighlightedText.tsx","src/components/LocalImage.tsx","src/components/MobileStoreButton.tsx","src/screens/WelcomeScreen.tsx","src/components/modals/ModalImpl.tsx","src/components/modals/CustomModal.tsx","src/components/DebugMenu.tsx","src/components/VersionInfo.tsx","src/navigation/LoginNavigator.tsx","src/components/cards/SwipeableCard.tsx","src/styles/picker.ts","src/constants/reports.ts","src/components/PopUpSelector.tsx","src/state/reports/actions.ts","src/components/forms/QuickForm.tsx","src/components/forms/QuickFormReport.tsx","src/components/cards/ChatRoomCard.tsx","src/components/utility/LocaleAware.tsx","src/components/InfiniteScroller.tsx","src/screens/messaging/ChatRoomsScreen.tsx","src/components/ProfileAvatar.tsx","src/styles/headers.ts","src/components/headers/MainHeader.tsx","src/components/headers/ChatScreenHeader.tsx","src/screens/messaging/ChatScreen.tsx","src/polyfills.ts","src/constants/route-settings.ts","src/navigation/MessagingNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabHomeScreen.tsx","src/components/modals/BlockProfileModal.tsx","src/components/FormattedUniversity.tsx","src/components/Chips.tsx","src/components/utility/FocusAware.tsx","src/components/SwipeTip.tsx","src/components/cards/MatchProfileCard.tsx","src/components/AsyncButton.tsx","src/components/Wave.tsx","src/components/modals/MatchSuccessModal.tsx","src/screens/TabMatchingScreen.tsx","src/components/headers/MatchScreenHeader.tsx","src/components/MultiPicker.tsx","src/components/MultiUniversityPicker.tsx","src/styles/toggles.ts","src/components/DegreeToggleMulti.tsx","src/components/LanguagePicker.tsx","src/components/RoleToggleMulti.tsx","src/components/FormattedOfferCategory.tsx","src/screens/MatchFilteringScreen.tsx","src/components/headers/FilteringScreenHeader.tsx","src/components/FormattedMatchStatus.tsx","src/components/cards/HistoryProfileCard.tsx","src/components/BufferedSearchBar.tsx","src/screens/MatchHistoryScreen.tsx","src/navigation/TabMatchingNavigator.tsx","src/components/tabs/MainTabBar.tsx","src/navigation/MainNavigator.tsx","src/components/OnboardingProgressBar.tsx","src/styles/onboarding.ts","src/components/GenderToggleMulti.tsx","src/components/CustomTooltip.tsx","src/components/OfferControl.tsx","src/screens/onboarding/helpers.tsx","src/components/FloatingThemeToggle.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/GenderToggle.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/NationalityControl.tsx","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/FormattedDate.tsx","src/components/DateInput.tsx","src/components/BirthDateInput.tsx","src/screens/onboarding/OnboardingProfileScreen1.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/InterestsPicker.tsx","src/screens/onboarding/OnboardingProfileScreen2.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/components/DegreeToggle.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingLegalSlide.tsx","src/screens/onboarding/screens.tsx","src/screens/onboarding/OnboardingLegalScreen1.tsx","src/screens/onboarding/OnboardingLegalScreen2.tsx","src/screens/onboarding/OnboardingLegalScreen3.tsx","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/components/forms/ResetPasswordForm.tsx","src/screens/ResetPasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/components/RoleToggle.tsx","src/components/StaffRolePicker.tsx","src/components/AvatarEditButton.tsx","src/components/cards/ValueCard.tsx","src/components/EnlargeableAvatar.tsx","src/components/headers/WavyHeader.tsx","src/components/forms/EditProfileForm.tsx","src/screens/MyProfileScreen.tsx","src/components/FormattedGender.tsx","src/components/ProfileView.tsx","src/components/modals/UnmatchProfileModal.tsx","src/components/ProfileActionBar.tsx","src/screens/ProfileScreen.tsx","src/components/LocalePicker.tsx","src/model/user-settings.ts","src/components/modals/CustomizeCookiesModal.tsx","src/screens/SettingsScreen.tsx","src/screens/DeleteAccountSuccessScreen.tsx","src/components/forms/DeleteAccountForm.tsx","src/screens/DeleteAccountScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/ThemedStatusBar.tsx","src/components/CookieBanner.tsx","src/App.tsx"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports","Environment","HttpStatusCode","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_HOST","SERVER_URL","TERMS_AND_CONDITIONS_URL","encodeRequestParams","args","str","Object","keys","filter","key","undefined","map","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","length","requestBackend","endpoint","a","async","method","params","body","authToken","verbose","headers","Accept","Alert","alert","errorType","description","status","Authorization","accessToken","formattedParams","response","log","JSON","stringify","fetch","json","data","NO_CONTENT","PARTNER_UNIVERSITIES","country","stripSuperfluousOffers","offers","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","complete","common","avatarUrl","avatar","birthdate","Date","educationFields","id","profileOffers","interests","i","languages","university","find","u","type","staffDto","staffRoles","r","studentDto","degree","convertPartialProfileToCreateDto","profile","toJSON","staff","student","convertDtoToUser","convertDtoToRoom","users","profiles","p","_id","name","firstName","lastName","lastMessageSeenId","lastMessageSeenDate","lastMessage","msg","sender","senderId","convertDtoToChatMessage","messages","writing","messagePagination","page","canFetchMore","fetching","user","createdAt","updatedAt","convertDtoToHistoryItem","date","PROFILE_ACTION_TYPES","storeStaticData","cookieConsent","storageObject","AsyncStorage","setItem","clearStaticData","s","multiRemove","readCachedStaticData","getItem","raw","parse","AUTH_ACTION_TYPES","setProfileFieldsSuccess","fields","PROFILE_SET_FIELDS_SUCCESS","createProfileSuccess","PROFILE_CREATE_SUCCESS","createProfile","dispatch","getState","token","auth","CREATED","payload","loadProfileOffersSuccess","fromCache","LOAD_PROFILE_OFFERS_SUCCESS","loadProfileInterestsSuccess","LOAD_PROFILE_INTERESTS_SUCCESS","fetchUserSuccess","FETCH_USER_SUCCESS","fetchProfileSuccess","FETCH_PROFILE_SUCCESS","localizeError","err","i18n","t","defaultValue","extractError","code","gatherValidationErrors","resp","OK","output","general","UNPROCESSABLE_ENTITY","errors","forEach","e","property","codes","generalError","storeAuthInformation","email","toStore","discardAuthInformation","removeItem","readCachedCredentials","SETTINGS_ACTION_TYPES","registerBegin","password","REGISTER_BEGIN","requestRegister","locale","settings","userSettings","registerSuccess","success","registerFailure","REGISTER_SUCCESS","REGISTER_FAILURE","loginSuccess","usingCachedCredentials","LOG_IN_SUCCESS","loginFailure","LOG_IN_FAILURE","requestLogin","logout","redirect","LOG_OUT","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","deleteAccountSuccess","DELETE_ACCOUNT_SUCCESS","beginOnboarding","BEGIN_ONBOARDING","setOnboardingValues","values","SET_ONBOARDING_VALUES","setTheme","theme","SET_THEME","setLocale","SET_LOCALE","loadCookiesPreferences","preferences","consentDate","LOAD_COOKIES_PREFERENCES","saveCookiesPreferences","SAVE_COOKIES_PREFERENCES","loadVersionInfo","LOAD_VERSION_INFO","extractNamesFromEmail","splitName","split","capitalize","toUpperCase","slice","firstname","lastname","initialState","authenticated","validated","registerEmail","validatedEmail","onboarded","onboarding","gender","nationality","offerValues","interestIds","onboardingIndex","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","STAFF_ROLE_ICONS","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","trim","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","en","locales","fr","appName","search","send","cancel","ok","save","noResultsFound","apply","logOut","picker","callToAction","login","emailAddress","passwordRepeat","forgotPassword","forgotPasswordExplanation","newPassword","signupWelcome","createAccount","emailValidation","validating","legal","modal","disclaimer1","disclaimer2","decline","accept","readMore","validation","atLeastOne","addAtLeastOne","invalid","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","language","specifyLevel","tooYoung","error_user_not_verified","user_not_found","email_or_password_incorrect","reset_password_no_token","unique","is_email","is_sea_email_constraint","myProfile","countryPickerLanguageCode","profileType","profileTypes","allRoles","teaching","research","administration","technical","other","genders","male","female","dateOfBirth","months","0","1","2","3","4","5","6","7","8","9","10","11","spokenLanguages","languageLevels","a1","a2","b1","b2","c1","c2","native","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","fieldsOfEducation","educationFieldsPicker","placeholder","searchPlaceholder","multiple","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","notFoundScreen","title","subtitle","universities","universitiesPicker","profile1","profile2","role","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","legal1","text","legal2","legal3","back","next","leave","submit","button","quit","yes","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","activism","art","astrology","baking","bbq","blogging","brunch","climbing","coffee","comedy","cooking","couchsurfing","crossfit","cycling","dancing","diy","environmentalism","esports","expositions","fashion","festivals","fishing","foodie","football","gamer","gardening","golf","guitar","hiking","instagram","investing","karaoke","movies","museum","music","netflix","outdoors","parties","photography","piano","picnicking","podcasts","politics","reading","running","sailing","shopping","skateboarder","skiing","sneakers","snowboarding","spirituality","surfing","swimming","tango","tattoos","tea","tennis","theater","travel","trivia","vegan","vegetarian","volunteering","walking","wine","writer","yoga","offersPreText","offerCategories","meet","discover","collaborate","offerSettings","roles","allOffers","help","unmatch","blockQuestion","action","block","warning","welcomeScreen","signIn","signUp","loginForm","titleFirstLaunch","logIn","cookies","bannerText","acceptAll","customize","cache","bugReport","mailSubject","mailTitle","report","what","why","typePlaceholder","types","violence","nudity","harassment","confirmationTitle","confirmation","failureTitle","failure","resetPassword","instructions","deleteAccount","success1","success2","inputLabel","messaging","noMatches","sayHi","sayHiTo","matching","noResults","noMoreItems","noItemsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","offersTitle","offersMore","chat","continue","history","requested","declined","blocked","actions","noResultsAdvice","mute","noOffersSelected","screenTitles","suffix","WelcomeScreen","SigninScreen","ForgotPasswordScreen","SignupScreen","OnboardingNameScreen","OnboardingProfileScreen1","OnboardingProfileScreen2","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingLegalScreen1","OnboardingLegalScreen2","OnboardingLegalScreen3","ChatRoomsScreen","ChatScreen","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","MatchHistoryScreen","TabNotificationsScreen","MyProfileScreen","ProfileScreen","SettingsScreen","DeleteAccountScreen","DeleteAccountSuccessScreen","ValidationEmailSentScreen","ValidateEmailScreen","ResetPasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","ForgotPasswordEmailSentScreen","sections","danger","about","darkTheme","deleteMyAccount","termsOfService","reportABug","customizeCookies","mo","SUPPORTED_LOCALES","getDefaultLocale","Localization","substr","LANGUAGES_CODES","getLocalizedLanguageItems","dict","translations","label","value","cookieConsentDate","previousVersion","isFirstLaunch","localizedLanguageItems","OfferCategory","offerIdToCategory","Map","MatchActionStatus","initOfferValue","val","genderVal","allowChooseGender","typeVal","allowChooseProfileType","offerId","MATCHING_ACTION_TYPES","MATCH_ACTION_HISTORY_STATUSES","Declined","Blocked","Requested","fetchProfilesFailure","FETCH_PROFILES_FAILURE","fetchProfilesSuccess","FETCH_PROFILES_SUCCESS","refreshFetchedProfiles","FETCH_PROFILES_REFRESH","likeProfileSuccess","matchStatus","roomId","LIKE_PROFILE_SUCCESS","likeProfile","toProfileId","dislikeProfileSuccess","DISLIKE_PROFILE_SUCCESS","blockProfileSuccess","profileId","BLOCK_PROFILE_SUCCESS","blockProfile","fetchHistorySuccess","items","FETCH_HISTORY_SUCCESS","refreshFetchedHistory","FETCH_HISTORY_REFRESH","cancelActionFailure","historyItemId","ACTION_CANCEL_FAILURE","cancelActionSuccess","isMatch","ACTION_CANCEL_SUCCESS","cancelMatchAction","matchingEntityId","filters","fetchedProfiles","profilesPagination","historyPagination","historyFilters","k","initialHistoryFilters","historyItems","myMatches","fetchingMyMatches","MESSAGING_ACTION_TYPES","SOCKET_LOCATION","this","socket","connectCallbacks","writingTimeout","lastSentWritingState","lastSentWritingStateRoom","connectTimeout","connectedState","f","listeners","on","clearTimeout","consumeConnectCallbacks","m","onMessageReceived","onMessageRead","onWritingStateChange","emit","room","state","setTimeout","sendWritingState","callback","push","retry","isConnected","addConnectCallback","isConnecting","connect","query","authorization","reconnection","registerListeners","readMessage","messageId","refreshWritingTimeout","disconnect","connected","fetchMatchRoomsSuccess","rooms","FETCH_MATCH_ROOMS_SUCCESS","connectToChat","fail","CONNECT_TO_CHAT_FAILURE","chatSocket","CONNECT_TO_CHAT_BEGIN","activeRoom","receiveChatMessage","readChatMessage","receiveChatWriting","hasConnected","CONNECT_TO_CHAT_SUCCESS","disconnectFromChat","DISCONNECT_FROM_CHAT","joinChatRoomBegin","JOIN_CHAT_ROOM_BEGIN","joinChatRoomFailure","JOIN_CHAT_ROOM_FAILURE","joinChatRoomSuccess","JOIN_CHAT_ROOM_SUCCESS","joinChatRoom","joinRoom","sendChatMessageSuccess","message","SEND_MESSAGE_SUCCESS","sendChatMessage","socketState","localChatUser","sent","sendMessage","SEND_MESSAGE_FAILURE","RECEIVE_MESSAGE","RECEIVE_WRITING_STATE","READ_MESSAGE","fetchEarlierMessagesBegin","FETCH_EARLIER_MESSAGES_BEGIN","fetchEarlierMessagesFailure","FETCH_EARLIER_MESSAGES_FAILURE","fetchEarlierMessagesSuccess","FETCH_EARLIER_MESSAGES_SUCCESS","fetchNewMessagesBegin","FETCH_NEW_MESSAGES_BEGIN","fetchNewMessagesFailure","FETCH_NEW_MESSAGES_FAILURE","fetchNewMessagesSuccess","FETCH_NEW_MESSAGES_SUCCESS","matchRooms","matchRoomsOrdered","matchRoomsPagination","connecting","fetchingNewMessages","toLocalChatUser","updateRoom","setAsFirst","otherRooms","concat","rootNavigationRef","React","rootNavigate","route","current","navigate","navigateBack","fallback","nav","canGoBack","goBack","screenTitle","headerTitle","openChat","screen","ONBOARDING_ORDER","hasUserGivenCookieConsent","Platform","OS","now","getTime","NOTIFICATIONS_ACTION_TYPES","areNotificationsSupported","isDevice","getNotificationData","notif","request","content","registerNotificationTokenSuccess","REGISTER_TOKEN_SUCCESS","deleteNotificationTokenSuccess","DELETE_TOKEN_SUCCESS","rootReducer","combineReducers","verificationToken","names","PREVIOUS_ONBOARDING_SLIDE","NEXT_ONBOARDING_SLIDE","SET_ONBOARDING_OFFER_VALUE","TOGGLE_THEME","category","sort","b","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","SET_FILTERS","FETCH_PROFILES_BEGIN","pagination","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","FETCH_HISTORY_BEGIN","FETCH_HISTORY_FAILURE","SET_HISTORY_FILTERS","FETCH_MATCH_ROOMS_BEGIN","FETCH_MATCH_ROOMS_FAILURE","ids","FETCH_MATCH_ROOMS_REFRESH","LEAVE_ROOM","existingMessage","filteredMessages","ma","some","mb","findIndex","notifications","reports","combinedMiddleware","applyMiddleware","thunk","store","oldCookies","Permissions","Notifications","askForPushNotificationToken","pushToken","registerNotificationToken","createStore","loggedInFromCache","width","Dimensions","get","height","isSmallDevice","isWideDevice","light","textWhite","textBlack","textLight","textInverted","background","cardBackground","accent","accentSlight","accentSecondary","accentTernary","actionNeutral","okay","warn","componentBorder","buttonGroupBorder","greenModalBackground","chatBubble","inputPlaceholder","dark","preTheme","generator","styles","wideDevice","layout","themes","ScreenWrapper","props","forceFullWidth","wrapperStyle","containerStyle","themedStyles","View","style","wrapper","container","maxWidth","children","StyleSheet","create","flex","justifyContent","flexDirection","overflow","alignItems","withTheme","styleTextThin","fontFamily","fontWeight","styleTextLight","webFontFamily","BLUR_HEADER_INTENSITY","BLUR_TAB_INTENSITY","BLUR_MODAL_INTENSITY","navigation","Text","TouchableOpacity","onPress","replace","link","linkText","padding","fontSize","textAlign","color","marginTop","paddingVertical","reduxConnector","Staging","ActivityIndicator","size","successText","routeName","fallbackRoute","location","attemptRedirectToApp","marginVertical","lineHeight","FontAwesome","mailIcon","config","prefixes","Linking","screens","LoginRoot","LoginScreens","MainScreen","TabHome","TabMatching","MatchFilteringScren","TabMessaging","TabNotifications","ValidateEmailSentScreen","OnboardingScreen","InputLabel","otherProps","textTransform","letterSpacing","InputErrorText","errorStr","marginBottom","ValidatedTextInput","inputRef","createRef","focused","showSecureEntry","focus","showErrorText","icon","untouched","secureTextEntry","inputStyle","inputFocusedStyle","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","showPasswordButtonStyle","showPasswordIconStyle","placeholderTextColor","onBlur","onFocus","showError","isSecureEntry","position","paddingBottom","TextInput","ref","backgroundColor","setState","Component","defaultProps","emailProps","keyboardType","autoCompleteType","textContentType","autoCapitalize","autoCorrect","passwordProps","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","isEmail","isPassword","formStyles","inputFieldIcon","marginRight","inputFieldIconFocused","getLoginTextInputsStyleProps","wrapperVerticalMargin","borderBottomWidth","borderColor","borderBottomColor","outline","FormError","BUTTON_SKINS","borderRadius","borderWidth","Button","skin","textStyle","skinStyles","accessibilityRole","accessibilityLabel","FormSubmitButton","submitting","loadingIndicatorStyle","LoginFormSchema","shape","LoginForm","pwdInputRef","setFieldValue","oldProps","onSuccessfulSubmit","setFieldError","remoteErrors","fstyles","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","returnKeyType","blurOnSubmit","onSubmitEditing","MaterialIcons","Keyboard","dismiss","forgotPwdLink","forgotPasswordText","actionsContainer","MaterialCommunityIcons","loginButtonIcon","separatorContainer","separatorHbar","separatorText","marginLeft","paddingHorizontal","opacity","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","formikCfg","ScrollFormWrapper","keyboardShown","notKeyboardReactive","addListener","contentStyle","ScrollView","keyboardShouldPersistTaps","scrollView","contentContainerStyle","scrollViewContent","minHeight","onLayout","nativeEvent","KeyboardAvoidingView","behavior","keyboardAvoidingView","SignupFormSchema","SignupForm","pwdField1Ref","pwdField2Ref","validateOnChange","SvgPlaceholder","loaded","assetDictEn","assetDictFr","getLocalImage","onLoad","finish","default","assetDictCommon","getLocalSvg","LoginHeaderClass","ReAnimated","Value","getFullHeight","imageTop","getImageHeight","insets","top","Math","imageTopVal","getCollapsedHeight","heightVal","setValue","easing","Easing","cubic","timing","toValue","duration","start","Image","forceUpdate","image","viewBox","navigationButton","navigationIcon","left","zIndex","aspectRatio","SVG_VIEWBOX_W","useSafeAreaInsets","themeProps","SigninScreenClass","wide","form","formContainer","screenWrapper","screenContainer","ForgotPasswordScreenClass","SignupScreenClass","paddingTop","SemiHighlightedText","underlineHeight","underlineSides","textContainer","underline","bottom","textShadowColor","textShadowOffset","textShadowRadius","LocalImage","imageKey","img","source","MobileStoreButton","url","linkStyle","linkProps","Svg","scale","margin","activeOpacity","openURL","fill","WelcomeImage","storeButtonWidth","imageAndTextContainer","imageContainer","mobileStoresContainer","alignSelf","ModalImplClass","modalVisible","visible","document","createElement","appendChild","setModalVisible","onHide","onShow","modalViewStyle","fullWidth","fullHeight","nonDismissable","noBackground","backdropOpacity","backdropBlur","fixedFullSize","tint","intensity","cursor","right","boxShadow","renderContent","ReactDOM","createPortal","CustomModalClass","modalRef","activator","activatorElement","show","ModalImpl","DebugMenu","ACTIONS","hide","n","round","random","level","titleStyle","debugContent","Content","Title","l","modalProps","statusBarTranslucent","isVisible","CustomModal","versionInfoContainer","versionText","versionDisclaimerIcon","SigninRoot","createMaterialTopTabNavigator","Tab","LoginNavigator","Navigator","swipeEnabled","tabBar","Screen","component","options","initialRouteName","DEFAULT_LOOKS","sideMargin","verticalSpacing","SwipeableCardClass","swipeableRef","looks","hidden","onHidden","onFinish","ease","close","leftActions","rightActions","wrapperProps","swipeableProps","hideCard","noAnimation","collapse","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","useNativeAnimations","friction","renderLeftActions","renderRightActions","touchable","flexBasis","display","oneSidedBorderRadius","side","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","SwipeActionButton","buttonStyles","swipeActionButton","swipeActionButtonIcon","swipeActionButtonText","SwipeActionButtons","buttonStyle","SwipeActionContainer","properties","first","last","isExteriorButton","isInteriorButton","interiorFiller","fullCardWidth","swipeActionsContainer","marginHorizontal","paddingRight","paddingLeft","swipeActionsContent","swipeActionText","pickerStyles","overlay","maxHeight","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","openButton","openButtonText","chipContainer","ReportType","PopUpSelector","valueDict","selected","fromSelectedProp","newValue","onSelect","valueStyle","pstyles","buttonOk","placeholderText","numberOfLines","scroll","scrollContent","index","rowContainer","toggleValue","checked","checkboxContainer","checkboxWrapper","checkedIcon","uncheckedIcon","flexGrow","ReportEntityType","REPORT_ACTION_TYPES","REPORT_TYPES","VIOLENCE","NUDITY","HARASSMENT","UNDESIRABLE_CONTENT","HATE_SPEECH","VULGAR_CONTENT","OTHER","reportEntitySuccess","reportType","entityType","entityId","REPORT_ENTITY_SUCCESS","reportEntityFailure","REPORT_ENTITY_FAILURE","reportEntity","QuickFormClass","open","confirmationOpen","failureOpen","hideSubmit","titleIcon","submitText","confirmationText","failureText","actionButtons","actionButton","actionButtonText","titleContainer","containerModal","wrapperSheet","containerSheet","feedbackModal","feedbackTitle","feedbackText","QuickFormReportClass","quickFormRef","selectedType","entity","PROFILE_ENTITY","getEntityInfo","QuickForm","inputItem","selectorValue","LOOKS","ChatRoomCard","reportFormRef","swipeableCardRef","localUser","lastMessageComponent","isRead","pad","num","padStart","lastMessageText","lastMessageTextNew","lastMessageTime","getHours","getMinutes","noMessageText","SwipeableCard","rightThreshold","overshootRight","getActions","cardContent","avatarContainer","avatarStyle","infoContainer","QuickFormReport","resetSwipe","onLocaleChange","InfiniteScroller","scrollViewRef","hiddenIds","fetchMore","isFocused","item","fetchLimit","getShownItems","refreshOnFocus","currentPage","refresh","shown","justRefreshed","moreIfNeeded","renderItem","noResultsComponent","endOfItemsComponent","itemsContainerStyle","progressViewOffset","scroller","itemsContainer","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","layoutMeasurement","contentOffset","contentSize","y","hideItem","endOfItemsContainer","noResultsContainer","loadingIndicatorContainer","roomIds","fetchingRooms","limit","paginated","meta","totalPages","noMatchesText","ProfileAvatar","avatarProps","avatarTitle","avatarSourceProp","uri","headerStyles","wrapperBlur","wrapperNoShadow","shadowColor","elevation","backButton","backButtonIcon","rightButton","rightIcon","MainHeaderClass","rightButtons","noAvatar","noShadow","noSettingsButton","blur","overrideAvatar","overrideTitle","scene","textColor","buttonBackgroundColor","WrapperComponent","BlurView","blurProps","rounded","ButtonComponent","toLowerCase","iconStyle","MainHeaderComp","MainHeader","ChatScreenHeaderClass","getRoomId","stackProps","hstyles","getRoom","ChatScreenHeaderComp","ChatScreenHeader","listRef","removeScrollListener","ensureLatestMessages","fetchMatchRoom","connectToRoom","leaveRoom","afterDate","fetchPage","convertDto","fetchNewMessages","fetchEarlier","beforeDate","fetchEarlierMessages","scrollNode","getScrollableNode","listener","PAGE_HEIGHT","sY","pY","detail","wheelDelta","wheelDeltaY","deltaY","deltaMode","spinY","pixelY","normalizeWheelEvent","scrollTop","preventDefault","removeEventListener","setNativeProps","transform","chatComponent","isWritingId","userWriting","lastMessageDict","renderSend","sendContainer","renderBubble","renderTicks","currentMessage","messageTicksContainer","received","messageTick","bubbleTextLeft","bubbleTextRight","bubbleWrapperLeft","bubbleWrapperRight","renderMessage","seenBy","ChatMessage","messageProps","renderInputToolbar","inputToolbarContainer","primaryStyle","inputToolbarPrimary","renderFooter","ChatFooter","renderActions","ChatActions","actionsProps","onInputTextChanged","setWriting","onSend","loadEarlier","isLoadingEarlier","onLoadEarlier","timeFormat","listViewProps","setListRef","onEndReached","renderScrollComponent","renderComposer","autoFocus","textInput","multiline","onKeyPress","ev","altKey","shiftKey","minInputToolbarHeight","MIN_INPUT_HEIGHT","showUserAvatar","renderAvatar","renderCustomView","dotColor","dotAmplitude","dotSpeed","dotMargin","dotRadius","dotX","dotY","messageContainerLeft","messageContainerRight","messageReadContainerLeft","messageReadContainerRight","messageReadAvatar","messageReadAvatarText","borderTopWidth","actionContainer","actionIcon","minWidth","CHAT_CONNECTED_ROUTES","STATUS_BAR_THEME_OVERRIDES","AUTHENTICATED_ROUTES","Stack","createStackNavigator","MessagingNavigator","previousAppStatus","RNAppState","onAppActive","onAppInactive","getCurrentRoute","includes","headerMode","headerShown","header","LogOutButton","onLogOut","shortCode","BASE_URL","fetchPostEmbed","separator","alphaText","logoutButton","BlockProfileModalClass","onBlock","actionButtonsWrapper","actionText","redBackground","FormattedUniversity","flagSize","flagEmoji","countryCode","withEmoji","Chips","removable","onRemove","chipStyle","Chip","chip","chipText","chipRemoveButton","chipRemoveIcon","flexWrap","FocusAware","useFocusEffect","ICON_NAMES","horizontal","SwipeTip","offset","animating","dir","direction","animate","even","ANIMATION_AMPLITUDE","inOut","circle","linear","iconName","setAnimating","MatchProfileCard","cardRef","expanded","PROFILE_PREVIEW_COLLAPSED_HEIGHT","x","PROFILE_PREVIEW_EXPANDED_HEIGHT","elastic","out","expand","onExpand","showSwipeTip","fullName","chipStyleProps","collapsedContent","infoText","swipeTip","swipeTipIcon","expandedContent","expandedSectionTitle","BlockProfileModal","blockButton","blockButtonIcon","leftThreshold","onSwipeableRightWillOpen","onSwipeLeft","onSwipeableLeftWillOpen","onSwipeRight","swipeActionContentRight","swipeActionContentLeft","toggleExpanded","flexShrink","AsyncButton","loading","loadingIndicatorColor","WAVE_PATTERNS","Wave","wavePatternIdx","patternIndex","floor","upsideDown","wavePattern","rotate","preserveAspectRatio","d","localProfile","forwardRef","MatchSuccessModalClass","maxOffersDisplayed","waveWidth","getMatchingOffers","animationType","topContainer","profileInfoContainer","offersCard","availableHeight","OFFERS_CARD_VERTICAL_PADDING","numItems","offerText","fetchingProfiles","scrollerRef","successModalRef","notEmpty","filterParams","noResultsText1","noResultsText2","scrollTo","animated","Matched","dislikeProfile","MatchSuccessModal","MatchScreenHeaderClass","MatchScreenHeader","MultiPicker","tempSelected","dropdownWrapperHeight","has","set","genLabel","updateItems","onChange","multipleText","searchablePlaceholder","showChips","single","viewProps","selectedItems","toString","searchable","onChangeItem","scrollViewProps","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","showSelected","MultiUniversityPicker","uni","univKey","getToggleStyleProps","variant","innerBorderStyle","buttonContainerStyle","selectedButtonStyle","selectedTextStyle","disabledStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonLabels","styleVariant","styleProps","idx","selectMultiple","selectedIndexes","indexOf","buttons","LanguagePicker","languageId","FormattedOfferCategory","iconProps","iconSize","translationKey","SvgIcon","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","entryContainer","entryLabel","Switch","onValueChange","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","resetButtonIcon","sectionTitle","entryControls","ClearFilterButton","twoLineEntryContainer","FilteringScreenHeaderClass","applyFilters","FilteringScreenHeaderComp","FilteringScreenHeader","FormattedMatchStatus","IconComponent","HistoryProfileCard","blockModalRef","reportButton","cancelButton","BufferedSearchBar","updateTimeout","bufferDelay","onBufferedUpdate","searchBarProps","fetchingHistory","filtersContainer","Filter","filterKey","setHistoryFilters","searchBarContainer","inputContainerStyle","searchBarInputContainer","searchBarInput","fetchHistory","filterButtonContainer","filterButton","filterButtonSelected","filterLabel","filterLabelSelected","raised","topBar","headerContainer","filterIcon","filterIconSelected","TabMatchingStack","TabMatchingNavigator","MainTabBarClass","tabBarProps","blurViewStyle","BottomTabBar","activeTintColor","tabStyle","tab","showLabel","MainTabBarIcon","MainTabBar","TabNavigator","createBottomTabNavigator","tabBarIcon","tabBarVisible","getFocusedRouteNameFromRoute","tabBarButton","OnboardingProgressBar","containerWidth","setIndex","targetWidth","sin","foregroundStyle","foreground","onboardingStyle","slideScrollView","slideContentWrapper","slideNavWrapper","slideNavButtons","navButton","navButtonIcon","finishButtonText","onboardingOffersStyle","categoryTitleText","offerControl","offerControlPreText","CustomTooltip","tooltipStyles","alignContent","OfferControl","settingsModalRef","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","titleLeft","setAllValues","offerNameTouchable","offerName","sideButton","sideButtonIcon","settingsModal","settingsModalTargetType","settingsModalButton","settingsModalButtonText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","toggleThemeContainer","toggleThemeButton","toggleThemeIcon","ButtonSpacer","OnboardingSlide","hideNavNext","hasNext","noKeyboardAvoidance","hasPrevious","Background","keyboardVerticalOffset","enabled","previous","quitOnboarding","VALIDATION_SCHEMA","lastNameInputRef","nextProps","prev","getOnboardingTextInputsStyleProps","enablesReturnKeyAutomatically","disabled","selectedIndex","NationalityPicker","showModal","hideModal","filterProps","withFlag","withFilter","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","DARK_THEME","DEFAULT_THEME","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","NationalityControl","SectionedMultiPicker","selectRef","section","genSectionLabel","_toggleSelector","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","select","onSelectedItemsChange","uniqueKey","displayKey","subKey","onCancel","onConfirm","IconRenderer","icons","showDropDowns","readOnlyHeadings","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","confirmFontFamily","itemFontFamily","searchTextFontFamily","subItemFontFamily","modalWrapper","EducationFieldCategory","overflowY","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","subItemText","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","FormattedDate","localizedMonth","getMonth","formattedDate","getDate","getFullYear","dateInputProps","maxLength","clearTextOnFocus","DateInputClass","input1Ref","input2Ref","input3Ref","deriveStateFromDate","year","month","day","pyear","parseInt","pmonth","pday","getError","minimumDate","maximumDate","validDate","inputStyleValid","input","inputDay","inputMonth","inputYear","minDate","maxDate","setFullYear","BirthDateInputClass","dateInputRef","DateInput","setFieldTouched","BirthDateInput","dateTextInput","dateTextInputValid","birthdateText","LanguageLevelPicker","SpokenLanguagesInput","hasErrors","levelDict","rows","languageLabel","levelPicker","setLanguageLevel","removeRow","deleteIcon","languageCodes","setLanguages","allInterests","updateValues","interest","interestId","roleButton","roleButtonIconStudent","roleButtonTextStudent","roleButtonIconStaff","roleButtonTextStaff","studentColor","staffColor","roleButtonText","roleButtonIcon","OnboardingOfferScreen1","Discover","OnboardingOfferScreen2","Collaborate","OnboardingOfferScreen3","Meet","DegreeToggle","onUpdate","studentThemedStyles","staffThemedStyles","buttonIcon","buttonText","thumbColor","trackColor","true","false","studentRender","staffRender","TOSDeclinedModal","TextLink","textProps","OnboardingLegalSlide","legalText","readMoreText","actionsWrapper","actionButtonTextDecline","actionButtonTextAccept","ONBOARDING_SCREENS","OnboardingStack","ComponentClass","tabBarOptions","showIcon","springConfig","stiffness","damping","mass","lazy","lazyPreloadDistance","BackgroundSvg","ForegroundSvg","root","largeDeviceLeftPanel","wideDeviceIcon","ResetPasswordFormSchema","ResetPasswordForm","pwdRepeatRef","_","AvatarEditButton","ensurePermission","showPicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","result","cancelled","onPictureSelected","shadowOffset","shadowOpacity","shadowRadius","ValueCard","renderModalContent","renderInput","oneLine","modalLabel","modalErrorText","modalButtonsContainer","modalButton","setModal","modalOpen","initialValue","validate","validator","validateSync","setError","overrideModal","noModal","locked","blank","onModalShown","cardWrapper","cardLabelContainer","cardLabel","rightIconContainer","modalContent","EnlargeableAvatar","enlarged","showEnlarged","hideEnlarged","enlargedAvatarContainer","enlargedAvatar","WavyHeader","headerWidth","waveTop","wavePatternIndex","Spacer","EditProfileForm","birthDateInputRef","rootScroll","overScrollMode","imageInfo","mimeType","SET_AVATAR_FAILURE","fileName","s3Url","blob","imageBlob","response2","payload2","universityContainer","loadingIndicator","cardText","_error","birthdateInputContainer","birthdateInput","inputError","onFieldChanged","cc","staffRoleButton","OfferCategoryRow","onApply","offerVal","updatedVal","avatarAccessory","PROFILE_SET_FIELDS_FAILURE","setProfileFields","FormattedGender","ProfileView","actionBar","buttonSend","formWrapper","UnmatchProfileModal","matchId","blockTouchable","ActionButton","buttonTop","buttonTopBlank","buttonTopIcon","isMatched","buttonBlock","buttonReport","buttonChat","buttonMute","buttonUnmatch","getRouteParams","profileWithMatchInfo","fetchProfile","matchingId","LocalePicker","COOKIES_PREFERENCES_KEYS","CustomizeCookiesModal","storeCookies","localCookies","cookieDict","toggleCookie","preferenceRow","preferenceRowButton","checkBoxContainer","preferenceName","preferenceDescription","versionClickCount","card","cardIcon","localeButton","localButtonValue","cardButtonText","oneLineCardButton","max","fromEmail","Version","subject","cardButton","logosContainer","resizeMode","logo","logoSeaEuAround","logoErasmus","Section","sectionTitleContainer","sectionIcon","DeleteAccountFormSchema","DeleteAccountForm","warningIcon","consumedInitialRoute","previousRoute","prePreviousRoute","savedNavigationState","onStateChange","toChat","fromChat","handleRouteChangeForChat","initialRoute","onReady","reactNavigationTheme","DarkTheme","DefaultTheme","NavigationContainer","linking","LinkingConfiguration","BackHandler","toAuthRoute","screenOptions","MainNavigator","OnboardingNavigator","currentTheme","ThemedStatusBar","override","getThemeOverride","previousThemeOverride","defaultStyle","StatusBar","CookieBanner","showCustomize","modalView","cookieText","registerRootComponent","platform","web","secondary","grey","searchBg","isLoadingComplete","setLoadingComplete","SplashScreen","cacheIsGood","Font","font","Raleway","require","RalewayThin","RalewayLight","RalewaySemiBold","RalewayBold","credentials","loadResourcesAndDataAsync","useCachedResources","fallbacks","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","notification","notifs","identifier","importance","MAX","vibrationPattern","lightColor","useState","navigationReady","setNavigationReady"],"mappings":"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","file":"static/js/app.5dae61c4.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Thin.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-SemiBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Raleway-Bold.ttf\";","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport Constants from \"expo-constants\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = Constants.manifest.version!;\r\nexport const APP_SCHEME: string = Constants.manifest.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const SERVER_HOST: string = extra.SERVER_HOST;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\n\r\n/**\r\n * The number of resources fetched per request when scrolling in infinite scrolling containers.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8; // Matching tab\r\nexport const ROOMS_FETCH_LIMIT = 10; // Messaging tab\r\nexport const MESSAGES_FETCH_LIMIT = 15; // Chat\r\nexport const HISTORY_FETCH_LIMIT = 12; // Match history tab\r\n\r\n/**\r\n * The buffer delay before sending a remote request when typing in a search bar (ms).\r\n */\r\nexport const SEARCH_BUFFER_DELAY = 250;\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n\r\n/**\r\n * The time before we ask the user to consent for cookies again.\r\n */\r\nexport const COOKIE_CONSENT_DURATION = 365 * 24 * 60 * 60;\r\n\r\n/**\r\n * The amount of time before we fall back to the web version when trying to\r\n * redirect to the app.\r\n */\r\nexport const WEB_TO_APP_TIMEOUT = 5000;\r\n\r\n/**\r\n * URL of the complete Terms & Conditions.\r\n */\r\nexport const TERMS_AND_CONDITIONS_URL =\r\n    \"https://sea-eu.org/wp-content/uploads/2021/01/SEA-EU-Around_Termsconditions-v2.pdf\";\r\n\r\n/**\r\n * The email address to which bug reports should be sent.\r\n */\r\nexport const BUG_REPORT_EMAIL_ADDRESS = \"sea-eu.around@univ-brest.fr\";\r\n","/**\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n * @see {@link https://gist.github.com/scokmen/f813c904ef79022e84ab2409574d1b45}\r\n */\r\nexport enum HttpStatusCode {\r\n    /**\r\n     * The server has received the request headers and the client should proceed to send the request body\r\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n     */\r\n    CONTINUE = 100,\r\n\r\n    /**\r\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n     */\r\n    SWITCHING_PROTOCOLS = 101,\r\n\r\n    /**\r\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n     * This prevents the client from timing out and assuming the request was lost.\r\n     */\r\n    PROCESSING = 102,\r\n\r\n    /**\r\n     * Standard response for successful HTTP requests.\r\n     * The actual response will depend on the request method used.\r\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n     */\r\n    OK = 200,\r\n\r\n    /**\r\n     * The request has been fulfilled, resulting in the creation of a new resource.\r\n     */\r\n    CREATED = 201,\r\n\r\n    /**\r\n     * The request has been accepted for processing, but the processing has not been completed.\r\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n     */\r\n    ACCEPTED = 202,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The server is a transforming proxy that received a 200 OK from its origin,\r\n     * but is returning a modified version of the origin's response.\r\n     */\r\n    NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n    /**\r\n     * The server successfully processed the request and is not returning any content.\r\n     */\r\n    NO_CONTENT = 204,\r\n\r\n    /**\r\n     * The server successfully processed the request, but is not returning any content.\r\n     * Unlike a 204 response, this response requires that the requester reset the document view.\r\n     */\r\n    RESET_CONTENT = 205,\r\n\r\n    /**\r\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n     * or split a download into multiple simultaneous streams.\r\n     */\r\n    PARTIAL_CONTENT = 206,\r\n\r\n    /**\r\n     * The message body that follows is an XML message and can contain a number of separate response codes,\r\n     * depending on how many sub-requests were made.\r\n     */\r\n    MULTI_STATUS = 207,\r\n\r\n    /**\r\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n     * and are not being included again.\r\n     */\r\n    ALREADY_REPORTED = 208,\r\n\r\n    /**\r\n     * The server has fulfilled a request for the resource,\r\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n     */\r\n    IM_USED = 226,\r\n\r\n    /**\r\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n     * For example, this code could be used to present multiple video format options,\r\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n     */\r\n    MULTIPLE_CHOICES = 300,\r\n\r\n    /**\r\n     * This and all future requests should be directed to the given URI.\r\n     */\r\n    MOVED_PERMANENTLY = 301,\r\n\r\n    /**\r\n     * This is an example of industry practice contradicting the standard.\r\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n     * use the 302 status code as if it were the 303.\r\n     */\r\n    FOUND = 302,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The response to the request can be found under another URI using a GET method.\r\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n     * the server has received the data and should issue a redirect with a separate GET message.\r\n     */\r\n    SEE_OTHER = 303,\r\n\r\n    /**\r\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n     */\r\n    NOT_MODIFIED = 304,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n     */\r\n    USE_PROXY = 305,\r\n\r\n    /**\r\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n     */\r\n    SWITCH_PROXY = 306,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n     * For example, a POST request should be repeated using another POST request.\r\n     */\r\n    TEMPORARY_REDIRECT = 307,\r\n\r\n    /**\r\n     * The request and all future requests should be repeated using another URI.\r\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n     */\r\n    PERMANENT_REDIRECT = 308,\r\n\r\n    /**\r\n     * The server cannot or will not process the request due to an apparent client error\r\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n     */\r\n    BAD_REQUEST = 400,\r\n\r\n    /**\r\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n     */\r\n    UNAUTHORIZED = 401,\r\n\r\n    /**\r\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n     */\r\n    PAYMENT_REQUIRED = 402,\r\n\r\n    /**\r\n     * The request was valid, but the server is refusing action.\r\n     * The user might not have the necessary permissions for a resource.\r\n     */\r\n    FORBIDDEN = 403,\r\n\r\n    /**\r\n     * The requested resource could not be found but may be available in the future.\r\n     * Subsequent requests by the client are permissible.\r\n     */\r\n    NOT_FOUND = 404,\r\n\r\n    /**\r\n     * A request method is not supported for the requested resource;\r\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n     */\r\n    METHOD_NOT_ALLOWED = 405,\r\n\r\n    /**\r\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n     */\r\n    NOT_ACCEPTABLE = 406,\r\n\r\n    /**\r\n     * The client must first authenticate itself with the proxy.\r\n     */\r\n    PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n    /**\r\n     * The server timed out waiting for the request.\r\n     * According to HTTP specifications:\r\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n     */\r\n    REQUEST_TIMEOUT = 408,\r\n\r\n    /**\r\n     * Indicates that the request could not be processed because of conflict in the request,\r\n     * such as an edit conflict between multiple simultaneous updates.\r\n     */\r\n    CONFLICT = 409,\r\n\r\n    /**\r\n     * Indicates that the resource requested is no longer available and will not be available again.\r\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n     * Clients such as search engines should remove the resource from their indices.\r\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n     */\r\n    GONE = 410,\r\n\r\n    /**\r\n     * The request did not specify the length of its content, which is required by the requested resource.\r\n     */\r\n    LENGTH_REQUIRED = 411,\r\n\r\n    /**\r\n     * The server does not meet one of the preconditions that the requester put on the request.\r\n     */\r\n    PRECONDITION_FAILED = 412,\r\n\r\n    /**\r\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n     */\r\n    PAYLOAD_TOO_LARGE = 413,\r\n\r\n    /**\r\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n     * in which case it should be converted to a POST request.\r\n     * Called \"Request-URI Too Long\" previously.\r\n     */\r\n    URI_TOO_LONG = 414,\r\n\r\n    /**\r\n     * The request entity has a media type which the server or resource does not support.\r\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n     */\r\n    UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n    /**\r\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n     * Called \"Requested Range Not Satisfiable\" previously.\r\n     */\r\n    RANGE_NOT_SATISFIABLE = 416,\r\n\r\n    /**\r\n     * The server cannot meet the requirements of the Expect request-header field.\r\n     */\r\n    EXPECTATION_FAILED = 417,\r\n\r\n    /**\r\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n     */\r\n    I_AM_A_TEAPOT = 418,\r\n\r\n    /**\r\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n     */\r\n    MISDIRECTED_REQUEST = 421,\r\n\r\n    /**\r\n     * The request was well-formed but was unable to be followed due to semantic errors.\r\n     */\r\n    UNPROCESSABLE_ENTITY = 422,\r\n\r\n    /**\r\n     * The resource that is being accessed is locked.\r\n     */\r\n    LOCKED = 423,\r\n\r\n    /**\r\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n     */\r\n    FAILED_DEPENDENCY = 424,\r\n\r\n    /**\r\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n     */\r\n    UPGRADE_REQUIRED = 426,\r\n\r\n    /**\r\n     * The origin server requires the request to be conditional.\r\n     * Intended to prevent \"the 'lost update' problem, where a client\r\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n     */\r\n    PRECONDITION_REQUIRED = 428,\r\n\r\n    /**\r\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n     */\r\n    TOO_MANY_REQUESTS = 429,\r\n\r\n    /**\r\n     * The server is unwilling to process the request because either an individual header field,\r\n     * or all the header fields collectively, are too large.\r\n     */\r\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n    /**\r\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n     */\r\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n    /**\r\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n     */\r\n    INTERNAL_SERVER_ERROR = 500,\r\n\r\n    /**\r\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n     */\r\n    NOT_IMPLEMENTED = 501,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n     */\r\n    BAD_GATEWAY = 502,\r\n\r\n    /**\r\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n     * Generally, this is a temporary state.\r\n     */\r\n    SERVICE_UNAVAILABLE = 503,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n     */\r\n    GATEWAY_TIMEOUT = 504,\r\n\r\n    /**\r\n     * The server does not support the HTTP protocol version used in the request\r\n     */\r\n    HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n    /**\r\n     * Transparent content negotiation for the request results in a circular reference.\r\n     */\r\n    VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n    /**\r\n     * The server is unable to store the representation needed to complete the request.\r\n     */\r\n    INSUFFICIENT_STORAGE = 507,\r\n\r\n    /**\r\n     * The server detected an infinite loop while processing the request.\r\n     */\r\n    LOOP_DETECTED = 508,\r\n\r\n    /**\r\n     * Further extensions to the request are required for the server to fulfill it.\r\n     */\r\n    NOT_EXTENDED = 510,\r\n\r\n    /**\r\n     * The client needs to authenticate to gain network access.\r\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n     */\r\n    NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {RequestResponse, TokenDto} from \"./dto\";\r\n\r\n// Request-related types\r\ntype Primitive = string | number | boolean | Primitive[] | undefined;\r\ntype URLParams = {[key: string]: Primitive};\r\ntype URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    authToken: TokenDto | null | undefined = undefined,\r\n    verbose = false,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (authToken !== undefined) {\r\n        if (authToken === null) {\r\n            console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {errorType: \"error.no-auth\", description: \"Endpoint requires authentication\", status: 401};\r\n        } else headers.Authorization = `Bearer ${authToken.accessToken}`;\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n    let response: Response | null = null;\r\n\r\n    try {\r\n        if (verbose) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        let json = {status: response.status, data: {}};\r\n        if (response.status !== HttpStatusCode.NO_CONTENT) json = {...json, ...(await response.json())};\r\n\r\n        if (verbose) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        console.error(\r\n            `An unexpected error occured with a request to ${endpoint}. ` +\r\n                `Method = ${method}, authToken = ${authToken}, params=${JSON.stringify(params)}, ` +\r\n                `body=${JSON.stringify(body)}`,\r\n        );\r\n        console.error(error);\r\n        console.error(\"Response received from server:\", response);\r\n        return {errorType: \"error.unknown\", description: \"A client-side exception was raised.\", status: 400};\r\n    }\r\n}\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {\r\n    InterestDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    RemoteValidationErrors,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {ChatRoom, ChatRoomUser} from \"../model/chat-room\";\r\nimport {UserSettings} from \"../model/user-settings\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\n\r\nexport type FailableActionReturn = {success: boolean; errors?: string[]};\r\nexport type FailableThunkAction = AppThunk<Promise<FailableActionReturn>>;\r\nexport type ValidatedActionReturn = {success: boolean; errors?: RemoteValidationErrors};\r\nexport type ValidatedThunkAction = AppThunk<Promise<ValidatedActionReturn>>;\r\n\r\nexport type PaginatedState = {page: number; canFetchMore: boolean; fetching: boolean};\r\nexport const initialPaginatedState = (): PaginatedState => ({page: 1, canFetchMore: true, fetching: false});\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    type: Role | null;\r\n    degree: Degree | null;\r\n    staffRoles: {[key: string]: boolean};\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n    onboardingIndex: number;\r\n};\r\n\r\nexport type SettingsState = {\r\n    userSettings: UserSettings;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n    previousVersion: string | null;\r\n    isFirstLaunch: boolean;\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    fetchedProfiles: UserProfile[];\r\n    profilesPagination: PaginatedState;\r\n    historyPagination: PaginatedState;\r\n    historyFilters: {[key: string]: boolean};\r\n    historyItems: MatchHistoryItem[];\r\n    myMatches: UserProfile[];\r\n    fetchingMyMatches: boolean;\r\n};\r\n\r\nexport type MessagingState = {\r\n    socketState: {connecting: boolean; connected: boolean};\r\n    matchRooms: {[key: string]: ChatRoom}; // store by id for faster access\r\n    matchRoomsOrdered: string[];\r\n    matchRoomsPagination: PaginatedState;\r\n    activeRoom: ChatRoom | null;\r\n    localChatUser: ChatRoomUser | null;\r\n    fetchingNewMessages: boolean;\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type NotificationsState = {};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport type ReportsState = {};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n    messaging: MessagingState;\r\n    notifications: NotificationsState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {\r\n    ChatRoomProfileDto,\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    MatchHistoryItemDto,\r\n    OfferValueDto,\r\n    ResponseChatMessageDto,\r\n    ResponseProfileDto,\r\n    ResponseProfileDtoStaff,\r\n    ResponseProfileDtoStudent,\r\n    ResponseRoomDto,\r\n    ResponseUserDto,\r\n    ResponseProfileWithMatchInfoDto,\r\n} from \"./dto\";\r\nimport {\r\n    UserProfile,\r\n    UserProfileCommon,\r\n    UserProfileStaff,\r\n    UserProfileStudent,\r\n    UserProfileWithMatchInfo,\r\n} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../model/chat-room\";\r\nimport {initialPaginatedState} from \"../state/types\";\r\nimport {Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport {PARTNER_UNIVERSITIES} from \"../constants/universities\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    const common: UserProfileCommon = {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: (dto.interests || []).map((i) => i.id),\r\n        languages: dto.languages || [],\r\n        university: PARTNER_UNIVERSITIES.find((u) => u.key === dto.university) || PARTNER_UNIVERSITIES[0],\r\n    };\r\n\r\n    let complete: UserProfile;\r\n    if (dto.type === \"staff\") {\r\n        const staffDto = dto as ResponseProfileDtoStaff;\r\n        complete = {...common, staffRoles: (staffDto.staffRoles || []).map((r) => r.id as StaffRole)};\r\n    } else {\r\n        const studentDto = dto as ResponseProfileDtoStudent;\r\n        complete = {...common, degree: studentDto.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        interests: profile.interests.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    let complete: CreateProfileDto;\r\n    if (profile.type === \"staff\") {\r\n        const staff = profile as UserProfileStaff;\r\n        complete = {...common, staffRoles: staff.staffRoles.map((id: string) => ({id}))};\r\n    } else {\r\n        const student = profile as UserProfileStudent;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(\r\n    profile: Partial<UserProfile>,\r\n    type?: Role,\r\n): Partial<CreateProfileDto> {\r\n    const common: Partial<CreateProfileDtoCommon> = {\r\n        ...profile,\r\n        type,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        interests: profile.interests?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n\r\n    let complete: Partial<CreateProfileDto>;\r\n    if (type === \"staff\") {\r\n        const staff = profile as Partial<UserProfileStaff>;\r\n        complete = {...common, staffRoles: staff.staffRoles ? staff.staffRoles.map((id: string) => ({id})) : undefined};\r\n    } else {\r\n        const student = profile as Partial<UserProfileStudent>;\r\n        complete = {...common, degree: student.degree};\r\n    }\r\n\r\n    return complete;\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToRoom(dto: ResponseRoomDto): ChatRoom {\r\n    const users: ChatRoomUser[] = dto.profiles.map((p: ChatRoomProfileDto) => ({\r\n        _id: p.id,\r\n        name: `${p.firstName} ${p.lastName}`,\r\n        avatar: p.avatar || \"\",\r\n        lastMessageSeenId: p.lastMessageSeenId,\r\n        lastMessageSeenDate: p.lastMessageSeenDate ? new Date(p.lastMessageSeenDate) : null,\r\n    }));\r\n\r\n    // Try to find the sender of the last message in the list of users that are in the room\r\n    let lastMessage = null;\r\n    if (dto.lastMessage) {\r\n        const msg: ResponseChatMessageDto = dto.lastMessage;\r\n        const sender = users.find((u) => u._id == msg.senderId);\r\n        if (sender) lastMessage = convertDtoToChatMessage(sender, msg);\r\n    }\r\n\r\n    return {\r\n        ...dto,\r\n        users,\r\n        messages: [],\r\n        lastMessage,\r\n        writing: {},\r\n        messagePagination: initialPaginatedState(),\r\n    };\r\n}\r\n\r\nexport function convertDtoToChatMessage(user: ChatRoomUser, dto: ResponseChatMessageDto): ChatRoomMessage {\r\n    return {\r\n        ...dto,\r\n        _id: dto.id,\r\n        createdAt: new Date(dto.updatedAt),\r\n        user,\r\n    };\r\n}\r\n\r\nexport function convertDtoToHistoryItem(dto: MatchHistoryItemDto): MatchHistoryItem {\r\n    return {\r\n        profile: convertDtoToProfile(dto.profile),\r\n        status: dto.status,\r\n        date: new Date(dto.date),\r\n        id: dto.id,\r\n    };\r\n}\r\n\r\nexport function convertDtoToProfileWithMatchInfo(dto: ResponseProfileWithMatchInfoDto): UserProfileWithMatchInfo {\r\n    return {\r\n        ...dto,\r\n        profile: convertDtoToProfile(dto.profile),\r\n    };\r\n}\r\n","import {AppThunk} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    RequestResponse,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n    SignedUrlResponseDto,\r\n    SuccessfulRequestResponse,\r\n    ResponseProfileWithMatchInfoDto,\r\n} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {\r\n    convertDtoToProfile,\r\n    convertDtoToProfileWithMatchInfo,\r\n    convertDtoToUser,\r\n    convertPartialProfileToCreateDto,\r\n} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {readCachedStaticData} from \"../persistent-storage/static\";\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_FAILURE = \"PROFILE/SET_FIELDS_FAILURE\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    FETCH_PROFILE_SUCCESS = \"PROFILE/FETCH_PROFILE_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type SetProfileFieldsFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\n\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type FetchProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfileWithMatchInfo;\r\n};\r\n\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\n\r\nexport type SetAvatarFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | SetProfileFieldsFailureAction\r\n    | SetProfileFieldsSuccessAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | FetchProfileSuccessAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\nconst setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nconst setProfileFieldsFailure = (): SetProfileFieldsFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_FAILURE,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const type = getState().profile.user?.profile?.type;\r\n\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields, type);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(setProfileFieldsSuccess(fields));\r\n    else dispatch(setProfileFieldsFailure());\r\n};\r\n\r\nconst createProfileSuccess = (profile: UserProfile): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, token);\r\n    if (response.status === HttpStatusCode.CREATED) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profile = convertDtoToProfile(payload as ResponseProfileDto);\r\n        dispatch(createProfileSuccess(profile));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"offers\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const offers = payload as OfferDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = offers.length == 0;\r\n                dispatch(loadProfileOffersSuccess(cacheIsGood ? fromCache.data : offers, cacheIsGood));\r\n            } else dispatch(loadProfileOffersSuccess(offers));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"interests\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const interests = payload as InterestDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = interests.length == 0;\r\n                dispatch(loadProfileInterestsSuccess(cacheIsGood ? fromCache.data : interests, cacheIsGood));\r\n            } else dispatch(loadProfileInterestsSuccess(interests));\r\n        }\r\n    });\r\n};\r\n\r\nconst loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const user = convertDtoToUser(payload as ResponseUserDto);\r\n        dispatch(fetchUserSuccess(user));\r\n    }\r\n};\r\n\r\nconst fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const fetchProfile = (id: string): AppThunk<Promise<UserProfileWithMatchInfo | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(`profiles/${id}`, \"GET\", {}, {}, token, true);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as ResponseProfileWithMatchInfoDto;\r\n        const profileWithMatchInfo = convertDtoToProfileWithMatchInfo(payload);\r\n        dispatch(fetchProfileSuccess(profileWithMatchInfo));\r\n        return profileWithMatchInfo;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst fetchProfileSuccess = (profile: UserProfileWithMatchInfo): FetchProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nconst setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nconst setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, token);\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {fileName, s3Url} = payload as SignedUrlResponseDto;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(s3Url, {\r\n                method: \"PUT\",\r\n                body: imageBlob,\r\n            });\r\n\r\n            // Submit the file name to the server\r\n            const response2 = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, token);\r\n\r\n            if (response2.status === HttpStatusCode.OK) {\r\n                const payload2 = (response2 as SuccessfulRequestResponse).data;\r\n                const {avatar} = payload2 as AvatarSuccessfulUpdatedDto;\r\n                dispatch(setAvatarSuccess(avatar));\r\n            } else fail();\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            fail();\r\n        }\r\n    } else fail();\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n * @param cookieConsent - Whether or not the user has agreed to storing this type of data. This is here so we don't forget.\r\n */\r\nexport function storeStaticData<T>(key: string, data: T, cookieConsent: boolean): void {\r\n    if (cookieConsent) {\r\n        console.log(`Updating static storage '${key}'.`);\r\n\r\n        // Store the data along with the date\r\n        const storageObject = {\r\n            updatedAt: new Date().toJSON(),\r\n            data,\r\n        };\r\n\r\n        AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n    }\r\n}\r\n\r\n/**\r\n * Clear the data at the given keys from persistent storage.\r\n * @param keys - The keys to clear.\r\n */\r\nexport function clearStaticData<T>(...keys: string[]): void {\r\n    console.log(`Clearing static storage: ${keys.map((s) => `'${s}'`).join(\", \")}.`);\r\n    AsyncStorage.multiRemove(keys);\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {AppThunk, OnboardingState, ValidatedThunkAction} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, SuccessfulRequestResponse, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {readCachedCredentials} from \"../persistent-storage/auth\";\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    BEGIN_ONBOARDING = \"AUTH/BEGIN_ONBOARDING\",\r\n    NEXT_ONBOARDING_SLIDE = \"AUTH/NEXT_ONBOARDING_SLIDE\",\r\n    PREVIOUS_ONBOARDING_SLIDE = \"AUTH/PREVIOUS_ONBOARDING_SLIDE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n    DELETE_ACCOUNT_SUCCESS = \"AUTH/DELETE_ACCOUNT_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type RegisterSuccessAction = {type: string; user: User};\r\n\r\nexport type RegisterFailureAction = {type: string};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\n\r\nexport type LogOutAction = {type: string; redirect: boolean};\r\n\r\nexport type LogInFailureAction = {type: string};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ValidateAccountFailureAction = {type: string};\r\n\r\nexport type BeginOnboardingAction = {\r\n    type: string;\r\n};\r\n\r\nexport type NextOnboardingSlideAction = {\r\n    type: string;\r\n};\r\n\r\nexport type PreviousOnboardingSlideAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {type: string};\r\n\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {type: string};\r\n\r\nexport type DeleteAccountSuccessAction = {type: string};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction\r\n    | DeleteAccountSuccessAction;\r\n\r\n// Register actions\r\n\r\nconst registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = getState().settings.userSettings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const successResp = response as SuccessfulRequestResponse;\r\n        dispatch(registerSuccess(successResp.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nconst registerFailure = (): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n});\r\n\r\n// Log in actions\r\n\r\nconst loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nconst loginFailure = (): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<User | undefined>> => async (\r\n    dispatch,\r\n): Promise<User | undefined> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n\r\n        if (response.status == HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data as ResponseUserDto;\r\n            const user = convertDtoToUser(payload);\r\n            dispatch(loginSuccess(token, user, true));\r\n            return user;\r\n        } else dispatch(loginFailure()); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return undefined;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, convertDtoToUser(payload.user), false));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(loginFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const logout = (redirect = true): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n    redirect,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {email} = payload as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure());\r\n    }\r\n};\r\n\r\nconst validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst validateAccountFailure = (): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(forgotPasswordFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nconst forgotPasswordFailure = (): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\nexport const deleteAccount = (password: string): ValidatedThunkAction => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"users\", \"DELETE\", {}, {password}, token, true);\r\n\r\n    if (response.status == HttpStatusCode.NO_CONTENT) {\r\n        dispatch(logout(false));\r\n        dispatch(deleteAccountSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nconst deleteAccountSuccess = (): DeleteAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const beginOnboarding = (): BeginOnboardingAction => ({\r\n    type: AUTH_ACTION_TYPES.BEGIN_ONBOARDING,\r\n});\r\n\r\nexport const nextOnboardingSlide = (): NextOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const previousOnboardingSlide = (): PreviousOnboardingSlideAction => ({\r\n    type: AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE,\r\n});\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch, getState) => {\r\n    const n = Math.round(1e3 * Math.random());\r\n    const email = `test${n}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"staff\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + n,\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [{id: \"baking\"}, {id: \"art\"}, {id: \"brunch\"}],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"answer-academic-questions\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [{id: \"education-science\"}, {id: \"music-performing-arts\"}],\r\n                //degree: \"m2\",\r\n                staffRoles: [{id: \"research\"}, {id: \"teaching\"}],\r\n            }),\r\n        );\r\n    }\r\n};\r\n","import i18n from \"i18n-js\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {ErrorRequestResponse, RemoteValidationErrors, RequestResponse, UnprocessableEntityRequestResponse} from \"./dto\";\r\n\r\nexport const localizeError = (err: string): string => i18n.t(err, {defaultValue: err});\r\n\r\nconst extractError = ({code, description}: {code: string; description: string}): string => {\r\n    const isMissingLocalization = i18n.t(code, {defaultValue: \"missing\"}) == \"missing\";\r\n    return isMissingLocalization ? description : code;\r\n};\r\n\r\nexport function gatherValidationErrors(resp: RequestResponse): RemoteValidationErrors | undefined {\r\n    if (resp.status == HttpStatusCode.OK) return undefined;\r\n    else {\r\n        const {errorType, description} = resp as ErrorRequestResponse;\r\n        const output: RemoteValidationErrors = {general: extractError({code: errorType, description}), fields: {}};\r\n        if (resp.status == HttpStatusCode.UNPROCESSABLE_ENTITY) {\r\n            const {errors} = resp as UnprocessableEntityRequestResponse;\r\n            //errors.forEach((e) => (output.fields[e.property] = e.codes.map(extractError)));\r\n            // Only keep the first error (makes displaying errors a lot easier)\r\n            errors.forEach((e) => (output.fields[e.property] = extractError(e.codes[0])));\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the non-specific error field from remote errors. If field-specific errors are available, yields undefined instead.\r\n * @param errors - Remote validation errors.\r\n */\r\nexport function generalError(errors?: RemoteValidationErrors): string | undefined {\r\n    if (!errors) return undefined;\r\n    else if (Object.keys(errors.fields).length > 0) return undefined;\r\n    else return errors.general;\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {TokenDto} from \"../../api/dto\";\r\nimport {CredentialsStorageObject} from \"../../types\";\r\n\r\n/**\r\n * Override auth information in secure.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nexport function storeAuthInformation(email: string, token: TokenDto): void {\r\n    const toStore: CredentialsStorageObject = {email, token};\r\n    AsyncStorage.setItem(\"auth\", JSON.stringify(toStore));\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from storage.\r\n */\r\nexport function discardAuthInformation(): void {\r\n    AsyncStorage.removeItem(\"auth\");\r\n}\r\n\r\n/**\r\n * Read auth information from storage.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const raw = await AsyncStorage.getItem(\"auth\");\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\nimport {CookiesPreferences} from \"../../model/user-settings\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n    LOAD_COOKIES_PREFERENCES = \"SETTINGS/LOAD_COOKIES_PREFERENCES\",\r\n    SAVE_COOKIES_PREFERENCES = \"SETTINGS/SAVE_COOKIES_PREFERENCES\",\r\n    LOAD_VERSION_INFO = \"SETTINGS/LOAD_VERSION_INFO\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n    fromCache?: boolean;\r\n};\r\n\r\nexport type LoadCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n    consentDate: Date;\r\n};\r\n\r\nexport type SaveCookiesPreferencesAction = {\r\n    type: string;\r\n    preferences: CookiesPreferences;\r\n};\r\n\r\nexport type LoadVersionInfoAction = {\r\n    type: string;\r\n    version: string | null;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction | LoadCookiesPreferencesAction | LoadVersionInfoAction;\r\n\r\nexport const setTheme = (theme: ThemeKey, fromCache?: boolean): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme, fromCache} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale, fromCache?: boolean): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_LOCALE, locale, fromCache} as SetLocaleAction;\r\n};\r\n\r\nexport const loadCookiesPreferences = (\r\n    preferences: CookiesPreferences,\r\n    consentDate: Date,\r\n): LoadCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES,\r\n    preferences,\r\n    consentDate,\r\n});\r\n\r\nexport const saveCookiesPreferences = (preferences: CookiesPreferences): SaveCookiesPreferencesAction => ({\r\n    type: SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES,\r\n    preferences,\r\n});\r\n\r\nexport const loadVersionInfo = (version: string | null): LoadVersionInfoAction => ({\r\n    type: SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO,\r\n    version,\r\n});\r\n\r\nexport const acceptAllCookies = (): AppThunk => async (dispatch) => {\r\n    dispatch(saveCookiesPreferences({auth: true, cache: true, settings: true}));\r\n};\r\n","import {OfferValueDto} from \"../api/dto\";\r\nimport {UserProfile} from \"./user-profile\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Filter only the offers that match a given profile.\r\n * @param offers A list of offer values.\r\n * @param profile A profile\r\n * @returns the offers that target the given profile.\r\n */\r\nexport function getMatchingOffers(offers: OfferValueDto[], profile: UserProfile): OfferValueDto[] {\r\n    return offers.filter((o: OfferValueDto) => {\r\n        if (\r\n            (!o.allowFemale && profile.gender === \"female\") ||\r\n            (!o.allowMale && profile.gender === \"male\") ||\r\n            (!o.allowOther && profile.gender === \"other\") ||\r\n            (!o.allowStaff && profile.type === \"staff\") ||\r\n            (!o.allowStudent && profile.type === \"student\")\r\n        )\r\n            return false;\r\n        return true;\r\n    });\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {AuthState, OnboardingState} from \"../types\";\r\nimport {\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n} from \"./actions\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    type: null,\r\n    degree: null,\r\n    staffRoles: {},\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n    onboardingIndex: 0,\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = <RegisterBeginAction>action;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = <RegisterSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = <ValidateAccountSuccessAction>action;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = <LogInSuccessAction>action;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            return {...state, onboardingIndex: 0};\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex - 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            return {...state, onboardingIndex: state.onboardingIndex + 1};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = <SetOnboardingValuesAction>action;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = <SetOnboardingOfferValueAction>action;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole = \"teaching\" | \"research\" | \"administration\" | \"technical\" | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\"teaching\", \"research\", \"administration\", \"technical\", \"other\"];\r\n\r\n// MaterialIcons\r\nexport const STAFF_ROLE_ICONS = [\"school\", \"library-books\", \"account-balance\", \"build\", \"help\"];\r\n// \"verified-user\" icon for ambassadors?\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 16;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().nullable().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n","import {MIN_PASSWORD_LENGTH} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        locales: {\r\n            en: \"English\",\r\n            fr: \"French\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Search\",\r\n        send: \"Send\",\r\n        cancel: \"Cancel\",\r\n        ok: \"OK\",\r\n        save: \"Save\",\r\n        noResultsFound: \"No results found\",\r\n        apply: \"Apply\",\r\n        logOut: \"Log out\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Log in\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        forgotPassword: \"Forgot Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        newPassword: \"New Password\",\r\n        signupWelcome: \"We can't wait for you to join our community!\",\r\n        createAccount: \"Create account\",\r\n        // Email validation screen\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\",\r\n                disclaimer2: \"Declining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms & conditions \", \"here\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Please select at least one language.\",\r\n                specifyLevel: \"Please specify a level for your languages.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"You must be 16 or older to join this platform.\",\r\n                invalid: \"Please enter a valid date.\",\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"This account's email address has not been verified yet.\",\r\n            user_not_found: \"User not found.\",\r\n            email_or_password_incorrect: \"Incorrect email or password.\",\r\n            reset_password_no_token: \"Could not fulfill this request.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"This email address is already in use.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Please provide a valid email address.\",\r\n                    is_sea_email_constraint: \"Your email address must match one of our partner universities.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"My Profile\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offers\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            research: \"Research\",\r\n            administration: \"Administration\",\r\n            technical: \"Technical\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Native\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Fields of education\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"care-elderly-disabled-adults\": \"Care of the elderly and of disabled adults\",\r\n            \"child-care-youth-services\": \"Child care and youth services\",\r\n            \"social-work-counselling\": \"Social work and counselling\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page not found.\",\r\n            subtitle: \"This page doesn't exist.\",\r\n            redirect: \"Go to home screen\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profile\",\r\n            },\r\n            profile2: {\r\n                title: \"Languages & Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff roles\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            legal1: {\r\n                title: \"Terms & Conditions\",\r\n                text:\r\n                    \"As explained in details in our Terms & Conditions, you agree to use «SEA-EU Around» and its services only to be put into contact, on a non-business and non-profit basis, with people wishing to meet, collaborate and interact online or in the frame of a mobility. You commit to carry out respectful exchanges with other members. Your name and surname will be visible by other members.\",\r\n            },\r\n            legal2: {\r\n                title: \"Data Policy\",\r\n                text:\r\n                    \"In the context of your use of SEA-EU Around, you will provide some personal data to create your profile as further explained in our Terms & Conditions. This data is collected and processed by UBO through SEA-EU Around in order to enable matching among Members, according to needs/offers and interests defined by Members of SEA-EU Around. Your data will be visible only by  other Members.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"I acknowledge that cookies might be used. The information is kept only for application purposes and does not permit to identify the Member except for the cookie enabling UBO to re-authenticate the Member on its arrival on SEA-EU Around, saving the Member from having to re-enter their password at each connection.\",\r\n            },\r\n            back: \"Back\",\r\n            next: \"Next\",\r\n            leave: \"Leave\",\r\n            submit: \"Submit\",\r\n            success: {\r\n                title: \"Nice to meet you!\",\r\n                subtitle: \"Your profile is now created.\",\r\n                button: \"Get Started\",\r\n            },\r\n            quit: {\r\n                title: \"Quit on-boarding\",\r\n                text: \"Do you really wish to leave? You can resume later.\",\r\n                cancel: \"Cancel\",\r\n                yes: \"Yes\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activism\",\r\n            art: \"Art\",\r\n            astrology: \"Astrology\",\r\n            baking: \"Baking\",\r\n            bbq: \"BBQ\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Board games\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n            climbing: \"Climbing\",\r\n            coffee: \"Coffee\",\r\n            comedy: \"Comedy\",\r\n            cooking: \"Cooking\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Cycling\",\r\n            dancing: \"Dancing\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            environmentalism: \"Environmentalism\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            foodie: \"Foodie\",\r\n            football: \"Football\",\r\n            gamer: \"Gamer\",\r\n            gardening: \"Gardening\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            guitar: \"Guitar\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Hiking\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investing\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Language exchange\",\r\n            movies: \"Movies\",\r\n            museum: \"Museum\",\r\n            music: \"Music\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Outdoors\",\r\n            parties: \"Parties\",\r\n            photography: \"Photography\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Picnicking\",\r\n            \"playing-music\": \"Playing music\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politics\",\r\n            reading: \"Reading\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Running\",\r\n            sailing: \"Sailing\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboarding\",\r\n            skiing: \"Skiing\",\r\n            sneakers: \"Sneakers\",\r\n            snowboarding: \"Snowboarding\",\r\n            spirituality: \"Spirituality\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surfing\",\r\n            swimming: \"Swimming\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tattoos\",\r\n            tea: \"Tea\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Theater\",\r\n            travel: \"Travel\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Vegetarian\",\r\n            volunteering: \"Volunteering\",\r\n            walking: \"Walking\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            wine: \"Wine\",\r\n            \"working-out\": \"Working out\",\r\n            writer: \"Writing\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"I am open to...\",\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Target genders\",\r\n            roles: \"Target positions\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Provide a couch\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Get into campus life\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Co-work on a project\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Answer academic questions\",\r\n                help: \"I can give information about my university or answer to general academic questions.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Share interests\",\r\n                help: \"I would like to chat with other users about common interests.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Join a language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            text: \"Are you sure you want to unmatch {{firstname}}? You will not be able to communicate anymore.\",\r\n            blockQuestion: \"If you don't want {{firstname}} to be able to find you anymore, you can also block them:\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            warning:\r\n                \"Are you sure you want to block this user? You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            subtitle: \"Join an alliance united around the values of European identity.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Welcome Back!\",\r\n            titleFirstLaunch: \"Welcome!\",\r\n            logIn: \"Log in\",\r\n            signUp: \"Sign up\",\r\n            or: \"or\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"We use cookies to provide you with the best possible user experience.\\nOur usage of cookies includes caching data for faster loading, storing your preferences and authentication. We do not collect any information that could be used for tracking or advertising.\",\r\n            acceptAll: \"Accept cookies\",\r\n            customize: \"Customize\",\r\n            preferences: {\r\n                text:\r\n                    \"We offer you the ability to choose what information will be stored on your device when using SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentication\",\r\n                    description: \"Store information used to sign-in automatically when starting the app.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Store some data on your device (less than 1MB) for faster loading.\",\r\n                },\r\n                settings: {name: \"Settings\", description: \"Store your settings (e.g. theme and locale).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Bug report from the app\",\r\n            mailTitle: \"Description of the bug (with steps to reproduce it if possible):\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Report\",\r\n            send: \"Send\",\r\n            cancel: \"Cancel\",\r\n            what: \"What / who?\",\r\n            why: \"Why?\",\r\n            typePlaceholder: \"Select a reason\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudity\",\r\n                harassment: \"Harassment\",\r\n                \"undesirable-content\": \"Undesirable content\",\r\n                \"hate-speech\": \"Hate speech\",\r\n                \"vulgar-content\": \"Vulgar content\",\r\n                other: \"Other\",\r\n            },\r\n            confirmationTitle: \"Thank you\",\r\n            confirmation: \"An administrator will investigate your report shortly.\",\r\n            failureTitle: \"Sorry\",\r\n            failure: \"We are unable to fulfill your request.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions: \"To choose a new password, click the link in the email we just sent you.\",\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: \"Your password has been updated.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Delete your account\",\r\n            warning:\r\n                \"Your account and all associated data will be deleted within six months. Please be aware that after this time, your account will be irreversibly deleted. If you sign in before the end however, the deletion will be cancelled.\",\r\n            button: \"Delete\",\r\n            success1: \"Your request has been received and will be processed shortly.\",\r\n            success2: \"We are sorry to see you go.\",\r\n            leave: \"Leave\",\r\n            inputLabel: \"Enter password to confirm\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n            sayHi: \"Say hi\",\r\n            sayHiTo: \"Say hi to {{name}}!\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noMoreItems: \"No more profiles to show\",\r\n            noItemsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match!\",\r\n                offersTitle: \"Open to:\",\r\n                offersMore: \"more\",\r\n                chat: \"Chat\",\r\n                continue: \"Continue\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liked\",\r\n                    declined: \"Hidden\",\r\n                    blocked: \"Blocked\",\r\n                },\r\n                actions: {\r\n                    report: \"Report\",\r\n                    cancel: {\r\n                        requested: \"Cancel like\",\r\n                        declined: \"Cancel hide\",\r\n                        blocked: \"Cancel block\",\r\n                    },\r\n                    block: \"Block\",\r\n                },\r\n                noResults: \"No results found\",\r\n                noResultsAdvice: \"Perhaps try removing some filters\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            action: {\r\n                chat: \"Chat\",\r\n                mute: \"Mute\",\r\n                block: \"Block\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Report\",\r\n            },\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Welcome\",\r\n            SigninScreen: \"Login\",\r\n            ForgotPasswordScreen: \"Forgot Password\",\r\n            SignupScreen: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingProfileScreen1: \"Profile\",\r\n            OnboardingProfileScreen2: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingLegalScreen1: \"Terms & Conditions\",\r\n            OnboardingLegalScreen2: \"Terms & Conditions\",\r\n            OnboardingLegalScreen3: \"Terms & Conditions\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Add Filters\",\r\n            MatchHistoryScreen: \"History\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profile\",\r\n            ProfileScreen: \"Profile\",\r\n            SettingsScreen: \"Settings\",\r\n            DeleteAccountScreen: \"Delete Account\",\r\n            DeleteAccountSuccessScreen: \"Account Deleted\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ResetPasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"General\",\r\n                danger: \"Danger zone\",\r\n                about: \"About\",\r\n            },\r\n            language: \"Language\",\r\n            darkTheme: \"Dark theme\",\r\n            deleteAccount: \"Delete Account\",\r\n            deleteMyAccount: \"Delete my account\",\r\n            version: \"Version\",\r\n            termsOfService: \"Terms of Service\",\r\n            reportABug: \"Report a Bug\",\r\n            logOut: \"Log out\",\r\n            customizeCookies: \"Customize cookies\",\r\n        },\r\n    },\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    // ################################################################################################################################################################################################\r\n    fr: {\r\n        locales: {\r\n            en: \"Anglais\",\r\n            fr: \"Français\",\r\n        },\r\n        appName: \"SEA-EU Around\",\r\n        // General translations\r\n        search: \"Rechercher\",\r\n        send: \"Envoyer\",\r\n        cancel: \"Annuler\",\r\n        ok: \"OK\",\r\n        save: \"Sauvegarder\",\r\n        noResultsFound: \"Aucun résultat\",\r\n        apply: \"Appliquer\",\r\n        logOut: \"Déconnexion\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"%d éléments\",\r\n        },\r\n        // Login and sign-up forms\r\n        login: \"Connexion\",\r\n        emailAddress: \"Adresse mail\",\r\n        password: \"Mot de passe\",\r\n        passwordRepeat: \"Répéter le mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        forgotPasswordExplanation:\r\n            \"Entrez l'adresse mail associée à votre compte ci-dessous. Vous recevrez sous peu des instructions pour choisir un nouveau mot de passe.\",\r\n        newPassword: \"Nouveau mot de passe\",\r\n        signupWelcome: \"Nous vous attendons avec impatience!\",\r\n        createAccount: \"Créer le compte\",\r\n        // Email validation screen\r\n        emailValidation: {\r\n            validating: \"Validation\",\r\n            success: [\"Le compte est désormais validé. Vous pouvez maintenant vous \", \"connecter\"],\r\n        },\r\n        // Legal disclaimers\r\n        legal: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Vous ne pourrez pas utiliser nos services si vous choisissez de refuser les conditions d'utilisation.\",\r\n                disclaimer2: \"La création du profil sera annulé.\",\r\n            },\r\n            decline: \"Refuser\",\r\n            accept: \"Accepter\",\r\n            readMore: [\"Une version complète des conditions d'utilisation est disponible \", \"ici\", \".\"],\r\n        },\r\n        // Client-side validation strings\r\n        validation: {\r\n            required: \"Champ requis.\",\r\n            atLeastOne: \"Sélectionner au moins un élément.\",\r\n            addAtLeastOne: \"Ajouter au moins un élément.\",\r\n            email: {\r\n                invalid: \"Adresse mail invalide.\",\r\n            },\r\n            password: {\r\n                tooShort: `Le mot de passe doit contenir au moins ${MIN_PASSWORD_LENGTH} caractères.`,\r\n                noDigit: \"Le mot de passe doit contenir au moins un chiffre.\",\r\n                noUpperCase: \"Le mot de passe doit contenir au moins une lettre majuscule.\",\r\n                noLowerCase: \"Le mot de passe doit contenir au moins une lettre minuscule.\",\r\n                noSymbol: \"Le mot de passe doit contenir au moins un symbole (#@$!%*?&).\",\r\n                repeatWrong: \"Ces mots de passe ne sont pas identiques.\",\r\n            },\r\n            language: {\r\n                atLeastOne: \"Sélectionnez au moins une langue.\",\r\n                specifyLevel: \"Spécifiez un niveau pour chaque langue.\",\r\n            },\r\n            date: {\r\n                tooYoung: \"Vous devez avoir au moins 16 ans pour rejoindre cette plateforme.\",\r\n                invalid: \"Date invalide.\",\r\n            },\r\n        },\r\n        // Server-side errors\r\n        error: {\r\n            error_user_not_verified: \"L'adresse mail de ce compte n'a pas encore été vérifiée.\",\r\n            user_not_found: \"Utilisateur introuvable.\",\r\n            email_or_password_incorrect: \"Adresse mail ou mot de passe incorrect.\",\r\n            reset_password_no_token: \"Cette requête n'a pas pu être traitée.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"Cette adresse mail est déjà utilisée.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Adresse mail invalide.\",\r\n                    is_sea_email_constraint: \"L'adresse mail doit corresoindre à une de nos universités partenaires.\",\r\n                },\r\n            },\r\n        },\r\n        // General translations related to the profile\r\n        myProfile: \"Mon Profil\",\r\n        firstname: \"Prénom\",\r\n        lastname: \"Nom\",\r\n        nationality: \"Nationalité\",\r\n        university: \"Université\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        offers: \"Offres\",\r\n        allRoles: {\r\n            student: \"Étudiant\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Enseignement\",\r\n            research: \"Recherche\",\r\n            administration: \"Administration\",\r\n            technical: \"Technique\",\r\n            other: \"Autre\",\r\n        },\r\n        gender: \"Genre\",\r\n        genders: {\r\n            male: \"Homme\",\r\n            female: \"Femme\",\r\n            other: \"Autre\",\r\n        },\r\n        dateOfBirth: \"Date de naissance\",\r\n        months: {\r\n            0: \"Janvier\",\r\n            1: \"Février\",\r\n            2: \"Mars\",\r\n            3: \"Avril\",\r\n            4: \"Mai\",\r\n            5: \"Juin\",\r\n            6: \"Juillet\",\r\n            7: \"Août\",\r\n            8: \"Septembre\",\r\n            9: \"Octobre\",\r\n            10: \"Novembre\",\r\n            11: \"Decembre\",\r\n        },\r\n        spokenLanguages: \"Langues parlées\",\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"Natif\",\r\n        },\r\n        levelOfStudy: \"Niveau d'études\",\r\n        degrees: {\r\n            bsc1: \"BSc1\",\r\n            bsc2: \"BSc2\",\r\n            bsc3: \"BSc3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        // Education fields\r\n        fieldsOfEducation: \"Domaines d'études\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d selectionnés\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Programmes et certifications génériques\",\r\n            education: \"Éducation\",\r\n            \"arts-humanities\": \"Lettres et arts\",\r\n            \"social-sciences-journalism-information\": \"Sciences sociales, journalisme et information\",\r\n            \"business-administration-law\": \" Commerce, administration et droit\",\r\n            \"natural-sciences-mathematics-statistics\": \"Sciences naturelles, mathématiques et statistiques\",\r\n            \"information-communication-technologies\": \"Technologies de l’information et de la communication\",\r\n            \"engineering-manufacturing-construction\": \"Ingénierie, industries de transformation et construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\":\r\n                \"Agriculture, sylviculture, halieutique et sciences vétérinaires\",\r\n            \"health-welfare\": \"Santé et protection sociale\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Programmes et certifications de base\",\r\n            \"literacy-numeracy\": \"Alphabétisation et apprentissage du calcul\",\r\n            \"personal-skills-development\": \"Compétences et développement personnels\",\r\n            \"education-science\": \"Sciences de l’éducation\",\r\n            \"training-for-pre-school-teachers\": \"Formation des enseignants au niveau préscolaire\",\r\n            \"teacher-training-without-subject-specialisation\": \"Formation des enseignants sans spécialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Formation des enseignants avec spécialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Techniques audiovisuelles et production multimédia\",\r\n            \"fashion-interior-industrial-design\": \"Stylisme, décoration et design industriel\",\r\n            \"fine-arts\": \"Beaux-arts\",\r\n            handicrafts: \"Artisanat\",\r\n            \"music-performing-arts\": \"Musique, théâtre, danse, cirque\",\r\n            \"religion-theology\": \"Religion et théologie\",\r\n            \"history-archaeology\": \"Histoire et archéologie\",\r\n            \"philosophy-ethics\": \"Philosophie et morale\",\r\n            \"language-acquisition\": \"Acquisition d’une langue\",\r\n            \"literature-linguistics\": \"Littérature et linguistique\",\r\n            economics: \"Économie\",\r\n            \"political-sciences-civics\": \"Sciences politiques et éducation civique\",\r\n            psychology: \"Psychologie\",\r\n            \"sociology-cultural-studies\": \"Sociologie et études culturelles\",\r\n            \"journalism-reporting\": \"Journalisme et reportage\",\r\n            \"library-information-archival-studies\": \"Formation aux bibliothèques, à la documentation et à l’archivisme\",\r\n            \"accounting-taxation\": \"Comptabilité et fiscalité\",\r\n            \"finance-banking-insurance\": \"Finance, banque et assurances\",\r\n            \"management-administration\": \"Gestion et administration\",\r\n            \"marketing-advertising\": \"Marketing et publicité\",\r\n            \"secretarial-office-work\": \"Travail de secrétariat et de bureau\",\r\n            \"wholesale-retail-sales\": \"Vente en gros et au détail\",\r\n            \"work-skills\": \"Compétences professionnelles\",\r\n            law: \"Droit\",\r\n            biology: \"Biologie\",\r\n            biochemistry: \"Biochimie\",\r\n            \"environmental-sciences\": \"Sciences environnementales\",\r\n            \"natural-environments-wildlife\": \"Environnements naturels et faune et flore\",\r\n            chemistry: \"Chimie\",\r\n            \"earth-sciences\": \"Sciences de la Terre\",\r\n            physics: \"Physique\",\r\n            mathematics: \"Mathématiques\",\r\n            statistics: \"Statistiques\",\r\n            \"computer-use\": \"Utilisation d’un ordinateur\",\r\n            \"database-network-design-administration\": \"Conception et administration de bases de données et de réseau\",\r\n            \"software-applications-development-analysis\": \"Développement et analyse de logiciels et d’applications\",\r\n            \"chemical-engineering-processes\": \"Ingénierie chimique et processus\",\r\n            \"environmental-protection-technology\": \"Technologie de la protection de l’environnement\",\r\n            \"electricity-energy\": \"Électricité et énergie\",\r\n            \"electronics-automation\": \"Électronique et automatisation\",\r\n            \"mechanics-metal-trades\": \"Mécanique et techniques apparentées\",\r\n            \"motor-vehicles-ships-aircraft\": \"Véhicules à moteur, bateaux et aéronefs\",\r\n            \"food-processing\": \"Traitement des aliments\",\r\n            materials: \"Matériaux (verre, papier, plastique et bois)\",\r\n            textiles: \"Textiles (vêtements, chaussures et cuir)\",\r\n            \"mining-extraction\": \"Exploitation minière et extraction\",\r\n            \"architecture-town-planning\": \"Architecture et urbanisme\",\r\n            \"building-civil-engineering\": \"Construction et génie civil\",\r\n            \"crop-livestock-production\": \"Culture et élevage\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Sylviculture\",\r\n            fisheries: \"Halieutique\",\r\n            veterinary: \"Sciences vétérinaires\",\r\n            \"dental-studies\": \"Études dentaires\",\r\n            medicine: \"Médecine\",\r\n            \"nursing-midwifery\": \"Soins infirmiers et formation de sages-femmes\",\r\n            \"medical-diagnostic-treatment-technology\": \"Diagnostic médical et technologie de traitement\",\r\n            \"therapy-rehabilitation\": \"Thérapie et rééducation\",\r\n            pharmacy: \"Pharmacie\",\r\n            \"traditional-complementary-medicine-therapy\": \"Médecine et thérapies traditionnelles et complémentaires\",\r\n            \"care-elderly-disabled-adults\": \"Soins gérontologiques et aux adultes handicapés\",\r\n            \"child-care-youth-services\": \"Soins aux enfants et à la jeunesse\",\r\n            \"social-work-counselling\": \"Travail social et orientation\",\r\n            \"domestic-services\": \"Services domestiques\",\r\n            \"hair-beauty-services\": \"Services de soins de beauté et de coiffure\",\r\n            \"hotel-restaurants-catering\": \"Hôtellerie et services de restauration\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Voyage, tourisme et loisirs\",\r\n            \"community-sanitation\": \"Salubrité publique\",\r\n            \"occupational-health-safety\": \"Santé et sécurité au travail\",\r\n            \"military-defence\": \"Sécurité militaire et défense\",\r\n            \"protection-of-persons-property\": \"Protection des biens et des personnes\",\r\n            \"transport-services\": \"Services de transport\",\r\n        },\r\n        // 404 not found screen\r\n        notFoundScreen: {\r\n            title: \"404: Page introuvable.\",\r\n            subtitle: \"Cette page n'existe pas.\",\r\n            redirect: \"Aller à l'écran d'accueil\",\r\n        },\r\n        // University-related\r\n        universities: {\r\n            \"univ-cadiz\": \"Université de Cádiz\",\r\n            \"univ-brest\": \"Université de Bretagne Occidentale\",\r\n            \"univ-gdansk\": \"Université de Gdańsk\",\r\n            \"univ-malta\": \"Université de Malte\",\r\n            \"univ-kiel\": \"Université de Kiel\",\r\n            \"univ-split\": \"Université de Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        // On-boarding slides\r\n        onboarding: {\r\n            name: {\r\n                title: \"Bienvenue\",\r\n                subtitle:\r\n                    \"Avant de commencer, nous avons besoin d'en savoir un peu plus sur vous afin d'assurer les meilleures recommendations possibles.\",\r\n            },\r\n            profile1: {\r\n                title: \"Profil\",\r\n            },\r\n            profile2: {\r\n                title: \"Langues et Hobbies\",\r\n            },\r\n            role: {\r\n                title: \"Je suis un...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Étudiant\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Rencontrer\",\r\n                subtitle: \"Rencondrer des nouveaux amis dans la vraie vie.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Découvrir\",\r\n                subtitle: \"En apprendre plus sur d'autres cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborer\",\r\n                subtitle: \"Trouver d'autres personnes pour travailler sur des projets, académiques ou non.\",\r\n            },\r\n            legal1: {\r\n                title: \"Conditions d'utilisation\",\r\n                text:\r\n                    \"Comme précisé dans les conditions d’usage, vous acceptez d’utiliser « SEA-EU Around » et ses services pour être mis en relation avec d’autres personnes souhaitant se rencontrer, collaborer, ou interagir en ligne ou dans le cadre d’une mobilité, sur un principe non-commercial et non lucratif. Vous vous engagez à des échanges respectueux avec les autres membres. Vos noms et prénoms seront visibles des autres membres.\",\r\n            },\r\n            legal2: {\r\n                title: \"Politique des données\",\r\n                text:\r\n                    \"Dans le cadre de votre utilisation de SEA-EU Around, vous allez fournir des données personnelles afin de créer votre profil selon les conditions précisées dans les Conditions d’utilisation. Ces données sont collectées et traitées par l’UBO via l'application pour permettre la mise en relation entre membres, en fonctions des besoins, offres et intérêts qu’ils auront définis. Vos données ne seront visibles que par les autres membres.\",\r\n            },\r\n            legal3: {\r\n                title: \"Cookies\",\r\n                text:\r\n                    \"L’application peut utiliser les cookies. L’information est utilisée exclusivement dans le cadre du fonctionnement de l’application et ne permet pas d’identifier le membre, à l’exception du cookie permettant une réauthentification sans avoir à ressaisir son mot de passe.\",\r\n            },\r\n            back: \"Retour\",\r\n            next: \"Suivant\",\r\n            leave: \"Quitter\",\r\n            submit: \"Envoyer\",\r\n            success: {\r\n                title: \"Ravis de vous voir !\",\r\n                subtitle: \"Votre profil est créé.\",\r\n                button: \"Commencer\",\r\n            },\r\n            quit: {\r\n                title: \"Quitter\",\r\n                text: \"Voulez vous vraiment quitter la création du profil ? Vous pourrez reprendre plus tard.\",\r\n                cancel: \"Annuler\",\r\n                yes: \"Oui\",\r\n            },\r\n        },\r\n        // Language components\r\n        languagePicker: {\r\n            placeholderSingle: \"Langue\",\r\n            placeholderMultiple: \"Sélectionner des langues\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Niveau\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhaze\",\r\n            ae: \"Avestique\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharique\",\r\n            an: \"Aragonais\",\r\n            ar: \"Arabe\",\r\n            as: \"Assamais\",\r\n            av: \"Avar\",\r\n            ay: \"Aymara\",\r\n            az: \"Azéri\",\r\n            ba: \"Bachkir\",\r\n            be: \"Biélorusse\",\r\n            bg: \"Bulgare\",\r\n            bh: \"Bihari\",\r\n            bi: \"Bichelamar\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibétain\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnien\",\r\n            ca: \"Catalan\",\r\n            ce: \"Tchétchène\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corse\",\r\n            cr: \"Cri\",\r\n            cs: \"Tchèque\",\r\n            cu: \"Vieux-slave\",\r\n            cv: \"Tchouvache\",\r\n            cy: \"Gallois\",\r\n            da: \"Danois\",\r\n            de: \"Allemand\",\r\n            dv: \"Maldivien\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Grec moderne\",\r\n            en: \"Anglais\",\r\n            eo: \"Espéranto\",\r\n            es: \"Espagnol\",\r\n            et: \"Estonien\",\r\n            eu: \"Basque\",\r\n            fa: \"Persan\",\r\n            ff: \"Peul\",\r\n            fi: \"Finnois\",\r\n            fj: \"Fidjien\",\r\n            fo: \"Féroïen\",\r\n            fr: \"Français\",\r\n            fy: \"Frison occidental\",\r\n            ga: \"Irlandais\",\r\n            gd: \"Écossais\",\r\n            gl: \"Galicien\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Mannois\",\r\n            ha: \"Haoussa\",\r\n            he: \"Hébreu\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri motu\",\r\n            hr: \"Croate\",\r\n            ht: \"Créole haïtien\",\r\n            hu: \"Hongrois\",\r\n            hy: \"Arménien\",\r\n            hz: \"Héréro\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonésien\",\r\n            ie: \"Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Yi\",\r\n            ik: \"Inupiak\",\r\n            io: \"Ido\",\r\n            is: \"Islandais\",\r\n            it: \"Italien\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japonais\",\r\n            jv: \"Javanais\",\r\n            ka: \"Géorgien\",\r\n            kg: \"Kikongo\",\r\n            ki: \"Kikuyu\",\r\n            kj: \"Kuanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Groenlandais\",\r\n            km: \"Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Coréen\",\r\n            kr: \"Kanouri\",\r\n            ks: \"Cachemiri\",\r\n            ku: \"Kurde\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornique\",\r\n            ky: \"Kirghiz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgeois\",\r\n            lg: \"Ganda\",\r\n            li: \"Limbourgeois\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lituanien\",\r\n            lu: \"Luba\",\r\n            lv: \"Letton\",\r\n            mg: \"Malgache\",\r\n            mh: \"Marshallais\",\r\n            mi: \"Maori de Nouvelle-Zélande\",\r\n            mk: \"Macédonien\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongol\",\r\n            mo: \"Moldave\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malais\",\r\n            mt: \"Maltais\",\r\n            my: \"Birman\",\r\n            na: \"Nauruan\",\r\n            nb: \"Norvégien Bokmål\",\r\n            nd: \"Sindebele\",\r\n            ne: \"Népalais\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Néerlandais\",\r\n            nn: \"Norvégien Nynorsk\",\r\n            no: \"Norvégien\",\r\n            nr: \"Nrebele\",\r\n            nv: \"Navajo\",\r\n            ny: \"Chichewa\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwé\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossète\",\r\n            pa: \"Pendjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polonais\",\r\n            ps: \"Pachto\",\r\n            pt: \"Portugais\",\r\n            qu: \"Quechua\",\r\n            rc: \"Créole Réunionnais\",\r\n            rm: \"Romanche\",\r\n            rn: \"Kirundi\",\r\n            ro: \"Roumain\",\r\n            ru: \"Russe\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sarde\",\r\n            sd: \"Sindhi\",\r\n            se: \"Same du Nord\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-croate\",\r\n            si: \"Cingalais\",\r\n            sk: \"Slovaque\",\r\n            sl: \"Slovène\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanais\",\r\n            sr: \"Serbe\",\r\n            ss: \"Swati\",\r\n            st: \"Sotho du Sud\",\r\n            su: \"Soundanais\",\r\n            sv: \"Suédois\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamoul\",\r\n            te: \"Télougou\",\r\n            tg: \"Tadjik\",\r\n            th: \"Thaï\",\r\n            ti: \"Tigrigna\",\r\n            tk: \"Turkmène\",\r\n            tl: \"Tagalog\",\r\n\r\n            tn: \"Tswana\",\r\n            to: \"Tongien\",\r\n            tr: \"Turc\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitien\",\r\n            ug: \"Ouïghour\",\r\n            uk: \"Ukrainien\",\r\n            ur: \"Ourdou\",\r\n            uz: \"Ouzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamien\",\r\n            vo: \"Volapük\",\r\n            wa: \"Wallon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang\",\r\n            zh: \"Chinois\",\r\n            zu: \"Zoulou\",\r\n        },\r\n        // Interests-related\r\n        interests: \"Hobbies\",\r\n        chooseInterests: \"Choisissez des hobbies\",\r\n        interestsPicker: {\r\n            placeholder: \"Sélectionner\",\r\n            searchPlaceholder: \"Rechercher\",\r\n            multiple: \"%d éléments\",\r\n        },\r\n        interestNames: {\r\n            activism: \"Activisme\",\r\n            art: \"Art\",\r\n            astrology: \"Astrologie\",\r\n            baking: \"Pâtisserie\",\r\n            bbq: \"Barbecue\",\r\n            blogging: \"Blogging\",\r\n            \"board-games\": \"Jeux de société\",\r\n            brunch: \"Brunch\",\r\n            \"cat-lover\": \"Chats\",\r\n            climbing: \"Escalade\",\r\n            coffee: \"Café\",\r\n            comedy: \"Comédie\",\r\n            cooking: \"Cuisine\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            \"craft-beer\": \"Bière artisanale\",\r\n            crossfit: \"Crossfit\",\r\n            cycling: \"Vélo\",\r\n            dancing: \"Danse\",\r\n            diy: \"DIY\",\r\n            \"dog-lover\": \"Chiens\",\r\n            environmentalism: \"Écologie\",\r\n            esports: \"E-Sports\",\r\n            expositions: \"Expositions\",\r\n            fashion: \"Fashion\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Pèche\",\r\n            foodie: \"Gastronomie\",\r\n            football: \"Football\",\r\n            gamer: \"Gaming\",\r\n            gardening: \"Jardinage\",\r\n            golf: \"Golf\",\r\n            \"grab-a-drink\": \"Boire un verre\",\r\n            guitar: \"Guitare\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            hiking: \"Randonnée\",\r\n            instagram: \"Instagram\",\r\n            investing: \"Investissement\",\r\n            karaoke: \"Karaoke\",\r\n            \"language-exchange\": \"Échange linguistique\",\r\n            movies: \"Films\",\r\n            museum: \"Musées\",\r\n            music: \"Musique\",\r\n            netflix: \"Netflix\",\r\n            outdoors: \"Activités d'extérieur\",\r\n            parties: \"Fêtes\",\r\n            photography: \"Photographie\",\r\n            piano: \"Piano\",\r\n            picnicking: \"Pique-nique\",\r\n            \"playing-music\": \"Jouer de la musique\",\r\n            podcasts: \"Podcasts\",\r\n            politics: \"Politique\",\r\n            reading: \"Lecture\",\r\n            \"road-trips\": \"Road trips\",\r\n            running: \"Course à pied\",\r\n            sailing: \"La voile\",\r\n            shopping: \"Shopping\",\r\n            skateboarder: \"Skateboard\",\r\n            skiing: \"Ski\",\r\n            sneakers: \"Chaussures de sport\",\r\n            snowboarding: \"Snowboard\",\r\n            spirituality: \"Spiritualité\",\r\n            sports: \"Sports\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            surfing: \"Surf\",\r\n            swimming: \"Nage\",\r\n            tango: \"Tango\",\r\n            tattoos: \"Tatouages\",\r\n            tea: \"Thé\",\r\n            tennis: \"Tennis\",\r\n            theater: \"Théatre\",\r\n            travel: \"Voyage\",\r\n            trivia: \"Trivia\",\r\n            vegan: \"Vegan\",\r\n            vegetarian: \"Végétarien\",\r\n            volunteering: \"Bénévolat\",\r\n            walking: \"Marche\",\r\n            \"walking-my-dog\": \"Promener son chien\",\r\n            wine: \"Vin\",\r\n            \"working-out\": \"Entraînement sportif\",\r\n            writer: \"Écriture\",\r\n            yoga: \"Yoga\",\r\n        },\r\n        // Offer-related\r\n        offersPreText: \"Je suis ouvert à...\",\r\n        offerCategories: {\r\n            meet: \"Rencontrer\",\r\n            discover: \"Découvrir\",\r\n            collaborate: \"Collaborer\",\r\n        },\r\n        offerSettings: {\r\n            genders: \"Genres ciblés\",\r\n            roles: \"Postes ciblés\",\r\n        },\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Boire un verre\",\r\n                help: \"Je suis ouvert pour boire un verre avec les personnes que je rencontre sur cette plateforme.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Prêter un canapé\",\r\n                help: \"Je suis ouvert à laisser quelqu'un dormir sur mon canapé.\",\r\n            },\r\n            \"get-into-campus-life\": {\r\n                name: \"Intégrer la vie du campus\",\r\n                help: \"Je suis motivé.e à l'idée de présenter à quelqu'un la vie de mon campus.\",\r\n            },\r\n            \"cowork-on-a-project\": {\r\n                name: \"Collaborer sur un projet\",\r\n                help: \"Je recherche des collaborateurs pour un projet.\",\r\n            },\r\n            \"answer-academic-questions\": {\r\n                name: \"Répondre à des questions académiques\",\r\n                help:\r\n                    \"Je peux donner des informations à propos de mon université ou répondre à des questions générales en lien avec les études.\",\r\n            },\r\n            \"share-interests\": {\r\n                name: \"Partager des hobbies\",\r\n                help: \"J'aimerais discuter avec d'autres utilisateurs à propos de centres d'intérêts communs.\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Rejoindre un tandem d'apprentissage de langue\",\r\n                help:\r\n                    \"Je cherche à rejoindre un tandem de langue afin d'aider d'autres utilisateurs à apprendre une de mes langues.\",\r\n            },\r\n        },\r\n        // Unmatch modal\r\n        unmatch: {\r\n            text: \"Voulez-vous vraiment annuler le match avec {{firstname}} ? Vous ne pourrez plus communiquer.\",\r\n            blockQuestion:\r\n                \"Si vous ne voulez plus apparaître dans les résultats de {{firstname}}, vous pouvez aussi bloquer ce profil :\",\r\n            action: \"Unmatch\",\r\n        },\r\n        // Block modal\r\n        block: {\r\n            warning:\r\n                \"Voulez-vous vraiment bloquer cet utilisateur ? Vous et {{firstname}} n'apparaîtrez plus dans vos recherches respectives.\",\r\n            action: \"Bloquer\",\r\n        },\r\n        // Welcome screen\r\n        welcomeScreen: {\r\n            signIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            subtitle: \"Rejoignez une alliance unie autour des valeurs de l'identité européenne.\",\r\n        },\r\n        // Login\r\n        loginForm: {\r\n            title: \"Ravis de vous revoir !\",\r\n            titleFirstLaunch: \"Bienvenue !\",\r\n            logIn: \"Connexion\",\r\n            signUp: \"Inscription\",\r\n            or: \"ou\",\r\n        },\r\n        // Cookies\r\n        cookies: {\r\n            title: \"Cookies\",\r\n            bannerText:\r\n                \"Nous utilisons des cookies afin de vous fournir la meilleure expérience utilisateur possible.\\nNotre utilisation des cookies inclut notamment le stockage de données pour des chargements plus rapides, le stockage de vos paramètres et l'authentification. Nous ne collectons aucune information qui pourrait être utilisée pour du traçage ou de la publicité.\",\r\n            acceptAll: \"Accepter les cookies\",\r\n            customize: \"Personnaliser\",\r\n            preferences: {\r\n                text:\r\n                    \"Nous offrons la possibilité de choisir les informations qui sont stockées sur votre appareil par SEA-EU Around.\",\r\n                auth: {\r\n                    name: \"Authentification\",\r\n                    description:\r\n                        \"Stockage d'information permettant de vous authentifier automatiquement lorsque vous lancez l'application.\",\r\n                },\r\n                cache: {\r\n                    name: \"Cache\",\r\n                    description: \"Stockage d'information (moins d'un 1MO) permettant d'accélérer les chargements.\",\r\n                },\r\n                settings: {name: \"Paramètres\", description: \"Stockage des paramètres (thème, langue, etc).\"},\r\n            },\r\n        },\r\n        // Bug report\r\n        bugReport: {\r\n            mailSubject: \"Signalement de bug depuis l'app\",\r\n            mailTitle: \"Description du bug (inclure si possible les étapes pour le reproduire) :\",\r\n        },\r\n        // Report\r\n        report: {\r\n            title: \"Signalement\",\r\n            send: \"Envoyer\",\r\n            cancel: \"Annuler\",\r\n            what: \"Quoi / qui ?\",\r\n            why: \"Pourquoi ?\",\r\n            typePlaceholder: \"Sélectionner une raison\",\r\n            types: {\r\n                violence: \"Violence\",\r\n                nudity: \"Nudité\",\r\n                harassment: \"Harcèlement\",\r\n                \"undesirable-content\": \"Contenu indésirable\",\r\n                \"hate-speech\": \"Discours haineux\",\r\n                \"vulgar-content\": \"Contenu vulgaire\",\r\n                other: \"Autre\",\r\n            },\r\n            confirmationTitle: \"Merci\",\r\n            confirmation: \"Un administrateur traitera votre signalement sous peu.\",\r\n            failureTitle: \"Désolé\",\r\n            failure: \"Nous ne sommes pas en mesure de traîter votre requête.\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions:\r\n                \"Pour choisir un nouveau mot de passe, cliquez sur le lien dans le mail que nous venons de vous envoyer.\",\r\n            title: \"Choisissez un nouveau mot de passe\",\r\n            button: \"Envoyer\",\r\n            success: \"Votre mot de passe a été mis à jour.\",\r\n        },\r\n        // Delete account\r\n        deleteAccount: {\r\n            title: \"Supprimer votre compte\",\r\n            warning:\r\n                \"Votre compte et toutes les données associées seront supprimées d'ici 6 mois. Après cette période, le compte sera irréversiblement supprimé. Si vous vous connectez avant, la suppression sera annulée.\",\r\n            button: \"Supprimer\",\r\n            success1: \"Votre requête a bien été reçue et sera traitée sous peu.\",\r\n            success2: \"Nous sommes désolés de vous voir partir.\",\r\n            leave: \"Quitter\",\r\n            inputLabel: \"Entrez votre mot de passe pour confirmer\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            noMatches: \"Il semblerait que vous n'ailliez pas encore eu de match. :(\",\r\n            sayHi: \"Envoyez un message\",\r\n            sayHiTo: \"Envoyez un message à {{name}}\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"Aucun résultat\",\r\n            noMoreItems: \"Pas d'autres profils à afficher\",\r\n            noItemsAdvice: \"Éssayez de supprimer des filtres\",\r\n            filtering: {\r\n                sectionGeneral: \"Général\",\r\n                buttonReset: \"Réinitialiser\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Cacher\",\r\n            success: {\r\n                title: \"Nouveau match !\",\r\n                offersTitle: \"Ouvert à:\",\r\n                offersMore: \"autres\",\r\n                chat: \"Ouvrir le chat\",\r\n                continue: \"Continuer\",\r\n            },\r\n            history: {\r\n                status: {\r\n                    requested: \"Liké\",\r\n                    declined: \"Caché\",\r\n                    blocked: \"Bloqué\",\r\n                },\r\n                actions: {\r\n                    report: \"Signaler\",\r\n                    cancel: {\r\n                        requested: \"Annuler like\",\r\n                        declined: \"Dé-cacher\",\r\n                        blocked: \"Débloquer\",\r\n                    },\r\n                    block: \"Bloquer\",\r\n                },\r\n                noResults: \"Aucun résultat\",\r\n                noResultsAdvice: \"Éssayez de supprimer des filtres\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            action: {\r\n                chat: \"Ouvrir le chat\",\r\n                mute: \"Mettre en sourdine\",\r\n                block: \"Bloquer\",\r\n                unmatch: \"Unmatch\",\r\n                report: \"Signaler\",\r\n            },\r\n            noOffersSelected: \"Aucune offre sélectionnée.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            WelcomeScreen: \"Bienvenue\",\r\n            SigninScreen: \"Connexion\",\r\n            ForgotPasswordScreen: \"Mot de Passe Oublié\",\r\n            SignupScreen: \"Inscription\",\r\n            OnboardingNameScreen: \"Bienvenue\",\r\n            OnboardingProfileScreen1: \"Profil\",\r\n            OnboardingProfileScreen2: \"Profil\",\r\n            OnboardingRoleScreen: \"Profil\",\r\n            OnboardingRoleSpecificScreen: \"Profil\",\r\n            OnboardingOffersScreen1: \"Découvrir\",\r\n            OnboardingOffersScreen2: \"Collaborer\",\r\n            OnboardingOffersScreen3: \"Rencontrer\",\r\n            OnboardingLegalScreen1: \"Conditions d'utilisation\",\r\n            OnboardingLegalScreen2: \"Politique des données\",\r\n            OnboardingLegalScreen3: \"Cookies\",\r\n            ChatRoomsScreen: \"Messages\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Accueil\",\r\n            TabMatchingScreen: \"Match\",\r\n            MatchFilteringScreen: \"Ajouter des Filtres\",\r\n            MatchHistoryScreen: \"Historique\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            MyProfileScreen: \"Profil\",\r\n            ProfileScreen: \"Profil\",\r\n            SettingsScreen: \"Paramètres\",\r\n            DeleteAccountScreen: \"Suppression du Compte\",\r\n            DeleteAccountSuccessScreen: \"Compte Supprimé\",\r\n            ValidationEmailSentScreen: \"Validation du Compte\",\r\n            ValidateEmailScreen: \"Validation du Compte\",\r\n            ResetPasswordScreen: \"Changement de Mot de Passe\",\r\n            ResetPasswordSuccessScreen: \"Mot de Passe Modifié\",\r\n            OnboardingSuccessfulScreen: \"Inscription Réussie\",\r\n            NotFoundScreen: \"Page Introuvable\",\r\n            ForgotPasswordEmailSentScreen: \"Mot de Passe Oublié\",\r\n        },\r\n        // Settings screen\r\n        settings: {\r\n            sections: {\r\n                general: \"Général\",\r\n                danger: \"Zone dangereuse\",\r\n                about: \"À propos\",\r\n            },\r\n            language: \"Langue\",\r\n            darkTheme: \"Thème sombre\",\r\n            deleteAccount: \"Suppression de compte\",\r\n            deleteMyAccount: \"Supprimer mon compte\",\r\n            version: \"Version\",\r\n            termsOfService: \"Conditions d'utilisation\",\r\n            reportABug: \"Signaler un bug\",\r\n            logOut: \"Déconnexion\",\r\n            customizeCookies: \"Personnaliser les cookies\",\r\n        },\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    const loc = Localization.locale.substr(0, 2);\r\n    return loc === \"fr\" ? \"fr\" : \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"hr\",\r\n    \"en\",\r\n    \"fr\",\r\n    \"de\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"es\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[2].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n\r\n/* French translations from https://fr.wikipedia.org/wiki/Liste_des_codes_ISO_639-1 */\r\n/*\r\nlet entries = {};\r\n$(\"#mw-content-text > div.mw-parser-output > table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[0].innerText.trim();\r\n    if(code.length == 2) {\r\n        entries[code] = tr.children[3].innerText.trim();\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport translations from \"../../constants/translations\";\r\nimport {\r\n    LoadCookiesPreferencesAction,\r\n    LoadVersionInfoAction,\r\n    SaveCookiesPreferencesAction,\r\n    SetLocaleAction,\r\n    SetThemeAction,\r\n    SettingsAction,\r\n    SETTINGS_ACTION_TYPES,\r\n} from \"./actions\";\r\nimport {SettingsState} from \"../types\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const dict = translations as {[key: string]: {[key: string]: unknown}};\r\n    const languageNames = (dict[locale].languageNames || dict[\"en\"].languageNames) as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    userSettings: {\r\n        theme: \"light\",\r\n        locale: getDefaultLocale(),\r\n        cookies: {\r\n            auth: false,\r\n            cache: false,\r\n            settings: false,\r\n        },\r\n        cookieConsentDate: null,\r\n    },\r\n    previousVersion: null,\r\n    isFirstLaunch: false,\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.LOAD_COOKIES_PREFERENCES: {\r\n            const {preferences, consentDate} = action as LoadCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: consentDate, cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const {preferences} = action as SaveCookiesPreferencesAction;\r\n            return {\r\n                ...state,\r\n                userSettings: {...state.userSettings, cookieConsentDate: new Date(Date.now()), cookies: preferences},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = action as SetThemeAction;\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            const theme = state.userSettings.theme == \"light\" ? \"dark\" : \"light\";\r\n            return {...state, userSettings: {...state.userSettings, theme}};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = action as SetLocaleAction;\r\n            return {\r\n                ...state,\r\n                localizedLanguageItems: getLocalizedLanguageItems(locale),\r\n                userSettings: {...state.userSettings, locale},\r\n            };\r\n        }\r\n        case SETTINGS_ACTION_TYPES.LOAD_VERSION_INFO: {\r\n            const {version} = action as LoadVersionInfoAction;\r\n            return {\r\n                ...state,\r\n                previousVersion: version,\r\n                isFirstLaunch: version === null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferDto} from \"../../api/dto\";\r\nimport {AuthAction, AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {ProfileState} from \"../types\";\r\nimport {\r\n    CreateProfileSuccessAction,\r\n    FetchUserSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    SetAvatarSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n};\r\n\r\nexport const profileReducer = (\r\n    state: ProfileState = initialState,\r\n    action: ProfileAction | AuthAction,\r\n): ProfileState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = action as SetProfileFieldsSuccessAction;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return state.user ? {...state, user: {...state.user, profile}} : state;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers} = action as LoadProfileOffersSuccessAction;\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = action as LoadProfileInterestsSuccessAction;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = action as SetAvatarSuccessAction;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {Degree, Gender, LanguageLevel, Role} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\n\r\n/* General response-related types */\r\n\r\n// Any response from the server should follow this structure\r\nexport type RequestResponse = SuccessfulRequestResponse | UnprocessableEntityRequestResponse | ErrorRequestResponse;\r\nexport type SuccessfulRequestResponse = {status: number; data: unknown} & {[key: string]: unknown};\r\nexport type PaginatedRequestResponse = SuccessfulRequestResponse & {\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type ErrorRequestResponse = {status: number; errorType: string; description: string};\r\n\r\n// Only on 422 status\r\nexport type UnprocessableEntityRequestResponse = ErrorRequestResponse & {\r\n    errors: {property: string; codes: {description: string; code: string}[]}[];\r\n};\r\n\r\nexport type RemoteValidationErrors = {general: string; fields: {[key: string]: string}};\r\n\r\n/* Specific DTOs */\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: ResponseUserDto;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: InterestDto[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRoles: StaffRoleDto[];\r\n};\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDtoCommon = CreateProfileDtoCommon & {\r\n    id: string;\r\n    university: UniversityKey;\r\n    avatar: string;\r\n};\r\nexport type ResponseProfileDtoStudent = ResponseProfileDtoCommon & CreateProfileDtoStudent;\r\nexport type ResponseProfileDtoStaff = ResponseProfileDtoCommon & CreateProfileDtoStaff;\r\nexport type ResponseProfileDto = ResponseProfileDtoStudent | ResponseProfileDtoStaff;\r\n\r\nexport type ResponseProfileWithMatchInfoDto = {isMatched: boolean; roomId: string | null; profile: ResponseProfileDto};\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type StaffRoleDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type ChatRoomProfileDto = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatar: string | null;\r\n    lastMessageSeenId: string | null;\r\n    lastMessageSeenDate: string | null;\r\n};\r\n\r\nexport type ResponseRoomDto = {\r\n    id: string;\r\n    profiles: ChatRoomProfileDto[];\r\n    lastMessage: ResponseChatMessageDto | null;\r\n};\r\n\r\nexport type ResponseChatMessageDto = {\r\n    roomId: string;\r\n    id: string;\r\n    senderId: string;\r\n    sent: boolean;\r\n    text: string;\r\n    updatedAt: string;\r\n};\r\n\r\nexport type ResponseChatMessageReadDto = {\r\n    roomId: string;\r\n    date: string;\r\n    messageId: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type ResponseChatWritingDto = {\r\n    roomId: string;\r\n    profileId: string;\r\n    state: boolean;\r\n};\r\n\r\nexport enum MatchActionStatus {\r\n    Declined = \"declined\",\r\n    Blocked = \"blocked\",\r\n    Matched = \"matched\",\r\n    Requested = \"requested\",\r\n}\r\nexport const MATCH_ACTION_HISTORY_STATUSES: MatchActionStatus[] = [\r\n    MatchActionStatus.Declined,\r\n    MatchActionStatus.Blocked,\r\n    MatchActionStatus.Requested,\r\n];\r\n\r\nexport type MatchActionResponseDto = {\r\n    roomId: string | null;\r\n    status: MatchActionStatus;\r\n};\r\n\r\nexport type MatchHistoryItemDto = {\r\n    profile: ResponseProfileDto;\r\n    status: MatchActionStatus;\r\n    date: string;\r\n    id: string;\r\n};\r\n","import {convertDtoToHistoryItem, convertDtoToProfile} from \"../../api/converters\";\r\nimport {\r\n    MatchActionResponseDto,\r\n    MatchActionStatus,\r\n    MatchHistoryItemDto,\r\n    PaginatedRequestResponse,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MatchingFiltersState, AppThunk} from \"../types\";\r\nimport {HISTORY_FETCH_LIMIT, PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n\r\n    FETCH_HISTORY_BEGIN = \"MATCHING/FETCH_HISTORY_BEGIN\",\r\n    FETCH_HISTORY_FAILURE = \"MATCHING/FETCH_HISTORY_FAILURE\",\r\n    FETCH_HISTORY_SUCCESS = \"MATCHING/FETCH_HISTORY_SUCCESS\",\r\n    FETCH_HISTORY_REFRESH = \"MATCHING/FETCH_HISTORY_REFRESH\",\r\n\r\n    ACTION_CANCEL_SUCCESS = \"MATCHING/ACTION_CANCEL_SUCCESS\",\r\n    ACTION_CANCEL_FAILURE = \"MATCHING/ACTION_CANCEL_FAILURE\",\r\n\r\n    SET_HISTORY_FILTERS = \"MATCHING/SET_HISTORY_FILTERS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n    matchStatus: MatchActionStatus;\r\n    roomId: string | null;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profile: UserProfile;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type FetchProfilesRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type BeginFetchProfilesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type BeginFetchMyMatchesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n};\r\n\r\nexport type BeginFetchHistoryAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchHistoryFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchHistorySuccessAction = {\r\n    type: string;\r\n    items: MatchHistoryItem[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type FetchHistoryRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetHistoryFiltersAction = {\r\n    type: string;\r\n    filters: {[key: string]: boolean};\r\n};\r\n\r\nexport type ActionCancelSuccessAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n    isMatch: boolean;\r\n};\r\n\r\nexport type ActionCancelFailureAction = {\r\n    type: string;\r\n    historyItemId: string;\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | BeginFetchProfilesAction\r\n    | FetchProfilesSuccessAction\r\n    | FetchProfilesFailureAction\r\n    | FetchProfilesRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | BeginFetchMyMatchesAction\r\n    | FetchMyMatchesFailureAction\r\n    | FetchMyMatchesSuccessAction\r\n    | SetHistoryFiltersAction\r\n    | ActionCancelSuccessAction\r\n    | ActionCancelFailureAction;\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst beginFetchProfiles = (): BeginFetchProfilesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {filters, profilesPagination},\r\n    } = getState();\r\n\r\n    if (!token) {\r\n        dispatch(fetchProfilesFailure());\r\n        return;\r\n    }\r\n\r\n    if (!profilesPagination.canFetchMore) console.log(\"Cannot fetch more profiles\");\r\n\r\n    if (profilesPagination.fetching || !profilesPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    // Replaces empty arrays with \"undefined\"\r\n    function notEmpty<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n\r\n    const filterParams = {\r\n        universities: notEmpty(filters.universities),\r\n        spokenLanguages: notEmpty(filters.languages),\r\n        degrees: notEmpty(filters.degrees),\r\n        types: notEmpty(filters.types),\r\n        offers: notEmpty(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: profilesPagination.page,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const profiles = (paginated.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        console.log(\"fetched\", profiles.length, \"profiles\");\r\n        console.log(\"meta\", paginated.meta);\r\n        dispatch(fetchProfilesSuccess(profiles, canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nconst fetchProfilesFailure = (): FetchProfilesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nconst fetchProfilesSuccess = (profiles: UserProfile[], canFetchMore: boolean): FetchProfilesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    profiles,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): FetchProfilesRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nconst likeProfileSuccess = (\r\n    profile: UserProfile,\r\n    matchStatus: MatchActionStatus,\r\n    roomId: string | null,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profile,\r\n    matchStatus,\r\n    roomId,\r\n});\r\n\r\nexport const likeProfile = (profile: UserProfile): AppThunk<Promise<MatchActionResponseDto | null>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toProfileId: profile.id}, token, true);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {status, roomId} = payload as MatchActionResponseDto;\r\n        dispatch(likeProfileSuccess(profile, status, roomId));\r\n        return {status, roomId};\r\n    }\r\n    return null;\r\n};\r\n\r\nconst dislikeProfileSuccess = (profile: UserProfile): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profile,\r\n});\r\n\r\nexport const dislikeProfile = (profile: UserProfile): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toProfileId: profile.id}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(dislikeProfileSuccess(profile));\r\n};\r\n\r\nconst blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, token, true);\r\n    if (response.status === HttpStatusCode.OK) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nconst beginFetchMyMatches = (): BeginFetchMyMatchesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nconst fetchMyMatchesFailure = (): FetchMyMatchesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nconst fetchMyMatchesSuccess = (profiles: UserProfile[]): FetchMyMatchesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    profiles,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching,\r\n    } = getState();\r\n    if (matching.fetchingMyMatches) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profiles = (payload as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchMyMatchesSuccess(profiles));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n\r\nconst beginFetchHistory = (): BeginFetchHistoryAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN,\r\n});\r\n\r\nconst fetchHistoryFailure = (): FetchHistoryFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE,\r\n});\r\n\r\nconst fetchHistorySuccess = (items: MatchHistoryItem[], canFetchMore: boolean): FetchHistorySuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS,\r\n    items,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedHistory = (): FetchHistoryRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH,\r\n});\r\n\r\nexport const fetchHistory = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {historyPagination, historyFilters},\r\n    } = getState();\r\n\r\n    if (historyPagination.fetching || !historyPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchHistory());\r\n\r\n    const response = await requestBackend(\r\n        \"matching/history\",\r\n        \"GET\",\r\n        {\r\n            page: historyPagination.page,\r\n            limit: HISTORY_FETCH_LIMIT,\r\n            status: Object.keys(historyFilters).filter((k) => historyFilters[k]),\r\n            search: search && search.length > 0 ? search : undefined,\r\n        },\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const items = (paginated.data as MatchHistoryItemDto[]).map(convertDtoToHistoryItem);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchHistorySuccess(items, canFetchMore));\r\n    } else dispatch(fetchHistoryFailure());\r\n};\r\n\r\nexport const setHistoryFilters = (filters: {[key: string]: boolean}): SetHistoryFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS,\r\n    filters,\r\n});\r\n\r\nconst cancelActionFailure = (historyItemId: string): ActionCancelFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_FAILURE,\r\n    historyItemId,\r\n});\r\n\r\nconst cancelActionSuccess = (historyItemId: string, isMatch: boolean): ActionCancelSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS,\r\n    historyItemId,\r\n    isMatch,\r\n});\r\n\r\nexport const cancelMatchAction = (historyItemId: string, isMatch = false): AppThunk<Promise<boolean>> => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\r\n        \"matching/cancel\",\r\n        \"POST\",\r\n        {},\r\n        {matchingEntityId: historyItemId},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(cancelActionSuccess(historyItemId, isMatch));\r\n        return true;\r\n    } else {\r\n        dispatch(cancelActionFailure(historyItemId));\r\n        return false;\r\n    }\r\n};\r\n","import {MATCH_ACTION_HISTORY_STATUSES} from \"../../api/dto\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES} from \"../auth/actions\";\r\nimport {initialPaginatedState, MatchingFiltersState, MatchingState} from \"../types\";\r\nimport {\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    FetchProfilesSuccessAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    FetchMyMatchesSuccessAction,\r\n    FetchHistorySuccessAction,\r\n    SetHistoryFiltersAction,\r\n    ActionCancelSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    types: [],\r\n});\r\n\r\nconst initialHistoryFilters = () => {\r\n    const filters: {[key: string]: boolean} = {};\r\n    MATCH_ACTION_HISTORY_STATUSES.forEach((k) => (filters[k] = true));\r\n    return filters;\r\n};\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    fetchedProfiles: [],\r\n    profilesPagination: initialPaginatedState(),\r\n    historyPagination: initialPaginatedState(),\r\n    historyFilters: initialHistoryFilters(),\r\n    historyItems: [],\r\n    myMatches: [],\r\n    fetchingMyMatches: false,\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = <SetOfferFilterAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = <SetMatchingFiltersAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {profiles, canFetchMore} = <FetchProfilesSuccessAction>action;\r\n            const pagination = state.profilesPagination;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.concat(profiles),\r\n                profilesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, fetchingMyMatches: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {...state, fetchingMyMatches: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {profiles} = <FetchMyMatchesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                myMatches: profiles,\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {profile} = <LikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profile.id),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profile} = <DislikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profile.id),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = <BlockProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_BEGIN: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_FAILURE: {\r\n            return {...state, historyPagination: {...state.historyPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_SUCCESS: {\r\n            const {items, canFetchMore} = <FetchHistorySuccessAction>action;\r\n            const pagination = state.historyPagination;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.concat(items),\r\n                historyPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_HISTORY_REFRESH: {\r\n            return {\r\n                ...state,\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_HISTORY_FILTERS: {\r\n            const {filters} = action as SetHistoryFiltersAction;\r\n            return {\r\n                ...state,\r\n                historyFilters: {...state.historyFilters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {historyItemId} = action as ActionCancelSuccessAction;\r\n            return {\r\n                ...state,\r\n                historyItems: state.historyItems.filter((it: MatchHistoryItem) => it.id !== historyItemId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n                myMatches: [],\r\n                fetchingMyMatches: false,\r\n                historyItems: [],\r\n                historyPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import io from \"socket.io-client\";\r\nimport {BACKEND_URL, DEBUG_MODE} from \"../constants/config\";\r\nimport {ChatRoom} from \"../model/chat-room\";\r\nimport {ResponseChatWritingDto, ResponseChatMessageDto, TokenDto, ResponseChatMessageReadDto} from \"./dto\";\r\n\r\nconst SOCKET_LOCATION = `${BACKEND_URL}/chat`;\r\n\r\nconst WRITING_STATE_DELAY = 1000;\r\nconst CONNECT_TIMEOUT = 2000;\r\nconst RECONNECT_ATTEMPTS = 3;\r\n\r\nexport type ChatSocketEventListeners = {\r\n    onMessageReceived: (m: ResponseChatMessageDto) => void;\r\n    onWritingStateChange: (m: ResponseChatWritingDto) => void;\r\n    onMessageRead: (m: ResponseChatMessageReadDto) => void;\r\n};\r\n\r\nclass ChatSocket {\r\n    private socket: SocketIOClient.Socket | null;\r\n    private connectCallbacks: ((connected: boolean) => void)[];\r\n    private writingTimeout: NodeJS.Timeout | null;\r\n    private lastSentWritingState: boolean;\r\n    private lastSentWritingStateRoom: ChatRoom | null;\r\n\r\n    private connectTimeout: NodeJS.Timeout | null;\r\n\r\n    constructor() {\r\n        this.socket = null;\r\n        this.connectCallbacks = [];\r\n        this.writingTimeout = null;\r\n        this.lastSentWritingState = false;\r\n        this.lastSentWritingStateRoom = null;\r\n        this.connectTimeout = null;\r\n    }\r\n\r\n    private consumeConnectCallbacks(connectedState: boolean): void {\r\n        this.connectCallbacks.forEach((f) => f(connectedState));\r\n        this.connectCallbacks = [];\r\n    }\r\n\r\n    private registerListeners(listeners: ChatSocketEventListeners): void {\r\n        if (!this.socket) return;\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            this.log(\"connected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(true);\r\n        });\r\n        this.socket.on(\"close\", () => {\r\n            this.log(\"close\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n        this.socket.on(\"disconnect\", () => {\r\n            this.log(\"disconnected\");\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        });\r\n\r\n        /*this.socket.on(\"connect_failed\", () => this.log(\"connect_failed\"));\r\n        this.socket.on(\"connect_error\", () => this.log(\"connect_error\"));\r\n        this.socket.on(\"error\", () => this.log(\"error\"));\r\n        this.socket.on(\"exception\", (e: unknown) => this.log(\"<---- Exception \" + JSON.stringify(e)));*/\r\n\r\n        this.socket.on(\"receiveMessage\", (m: ResponseChatMessageDto) => listeners.onMessageReceived(m));\r\n        this.socket.on(\"readMessage\", (m: ResponseChatMessageReadDto) => listeners.onMessageRead(m));\r\n        this.socket.on(\"isWriting\", (m: ResponseChatWritingDto) => listeners.onWritingStateChange(m));\r\n    }\r\n\r\n    private log(msg: string): void {\r\n        if (DEBUG_MODE) console.log(`[ChatSocket] ${msg}`);\r\n    }\r\n\r\n    private emit(msg: string, payload: unknown): void {\r\n        this.log(`----> '${msg}' - payload: ${JSON.stringify(payload)}`);\r\n        this.socket?.emit(msg, payload);\r\n    }\r\n\r\n    private sendWritingState(room: ChatRoom, state: boolean): void {\r\n        this.lastSentWritingState = state;\r\n        this.lastSentWritingStateRoom = room;\r\n        this.emit(\"isWriting\", {roomId: room.id, state});\r\n    }\r\n\r\n    private refreshWritingTimeout(room: ChatRoom): void {\r\n        if (this.writingTimeout !== null) {\r\n            clearTimeout(this.writingTimeout);\r\n            this.writingTimeout = null;\r\n        }\r\n        this.writingTimeout = setTimeout(() => {\r\n            this.sendWritingState(room, false);\r\n        }, WRITING_STATE_DELAY);\r\n    }\r\n\r\n    addConnectCallback(callback: (connected: boolean) => void): void {\r\n        this.connectCallbacks.push(callback);\r\n    }\r\n\r\n    connect(\r\n        authToken: TokenDto,\r\n        listeners: Partial<ChatSocketEventListeners> = {},\r\n        callback?: (connected: boolean) => void,\r\n        retry = RECONNECT_ATTEMPTS,\r\n    ): void {\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n\r\n        // If we're already connected, callback and abort\r\n        if (this.isConnected()) {\r\n            if (callback) callback(true);\r\n            return;\r\n        }\r\n\r\n        if (callback) this.addConnectCallback(callback);\r\n\r\n        // If we're already connecting, abort (the callback we be called whenever we're connected)\r\n        if (this.isConnecting()) return;\r\n\r\n        this.log(\"Connecting to \" + SOCKET_LOCATION);\r\n\r\n        if (this.socket) {\r\n            this.socket.connect();\r\n            /*setTimeout(() => {\r\n                if (this.socket) this.socket.connect();\r\n            }, 100);*/\r\n        } else {\r\n            this.log(\"----> Authenticating - token = \" + authToken.accessToken);\r\n            this.socket = io(SOCKET_LOCATION, {\r\n                query: {authorization: authToken.accessToken},\r\n                //reconnectionDelay: RECONNECT_DELAY,\r\n                //reconnectionAttempts: RECONNECT_ATTEMPTS,\r\n                reconnection: false,\r\n            });\r\n            this.registerListeners({\r\n                onMessageRead: () => {},\r\n                onMessageReceived: () => {},\r\n                onWritingStateChange: () => {},\r\n                ...listeners,\r\n            });\r\n        }\r\n\r\n        if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n\r\n        // Set a timeout to catch connection failure\r\n        this.connectTimeout = setTimeout(() => {\r\n            this.connectTimeout = null;\r\n            // If we're still not connected\r\n            if (!this.isConnected()) {\r\n                // Try again\r\n                if (retry > 0) this.connect(authToken, listeners, () => {}, retry - 1);\r\n                // Stop trying\r\n                else this.consumeConnectCallbacks(false);\r\n            }\r\n        }, CONNECT_TIMEOUT);\r\n    }\r\n\r\n    joinRoom(room: ChatRoom): void {\r\n        this.emit(\"joinRoom\", {roomId: room.id});\r\n        // Inform the server that we have read the last message of the room\r\n        if (room.lastMessage) this.readMessage(room.id, room.lastMessage._id, room.lastMessage.createdAt.toJSON());\r\n    }\r\n\r\n    leaveRoom(room: ChatRoom): void {\r\n        this.emit(\"leaveRoom\", {roomId: room.id});\r\n    }\r\n\r\n    sendMessage(roomId: string, id: string, text: string): void {\r\n        this.emit(\"sendMessage\", {roomId, id, text});\r\n    }\r\n\r\n    readMessage(roomId: string, messageId: string, createdAt: string): void {\r\n        this.emit(\"readMessage\", {roomId, messageId, date: createdAt});\r\n    }\r\n\r\n    setWriting(room: ChatRoom): void {\r\n        // Refesh the timeout - in a fixed amount of time, this will tell the server we are no longer writing\r\n        this.refreshWritingTimeout(room);\r\n\r\n        // If we are beginning to write, inform the server now\r\n        if (this.lastSentWritingState === false) this.sendWritingState(room, true);\r\n    }\r\n\r\n    disconnect(): void {\r\n        // If we were connecting\r\n        if (this.isConnecting()) {\r\n            if (this.connectTimeout) clearTimeout(this.connectTimeout);\r\n            this.connectTimeout = null;\r\n            this.consumeConnectCallbacks(false);\r\n        }\r\n        // If the socket was connected, disconnect it\r\n        if (this.isConnected()) {\r\n            if (this.lastSentWritingStateRoom && this.lastSentWritingState === true)\r\n                this.sendWritingState(this.lastSentWritingStateRoom, false);\r\n            if (this.socket) this.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return this.socket !== null && this.socket.connected;\r\n    }\r\n\r\n    isConnecting(): boolean {\r\n        return this.connectTimeout !== null;\r\n    }\r\n}\r\n\r\nexport default new ChatSocket();\r\n","import chatSocket from \"../../api/chat-socket\";\r\nimport {convertDtoToChatMessage, convertDtoToRoom} from \"../../api/converters\";\r\nimport {\r\n    PaginatedRequestResponse,\r\n    ResponseChatMessageDto,\r\n    ResponseChatMessageReadDto,\r\n    ResponseChatWritingDto,\r\n    ResponseRoomDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MESSAGES_FETCH_LIMIT, ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ChatRoom, ChatRoomMessage} from \"../../model/chat-room\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum MESSAGING_ACTION_TYPES {\r\n    FETCH_MATCH_ROOMS_BEGIN = \"MESSAGING/FETCH_MATCH_ROOMS_BEGIN\",\r\n    FETCH_MATCH_ROOMS_FAILURE = \"MESSAGING/FETCH_MATCH_ROOMS_FAILURE\",\r\n    FETCH_MATCH_ROOMS_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOMS_SUCCESS\",\r\n    FETCH_MATCH_ROOMS_REFRESH = \"MESSAGING/FETCH_MATCH_ROOMS_REFRESH\",\r\n    CONNECT_TO_CHAT_BEGIN = \"MESSAGING/CONNECT_TO_CHAT_BEGIN\",\r\n    CONNECT_TO_CHAT_FAILURE = \"MESSAGING/CONNECT_TO_CHAT_FAILURE\",\r\n    CONNECT_TO_CHAT_SUCCESS = \"MESSAGING/CONNECT_TO_CHAT_SUCCESS\",\r\n    DISCONNECT_FROM_CHAT = \"MESSAGING/DISCONNECT_FROM_CHAT\",\r\n    JOIN_CHAT_ROOM_BEGIN = \"MESSAGING/JOIN_CHAT_ROOM_BEGIN\",\r\n    JOIN_CHAT_ROOM_FAILURE = \"MESSAGING/JOIN_CHAT_ROOM_FAILURE\",\r\n    JOIN_CHAT_ROOM_SUCCESS = \"MESSAGING/JOIN_CHAT_ROOM_SUCCESS\",\r\n    LEAVE_ROOM = \"MESSAGING/LEAVE_ROOM\",\r\n    SEND_MESSAGE_FAILURE = \"MESSAGING/SEND_MESSAGE_FAILURE\",\r\n    SEND_MESSAGE_SUCCESS = \"MESSAGING/SEND_MESSAGE_SUCCESS\",\r\n    RECEIVE_MESSAGE = \"MESSAGING/RECEIVE_MESSAGE\",\r\n    RECEIVE_WRITING_STATE = \"MESSAGING/RECEIVE_WRITING_STATE\",\r\n    READ_MESSAGE = \"MESSAGING/READ_MESSAGE\",\r\n    FETCH_EARLIER_MESSAGES_BEGIN = \"MESSAGING/FETCH_EARLIER_MESSAGES_BEGIN\",\r\n    FETCH_EARLIER_MESSAGES_FAILURE = \"MESSAGING/FETCH_EARLIER_MESSAGES_FAILURE\",\r\n    FETCH_EARLIER_MESSAGES_SUCCESS = \"MESSAGING/FETCH_EARLIER_MESSAGES_SUCCESS\",\r\n    FETCH_NEW_MESSAGES_BEGIN = \"MESSAGING/FETCH_NEW_MESSAGES_BEGIN\",\r\n    FETCH_NEW_MESSAGES_FAILURE = \"MESSAGING/FETCH_NEW_MESSAGES_FAILURE\",\r\n    FETCH_NEW_MESSAGES_SUCCESS = \"MESSAGING/FETCH_NEW_MESSAGES_SUCCESS\",\r\n}\r\n\r\nexport type FetchMatchRoomsBeginAction = {type: string};\r\nexport type FetchMatchRoomsFailureAction = {type: string};\r\nexport type FetchMatchRoomsSuccessAction = {\r\n    type: string;\r\n    rooms: ChatRoom[];\r\n    canFetchMore: boolean;\r\n};\r\nexport type FetchMatchRoomsRefreshAction = {type: string};\r\n\r\nexport type ConnectToChatBeginAction = {type: string};\r\nexport type ConnectToChatFailureAction = {type: string};\r\nexport type ConnectToChatSuccessAction = {type: string};\r\n\r\nexport type JoinChatRoomBeginAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomFailureAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomSuccessAction = {type: string; room: ChatRoom};\r\nexport type LeaveChatRoomAction = {type: string};\r\n\r\nexport type DisconnectFromChatAction = {type: string};\r\n\r\nexport type SendMessageFailureAction = {type: string};\r\nexport type SendMessageSuccessAction = {type: string; message: ChatRoomMessage};\r\nexport type ReceiveChatMessageAction = {type: string; message: ResponseChatMessageDto};\r\nexport type ReceiveChatWritingAction = {type: string; payload: ResponseChatWritingDto};\r\nexport type ReadChatMessageAction = {type: string; payload: ResponseChatMessageReadDto};\r\n\r\nexport type FetchEarlierMessagesBeginAction = {type: string; room: ChatRoom};\r\nexport type FetchEarlierMessagesFailureAction = {type: string; room: ChatRoom};\r\nexport type FetchEarlierMessagesSuccessAction = {\r\n    type: string;\r\n    room: ChatRoom;\r\n    messages: ChatRoomMessage[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type FetchNewMessagesBeginAction = {type: string; room: ChatRoom};\r\nexport type FetchNewMessagesFailureAction = {type: string; room: ChatRoom};\r\nexport type FetchNewMessagesSuccessAction = {\r\n    type: string;\r\n    room: ChatRoom;\r\n    messages: ChatRoomMessage[];\r\n};\r\n\r\nexport type MessagingAction =\r\n    | FetchMatchRoomsFailureAction\r\n    | FetchMatchRoomsSuccessAction\r\n    | FetchMatchRoomsRefreshAction\r\n    | ConnectToChatBeginAction\r\n    | ConnectToChatFailureAction\r\n    | ConnectToChatSuccessAction\r\n    | JoinChatRoomBeginAction\r\n    | JoinChatRoomFailureAction\r\n    | JoinChatRoomSuccessAction\r\n    | LeaveChatRoomAction\r\n    | DisconnectFromChatAction\r\n    | SendMessageFailureAction\r\n    | SendMessageSuccessAction\r\n    | ReceiveChatMessageAction\r\n    | FetchEarlierMessagesBeginAction\r\n    | FetchEarlierMessagesFailureAction\r\n    | FetchEarlierMessagesSuccessAction\r\n    | FetchNewMessagesBeginAction\r\n    | FetchNewMessagesFailureAction\r\n    | FetchNewMessagesSuccessAction;\r\n\r\nconst beginFetchMatchRooms = (): FetchMatchRoomsBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN,\r\n});\r\n\r\nconst fetchMatchRoomsFailure = (): FetchMatchRoomsFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE,\r\n});\r\n\r\nconst fetchMatchRoomsSuccess = (rooms: ChatRoom[], canFetchMore: boolean): FetchMatchRoomsSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS,\r\n    rooms,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchMatchRooms = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const token = state.auth.token;\r\n    const pagination = state.messaging.matchRoomsPagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchMatchRooms());\r\n\r\n    const response = await requestBackend(\r\n        \"rooms\",\r\n        \"GET\",\r\n        {page: pagination.page, limit: ROOMS_FETCH_LIMIT, search},\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const rooms = (paginated.data as ResponseRoomDto[]).map(convertDtoToRoom);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMatchRoomsSuccess(rooms, canFetchMore));\r\n    } else dispatch(fetchMatchRoomsFailure());\r\n};\r\n\r\nexport const refreshMatchRooms = (): FetchMatchRoomsRefreshAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH,\r\n});\r\n\r\nconst connectToChatBegin = (): ConnectToChatBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN,\r\n});\r\n\r\nconst connectToChatFailure = (): ConnectToChatFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE,\r\n});\r\n\r\nconst connectToChatSuccess = (): ConnectToChatSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS,\r\n});\r\n\r\nexport const connectToChat = (callback?: (connected: boolean) => void): AppThunk => async (dispatch, getState) => {\r\n    const authToken = getState().auth.token;\r\n\r\n    const fail = () => {\r\n        dispatch(connectToChatFailure());\r\n        if (callback) callback(false);\r\n    };\r\n\r\n    if (chatSocket.isConnected()) {\r\n        if (callback) callback(true);\r\n    } else if (authToken) {\r\n        if (chatSocket.isConnecting()) {\r\n            if (callback) chatSocket.addConnectCallback(callback);\r\n        } else {\r\n            dispatch(connectToChatBegin());\r\n            chatSocket.connect(\r\n                authToken,\r\n                {\r\n                    onMessageReceived: (m) => {\r\n                        const {activeRoom} = getState().messaging;\r\n                        // Tell the server we've read the message if this is the active room\r\n                        if (activeRoom && m.roomId == activeRoom.id)\r\n                            chatSocket.readMessage(activeRoom.id, m.id, m.updatedAt);\r\n                        dispatch(receiveChatMessage(m));\r\n                    },\r\n                    onMessageRead: (p) => dispatch(readChatMessage(p)),\r\n                    onWritingStateChange: (m) => dispatch(receiveChatWriting(m)),\r\n                },\r\n                (hasConnected: boolean) => {\r\n                    if (hasConnected) {\r\n                        dispatch(connectToChatSuccess());\r\n                        if (callback) callback(true);\r\n                    } else fail();\r\n                },\r\n            );\r\n        }\r\n    } else fail();\r\n};\r\n\r\nexport const disconnectFromChat = (): DisconnectFromChatAction => {\r\n    chatSocket.disconnect();\r\n    return {type: MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT};\r\n};\r\n\r\nconst joinChatRoomBegin = (room: ChatRoom): JoinChatRoomBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomFailure = (room: ChatRoom): JoinChatRoomFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomSuccess = (room: ChatRoom): JoinChatRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const joinChatRoom = (room: ChatRoom): AppThunk => async (dispatch) => {\r\n    if (chatSocket.isConnected()) {\r\n        dispatch(joinChatRoomBegin(room));\r\n        chatSocket.joinRoom(room);\r\n        dispatch(joinChatRoomSuccess(room));\r\n    } else dispatch(joinChatRoomFailure(room));\r\n};\r\n\r\nexport const leaveChatRoom = (room: ChatRoom): LeaveChatRoomAction => {\r\n    chatSocket.leaveRoom(room);\r\n    return {type: MESSAGING_ACTION_TYPES.LEAVE_ROOM};\r\n};\r\n\r\nconst sendChatMessageFailure = (): SendMessageFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_FAILURE,\r\n});\r\n\r\nconst sendChatMessageSuccess = (message: ChatRoomMessage): SendMessageSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n});\r\n\r\nexport const sendChatMessage = (id: string, text: string, createdAt: Date): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        socketState: {connected},\r\n        activeRoom,\r\n        localChatUser,\r\n    } = getState().messaging;\r\n\r\n    if (connected && activeRoom && localChatUser) {\r\n        const message: ChatRoomMessage = {\r\n            _id: id,\r\n            createdAt,\r\n            user: localChatUser,\r\n            text,\r\n            sent: false,\r\n        };\r\n        dispatch(sendChatMessageSuccess(message));\r\n        chatSocket.sendMessage(activeRoom.id, id, text);\r\n    } else dispatch(sendChatMessageFailure());\r\n};\r\n\r\nconst receiveChatMessage = (message: ResponseChatMessageDto): ReceiveChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE,\r\n    message,\r\n});\r\n\r\nconst receiveChatWriting = (payload: ResponseChatWritingDto): ReceiveChatWritingAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE,\r\n    payload,\r\n});\r\n\r\nconst readChatMessage = (payload: ResponseChatMessageReadDto): ReadChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.READ_MESSAGE,\r\n    payload,\r\n});\r\n\r\nconst fetchEarlierMessagesBegin = (room: ChatRoom): FetchEarlierMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesFailure = (room: ChatRoom): FetchEarlierMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchEarlierMessagesSuccess = (\r\n    room: ChatRoom,\r\n    messages: ChatRoomMessage[],\r\n    canFetchMore: boolean,\r\n): FetchEarlierMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS,\r\n    room,\r\n    messages,\r\n    canFetchMore,\r\n});\r\n\r\nconst fetchNewMessagesBegin = (room: ChatRoom): FetchNewMessagesBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesFailure = (room: ChatRoom): FetchNewMessagesFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE,\r\n    room,\r\n});\r\n\r\nconst fetchNewMessagesSuccess = (room: ChatRoom, messages: ChatRoomMessage[]): FetchNewMessagesSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS,\r\n    room,\r\n    messages,\r\n});\r\n\r\n/**\r\n * Fetch all messages that are more recent than the last one we have for a given room.\r\n * @param room a ChatRoom\r\n */\r\nexport const fetchNewMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {fetchingNewMessages} = state.messaging;\r\n    const token = state.auth.token;\r\n\r\n    if (fetchingNewMessages) return;\r\n    const lastMessage = room.lastMessage;\r\n\r\n    if (chatSocket.isConnected() && lastMessage) {\r\n        dispatch(fetchNewMessagesBegin(room));\r\n\r\n        // Fetch messages only after the date of the latest message we have\r\n        const afterDate = lastMessage.createdAt.toJSON();\r\n\r\n        const fetchPage = async (page: number) => {\r\n            const response = await requestBackend(\r\n                `rooms/${room.id}/messages`,\r\n                \"GET\",\r\n                {page, limit: MESSAGES_FETCH_LIMIT, afterDate},\r\n                {},\r\n                token,\r\n            );\r\n\r\n            const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n                const user = room.users.find((u) => u._id === dto.senderId);\r\n                return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n            };\r\n\r\n            if (response.status === HttpStatusCode.OK) {\r\n                const paginated = response as PaginatedRequestResponse;\r\n                const messages = (paginated.data as ResponseChatMessageDto[])\r\n                    .map(convertDto)\r\n                    .filter((m) => m !== undefined);\r\n\r\n                // Keep fetching if there are more messages to fetch\r\n                if (page < paginated.meta.totalPages) fetchPage(page + 1);\r\n                else if (messages.length > 0 && messages[0]) {\r\n                    // Inform the server that we've read the last message\r\n                    chatSocket.readMessage(room.id, messages[0]._id, messages[0].createdAt.toJSON());\r\n                }\r\n                dispatch(fetchNewMessagesSuccess(room, messages as ChatRoomMessage[]));\r\n            } else dispatch(fetchNewMessagesFailure(room));\r\n        };\r\n\r\n        fetchPage(1);\r\n    } else {\r\n        dispatch(fetchNewMessagesFailure(room));\r\n    }\r\n};\r\n\r\nexport const fetchEarlierMessages = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const {\r\n        socketState: {connected},\r\n    } = state.messaging;\r\n    const token = state.auth.token;\r\n    const pagination = room.messagePagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    if (connected) {\r\n        dispatch(fetchEarlierMessagesBegin(room));\r\n\r\n        // Fetch messages only before the date of the earliest message we have\r\n        const beforeDate =\r\n            room.messages.length > 0 ? room.messages[room.messages.length - 1].createdAt.toJSON() : undefined;\r\n\r\n        const response = await requestBackend(\r\n            `rooms/${room.id}/messages`,\r\n            \"GET\",\r\n            {page: 1, limit: MESSAGES_FETCH_LIMIT, beforeDate},\r\n            {},\r\n            token,\r\n        );\r\n\r\n        const convertDto = (dto: ResponseChatMessageDto): ChatRoomMessage | undefined => {\r\n            const user = room.users.find((u) => u._id === dto.senderId);\r\n            return user ? convertDtoToChatMessage(user, dto) : undefined;\r\n        };\r\n\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const paginated = response as PaginatedRequestResponse;\r\n            const messages = (paginated.data as ResponseChatMessageDto[])\r\n                .map(convertDto)\r\n                .filter((m) => m !== undefined);\r\n            const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n            dispatch(fetchEarlierMessagesSuccess(room, messages as ChatRoomMessage[], canFetchMore));\r\n        } else dispatch(fetchEarlierMessagesFailure(room));\r\n    } else {\r\n        dispatch(fetchEarlierMessagesFailure(room));\r\n    }\r\n};\r\n\r\nexport const fetchMatchRoom = (roomId: string): AppThunk<Promise<ChatRoom | null>> => async (dispatch, getState) => {\r\n    const {token} = getState().auth;\r\n\r\n    const response = await requestBackend(`rooms/${roomId}`, \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        return convertDtoToRoom(payload as ResponseRoomDto);\r\n    } else return null;\r\n};\r\n","import {convertDtoToChatMessage} from \"../../api/converters\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {CreateProfileSuccessAction, FetchUserSuccessAction, PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {MessagingState, initialPaginatedState} from \"../types\";\r\nimport {\r\n    FetchEarlierMessagesBeginAction,\r\n    FetchEarlierMessagesFailureAction,\r\n    FetchEarlierMessagesSuccessAction,\r\n    FetchMatchRoomsSuccessAction,\r\n    FetchNewMessagesSuccessAction,\r\n    JoinChatRoomBeginAction,\r\n    MessagingAction,\r\n    MESSAGING_ACTION_TYPES,\r\n    ReadChatMessageAction,\r\n    ReceiveChatMessageAction,\r\n    ReceiveChatWritingAction,\r\n    SendMessageSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: MessagingState = {\r\n    matchRooms: {},\r\n    matchRoomsOrdered: [],\r\n    matchRoomsPagination: initialPaginatedState(),\r\n    socketState: {connected: false, connecting: false},\r\n    activeRoom: null,\r\n    localChatUser: null,\r\n    fetchingNewMessages: false,\r\n};\r\n\r\nfunction toLocalChatUser(profile: UserProfile): ChatRoomUser | null {\r\n    return {\r\n        _id: profile.id,\r\n        name: `${profile.firstName} ${profile.lastName}`,\r\n        avatar: profile.avatarUrl || \"\",\r\n        lastMessageSeenDate: null,\r\n        lastMessageSeenId: null,\r\n    };\r\n}\r\n\r\nexport const messagingReducer = (state: MessagingState = initialState, action: MessagingAction): MessagingState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return user.profile ? {...state, localChatUser: toLocalChatUser(user.profile)} : {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            const {profile} = action as CreateProfileSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(profile)};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN: {\r\n            return {...state, matchRoomsPagination: {...state.matchRoomsPagination, fetching: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                matchRoomsPagination: {...state.matchRoomsPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS: {\r\n            const {rooms, canFetchMore} = <FetchMatchRoomsSuccessAction>action;\r\n            const pagination = state.matchRoomsPagination;\r\n            const matchRooms = {...state.matchRooms};\r\n            // Add entries in the rooms dictionary\r\n            rooms.forEach((r: ChatRoom) => {\r\n                if (matchRooms[r.id]) {\r\n                    matchRooms[r.id] = {...matchRooms[r.id], lastMessage: r.lastMessage, users: r.users};\r\n                } else {\r\n                    matchRooms[r.id] = r;\r\n                }\r\n            });\r\n            const ids = rooms.map((r: ChatRoom) => r.id);\r\n\r\n            return {\r\n                ...state,\r\n                matchRooms,\r\n                matchRoomsOrdered: pagination.page === 1 ? ids : state.matchRoomsOrdered.concat(ids),\r\n                matchRoomsPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH: {\r\n            return {\r\n                ...state,\r\n                // Reset the pagination\r\n                matchRoomsPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN: {\r\n            return {...state, socketState: {connected: false, connecting: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS: {\r\n            return {...state, socketState: {connected: true, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN: {\r\n            const {room} = action as JoinChatRoomBeginAction;\r\n            return {...state, activeRoom: room};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE: {\r\n            return {...state, activeRoom: null};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.LEAVE_ROOM: {\r\n            return {...state, activeRoom: null};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS: {\r\n            const {message} = action as SendMessageSuccessAction;\r\n            if (state.activeRoom) {\r\n                return updateRoom(state, true, {\r\n                    ...state.activeRoom,\r\n                    messages: [message].concat(state.activeRoom.messages),\r\n                    lastMessage: message,\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE: {\r\n            const {message} = action as ReceiveChatMessageAction;\r\n\r\n            let room = state.matchRooms[message.roomId];\r\n            if (room) {\r\n                room = {...room};\r\n                // Start by checking if this is an existing message (e.g. our own message)\r\n                const existingMessage = room.messages.find((m: ChatRoomMessage) => m._id === message.id);\r\n                if (existingMessage) {\r\n                    const msg = {...existingMessage, sent: true, text: message.text};\r\n\r\n                    // Update the message in the list\r\n                    room.messages = room.messages.map((m: ChatRoomMessage) => (m._id === message.id ? msg : m));\r\n\r\n                    // Also update the last message\r\n                    if (!room.lastMessage || msg.createdAt >= room.lastMessage.createdAt) room.lastMessage = msg;\r\n                } else {\r\n                    const user = room.users.find((u: ChatRoomUser) => u._id == message.senderId);\r\n                    if (user) {\r\n                        const msg = convertDtoToChatMessage(user, message);\r\n                        room.messages = [msg].concat(room.messages);\r\n                        room.lastMessage = msg;\r\n                        room.writing[message.senderId] = false;\r\n                    }\r\n                }\r\n                return updateRoom(state, true, room);\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_WRITING_STATE: {\r\n            const payload = (action as ReceiveChatWritingAction).payload;\r\n            const {profileId, roomId} = payload;\r\n\r\n            // Just ignore if this is about our own writing state\r\n            if (state.localChatUser && state.localChatUser._id === profileId) return state;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    writing: {...room.writing, [profileId]: payload.state},\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.READ_MESSAGE: {\r\n            const {roomId, date, messageId, profileId} = (action as ReadChatMessageAction).payload;\r\n\r\n            const room = state.matchRooms[roomId];\r\n            if (room) {\r\n                return updateRoom(state, false, {\r\n                    ...room,\r\n                    users: room.users.map((u: ChatRoomUser) =>\r\n                        u._id == profileId\r\n                            ? {...u, lastMessageSeenDate: new Date(date), lastMessageSeenId: messageId}\r\n                            : u,\r\n                    ),\r\n                });\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_BEGIN: {\r\n            const {room} = action as FetchEarlierMessagesBeginAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: true},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_FAILURE: {\r\n            const {room} = action as FetchEarlierMessagesFailureAction;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messagePagination: {...room.messagePagination, fetching: false, canFetchMore: false},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_EARLIER_MESSAGES_SUCCESS: {\r\n            const {room, messages, canFetchMore} = action as FetchEarlierMessagesSuccessAction;\r\n            const pagination = room.messagePagination;\r\n            return updateRoom(state, false, {\r\n                ...room,\r\n                messages: room.messages.concat(messages),\r\n                messagePagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            });\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_BEGIN: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: true,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                fetchingNewMessages: false,\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_NEW_MESSAGES_SUCCESS: {\r\n            const {room, messages} = action as FetchNewMessagesSuccessAction;\r\n            const filteredMessages = messages.filter((ma) => !room.messages.some((mb) => mb._id === ma._id));\r\n            const users = room.users.concat(); // copy\r\n\r\n            // Update the last message seen for the user who sent it\r\n            if (filteredMessages.length > 0) {\r\n                const lastMessage = filteredMessages[0];\r\n                const i = users.findIndex((u) => u._id === lastMessage.user._id);\r\n                users[i] = {\r\n                    ...users[i],\r\n                    lastMessageSeenId: lastMessage._id,\r\n                    lastMessageSeenDate: lastMessage.createdAt,\r\n                };\r\n            }\r\n\r\n            return updateRoom({...state, fetchingNewMessages: false}, false, {\r\n                ...room,\r\n                messages: filteredMessages.concat(room.messages),\r\n                users,\r\n                ...(filteredMessages.length > 0 ? {lastMessage: filteredMessages[0]} : {}),\r\n            });\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                activeRoom: null,\r\n                matchRooms: {},\r\n                matchRoomsOrdered: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n                localChatUser: null,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateRoom(state: MessagingState, setAsFirst: boolean, room: ChatRoom): MessagingState {\r\n    const activeRoom = state.activeRoom && state.activeRoom.id == room.id ? room : state.activeRoom;\r\n\r\n    if (setAsFirst) {\r\n        const otherRooms = state.matchRoomsOrdered.filter((id: string) => id !== room.id);\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            matchRoomsOrdered: [room.id].concat(otherRooms),\r\n            activeRoom,\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            matchRooms: {...state.matchRooms, [room.id]: room},\r\n            activeRoom,\r\n        };\r\n    }\r\n}\r\n","import {NotificationsState} from \"../types\";\r\nimport {NotificationsAction} from \"./actions\";\r\n\r\nexport const initialState: NotificationsState = {};\r\n\r\nexport const notificationsReducer = (\r\n    state: NotificationsState = initialState,\r\n    action: NotificationsAction,\r\n): NotificationsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {ReportsState} from \"../types\";\r\nimport {ReportAction} from \"./actions\";\r\n\r\nexport const initialState: ReportsState = {};\r\n\r\nexport const reportsReducer = (state: ReportsState = initialState, action: ReportAction): ReportsState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef} from \"@react-navigation/native\";\r\nimport {NavigatorRoute} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME, WEB_TO_APP_TIMEOUT} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ntype RouteParams = Record<string, string | object | undefined | null>;\r\n\r\nexport function rootNavigate(route: NavigatorRoute, params?: RouteParams): void {\r\n    rootNavigationRef.current?.navigate(route as string, params);\r\n}\r\n\r\nexport function navigateBack(fallback?: NavigatorRoute): void {\r\n    const nav = rootNavigationRef.current;\r\n    if (nav) {\r\n        if (nav.canGoBack()) nav.goBack();\r\n        else if (fallback) nav.navigate(fallback);\r\n    }\r\n}\r\n\r\nexport function attemptRedirectToApp(routeName: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS === \"web\") {\r\n        const link = `${APP_SCHEME}://${routeName}`;\r\n        window.location.replace(link);\r\n\r\n        // TODO look at Linking.openURL and Linking.canOpenURL\r\n        setTimeout(() => {\r\n            console.log(\r\n                `Failed to redirect to ${link} (perhaps app is not installed on this device) - Staying on web version`,\r\n            );\r\n            fallback();\r\n        }, WEB_TO_APP_TIMEOUT);\r\n    } else fallback();\r\n}\r\n\r\nexport function unauthorizedRedirect(): void {\r\n    rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n\r\nexport function headerTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`);\r\n}\r\n\r\nexport function openChat(roomId: string): void {\r\n    rootNavigate(\"TabMessaging\", {screen: \"ChatScreen\", params: {roomId}});\r\n}\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingLegalScreen1\",\r\n    \"OnboardingLegalScreen2\",\r\n    \"OnboardingLegalScreen3\",\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingProfileScreen1\",\r\n    \"OnboardingProfileScreen2\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import {Platform} from \"react-native\";\r\nimport {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {COOKIE_CONSENT_DURATION} from \"../constants/config\";\r\nimport {clearStaticData, storeStaticData} from \"./persistent-storage/static\";\r\nimport {\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./profile/actions\";\r\nimport {SaveCookiesPreferencesAction, SetLocaleAction, SetThemeAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    // Handle cookie preferences changes\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const oldCookies = store.getState().settings.userSettings.cookies;\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n\r\n            // Store data for cookies that were accepted by the user\r\n            if (!oldCookies.cache && cookies.cache) {\r\n                const {offers, interests} = store.getState().profile;\r\n                storeStaticData(\"interests\", interests, cookies.cache);\r\n                storeStaticData(\"offers\", offers, cookies.cache);\r\n            }\r\n            if (!oldCookies.settings && cookies.settings) {\r\n                const {locale, theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"locale\", locale, cookies.settings);\r\n                storeStaticData(\"theme\", theme, cookies.settings);\r\n            }\r\n\r\n            // Discard cookies that were refused by the user\r\n            if (oldCookies.cache && !cookies.cache) clearStaticData(\"interests\", \"offers\");\r\n            if (oldCookies.settings && !cookies.settings) clearStaticData(\"locale\", \"theme\");\r\n\r\n            // Store new cookies preferences\r\n            storeStaticData(\"cookies\", cookies, true);\r\n            storeStaticData(\"cookieConsentDate\", new Date(Date.now()).toJSON(), true);\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    // Handle storage that requires cookie consent from the user\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n                const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n                if (!fromCache) storeStaticData(\"interests\", interests, cookies.cache);\r\n                break;\r\n            }\r\n            case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n                const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n                if (!fromCache) storeStaticData(\"offers\", offers, cookies.cache);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n                const {locale, fromCache} = action as SetLocaleAction;\r\n                if (!fromCache) storeStaticData(\"locale\", locale, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n                const {theme, fromCache} = action as SetThemeAction;\r\n                if (!fromCache) storeStaticData(\"theme\", theme, cookies.settings);\r\n                break;\r\n            }\r\n            case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n                const {theme} = store.getState().settings.userSettings;\r\n                storeStaticData(\"theme\", theme === \"dark\" ? \"light\" : \"dark\", cookies.settings);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport function hasUserGivenCookieConsent(consentDate: Date | null): boolean {\r\n    // Never ask the user in the native version of the app\r\n    if (Platform.OS !== \"web\") return true;\r\n    return consentDate !== null && (Date.now() - consentDate.getTime()) / 1000 < COOKIE_CONSENT_DURATION;\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {AppState} from \"./types\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {discardAuthInformation, storeAuthInformation} from \"./persistent-storage/auth\";\r\nimport {SaveCookiesPreferencesAction, SETTINGS_ACTION_TYPES} from \"./settings/actions\";\r\nimport {hasUserGivenCookieConsent} from \"./static-storage-middleware\";\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = (store) => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        // Handle cookie preferences changes\r\n        case SETTINGS_ACTION_TYPES.SAVE_COOKIES_PREFERENCES: {\r\n            const cookies = (action as SaveCookiesPreferencesAction).preferences;\r\n            if (cookies.auth) {\r\n                // Store again when accepting the auth cookie\r\n                const token = store.getState().auth.token;\r\n                const user = store.getState().profile.user;\r\n                if (token && user) storeAuthInformation(user.email, token);\r\n            } else {\r\n                // Discard when refusing the auth cookie\r\n                discardAuthInformation();\r\n            }\r\n            break;\r\n        }\r\n        // Discard when needed\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n\r\n    const {cookies, cookieConsentDate} = store.getState().settings.userSettings;\r\n\r\n    if (hasUserGivenCookieConsent(cookieConsentDate)) {\r\n        switch (action.type) {\r\n            case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n                const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n                // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n                if (!usingCachedCredentials && cookies.auth) storeAuthInformation(user.email, token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {requestBackend} from \"../../api/utils\";\r\nimport {AppThunk} from \"../types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\n\r\nexport enum NOTIFICATIONS_ACTION_TYPES {\r\n    REGISTER_TOKEN_SUCCESS = \"NOTIFICATIONS/REGISTER_TOKEN_SUCCESS\",\r\n    DELETE_TOKEN_SUCCESS = \"NOTIFICATIONS/DELETE_TOKEN_SUCCESS\",\r\n}\r\n\r\nexport type RegisterNotificationSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type DeleteNotificationTokenSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type NotificationsAction = RegisterNotificationSuccessAction & DeleteNotificationTokenSuccessAction;\r\n\r\nexport const registerNotificationToken = (pushToken: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"POST\", {}, {token: pushToken}, token, true);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(registerNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst registerNotificationTokenSuccess = (): RegisterNotificationSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.REGISTER_TOKEN_SUCCESS,\r\n});\r\n\r\nexport const deleteNotificationToken = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"notifications/token\", \"DELETE\", {}, {}, token, true);\r\n    if (response.status === HttpStatusCode.NO_CONTENT) {\r\n        dispatch(deleteNotificationTokenSuccess());\r\n    }\r\n};\r\n\r\nconst deleteNotificationTokenSuccess = (): DeleteNotificationTokenSuccessAction => ({\r\n    type: NOTIFICATIONS_ACTION_TYPES.DELETE_TOKEN_SUCCESS,\r\n});\r\n","import * as Notifications from \"expo-notifications\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport Constants from \"expo-constants\";\r\nimport {Platform} from \"react-native\";\r\nimport {openChat} from \"./navigation/utils\";\r\n\r\nfunction areNotificationsSupported(): boolean {\r\n    return Constants.isDevice && Platform.OS !== \"web\";\r\n}\r\n\r\nfunction getNotificationData(notif: Notifications.Notification) {\r\n    return notif.request.content.data;\r\n}\r\n\r\nexport function configureNotifications(): void {\r\n    if (!areNotificationsSupported()) return;\r\n\r\n    Notifications.setNotificationHandler({\r\n        handleNotification: async () => ({\r\n            shouldShowAlert: true,\r\n            shouldPlaySound: true,\r\n            shouldSetBadge: false,\r\n        }),\r\n    });\r\n\r\n    Notifications.addNotificationReceivedListener((notification) => {\r\n        console.log(\"Notification received:\");\r\n        console.log(notification.request.content);\r\n    });\r\n\r\n    Notifications.addNotificationResponseReceivedListener((response) => {\r\n        console.log(\"Notification response received:\");\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const data = response.notification ? getNotificationData(response.notification) : (response as any).body;\r\n\r\n        Notifications.getPresentedNotificationsAsync().then((notifs: Notifications.Notification[]) => {\r\n            if (data.roomId) {\r\n                // Dismiss all notifications of the same room\r\n                notifs\r\n                    .filter((n) => getNotificationData(n).roomId === data.roomId)\r\n                    .map((n) => n.request.identifier)\r\n                    .forEach(Notifications.dismissNotificationAsync);\r\n            }\r\n        });\r\n\r\n        if (data.roomId) openChat(data.roomId as string);\r\n    });\r\n\r\n    if (Platform.OS === \"android\") {\r\n        Notifications.setNotificationChannelAsync(\"default\", {\r\n            name: \"default\",\r\n            importance: Notifications.AndroidImportance.MAX,\r\n            vibrationPattern: [0, 250, 250, 250],\r\n            lightColor: \"#FF231F7C\",\r\n        });\r\n    }\r\n}\r\n\r\nexport async function askForPushNotificationToken(): Promise<string | null> {\r\n    if (!areNotificationsSupported()) return null;\r\n\r\n    let status = (await Permissions.getAsync(Permissions.NOTIFICATIONS)).status;\r\n    if (status !== \"granted\") status = (await Permissions.askAsync(Permissions.NOTIFICATIONS)).status;\r\n\r\n    if (status === \"granted\") {\r\n        const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n        return token;\r\n    } else {\r\n        // User refused notifications\r\n        return null;\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport {messagingReducer} from \"./messaging/reducer\";\r\nimport {notificationsReducer} from \"./notifications/reducer\";\r\nimport {reportsReducer} from \"./reports/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\nimport {notificationsMiddleware} from \"./notifications-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n    messaging: messagingReducer,\r\n    notifications: notificationsReducer,\r\n    reports: reportsReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(\r\n    thunk,\r\n    authStorageMiddleware,\r\n    staticStorageMiddleware,\r\n    navigationMiddleware,\r\n    notificationsMiddleware,\r\n);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {AUTH_ACTION_TYPES, beginOnboarding, LogInSuccessAction, LogOutAction} from \"./auth/actions\";\r\nimport {ActionCancelSuccessAction, MATCHING_ACTION_TYPES} from \"./matching/actions\";\r\nimport {PROFILE_ACTION_TYPES} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    if (DEBUG_MODE) console.log(action.type);\r\n\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            if (user.onboarded) rootNavigate(\"MainScreen\");\r\n            else store.dispatch(beginOnboarding());\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            const {redirect} = action as LogOutAction;\r\n            if (redirect) {\r\n                rootNavigate(\"LoginRoot\", {\r\n                    screen: \"LoginScreens\",\r\n                    params: {screen: \"SigninScreen\"},\r\n                });\r\n            }\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            // Let the user click\r\n            // attemptRedirectToApp(\"login\", \"SigninScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.BEGIN_ONBOARDING: {\r\n            rootNavigate(\"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.PREVIOUS_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex - 1]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.NEXT_ONBOARDING_SLIDE: {\r\n            rootNavigate(ONBOARDING_ORDER[store.getState().auth.onboardingIndex + 1]);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.DELETE_ACCOUNT_SUCCESS: {\r\n            rootNavigate(\"DeleteAccountSuccessScreen\");\r\n            break;\r\n        }\r\n        case MATCHING_ACTION_TYPES.ACTION_CANCEL_SUCCESS: {\r\n            const {isMatch} = action as ActionCancelSuccessAction;\r\n            // When un-matching someone, navigate back from their profile to MainScreen\r\n            if (isMatch) rootNavigate(\"MainScreen\", {screen: \"TabMatching\"});\r\n            break;\r\n        }\r\n    }\r\n};\r\n","import {AnyAction, Middleware, Dispatch, MiddlewareAPI} from \"redux\";\r\nimport {AppState, MyThunkDispatch} from \"./types\";\r\nimport {AUTH_ACTION_TYPES} from \"./auth/actions\";\r\nimport {askForPushNotificationToken} from \"../notifications\";\r\nimport {deleteNotificationToken, registerNotificationToken} from \"./notifications/actions\";\r\n\r\nexport const notificationsMiddleware: Middleware<unknown, AppState> = (store: MiddlewareAPI<Dispatch, AppState>) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            // Register push notifications\r\n            askForPushNotificationToken().then((pushToken: string | null) => {\r\n                // The token will be null if the device does not support push notifications,\r\n                // or we did not get permission from the user.\r\n                if (pushToken !== null) (store.dispatch as MyThunkDispatch)(registerNotificationToken(pushToken));\r\n            });\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            // Discard the token\r\n            (store.dispatch as MyThunkDispatch)(deleteNotificationToken());\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {User} from \"../model/user\";\r\nimport {CookiesPreferences} from \"../model/user-settings\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {attemptLoginFromCache} from \"../state/auth/actions\";\r\nimport {readCachedStaticData, storeStaticData} from \"../state/persistent-storage/static\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport {loadCookiesPreferences, loadVersionInfo, setLocale, setTheme} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nlet loggedInFromCache: User | undefined = undefined;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // TODO Improve data loading\r\n                //  - show something if the backend couldn't be reached\r\n\r\n                // Load static data\r\n                await dispatch(loadProfileOffers());\r\n                await dispatch(loadProfileInterests());\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    Raleway: require(\"@assets/fonts/Raleway-Regular.ttf\"),\r\n                    RalewayThin: require(\"@assets/fonts/Raleway-Thin.ttf\"),\r\n                    RalewayLight: require(\"@assets/fonts/Raleway-Light.ttf\"),\r\n                    RalewaySemiBold: require(\"@assets/fonts/Raleway-SemiBold.ttf\"),\r\n                    RalewayBold: require(\"@assets/fonts/Raleway-Bold.ttf\"),\r\n                });\r\n\r\n                // Read cookie consent information from persistent storage\r\n                readCachedStaticData(\"cookieConsentDate\").then((consentDate) => {\r\n                    readCachedStaticData(\"cookies\").then((cookies) => {\r\n                        if (consentDate && cookies) {\r\n                            const date = new Date(consentDate.data as string);\r\n                            store.dispatch(loadCookiesPreferences(cookies.data as CookiesPreferences, date));\r\n                        } else {\r\n                            // On mobile, storage is turned on by default on the first visit\r\n                            store.dispatch(\r\n                                loadCookiesPreferences({auth: true, cache: true, settings: true}, new Date()),\r\n                            );\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Read previous version of the app, so we know if we are launching the app after an update\r\n                readCachedStaticData(\"version\").then((version) => {\r\n                    store.dispatch(loadVersionInfo(version ? (version.data as string) : null));\r\n                    storeStaticData(\"version\", APP_VERSION, true);\r\n                });\r\n\r\n                // Attempt to read the settings from persistent storage\r\n                readCachedStaticData(\"theme\").then((theme) => {\r\n                    if (theme) store.dispatch(setTheme(theme.data as ThemeKey, true));\r\n                });\r\n                readCachedStaticData(\"locale\").then((locale) => {\r\n                    if (locale) store.dispatch(setLocale(locale.data as SupportedLocale, true));\r\n                    else store.dispatch(setLocale(\"en\" as SupportedLocale, true));\r\n                });\r\n\r\n                // Attempt to authenticate using cached data\r\n                loggedInFromCache = await dispatch(attemptLoginFromCache());\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (loggedInFromCache) initialRoute = loggedInFromCache.onboarded ? \"MainScreen\" : \"OnboardingScreen\";\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n","import {Dimensions} from \"react-native\";\r\n\r\nconst width = Dimensions.get(\"window\").width;\r\nconst height = Dimensions.get(\"window\").height;\r\n\r\nexport default {\r\n    window: {\r\n        width,\r\n        height,\r\n    },\r\n    isSmallDevice: width < 375,\r\n    isWideDevice: width / (height + 1) > 0.85,\r\n};\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fff\",\r\n        cardBackground: \"#f7f7f7\", //\"#f7f7f7\",\r\n        accent: \"#003da5\",\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#009ace\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"rgba(255,59,48,1)\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#bbb\",\r\n        buttonGroupBorder: \"#dfdfdf\",\r\n        greenModalBackground: \"rgb(60, 175, 130)\",\r\n        chatBubble: \"#ededed\",\r\n        inputPlaceholder: \"#999\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"rgba(0,0,0,1)\",\r\n        cardBackground: \"rgba(28,28,30,1)\",\r\n        accent: \"#003da5\",\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\",\r\n        accentTernary: \"#fbe122\",\r\n        error: \"rgba(255,69,58,1)\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        componentBorder: \"#555\",\r\n        buttonGroupBorder: \"#1f1f1f\",\r\n        greenModalBackground: \"rgb(60, 175, 130)\",\r\n        chatBubble: \"#333\",\r\n        inputPlaceholder: \"#bbb\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport layout from \"../constants/layout\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\ntype ThemedStylesInternal<T extends NamedStyles<T>> = (theme: Theme, wideDevice: boolean) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStylesInternal<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    const wideDevice = layout.isWideDevice;\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme, wideDevice)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\ntype ScreenWrapperProps = ThemeProps & {\r\n    forceFullWidth?: boolean;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nclass ScreenWrapper extends React.Component<ScreenWrapperProps> {\r\n    render(): JSX.Element {\r\n        const {theme, forceFullWidth, wrapperStyle, containerStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, wrapperStyle]}>\r\n                <View style={[styles.container, forceFullWidth ? {maxWidth: undefined} : {}, containerStyle]}>\r\n                    {this.props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            flexDirection: \"row\",\r\n            overflow: \"hidden\",\r\n        },\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            maxWidth: 1000,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ScreenWrapper);\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-thin\"} : {fontWeight: \"100\"};\r\n\r\nexport const styleTextLight: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-light\"} : {fontWeight: \"200\"};\r\n\r\nexport const webFontFamily =\r\n    Platform.OS == \"web\" ? {fontFamily: `\"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif`} : {};\r\n\r\nexport const BLUR_HEADER_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_TAB_INTENSITY = Platform.OS === \"ios\" ? 100 : 320;\r\nexport const BLUR_MODAL_INTENSITY = Platform.OS === \"ios\" ? 90 : 80;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport store from \"../state/store\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.title}>{i18n.t(\"notFoundScreen.title\")}</Text>\r\n                    <Text style={styles.subtitle}>{i18n.t(\"notFoundScreen.subtitle\")}</Text>\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            const {authenticated, onboarded} = store.getState().auth;\r\n                            if (authenticated) {\r\n                                if (onboarded) navigation.replace(\"MainScreen\");\r\n                                else navigation.replace(\"OnboardingScreen\");\r\n                            } else navigation.replace(\"LoginRoot\");\r\n                        }}\r\n                        style={styles.link}\r\n                    >\r\n                        <Text style={styles.linkText}>{i18n.t(\"notFoundScreen.redirect\")}</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n        },\r\n        title: {\r\n            fontSize: 48,\r\n            ...styleTextLight,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            marginTop: 50,\r\n            color: theme.text,\r\n        },\r\n        link: {\r\n            paddingVertical: 10,\r\n        },\r\n        linkText: {\r\n            fontSize: 16,\r\n            color: \"#2e78b7\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"SigninScreen\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To validate your account, click the link in the email we just sent to\r\n                    </Text>\r\n                    <Text style={styles.email}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={{marginVertical: 30, textAlign: \"center\", fontSize: 16, color: \"blue\"}}>\r\n                                debug: click here\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"75%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        email: {\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginRoot: {\r\n                screens: {\r\n                    WelcomeScreen: \"welcome\",\r\n                    LoginScreens: {\r\n                        screens: {\r\n                            SigninScreen: \"login\",\r\n                            ForgotPasswordScreen: \"forgot-password\",\r\n                            SignupScreen: \"signup\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MatchFilteringScren: \"match/filters\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            ChatRoomsScreen: \"messaging\",\r\n                            ChatScreen: \"chat/:roomId\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ResetPasswordScreen: \"reset-password/:token\",\r\n            ResetPasswordSuccessScreen: \"password-reset\",\r\n            MyProfileScreen: \"profile\",\r\n            ProfileScreen: \"profile/:id\",\r\n            SettingsScreen: \"settings\",\r\n            DeleteAccountScreen: \"delete-account\",\r\n            DeleteAccountSuccessScreen: \"account-deleted\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingProfileScreen1: \"onboarding/profile/1\",\r\n                    OnboardingProfileScreen2: \"onboarding/profile/2\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingLegalScreen1: \"onboarding/tos\",\r\n                    OnboardingLegalScreen2: \"onboarding/data\",\r\n                    OnboardingLegalScreen3: \"onboarding/cookies\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {localizeError} from \"../api/errors\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? localizeError(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {TextStyle, StyleProp, View, TextInputProps, TextInput, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\n\r\nexport type TextInputStyleProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputFocusedStyle?: StyleProp<TextStyle>;\r\n    showPasswordButtonStyle?: StyleProp<TextStyle>;\r\n    showPasswordIconStyle?: StyleProp<TextStyle>;\r\n    placeholderTextColor?: string;\r\n};\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    icon?: (focused: boolean, error: boolean, valid: boolean) => JSX.Element;\r\n} & TextInputStyleProps &\r\n    Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n    showSecureEntry: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nclass ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    inputRef = React.createRef<TextInput>();\r\n\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false, showSecureEntry: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            error,\r\n            value,\r\n            label,\r\n            icon,\r\n            untouched,\r\n            secureTextEntry,\r\n            style,\r\n            wrapperStyle,\r\n            inputStyle,\r\n            inputFocusedStyle,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            showPasswordButtonStyle,\r\n            showPasswordIconStyle,\r\n            placeholderTextColor,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        const {showSecureEntry} = this.state;\r\n\r\n        const showError = showErrorText && !untouched && error;\r\n        const isSecureEntry = secureTextEntry === true;\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    wrapperStyle,\r\n                    {width: \"100%\", flexDirection: \"column\", position: \"relative\", paddingBottom: showError ? 0 : 6},\r\n                ]}\r\n            >\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <View\r\n                    style={[\r\n                        {flexDirection: \"row\", alignItems: \"center\"},\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                >\r\n                    {icon && icon(this.state.focused, error !== undefined, error !== undefined && value.length > 0)}\r\n                    <TextInput\r\n                        ref={this.inputRef}\r\n                        style={[\r\n                            {flex: 1, height: \"100%\", backgroundColor: \"transparent\"},\r\n                            inputStyle,\r\n                            this.state.focused ? inputFocusedStyle : {},\r\n                            // untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                        ]}\r\n                        onBlur={(e) => {\r\n                            if (onBlur) onBlur(e);\r\n                            this.setState({focused: false});\r\n                        }}\r\n                        onFocus={(e) => {\r\n                            if (onFocus) onFocus(e);\r\n                            this.setState({focused: true});\r\n                        }}\r\n                        value={value}\r\n                        placeholderTextColor={placeholderTextColor}\r\n                        {...(isSecureEntry ? {secureTextEntry: !showSecureEntry} : {})}\r\n                        {...otherProps}\r\n                    />\r\n                    {isSecureEntry && (\r\n                        <TouchableOpacity\r\n                            style={showPasswordButtonStyle}\r\n                            onPress={() => this.setState({...this.state, showSecureEntry: !showSecureEntry})}\r\n                        >\r\n                            <FontAwesome name={showSecureEntry ? \"eye-slash\" : \"eye\"} style={showPasswordIconStyle} />\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n                {showError && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidatedTextInput;\r\n","import React from \"react\";\r\nimport {TextInputProps} from \"react-native\";\r\nimport ValidatedTextInput, {ValidatedTextInputProps} from \"../ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n    isEmail?: boolean;\r\n    isPassword?: boolean;\r\n} & ValidatedTextInputProps;\r\n\r\nconst emailProps: Partial<TextInputProps> = {\r\n    keyboardType: \"email-address\",\r\n    autoCompleteType: \"email\",\r\n    textContentType: \"emailAddress\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\nconst passwordProps: Partial<TextInputProps> = {\r\n    secureTextEntry: true,\r\n    autoCompleteType: \"password\",\r\n    textContentType: \"password\",\r\n    autoCapitalize: \"none\",\r\n    autoCorrect: false,\r\n};\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    inputRef = React.createRef<ValidatedTextInput>();\r\n\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        handleChange: (): void => {},\r\n        handleBlur: (): void => {},\r\n        /* eslint-ensable @typescript-eslint/no-empty-function */\r\n    };\r\n\r\n    focus(): void {\r\n        this.inputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            field,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            error,\r\n            onBlur,\r\n            onChangeText,\r\n            isEmail,\r\n            isPassword,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <ValidatedTextInput\r\n                ref={this.inputRef}\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(this.props.field)(e);\r\n                }}\r\n                {...(isEmail ? emailProps : {})}\r\n                {...(isPassword ? passwordProps : {})}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, Platform, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormCheckBoxProps} from \"../components/forms/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\nimport {TextInputStyleProps} from \"../components/ValidatedTextInput\";\r\n\r\nexport const formStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputFieldIcon: {\r\n            fontSize: 20,\r\n            color: theme.inputPlaceholder,\r\n            marginRight: 10,\r\n        },\r\n        inputFieldIconFocused: {\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): TextInputStyleProps {\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            borderBottomWidth: 2,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        focusedStyle: {\r\n            borderColor: theme.accent,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        labelStyle: {\r\n            marginBottom: 4,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 16,\r\n            color: theme.accent,\r\n        },\r\n        inputFocusedStyle: Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : {},\r\n        showPasswordButtonStyle: {\r\n            padding: 8,\r\n        },\r\n        showPasswordIconStyle: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n        placeholderTextColor: theme.inputPlaceholder,\r\n    };\r\n}\r\n\r\nexport function getLoginCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): TextInputStyleProps {\r\n    return {\r\n        wrapperStyle: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        style: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n        },\r\n        errorStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        validStyle: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        inputStyle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        inputFocusedStyle:\r\n            Platform.OS === \"web\"\r\n                ? ({\r\n                      backgroundColor: \"transparent\",\r\n                      outline: \"none\",\r\n                  } as TextStyle)\r\n                : {},\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {localizeError} from \"../../api/errors\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error?: string;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {error && error.length > 0 && (\r\n                    <View style={[styles.wrapper, style]} {...otherProps}>\r\n                        <Text style={styles.text}>{error ? localizeError(error) : \"\"}</Text>\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginTop: 5,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type ButtonSkinStyle = {button: ViewStyle; text: TextStyle};\r\n\r\nexport const BUTTON_SKINS = {\r\n    \"rounded-filled\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: theme.textWhite,\r\n        },\r\n    }),\r\n    \"rounded-hollow\": (theme: Theme): ButtonSkinStyle => ({\r\n        button: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: 48,\r\n            marginVertical: 10,\r\n            borderRadius: 100,\r\n            borderColor: theme.accent,\r\n            borderWidth: 1,\r\n        },\r\n        text: {\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            color: theme.accent,\r\n        },\r\n    }),\r\n};\r\n\r\nexport type ButtonSkin = keyof typeof BUTTON_SKINS;\r\n\r\n// Component props\r\nexport type ButtonProps = {\r\n    onPress?: () => void;\r\n    text?: string;\r\n    icon?: JSX.Element;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    skin?: ButtonSkin;\r\n} & ThemeProps;\r\n\r\nclass Button extends React.Component<ButtonProps> {\r\n    render(): JSX.Element {\r\n        const {onPress, text, icon, skin, style, textStyle, children, theme} = this.props;\r\n\r\n        const skinStyles = skin ? BUTTON_SKINS[skin](theme) : {button: {}, text: {}};\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                onPress={onPress}\r\n                style={[{flexDirection: \"row\", alignItems: \"center\"}, skinStyles.button, style]}\r\n            >\r\n                {children || (\r\n                    <>\r\n                        <Text style={[skinStyles.text, textStyle]}>{text}</Text>\r\n                        {icon}\r\n                    </>\r\n                )}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(Button);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, TextStyle, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport Button, {ButtonSkin} from \"../Button\";\r\n\r\n// Component props\r\ntype FormSubmitButtonProps = {\r\n    onPress: () => void;\r\n    text: string;\r\n    icon?: JSX.Element;\r\n    submitting: boolean;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    skin?: ButtonSkin;\r\n} & ThemeProps;\r\n\r\nclass FormSubmitButton extends React.Component<FormSubmitButtonProps> {\r\n    render(): JSX.Element {\r\n        const {submitting, onPress, style, loadingIndicatorStyle, theme, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <Button\r\n                {...{onPress: submitting ? undefined : onPress}}\r\n                style={[{flexDirection: \"row\", alignItems: \"center\"}, style]}\r\n                {...otherProps}\r\n            >\r\n                {submitting && <ActivityIndicator color={theme.accentTernary} style={loadingIndicatorStyle} />}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormSubmitButton);\r\n","import * as React from \"react\";\r\nimport {Keyboard, StyleProp, StyleSheet, Text, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validatedEmail: state.auth.validatedEmail,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<FormState> & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\ntype LoginFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    pwdInputRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success) {\r\n                    if (this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                    // Clear password input\r\n                    if (this.setFieldValue) this.setFieldValue(\"password\", \"\", false);\r\n                }\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Formik\r\n                    initialValues={{email: \"\", password: \"\"} as FormState}\r\n                    validationSchema={LoginFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldValue,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 10)};\r\n                        this.setFieldValue = setFieldValue;\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <View>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdInputRef.current?.focus()}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdInputRef}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"link\"\r\n                                    accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                    onPress={() => {\r\n                                        Keyboard.dismiss();\r\n                                        rootNavigate(\"LoginRoot\", {\r\n                                            screen: \"LoginScreens\",\r\n                                            params: {screen: \"ForgotPasswordScreen\"},\r\n                                        });\r\n                                    }}\r\n                                    style={styles.forgotPwdLink}\r\n                                >\r\n                                    <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                                </TouchableOpacity>\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"loginForm.logIn\")}\r\n                                        icon={<MaterialCommunityIcons name=\"login\" style={styles.loginButtonIcon} />}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <View style={styles.separatorContainer}>\r\n                                        <View style={styles.separatorHbar} />\r\n                                        <Text style={styles.separatorText}>{i18n.t(\"loginForm.or\")}</Text>\r\n                                        <View style={styles.separatorHbar} />\r\n                                    </View>\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            rootNavigate(\"LoginRoot\", {\r\n                                                screen: \"LoginScreens\",\r\n                                                params: {screen: \"SignupScreen\"},\r\n                                            });\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"loginForm.signUp\")}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n        },\r\n        loginButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n        },\r\n        forgotPwdLink: {\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            paddingHorizontal: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            textAlign: \"center\",\r\n        },\r\n        separatorContainer: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        separatorHbar: {\r\n            flex: 1,\r\n            height: 1,\r\n            backgroundColor: theme.text,\r\n            opacity: 0.2,\r\n        },\r\n        separatorText: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LoginForm));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, StyleProp, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormError from \"./FormError\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\nexport type ForgotPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps, ForgotPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ForgotPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit({email}: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email)).then(({errors}: ValidatedActionReturn) => {\r\n            if (errors && errors.fields) {\r\n                const f = errors.fields;\r\n                Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n            }\r\n            this.setState({remoteErrors: errors, submitting: false});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as FormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikCfg: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"send\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 40,\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ScrollView, LayoutChangeEvent, StyleProp, ViewStyle, Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\ntype ScrollFormWrapperProps = ThemeProps & {contentStyle?: StyleProp<ViewStyle>; notKeyboardReactive?: boolean};\r\n\r\ntype ScrollFormWrapperState = {height: number};\r\n\r\nclass ScrollFormWrapper extends React.Component<ScrollFormWrapperProps, ScrollFormWrapperState> {\r\n    keyboardShown = false;\r\n\r\n    constructor(props: ScrollFormWrapperProps) {\r\n        super(props);\r\n        this.state = {height: 0};\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.notKeyboardReactive) {\r\n            Keyboard.addListener(\"keyboardDidShow\", () => {\r\n                /*const coords = e.endCoordinates;\r\n                console.log(coords);\r\n                if (coords) this.setState({...this.state, height: coords.height, keyboardTopY: coords.screenY, keyboardOpen: true});*/\r\n                this.keyboardShown = true;\r\n            });\r\n            Keyboard.addListener(\"keyboardDidHide\", () => (this.keyboardShown = false));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {notKeyboardReactive, contentStyle, theme} = this.props;\r\n        const {height} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScrollView\r\n                keyboardShouldPersistTaps=\"handled\"\r\n                style={styles.scrollView}\r\n                contentContainerStyle={[\r\n                    styles.scrollViewContent,\r\n                    {\r\n                        minHeight: notKeyboardReactive ? 0 : height,\r\n                    },\r\n                ]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    if (!notKeyboardReactive || this.state.height == 0) {\r\n                        // Manually give a minimum height to the content\r\n                        // (-5 is to prevent an unnecessary scrollbar from showing on web)\r\n                        if (!this.keyboardShown)\r\n                            this.setState({...this.state, height: e.nativeEvent.layout.height - 5});\r\n                    }\r\n                }}\r\n            >\r\n                <KeyboardAvoidingView\r\n                    behavior=\"padding\"\r\n                    style={[\r\n                        styles.keyboardAvoidingView,\r\n                        // Avoid showing the content until we have the height computed\r\n                        !notKeyboardReactive && this.state.height === 0 ? {opacity: 0} : {},\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.children}\r\n                </KeyboardAvoidingView>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => ({\r\n    keyboardAvoidingView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    scrollView: {\r\n        flex: 1,\r\n        width: \"100%\",\r\n    },\r\n    scrollViewContent: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport default withTheme(ScrollFormWrapper);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle, Keyboard} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps, formStyles} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {navigateBack} from \"../../navigation/utils\";\r\nimport Button from \"../Button\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype SignupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormState> {\r\n    pwdField1Ref = React.createRef<FormTextInput>();\r\n    pwdField2Ref = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <View style={[{width: \"100%\"}, containerStyle]}>\r\n                <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 5)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField1Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"email\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField1Ref}\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdField2Ref.current?.focus()}\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdField2Ref}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    accessibilityLabel={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                    icon={(focused) => (\r\n                                        <MaterialIcons\r\n                                            name=\"lock\"\r\n                                            style={[\r\n                                                fstyles.inputFieldIcon,\r\n                                                focused ? fstyles.inputFieldIconFocused : {},\r\n                                            ]}\r\n                                        />\r\n                                    )}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={styles.actionsContainer}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            handleSubmit();\r\n                                        }}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"createAccount\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                    <Button\r\n                                        onPress={() => {\r\n                                            Keyboard.dismiss();\r\n                                            navigateBack();\r\n                                        }}\r\n                                        skin=\"rounded-hollow\"\r\n                                        text={i18n.t(\"cancel\")}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginTop: 10,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport {SvgProps} from \"react-native-svg\";\r\n\r\n// Component props\r\nexport type SvgPlaceholderProps = SvgProps;\r\n\r\nfunction SvgPlaceholder(): JSX.Element {\r\n    return <></>;\r\n}\r\n\r\nexport default SvgPlaceholder;\r\n","import {SvgProps} from \"react-native-svg\";\r\nimport SvgPlaceholder from \"./components/SvgPlaceholder\";\r\nimport {SupportedLocale} from \"./localization\";\r\nimport store from \"./state/store\";\r\nimport {ThemeKey} from \"./types\";\r\n\r\nlet loaded: {[key: string]: number} = {};\r\nlet locale: SupportedLocale | null = null;\r\nlet theme: ThemeKey | null = null;\r\n\r\nasync function assetDictCommon(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"welcome\":\r\n            return import(\"@assets/images/welcome.svg\");\r\n        case \"login-header\":\r\n            return import(\"@assets/images/login.svg\");\r\n        case \"offers.categories.discover\":\r\n            return import(\"@assets/images/offers/discover.svg\");\r\n        case \"offers.categories.meet\":\r\n            return import(\"@assets/images/offers/meet.svg\");\r\n        case \"offers.categories.collaborate\":\r\n            return import(\"@assets/images/offers/collaborate.svg\");\r\n        case \"background.onboarding\":\r\n            return import(\"@assets/images/background.svg\");\r\n        case \"large-wave-bg\":\r\n            return import(\"@assets/images/large-wave-bg.svg\");\r\n        case \"woman-holding-phone\":\r\n            return import(\"@assets/images/woman-holding-phone.svg\");\r\n        case \"logos.sea-eu-around.small\":\r\n            return import(\"@assets/images/logos/sea-eu-around.small.png\");\r\n        case \"store-button.android\":\r\n            return import(\"@assets/images/store-android.png\");\r\n        case \"store-button.ios\":\r\n            return import(\"@assets/images/store-ios.svg\");\r\n        default:\r\n            return import(\"@assets/images/placeholder.png\");\r\n    }\r\n}\r\n\r\nasync function assetDictEn(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_en_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nasync function assetDictFr(theme: ThemeKey, key: string): Promise<unknown> {\r\n    switch (key) {\r\n        case \"logos.erasmusLeft\":\r\n            return import(\"@assets/images/logos/logosbeneficaireserasmusleft_fr_0.png\");\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function getLocalImage(key: string, onLoad?: () => void): number {\r\n    const settings = store.getState().settings.userSettings;\r\n    if (locale != settings.locale || theme != settings.theme) loaded = {};\r\n    locale = settings.locale;\r\n    theme = settings.theme;\r\n\r\n    if (loaded[key]) return loaded[key];\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const finish = (v: any) => {\r\n        loaded[key] = v.default;\r\n        if (onLoad) onLoad();\r\n    };\r\n\r\n    const localizedDict = locale === \"en\" ? assetDictEn : assetDictFr;\r\n\r\n    localizedDict(theme, key).then((v) => {\r\n        // Fallback to the common dict if needed\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        if (v === null) assetDictCommon(theme!, key).then((v) => finish(v));\r\n        else finish(v);\r\n    });\r\n\r\n    return 0;\r\n}\r\n\r\nexport function getLocalSvg(key: string, onLoad?: () => void): React.FC<SvgProps> {\r\n    const raw = getLocalImage(key, onLoad);\r\n    if (raw === 0) return SvgPlaceholder;\r\n    return (raw as unknown) as React.FC<SvgProps>;\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, StyleSheet, Dimensions, Keyboard, Platform, View} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport layout from \"../../constants/layout\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    isFirstLaunch: state.settings.isFirstLaunch,\r\n}));\r\n\r\n// Component props\r\ntype LoginHeaderProps = ThemeProps & {insets: EdgeInsets} & ConnectedProps<typeof reduxConnector>;\r\n\r\nexport const LOGIN_HEADER_WAVE_HEIGHT = 60;\r\nconst SVG_VIEWBOX_W = 620;\r\nconst SVG_VIEWBOX_H = 800;\r\n\r\nclass LoginHeaderClass extends React.Component<LoginHeaderProps> {\r\n    height = new ReAnimated.Value<number>(this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT);\r\n    imageTop = new ReAnimated.Value<number>(this.getFullHeight() - this.getImageHeight());\r\n\r\n    back(): void {\r\n        Keyboard.dismiss();\r\n        rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"});\r\n    }\r\n\r\n    getImageHeight(): number {\r\n        return (SVG_VIEWBOX_H / SVG_VIEWBOX_W) * Dimensions.get(\"window\").width;\r\n    }\r\n\r\n    getCollapsedHeight(): number {\r\n        const minHeightBelow = /*550*/ 650;\r\n        return Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top;\r\n    }\r\n\r\n    getFullHeight(): number {\r\n        const maxHeight = 530;\r\n        const minHeightBelow = 420;\r\n        return Math.min(Dimensions.get(\"window\").height - minHeightBelow + this.props.insets.top, maxHeight);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Keyboard.addListener(\"keyboardDidShow\", () => {\r\n            const imageTopVal = this.getCollapsedHeight() - this.getImageHeight();\r\n            const heightVal = this.getCollapsedHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            if (Platform.OS === \"web\") {\r\n                this.height.setValue(heightVal);\r\n                this.imageTop.setValue(imageTopVal);\r\n            } else {\r\n                const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n                const duration = 100;\r\n\r\n                ReAnimated.timing(this.height, {\r\n                    toValue: heightVal,\r\n                    duration,\r\n                    easing,\r\n                }).start();\r\n                ReAnimated.timing(this.imageTop, {\r\n                    toValue: imageTopVal,\r\n                    duration,\r\n                    easing,\r\n                }).start();\r\n            }\r\n        });\r\n\r\n        Keyboard.addListener(\"keyboardDidHide\", () => {\r\n            const imageTopVal = this.getFullHeight() - this.getImageHeight();\r\n            const heightVal = this.getFullHeight() - LOGIN_HEADER_WAVE_HEIGHT;\r\n\r\n            if (Platform.OS === \"web\") {\r\n                this.height.setValue(heightVal);\r\n                this.imageTop.setValue(imageTopVal);\r\n            } else {\r\n                const easing: ReAnimated.EasingFunction = Easing.cubic;\r\n                const duration = 100;\r\n                ReAnimated.timing(this.height, {\r\n                    toValue: heightVal,\r\n                    duration,\r\n                    easing,\r\n                }).start();\r\n                ReAnimated.timing(this.imageTop, {\r\n                    toValue: imageTopVal,\r\n                    duration,\r\n                    easing,\r\n                }).start();\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, isFirstLaunch} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n        const Image = getLocalSvg(\"login-header\", () => this.forceUpdate());\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                {!layout.isWideDevice && (\r\n                    <ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n                        <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n                    </ReAnimated.View>\r\n                )}\r\n\r\n                <ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n                    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n                        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n                    </TouchableOpacity>\r\n                    <Text style={styles.title}>\r\n                        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n                    </Text>\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<ReAnimated.View style={[styles.image, {top: this.imageTop}]}>\r\n    <Image viewBox={`0 0 ${SVG_VIEWBOX_W} ${SVG_VIEWBOX_H}`} />\r\n</ReAnimated.View>\r\n<ReAnimated.View style={[styles.container, {height: this.height}]}>\r\n    <TouchableOpacity style={styles.navigationButton} onPress={() => this.back()}>\r\n        <MaterialIcons name=\"chevron-left\" style={styles.navigationIcon} />\r\n    </TouchableOpacity>\r\n    <Text style={styles.title}>\r\n        {i18n.t(isFirstLaunch ? \"loginForm.titleFirstLaunch\" : \"loginForm.title\")}\r\n    </Text>\r\n</ReAnimated.View>\r\n*/\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            ...(wideDevice\r\n                ? {\r\n                      position: \"absolute\",\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: \"50%\",\r\n                      height: \"100%\",\r\n                      backgroundColor: theme.accent,\r\n                      zIndex: 1,\r\n                  }\r\n                : {zIndex: 1}),\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            padding: 40,\r\n            zIndex: 2,\r\n            overflow: \"hidden\",\r\n        },\r\n        navigationButton: {\r\n            width: 50,\r\n            marginLeft: -15,\r\n        },\r\n        navigationIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 50,\r\n        },\r\n        title: {\r\n            color: theme.textWhite,\r\n            fontSize: 38,\r\n            maxWidth: 210,\r\n            fontFamily: \"RalewaySemiBold\",\r\n        },\r\n        image: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            width: Dimensions.get(\"window\").width,\r\n            aspectRatio: SVG_VIEWBOX_W / SVG_VIEWBOX_H,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction LoginHeader(props: ConnectedProps<typeof reduxConnector>): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <LoginHeaderClass {...themeProps} insets={insets} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(LoginHeader);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {LoginScreens} from \"../navigation/types\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {LOGIN_HEADER_WAVE_HEIGHT} from \"../components/headers/LoginHeader\";\r\nimport layout from \"../constants/layout\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Sign-in\r\n\r\ntype TabSigninScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"SigninScreen\">;\r\n\r\nclass SigninScreenClass extends React.Component<TabSigninScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <LoginForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Forgot password\r\n\r\ntype ForgotPasswordScreenProps = ThemeProps & StackScreenProps<LoginScreens, \"ForgotPasswordScreen\">;\r\n\r\nclass ForgotPasswordScreenClass extends React.Component<ForgotPasswordScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <ForgotPasswordForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\n// Sign-up\r\n\r\ntype SignupScreenProps = ThemeProps;\r\n\r\nclass SignupScreenClass extends React.Component<SignupScreenProps> {\r\n    render(): JSX.Element {\r\n        const wide = layout.isWideDevice;\r\n        const styles = themedStyles(this.props.theme);\r\n        const form = <SignupForm containerStyle={styles.formContainer} />;\r\n\r\n        return (\r\n            <ScreenWrapper wrapperStyle={styles.screenWrapper} containerStyle={styles.screenContainer}>\r\n                {wide && form}\r\n                {!wide && <ScrollFormWrapper notKeyboardReactive={true}>{form}</ScrollFormWrapper>}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    if (wideDevice) {\r\n        return StyleSheet.create({\r\n            screenWrapper: {\r\n                width: \"50%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: \"50%\",\r\n            },\r\n            screenContainer: {\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n            },\r\n            formContainer: {\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    } else {\r\n        return StyleSheet.create({\r\n            screenWrapper: {},\r\n            screenContainer: {},\r\n            formContainer: {\r\n                // Add top padding to the form so the top is below the header wave\r\n                paddingTop: LOGIN_HEADER_WAVE_HEIGHT,\r\n                width: \"80%\",\r\n                maxWidth: 400,\r\n            },\r\n        });\r\n    }\r\n});\r\n\r\nexport const SigninScreen = withTheme(SigninScreenClass);\r\nexport const ForgotPasswordScreen = withTheme(ForgotPasswordScreenClass);\r\nexport const SignupScreen = withTheme(SignupScreenClass);\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type SemiHighlightedTextProps = {\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    text: string;\r\n    fontSize?: number;\r\n} & ThemeProps;\r\n\r\nclass SemiHighlightedText extends React.Component<SemiHighlightedTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, text, containerStyle, textStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fontSize = this.props.fontSize || 24;\r\n        const underlineHeight = fontSize * 0.55;\r\n        const underlineBottom = -1;\r\n        const underlineSides = fontSize * 0.4;\r\n\r\n        return (\r\n            <View style={[styles.textContainer, containerStyle]}>\r\n                <View style={[styles.underline, {height: underlineHeight, bottom: underlineBottom}]} />\r\n                <Text style={[styles.text, textStyle, {fontSize, paddingHorizontal: underlineSides}]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        textContainer: {\r\n            alignItems: \"center\",\r\n        },\r\n        text: {\r\n            fontFamily: \"RalewaySemiBold\",\r\n            color: theme.accent,\r\n            zIndex: 2,\r\n\r\n            // Make it more readable with the dark theme\r\n            ...(theme.id === \"dark\"\r\n                ? {\r\n                      textShadowColor: \"rgba(0, 0, 0, 0.6)\",\r\n                      textShadowOffset: {width: 0, height: 1},\r\n                      textShadowRadius: 1,\r\n                  }\r\n                : {}),\r\n        },\r\n        underline: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            backgroundColor: theme.accentTernary,\r\n            zIndex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SemiHighlightedText);\r\n","import * as React from \"react\";\r\nimport {ImageProps, Image} from \"react-native\";\r\nimport {getLocalImage} from \"../assets\";\r\n\r\n// Component props\r\nexport type LocalImageProps = Partial<ImageProps> & {imageKey: string};\r\n\r\nclass LocalImage extends React.Component<LocalImageProps> {\r\n    render(): JSX.Element {\r\n        const {imageKey, ...otherProps} = this.props;\r\n        const img = getLocalImage(imageKey, () => this.forceUpdate());\r\n        return img ? <Image source={img} {...otherProps} /> : <></>;\r\n    }\r\n}\r\n\r\nexport default LocalImage;\r\n","import React from \"react\";\r\nimport {Linking, StyleProp, TouchableOpacity, TouchableOpacityProps, ViewStyle} from \"react-native\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport LocalImage from \"./LocalImage\";\r\n\r\ntype MobileStoreButtonProps = {\r\n    url: string;\r\n    store: \"ios\" | \"android\";\r\n    scale?: number;\r\n    width?: number;\r\n    linkStyle?: StyleProp<ViewStyle>;\r\n    linkProps?: TouchableOpacityProps;\r\n};\r\n\r\nconst DEFAULT_WIDTH = 204;\r\nconst DEFAULT_HEIGHT = 60;\r\n\r\nclass MobileStoreButton extends React.Component<MobileStoreButtonProps> {\r\n    render(): JSX.Element {\r\n        const {store, url, linkStyle, linkProps} = this.props;\r\n\r\n        const Svg = store === \"ios\" ? getLocalSvg(\"store-button.ios\", () => this.forceUpdate()) : null;\r\n        const scale = this.props.scale === undefined ? 1 : this.props.scale;\r\n        const width = this.props.width === undefined ? DEFAULT_WIDTH * scale : this.props.width * scale;\r\n        const height = (width * DEFAULT_HEIGHT) / DEFAULT_WIDTH;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                style={[\r\n                    {\r\n                        overflow: \"hidden\",\r\n                        height,\r\n                        width,\r\n                        margin: 10,\r\n                    },\r\n                    linkProps ? linkProps.style : {},\r\n                    linkStyle,\r\n                ]}\r\n                activeOpacity={0.7}\r\n                onPress={() => {\r\n                    Linking.openURL(url);\r\n                }}\r\n                {...linkProps}\r\n            >\r\n                {store === \"android\" && (\r\n                    <LocalImage imageKey=\"store-button.android\" style={{width: \"100%\", height: \"100%\"}} />\r\n                )}\r\n                {store === \"ios\" && Svg && <Svg viewBox=\"0 0 133 40\" width={width} height={height} fill=\"black\" />}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MobileStoreButton;\r\n","import * as React from \"react\";\r\nimport {Dimensions, Platform, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport SemiHighlightedText from \"../components/SemiHighlightedText\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport Button from \"../components/Button\";\r\nimport MobileStoreButton from \"../components/MobileStoreButton\";\r\n\r\nexport type WelcomeScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass WelcomeScreen extends React.Component<WelcomeScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const WelcomeImage = getLocalSvg(\"welcome\", () => this.forceUpdate());\r\n        const storeButtonWidth = Math.min(Dimensions.get(\"window\").width * 0.4, 200);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <View style={styles.imageAndTextContainer}>\r\n                        <View style={styles.imageContainer}>\r\n                            <WelcomeImage />\r\n                        </View>\r\n                        <View style={styles.textContainer}>\r\n                            <SemiHighlightedText text={i18n.t(\"appName\")} fontSize={32} textStyle={styles.appName} />\r\n                            <Text style={styles.subtitle}>{i18n.t(\"welcomeScreen.subtitle\")}</Text>\r\n                        </View>\r\n                    </View>\r\n                    {Platform.OS === \"web\" && (\r\n                        <View style={styles.mobileStoresContainer}>\r\n                            <MobileStoreButton\r\n                                store=\"android\"\r\n                                url=\"https://play.google.com/store/apps/details?id=com.sea_eu.around\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                            <MobileStoreButton\r\n                                store=\"ios\"\r\n                                // TODO change iOS link\r\n                                url=\"https: //play.google.com/store/apps/details?id=com.sea_eu.around\"\r\n                                width={storeButtonWidth}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                    <View style={styles.actionsContainer}>\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signIn\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SigninScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-filled\"\r\n                        />\r\n                        <Button\r\n                            text={i18n.t(\"welcomeScreen.signUp\")}\r\n                            onPress={() => {\r\n                                rootNavigate(\"LoginRoot\", {\r\n                                    screen: \"LoginScreens\",\r\n                                    params: {screen: \"SignupScreen\"},\r\n                                });\r\n                            }}\r\n                            skin=\"rounded-hollow\"\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"85%\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageAndTextContainer: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        imageContainer: {\r\n            width: \"100%\",\r\n            height: 300,\r\n        },\r\n        textContainer: {\r\n            marginVertical: 20,\r\n        },\r\n        appName: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewayBold\",\r\n        },\r\n        subtitle: {\r\n            color: theme.accent,\r\n            fontFamily: \"RalewaySemiBold\",\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            alignSelf: \"center\",\r\n            maxWidth: 250,\r\n            marginTop: 10,\r\n        },\r\n\r\n        mobileStoresContainer: {\r\n            flexDirection: \"row\",\r\n            marginVertical: 20,\r\n        },\r\n\r\n        actionsContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(WelcomeScreen);\r\n","import {BlurView} from \"expo-blur\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {StyleProp, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {BLUR_MODAL_INTENSITY} from \"../../styles/general\";\r\nimport {ModalImplProps} from \"./ModalImpl.native\";\r\n\r\ntype ModalImplState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nexport class ModalImplClass extends React.Component<ModalImplProps, ModalImplState> {\r\n    el: HTMLDivElement;\r\n\r\n    constructor(props: ModalImplProps) {\r\n        super(props);\r\n        this.state = {modalVisible: props.visible || false};\r\n        this.el = document.createElement(\"div\");\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        document.body.appendChild(this.el);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ModalImplProps): void {\r\n        if (oldProps.visible && !this.props.visible) this.setModalVisible(false);\r\n        if (!oldProps.visible && this.props.visible) this.setModalVisible(true);\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n        if (b && this.props.onShow) this.props.onShow();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            modalViewStyle,\r\n            bottom,\r\n            fullWidth,\r\n            fullHeight,\r\n            nonDismissable,\r\n            noBackground,\r\n            backdropOpacity,\r\n            backdropBlur,\r\n        } = this.props;\r\n        const {modalVisible} = this.state;\r\n\r\n        const fixedFullSize = {\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            left: 0,\r\n            top: 0,\r\n        };\r\n\r\n        const modal = modalVisible ? (\r\n            <>\r\n                {backdropBlur && (\r\n                    <BlurView style={{flex: 1, ...fixedFullSize}} tint={\"dark\"} intensity={BLUR_MODAL_INTENSITY} />\r\n                )}\r\n                <TouchableOpacity\r\n                    style={\r\n                        ({\r\n                            ...fixedFullSize,\r\n                            backgroundColor: `rgba(0,0,0,${backdropOpacity || 0.05})`,\r\n                            cursor: \"pointer\",\r\n                        } as unknown) as StyleProp<ViewStyle> // force typings to accept web-specific styling\r\n                    }\r\n                    activeOpacity={1.0}\r\n                    onPress={nonDismissable ? undefined : () => this.setModalVisible(false)}\r\n                />\r\n                <View\r\n                    style={[\r\n                        ({\r\n                            // Centering\r\n                            position: \"fixed\",\r\n                            left: 0,\r\n                            right: 0,\r\n                            ...(bottom ? {} : {top: 0}),\r\n                            bottom: 0,\r\n                            margin: \"auto\",\r\n                            // Actual styling\r\n                            width: \"80%\",\r\n                            height: \"fit-content\",\r\n                            maxWidth: 300,\r\n                            borderRadius: 3,\r\n                            paddingVertical: 20,\r\n                            paddingHorizontal: 30,\r\n                            alignItems: \"center\",\r\n                        } as unknown) as ViewStyle, // force typings to accept web-specific styling\r\n                        fullWidth ? {width: \"100%\", maxWidth: \"100%\"} : {},\r\n                        fullHeight ? {height: \"100%\"} : {},\r\n                        !noBackground\r\n                            ? (({\r\n                                  backgroundColor: theme.cardBackground,\r\n                                  boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.05)\",\r\n                              } as unknown) as ViewStyle)\r\n                            : {},\r\n                        modalViewStyle,\r\n                    ]}\r\n                >\r\n                    {this.props.renderContent(() => this.setModalVisible(false))}\r\n                </View>\r\n            </>\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        // \"Teleport\" the modal to an element that we previously appended to the <body>\r\n        return ReactDOM.createPortal(modal, this.el);\r\n    }\r\n}\r\n\r\nexport default withTheme(ModalImplClass);\r\n","import React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ModalImpl, {ModalImplClass} from \"./ModalImpl\";\r\nimport {ModalImplProps} from \"./ModalImpl.native\";\r\n\r\nexport type ModalActivator = (show: () => void) => JSX.Element;\r\n\r\nexport type CustomModalProps = ModalImplProps & {activator?: ModalActivator};\r\n\r\nexport class CustomModalClass extends React.Component<CustomModalProps> {\r\n    modalRef = React.createRef<ModalImplClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.setModalVisible(true);\r\n    }\r\n\r\n    hide(): void {\r\n        this.modalRef.current?.setModalVisible(false);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, ...otherProps} = this.props;\r\n\r\n        const activatorElement = activator ? activator(() => this.show()) : <></>;\r\n\r\n        return (\r\n            <>\r\n                {activatorElement}\r\n                <ModalImpl ref={this.modalRef} {...otherProps} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomModalClass);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {TouchableOpacity, Platform} from \"react-native\";\r\nimport {BottomSheet, ListItem, withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {beginOnboarding, debugConnect} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype DebugMenuProps = ThemeProps;\r\ntype DebugMenuState = {visible: boolean};\r\n\r\nclass DebugMenu extends React.Component<DebugMenuProps, DebugMenuState> {\r\n    ACTIONS = [\r\n        {\r\n            title: \"Access MainScreen\",\r\n            onPress: () => {\r\n                rootNavigate(\"MainScreen\");\r\n                this.hide();\r\n            },\r\n        },\r\n        {\r\n            title: \"Access OnBoardingScreen\",\r\n            onPress: () => {\r\n                store.dispatch(beginOnboarding());\r\n                this.hide();\r\n            },\r\n        },\r\n        {\r\n            title: \"Automatically create profile\",\r\n            onPress: () => {\r\n                (store.dispatch as MyThunkDispatch)(debugConnect());\r\n                this.hide();\r\n            },\r\n        },\r\n        {\r\n            title: \"Hide\",\r\n            containerStyle: {backgroundColor: \"red\"},\r\n            titleStyle: {color: \"white\"},\r\n            onPress: () => this.hide(),\r\n        },\r\n    ];\r\n\r\n    constructor(props: DebugMenuProps) {\r\n        super(props);\r\n        this.state = {visible: false};\r\n    }\r\n\r\n    show() {\r\n        this.setState({...this.state, visible: true});\r\n    }\r\n\r\n    hide() {\r\n        this.setState({...this.state, visible: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {visible} = this.state;\r\n\r\n        const debugContent = (\r\n            <>\r\n                <ListItem>\r\n                    <ListItem.Content>\r\n                        <ListItem.Title style={{fontSize: 26, marginBottom: 10, color: theme.textBlack}}>\r\n                            Debug Menu\r\n                        </ListItem.Title>\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n                {this.ACTIONS.map((l, i) => (\r\n                    <ListItem key={`debug-action-${i}`} containerStyle={l.containerStyle} onPress={l.onPress}>\r\n                        <ListItem.Content>\r\n                            <ListItem.Title style={l.titleStyle}>{l.title}</ListItem.Title>\r\n                        </ListItem.Content>\r\n                    </ListItem>\r\n                ))}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        bottom: 10,\r\n                        right: 10,\r\n                        width: 36,\r\n                        height: 36,\r\n                        backgroundColor: theme.error,\r\n                        borderRadius: 20,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                    onPress={() => this.show()}\r\n                >\r\n                    <FontAwesome name=\"gear\" color=\"white\" style={{fontSize: 26}} />\r\n                </TouchableOpacity>\r\n                {Platform.OS !== \"web\" && (\r\n                    <BottomSheet modalProps={{statusBarTranslucent: true}} isVisible={visible}>\r\n                        {debugContent}\r\n                    </BottomSheet>\r\n                )}\r\n                {Platform.OS === \"web\" && (\r\n                    <CustomModal visible={visible} onHide={() => this.hide()} renderContent={() => debugContent} />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DebugMenu);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION} from \"../constants/config\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type VersionInfoProps = ThemeProps;\r\n\r\nfunction VersionInfo(props: VersionInfoProps): JSX.Element {\r\n    const {theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <View style={styles.versionInfoContainer}>\r\n            <Text style={styles.versionText}>{APP_VERSION} </Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight, fontSize: 12},\r\n        versionDisclaimerIcon: {color: theme.error, fontSize: 13},\r\n    });\r\n});\r\n\r\nexport default withTheme(VersionInfo);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {SigninScreen, SignupScreen, ForgotPasswordScreen} from \"../screens/LoginScreens\";\r\nimport {LoginRoot, LoginScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\nimport LoginHeader from \"../components/headers/LoginHeader\";\r\nimport DebugMenu from \"../components/DebugMenu\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport VersionInfo from \"../components/VersionInfo\";\r\n\r\nconst SigninRoot = createMaterialTopTabNavigator<LoginScreens>();\r\nconst Tab = createMaterialTopTabNavigator<LoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator swipeEnabled={false} tabBar={() => <></>}>\r\n        <Tab.Screen name=\"WelcomeScreen\" component={WelcomeScreen} options={{title: screenTitle(\"WelcomeScreen\")}} />\r\n        <Tab.Screen name=\"LoginScreens\">\r\n            {() => (\r\n                <>\r\n                    <LoginHeader />\r\n\r\n                    <SigninRoot.Navigator tabBar={() => <></>} initialRouteName=\"SigninScreen\" swipeEnabled={false}>\r\n                        <SigninRoot.Screen\r\n                            name=\"ForgotPasswordScreen\"\r\n                            component={ForgotPasswordScreen}\r\n                            options={{\r\n                                title: screenTitle(\"ForgotPasswordScreen\"),\r\n                            }}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SigninScreen\"\r\n                            component={SigninScreen}\r\n                            options={{title: screenTitle(\"SigninScreen\")}}\r\n                        />\r\n                        <SigninRoot.Screen\r\n                            name=\"SignupScreen\"\r\n                            component={SignupScreen}\r\n                            options={{title: screenTitle(\"SignupScreen\")}}\r\n                        />\r\n                    </SigninRoot.Navigator>\r\n\r\n                    <VersionInfo />\r\n                    {DEBUG_MODE && <DebugMenu />}\r\n                </>\r\n            )}\r\n        </Tab.Screen>\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport {\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    Platform,\r\n    StyleProp,\r\n    Dimensions,\r\n    Text,\r\n    ViewProps,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable, {SwipeableProperties} from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Theses style elements are defined this way because they have to be set in very specific ways\r\ntype SwipeableLooks = {\r\n    sideMargin: number;\r\n    borderRadius: number;\r\n    verticalSpacing: number;\r\n    minHeight: number;\r\n};\r\n\r\nconst DEFAULT_LOOKS: SwipeableLooks = {\r\n    sideMargin: 15,\r\n    borderRadius: 10,\r\n    verticalSpacing: 8,\r\n    minHeight: 150,\r\n};\r\n\r\n// Component props\r\nexport type SwipeableCardProps = ThemeProps &\r\n    SwipeableProperties & {\r\n        style?: ViewStyle;\r\n        onHidden?: () => void;\r\n        onPress?: () => void;\r\n        looks?: Partial<SwipeableLooks>;\r\n        leftActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        rightActions?: (hideCard: (noAnimation?: boolean) => void) => JSX.Element;\r\n        wrapperProps?: ViewProps;\r\n    };\r\n\r\n// Component state\r\nexport type SwipeableCardState = {\r\n    minHeight: ReAnimated.Value<number>;\r\n    right: ReAnimated.Value<number>;\r\n    hidden: boolean;\r\n};\r\n\r\nexport class SwipeableCardClass extends React.Component<SwipeableCardProps, SwipeableCardState> {\r\n    swipeableRef = React.createRef<Swipeable>();\r\n\r\n    constructor(props: SwipeableCardProps) {\r\n        super(props);\r\n\r\n        const {minHeight} = {...DEFAULT_LOOKS, ...props.looks};\r\n\r\n        this.state = {\r\n            minHeight: new ReAnimated.Value(minHeight),\r\n            right: new ReAnimated.Value(0),\r\n            hidden: false,\r\n        };\r\n    }\r\n\r\n    hide(): void {\r\n        this.setState({...this.state, hidden: true});\r\n        if (this.props.onHidden) this.props.onHidden();\r\n    }\r\n\r\n    collapse(onFinish?: () => void, right?: boolean): void {\r\n        const duration = 200;\r\n        ReAnimated.timing(this.state.right, {\r\n            toValue: (right ? -1 : 1) * Dimensions.get(\"window\").width * 1.5,\r\n            duration,\r\n            easing: Easing.ease,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.hide();\r\n        }, duration);\r\n    }\r\n\r\n    resetSwipe(): void {\r\n        this.swipeableRef.current?.close();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            children,\r\n            leftActions,\r\n            rightActions,\r\n            style,\r\n            looks,\r\n            onPress,\r\n            wrapperProps,\r\n            ...swipeableProps\r\n        } = this.props;\r\n        const {minHeight, right, hidden} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n        const hideCard = (noAnimation?: boolean) => {\r\n            if (noAnimation) this.hide();\r\n            else this.collapse();\r\n        };\r\n\r\n        const container = (\r\n            <Swipeable\r\n                ref={this.swipeableRef}\r\n                containerStyle={[\r\n                    styles.swipeableContainer,\r\n                    {paddingHorizontal: sideMargin, paddingVertical: verticalSpacing},\r\n                ]}\r\n                childrenContainerStyle={[styles.swipeable, {borderRadius}]}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                renderLeftActions={leftActions ? () => leftActions(hideCard) : swipeableProps.renderLeftActions}\r\n                renderRightActions={rightActions ? () => rightActions(hideCard) : swipeableProps.renderRightActions}\r\n                {...swipeableProps}\r\n            >\r\n                <TouchableOpacity activeOpacity={0.75} style={styles.touchable} {...(onPress ? {onPress} : {})}>\r\n                    {children}\r\n                </TouchableOpacity>\r\n            </Swipeable>\r\n        );\r\n\r\n        if (Platform.OS === \"web\") {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <View\r\n                    style={[\r\n                        styles.wrapper,\r\n                        style,\r\n                        {flexBasis: minHeight[\" __value\"], right: right[\" __value\"]},\r\n                        hidden ? {display: \"none\"} : {},\r\n                    ]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </View>\r\n            );\r\n        } else {\r\n            return (\r\n                // Use flexBasis, acting as minHeight\r\n                <ReAnimated.View\r\n                    style={[styles.wrapper, style, {flexBasis: minHeight, right}, hidden ? {display: \"none\"} : {}]}\r\n                    {...wrapperProps}\r\n                >\r\n                    {container}\r\n                </ReAnimated.View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport type SwipeActionProps = {\r\n    icon?: string;\r\n    text?: string;\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    onPress?: () => void;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nconst oneSidedBorderRadius = (side: \"left\" | \"right\", borderRadius: number) => {\r\n    return side === \"left\"\r\n        ? {borderTopLeftRadius: borderRadius, borderBottomLeftRadius: borderRadius}\r\n        : {borderTopRightRadius: borderRadius, borderBottomRightRadius: borderRadius};\r\n};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, text, backgroundColor, onPress, style, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n        const color = props.color || theme.textWhite;\r\n\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor}, style]}>\r\n                {icon && <MaterialIcons style={[styles.swipeActionButtonIcon, {color}]} name={icon} />}\r\n                {text && <Text style={[styles.swipeActionButtonText, {color}]}>{text}</Text>}\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionsProps = ThemeProps & {\r\n    id: string;\r\n    side: \"left\" | \"right\";\r\n    actions: SwipeActionProps[];\r\n    looks?: Partial<SwipeableLooks>;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const SwipeActionButtons = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionsProps>): JSX.Element => {\r\n        const {id, actions, side, looks, buttonStyle} = props;\r\n\r\n        const {borderRadius} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <SwipeActionContainer side={side} looks={looks} contentStyle={{aspectRatio: actions.length}}>\r\n                {actions.map((properties: SwipeActionProps, i: number) => {\r\n                    const first = i === 0;\r\n                    const last = i === actions.length - 1;\r\n                    const isExteriorButton = (first && side === \"left\") || (last && side === \"right\");\r\n                    const isInteriorButton = (first && side === \"right\") || (last && side === \"left\");\r\n                    const {backgroundColor} = properties;\r\n\r\n                    // Add a small view to fill the empty area created by the card's border radius\r\n                    const interiorFiller = isInteriorButton ? (\r\n                        <View\r\n                            style={{\r\n                                width: borderRadius,\r\n                                height: \"100%\",\r\n                                position: \"absolute\",\r\n                                top: 0,\r\n                                ...(side === \"left\" ? {right: -borderRadius} : {left: -borderRadius}),\r\n                                backgroundColor,\r\n                            }}\r\n                        />\r\n                    ) : undefined;\r\n\r\n                    return (\r\n                        <React.Fragment key={`swipe-actions-${id}-${side}-${i}`}>\r\n                            {isInteriorButton && interiorFiller}\r\n                            <SwipeActionButton\r\n                                style={[isExteriorButton ? oneSidedBorderRadius(side, borderRadius) : {}, buttonStyle]}\r\n                                {...properties}\r\n                            />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </SwipeActionContainer>\r\n        );\r\n    },\r\n);\r\n\r\ntype SwipeActionContainerProps = ThemeProps & {\r\n    side: \"left\" | \"right\";\r\n    looks?: Partial<SwipeableLooks>;\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n    fullCardWidth?: boolean;\r\n};\r\n\r\nexport const SwipeActionContainer = withTheme(\r\n    (props: React.PropsWithChildren<SwipeActionContainerProps>): JSX.Element => {\r\n        const {side, looks, fullCardWidth, contentStyle, theme} = props;\r\n        const styles = buttonStyles(theme);\r\n\r\n        const {borderRadius, sideMargin, verticalSpacing} = {...DEFAULT_LOOKS, ...looks};\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    styles.swipeActionsContainer,\r\n                    {paddingVertical: verticalSpacing},\r\n                    side === \"left\"\r\n                        ? {\r\n                              marginLeft: sideMargin,\r\n                              marginRight: -sideMargin,\r\n                              justifyContent: \"flex-start\",\r\n                          }\r\n                        : {\r\n                              marginLeft: -sideMargin,\r\n                              marginRight: sideMargin,\r\n                              justifyContent: \"flex-end\",\r\n                          },\r\n                    fullCardWidth\r\n                        ? {\r\n                              width: \"100%\",\r\n                              marginHorizontal: sideMargin,\r\n                              ...(side === \"left\" ? {paddingRight: sideMargin * 2} : {paddingLeft: sideMargin * 2}),\r\n                          }\r\n                        : {},\r\n                ]}\r\n            >\r\n                <View\r\n                    style={[\r\n                        styles.swipeActionsContent,\r\n                        fullCardWidth ? {borderRadius} : oneSidedBorderRadius(side, borderRadius),\r\n                        contentStyle,\r\n                    ]}\r\n                >\r\n                    {props.children}\r\n                </View>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n    });\r\n});\r\n\r\nconst buttonStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        swipeActionsContainer: {\r\n            height: \"100%\",\r\n        },\r\n        swipeActionsContent: {\r\n            justifyContent: \"flex-start\",\r\n            flexDirection: \"row\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionButton: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            aspectRatio: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            fontSize: 22,\r\n        },\r\n        swipeActionButtonText: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SwipeableCardClass);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        dropdownWrapper: {\r\n            width: \"100%\",\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\", height: \"100%\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n        },\r\n        openButton: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 20,\r\n            borderWidth: 1,\r\n            borderRadius: 2,\r\n            backgroundColor: theme.background,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        openButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        chipContainer: {\r\n            marginTop: 10,\r\n        },\r\n    });\r\n});\r\n","export enum ReportType {\r\n    VIOLENCE = \"violence\",\r\n    NUDITY = \"nudity\",\r\n    HARASSMENT = \"harassment\",\r\n    UNDESIRABLE_CONTENT = \"undesirable-content\",\r\n    HATE_SPEECH = \"hate-speech\",\r\n    VULGAR_CONTENT = \"vulgar-content\",\r\n    OTHER = \"other\",\r\n}\r\n\r\nexport const REPORT_TYPES = [\r\n    ReportType.VIOLENCE,\r\n    ReportType.NUDITY,\r\n    ReportType.HARASSMENT,\r\n    ReportType.UNDESIRABLE_CONTENT,\r\n    ReportType.HATE_SPEECH,\r\n    ReportType.VULGAR_CONTENT,\r\n    ReportType.OTHER,\r\n];\r\n\r\nexport enum ReportEntityType {\r\n    PROFILE_ENTITY = \"ProfileEntity\",\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, ScrollView, TouchableOpacity, TextStyle, ViewStyle, StyleProp} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type PopUpSelectorProps = ThemeProps & {\r\n    values: string[];\r\n    selected: string[];\r\n    label: (value: string, i: number) => string;\r\n    icon?: (value: string, i: number) => JSX.Element;\r\n    onSelect?: (selected: string[]) => void;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n    placeholder?: string;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\n// Component state\r\nexport type PopUpSelectorState = {\r\n    valueDict: {[key: string]: boolean};\r\n};\r\n\r\nclass PopUpSelector extends React.Component<PopUpSelectorProps, PopUpSelectorState> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: PopUpSelectorProps) {\r\n        super(props);\r\n        this.state = {valueDict: {}};\r\n    }\r\n\r\n    private fromSelectedProp() {\r\n        const valueDict: {[key: string]: boolean} = {};\r\n        this.props.selected.forEach((v) => (valueDict[v] = true));\r\n        this.setState({...this.state, valueDict});\r\n    }\r\n\r\n    show(): void {\r\n        this.fromSelectedProp();\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    hide(apply: boolean): void {\r\n        this.modalRef.current?.hide();\r\n        if (apply) this.apply();\r\n        else this.fromSelectedProp();\r\n    }\r\n\r\n    toggleValue(v: string) {\r\n        const dict = this.state.valueDict;\r\n        const newValue = !dict[v];\r\n\r\n        if (this.props.multiple) {\r\n            this.setState({...this.state, valueDict: {...dict, [v]: newValue}});\r\n        } else {\r\n            this.setState({...this.state, valueDict: {[v]: newValue}}, () => {\r\n                if (newValue) this.hide(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        const {onSelect} = this.props;\r\n        const valueDict = this.state.valueDict;\r\n        if (onSelect) {\r\n            const selected = Object.keys(valueDict).filter((val: string) => valueDict[val]);\r\n            onSelect(selected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            values,\r\n            selected,\r\n            label,\r\n            icon,\r\n            multiple,\r\n            atLeastOne,\r\n            placeholder,\r\n            buttonStyle,\r\n            valueStyle,\r\n            theme,\r\n        } = this.props;\r\n        const {valueDict} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const pstyles = pickerStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={[styles.button, selected.length > 0 ? styles.buttonOk : {}, buttonStyle]}\r\n                    onPress={() => this.show()}\r\n                >\r\n                    {selected.length === 0 && (\r\n                        <Text style={[styles.value, styles.placeholderText, valueStyle]} numberOfLines={2}>\r\n                            {placeholder}\r\n                        </Text>\r\n                    )}\r\n                    {selected.length > 0 && (\r\n                        <Text style={[styles.value, valueStyle]} numberOfLines={2}>\r\n                            {selected.map(label).join(\", \")}\r\n                        </Text>\r\n                    )}\r\n                </TouchableOpacity>\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    modalViewStyle={{width: \"100%\", paddingHorizontal: 0, paddingVertical: 0}}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContent}>\r\n                                {values.map((v: string, index: number) => (\r\n                                    <TouchableOpacity\r\n                                        key={`popup-selector-row-${v}`}\r\n                                        style={styles.rowContainer}\r\n                                        onPress={() => this.toggleValue(v)}\r\n                                        activeOpacity={0.5}\r\n                                    >\r\n                                        {icon && icon(v, index)}\r\n                                        <Text style={styles.label}>{label(v, index)}</Text>\r\n                                        <CheckBox\r\n                                            checked={valueDict[v]}\r\n                                            containerStyle={styles.checkboxContainer}\r\n                                            wrapperStyle={styles.checkboxWrapper}\r\n                                            onPress={() => this.toggleValue(v)}\r\n                                            size={26}\r\n                                            {...(multiple\r\n                                                ? {}\r\n                                                : {checkedIcon: \"check-circle\", uncheckedIcon: \"circle-o\"})}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                ))}\r\n                            </ScrollView>\r\n                            {multiple && (!atLeastOne || Object.values(valueDict).some((v) => v === true)) && (\r\n                                <TouchableOpacity\r\n                                    onPress={() => this.hide(true)}\r\n                                    style={[pstyles.okButton, {width: \"100%\"}]}\r\n                                >\r\n                                    <Text style={pstyles.okButtonText}>{i18n.t(\"ok\")}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"flex-end\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        value: {color: theme.text},\r\n        placeholderText: {color: theme.textLight},\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            paddingHorizontal: 15,\r\n            paddingVertical: 10,\r\n        },\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            width: \"100%\",\r\n            paddingVertical: 2,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        label: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            flexGrow: 1,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginRight: 0,\r\n        },\r\n        checkboxWrapper: {\r\n            padding: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(PopUpSelector);\r\n","import {AppThunk} from \"../types\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ReportEntityType, ReportType} from \"../../constants/reports\";\r\n\r\nexport enum REPORT_ACTION_TYPES {\r\n    REPORT_ENTITY_SUCCESS = \"REPORTS/REPORT_ENTITY_SUCCESS\",\r\n    REPORT_ENTITY_FAILURE = \"REPORTS/REPORT_ENTITY_FAILURE\",\r\n}\r\n\r\nexport type ReportEntitySuccessAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportEntityFailureAction = {\r\n    type: string;\r\n    reportType: ReportType;\r\n    entityType: ReportEntityType;\r\n    entityId: string;\r\n};\r\n\r\nexport type ReportAction = ReportEntitySuccessAction | ReportEntityFailureAction;\r\n\r\nconst reportEntitySuccess = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntitySuccessAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_SUCCESS,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nconst reportEntityFailure = (\r\n    reportType: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): ReportEntityFailureAction => ({\r\n    type: REPORT_ACTION_TYPES.REPORT_ENTITY_FAILURE,\r\n    reportType,\r\n    entityType,\r\n    entityId,\r\n});\r\n\r\nexport const reportEntity = (\r\n    type: ReportType,\r\n    entityType: ReportEntityType,\r\n    entityId: string,\r\n): AppThunk<Promise<boolean>> => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"reports\", \"POST\", {}, {type, entityType, entityId}, token, true);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(reportEntitySuccess(type, entityType, entityId));\r\n        return true;\r\n    } else {\r\n        dispatch(reportEntityFailure(type, entityType, entityId));\r\n        return false;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Platform, Text} from \"react-native\";\r\nimport {BottomSheet, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport FormSubmitButton from \"../forms/FormSubmitButton\";\r\nimport {Icon} from \"expo\";\r\nimport Button from \"../Button\";\r\n\r\nexport type QuickFormProps = ThemeProps & {\r\n    activator?: (open: () => void) => JSX.Element;\r\n    submit: () => Promise<boolean>;\r\n    hideSubmit?: boolean;\r\n    title?: string;\r\n    titleIcon?: {component: Icon<string, unknown>; name: string};\r\n    confirmationTitle: string;\r\n    confirmationText: string;\r\n    failureTitle?: string;\r\n    failureText?: string;\r\n    submitText: string;\r\n};\r\n\r\ntype QuickFormState = {\r\n    open: boolean;\r\n    confirmationOpen: boolean;\r\n    failureOpen: boolean;\r\n    submitting: boolean;\r\n};\r\n\r\nexport class QuickFormClass extends React.Component<QuickFormProps, QuickFormState> {\r\n    constructor(props: QuickFormProps) {\r\n        super(props);\r\n        this.state = {open: false, confirmationOpen: false, failureOpen: false, submitting: false};\r\n    }\r\n\r\n    open(): void {\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close(): void {\r\n        this.setState({...this.state, open: false});\r\n    }\r\n\r\n    submit(): void {\r\n        const {submit} = this.props;\r\n\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        submit().then((success: boolean) => {\r\n            if (success) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    open: false,\r\n                    confirmationOpen: true,\r\n                    failureOpen: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    ...this.state,\r\n                    submitting: false,\r\n                    open: false,\r\n                    confirmationOpen: false,\r\n                    failureOpen: true,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            activator,\r\n            hideSubmit,\r\n            title,\r\n            titleIcon,\r\n            submitText,\r\n            confirmationTitle,\r\n            confirmationText,\r\n            failureTitle,\r\n            failureText,\r\n            theme,\r\n            children,\r\n        } = this.props;\r\n        const {open, confirmationOpen, failureOpen, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const actionButtons = (\r\n            <>\r\n                {!hideSubmit && (\r\n                    <FormSubmitButton\r\n                        text={submitText}\r\n                        submitting={submitting}\r\n                        onPress={() => this.submit()}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.actionButton}\r\n                        textStyle={styles.actionButtonText}\r\n                    />\r\n                )}\r\n                <Button\r\n                    text={i18n.t(\"cancel\")}\r\n                    onPress={() => this.close()}\r\n                    skin=\"rounded-hollow\"\r\n                    style={styles.actionButton}\r\n                    textStyle={styles.actionButtonText}\r\n                />\r\n            </>\r\n        );\r\n\r\n        const content = (\r\n            <>\r\n                {(title || titleIcon) && (\r\n                    <View style={styles.titleContainer}>\r\n                        {titleIcon && (\r\n                            <titleIcon.component name={titleIcon.name} style={[styles.title, styles.titleIcon]} />\r\n                        )}\r\n                        {title && <Text style={styles.title}>{title}</Text>}\r\n                    </View>\r\n                )}\r\n                {children}\r\n                {actionButtons}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {activator && activator(() => this.open())}\r\n                {Platform.OS === \"web\" ? (\r\n                    <CustomModal\r\n                        visible={open}\r\n                        onHide={() => this.close()}\r\n                        renderContent={() => <View style={styles.containerModal}>{content}</View>}\r\n                    />\r\n                ) : (\r\n                    <BottomSheet modalProps={{statusBarTranslucent: true}} isVisible={open}>\r\n                        <View style={styles.wrapperSheet}>\r\n                            <View style={styles.containerSheet}>{content}</View>\r\n                        </View>\r\n                    </BottomSheet>\r\n                )}\r\n                <CustomModal\r\n                    visible={confirmationOpen}\r\n                    onHide={() => this.setState({...this.state, confirmationOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{confirmationTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{confirmationText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, confirmationOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n                <CustomModal\r\n                    visible={failureOpen}\r\n                    onHide={() => this.setState({...this.state, failureOpen: false})}\r\n                    modalViewStyle={styles.feedbackModal}\r\n                    renderContent={() => (\r\n                        <View style={styles.containerModal}>\r\n                            <Text style={styles.feedbackTitle}>{failureTitle}</Text>\r\n                            <Text style={styles.feedbackText}>{failureText}</Text>\r\n                            <Button\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={() => this.setState({...this.state, failureOpen: false})}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionButtonText}\r\n                            />\r\n                        </View>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapperSheet: {\r\n            width: \"100%\",\r\n            paddingVertical: 20,\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        containerSheet: {\r\n            width: \"90%\",\r\n        },\r\n        containerModal: {\r\n            width: \"100%\",\r\n        },\r\n\r\n        // Title\r\n        titleContainer: {\r\n            flexDirection: \"row\",\r\n            marginBottom: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        titleIcon: {\r\n            marginRight: 5,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n\r\n        // Actions\r\n        actionButton: {\r\n            height: 44,\r\n            marginVertical: 0,\r\n            marginTop: 15,\r\n        },\r\n        actionButtonText: {\r\n            fontSize: 16,\r\n        },\r\n\r\n        feedbackModal: {\r\n            paddingVertical: 15,\r\n            paddingHorizontal: 20,\r\n        },\r\n        feedbackTitle: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n            marginBottom: 15,\r\n        },\r\n        feedbackText: {\r\n            fontSize: 15,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormClass);\r\n","import React from \"react\";\r\nimport {View, StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport PopUpSelector from \"../PopUpSelector\";\r\nimport {ReportEntityType, ReportType, REPORT_TYPES} from \"../../constants/reports\";\r\nimport InputLabel from \"../InputLabel\";\r\nimport {ChatRoomUser} from \"../../model/chat-room\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport store from \"../../state/store\";\r\nimport {reportEntity} from \"../../state/reports/actions\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport QuickForm, {QuickFormClass} from \"./QuickForm\";\r\n\r\nexport type QuickFormReportProps = ThemeProps & {\r\n    entityType: ReportEntityType;\r\n    entity: unknown;\r\n    activator?: (open: () => void) => JSX.Element;\r\n    onSubmit?: (success: boolean) => void;\r\n};\r\n\r\ntype QuickFormReportState = {\r\n    selectedType: ReportType | null;\r\n};\r\n\r\nexport class QuickFormReportClass extends React.Component<QuickFormReportProps, QuickFormReportState> {\r\n    quickFormRef = React.createRef<QuickFormClass>();\r\n\r\n    constructor(props: QuickFormReportProps) {\r\n        super(props);\r\n        this.state = {selectedType: null};\r\n    }\r\n\r\n    private getEntityInfo(): {id: string; name: string} | null {\r\n        const {entityType, entity} = this.props;\r\n\r\n        if (!entity) return null;\r\n\r\n        switch (entityType) {\r\n            case ReportEntityType.PROFILE_ENTITY:\r\n                if ((entity as ChatRoomUser)._id) {\r\n                    const u = entity as ChatRoomUser;\r\n                    return {name: u.name, id: u._id};\r\n                } else {\r\n                    const p = entity as UserProfile;\r\n                    return {name: `${p.firstName} ${p.lastName}`, id: p.id};\r\n                }\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    open(): void {\r\n        this.quickFormRef.current?.open();\r\n    }\r\n\r\n    close(): void {\r\n        this.quickFormRef.current?.close();\r\n    }\r\n\r\n    async submit(): Promise<boolean> {\r\n        const {entityType, onSubmit} = this.props;\r\n        const {selectedType} = this.state;\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        let success = false;\r\n        if (selectedType && info)\r\n            success = await (store.dispatch as MyThunkDispatch)(reportEntity(selectedType, entityType, info.id));\r\n\r\n        if (onSubmit) onSubmit(success);\r\n        return success;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {activator, theme} = this.props;\r\n        const {selectedType} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const info = this.getEntityInfo();\r\n\r\n        return (\r\n            <>\r\n                <QuickForm\r\n                    ref={this.quickFormRef}\r\n                    activator={activator}\r\n                    submit={() => this.submit()}\r\n                    titleIcon={{component: MaterialIcons, name: \"report\"}}\r\n                    title={i18n.t(\"report.title\")}\r\n                    submitText={i18n.t(\"report.send\")}\r\n                    confirmationTitle={i18n.t(\"report.confirmationTitle\")}\r\n                    confirmationText={i18n.t(\"report.confirmation\")}\r\n                    failureTitle={i18n.t(\"report.failureTitle\")}\r\n                    failureText={i18n.t(\"report.failure\")}\r\n                    hideSubmit={!selectedType}\r\n                >\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.what\")}</InputLabel>\r\n                        <Text style={styles.what}>{info ? info.name : \"unknown\"}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.inputItem}>\r\n                        <InputLabel>{i18n.t(\"report.why\")}</InputLabel>\r\n                        <PopUpSelector\r\n                            values={REPORT_TYPES}\r\n                            label={(t: string) => i18n.t(`report.types.${t}`)}\r\n                            placeholder={i18n.t(\"report.typePlaceholder\")}\r\n                            selected={selectedType ? [selectedType] : []}\r\n                            valueStyle={styles.selectorValue}\r\n                            //buttonStyle={[styles.button, buttonStyle]}\r\n                            onSelect={(values: string[]) => {\r\n                                if (values.length > 0)\r\n                                    this.setState({...this.state, selectedType: values[0] as ReportType});\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </QuickForm>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        inputItem: {\r\n            marginBottom: 20,\r\n        },\r\n        what: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"right\",\r\n        },\r\n        selectorValue: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(QuickFormReportClass);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\nimport {openChat} from \"../../navigation/utils\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    localChatUser: state.messaging.localChatUser,\r\n}));\r\n\r\n// Component props\r\nexport type ChatRoomCardProps = {\r\n    room: ChatRoom;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 5,\r\n    borderRadius: 10,\r\n    minHeight: 75,\r\n};\r\n\r\nclass ChatRoomCard extends React.Component<ChatRoomCardProps> {\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {theme} = this.props;\r\n\r\n        return [\r\n            // TODO implement chat mute\r\n            /*{\r\n                icon: \"notifications-off\",\r\n                backgroundColor: \"#ccc\",\r\n            },*/\r\n            {\r\n                icon: \"report\",\r\n                backgroundColor: theme.error,\r\n                onPress: () => this.reportFormRef.current?.open(),\r\n            },\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {theme, room, onPress, localChatUser} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const localUser = room.users.find((p: ChatRoomUser) => p._id === localChatUser?._id);\r\n        const user = room.users.filter((p: ChatRoomUser) => p._id !== localChatUser?._id)[0];\r\n\r\n        let lastMessageComponent = <></>;\r\n\r\n        if (room.lastMessage) {\r\n            const date = room.lastMessage.createdAt;\r\n            const isRead =\r\n                localUser &&\r\n                localUser.lastMessageSeenDate &&\r\n                (localUser.lastMessageSeenDate >= date || localUser.lastMessageSeenId == room.lastMessage._id);\r\n            const pad = (num: number) => (num + \"\").padStart(2, \"0\");\r\n            lastMessageComponent = (\r\n                <>\r\n                    <Text style={[styles.lastMessageText, isRead ? {} : styles.lastMessageTextNew]} numberOfLines={1}>\r\n                        {room.lastMessage.user.name.split(\" \")[0]}: {room.lastMessage.text}\r\n                    </Text>\r\n                    <Text style={styles.lastMessageTime}>\r\n                        {pad(date.getHours())}:{pad(date.getMinutes())}\r\n                    </Text>\r\n                </>\r\n            );\r\n        } else {\r\n            lastMessageComponent = (\r\n                <Text style={styles.noMessageText} numberOfLines={1}>\r\n                    {room.users.length === 2 ? i18n.t(\"messaging.sayHiTo\", {name: user.name}) : i18n.t(\"sayHi\")}\r\n                </Text>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.swipeableCardRef}\r\n                looks={LOOKS}\r\n                rightThreshold={100}\r\n                overshootRight={false}\r\n                rightActions={(hideCard) => (\r\n                    <SwipeActionButtons\r\n                        id={`room-${room.id}`}\r\n                        looks={LOOKS}\r\n                        side=\"right\"\r\n                        actions={this.getActions(hideCard)}\r\n                    />\r\n                )}\r\n                onPress={() => {\r\n                    if (onPress) onPress();\r\n                    openChat(room.id);\r\n                }}\r\n            >\r\n                <View style={styles.cardContent}>\r\n                    <View style={styles.avatarContainer}>\r\n                        <GiftedAvatar avatarStyle={styles.avatar} user={user}></GiftedAvatar>\r\n                    </View>\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{user.name}</Text>\r\n                        <View style={styles.lastMessage}>{lastMessageComponent}</View>\r\n                    </View>\r\n                </View>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={user}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n            width: 45,\r\n            height: 45,\r\n            borderRadius: 50,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        lastMessage: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n        },\r\n        noMessageText: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageText: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageTextNew: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        lastMessageTime: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomCard));\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport {AppState} from \"../../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\nexport type LocaleAwareProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>> & {\r\n    onLocaleChange?: (locale: SupportedLocale) => void;\r\n};\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass LocaleAware extends React.Component<LocaleAwareProps> {\r\n    componentDidUpdate(oldProps: LocaleAwareProps) {\r\n        const {locale, onLocaleChange} = this.props;\r\n        if (oldProps.locale !== locale) {\r\n            if (onLocaleChange) onLocaleChange(locale);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {children} = this.props;\r\n        return <>{children}</>;\r\n    }\r\n}\r\n\r\nexport default reduxConnector(LocaleAware);\r\n","import * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleProp,\r\n    StyleSheet,\r\n    View,\r\n    ViewStyle,\r\n} from \"react-native\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport LocaleAware from \"./utility/LocaleAware\";\r\n\r\n// Component props\r\nexport type InfiniteScrollerProps<T> = {\r\n    items: T[];\r\n    id: (item: T) => string;\r\n    fetchMore: () => void;\r\n    refresh: () => void;\r\n    fetching: boolean;\r\n    canFetchMore: boolean;\r\n    fetchLimit: number;\r\n    renderItem: (item: T, hide: () => void) => JSX.Element;\r\n    noResultsComponent: JSX.Element;\r\n    endOfItemsComponent?: JSX.Element;\r\n    currentPage: number;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    navigation: {isFocused: () => boolean; addListener: (k: any, l: () => void) => void};\r\n    itemsContainerStyle?: StyleProp<ViewStyle>;\r\n    progressViewOffset?: number;\r\n    refreshOnFocus?: boolean;\r\n};\r\n\r\n// Component state\r\ntype InfiniteScrollerState = {\r\n    hiddenIds: {[key: string]: boolean};\r\n};\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nexport default class InfiniteScroller<T> extends React.Component<InfiniteScrollerProps<T>, InfiniteScrollerState> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n\r\n    constructor(props: InfiniteScrollerProps<T>) {\r\n        super(props);\r\n        this.state = {hiddenIds: {}};\r\n    }\r\n\r\n    fetchMore(): void {\r\n        const {fetching, canFetchMore, fetchMore, navigation} = this.props;\r\n        if (!fetching && canFetchMore && navigation.isFocused()) fetchMore();\r\n    }\r\n\r\n    getShownItems(): T[] {\r\n        const {items, id} = this.props;\r\n        return items.filter((it) => !this.state.hiddenIds[id(it)]);\r\n    }\r\n\r\n    hideItem(item: T): void {\r\n        const {fetchLimit, canFetchMore, id} = this.props;\r\n        this.setState({...this.state, hiddenIds: {...this.state.hiddenIds, [id(item)]: true}});\r\n        if (this.getShownItems().length < fetchLimit && canFetchMore) this.fetchMore();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus(): void {\r\n        const {items, fetchLimit, fetching, refreshOnFocus, currentPage, refresh, id} = this.props;\r\n        const shown = items.filter((it) => !this.state.hiddenIds[id(it)]).length;\r\n\r\n        if (refreshOnFocus) {\r\n            // Fetch items if currentPage is 1 (because this won't be caught by 'justRefreshed' in componentDidUpdate)\r\n            if (currentPage === 1) this.fetchMore();\r\n            else refresh(); // We don't refresh if the current page is 1 because that means we haven't fetched anything yet\r\n        } else if (shown < fetchLimit && !fetching) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InfiniteScrollerProps<T>): void {\r\n        const {fetchLimit, currentPage, navigation} = this.props;\r\n\r\n        const justRefreshed = oldProps.currentPage > 1 && currentPage === 1;\r\n\r\n        if (navigation.isFocused()) {\r\n            const moreIfNeeded = () => this.getShownItems().length < fetchLimit && this.fetchMore();\r\n            // Reset the hidden profiles when the user purposedly refreshes\r\n            if (justRefreshed) this.setState({...this.state, hiddenIds: {}}, moreIfNeeded);\r\n            else moreIfNeeded();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            items,\r\n            fetching,\r\n            canFetchMore,\r\n            currentPage,\r\n            refresh,\r\n            renderItem,\r\n            noResultsComponent,\r\n            endOfItemsComponent,\r\n            itemsContainerStyle,\r\n            progressViewOffset,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <ThemeConsumer>\r\n                    {({theme}: ThemeProps) => {\r\n                        const styles = themedStyles(theme);\r\n                        return (\r\n                            <ScrollView\r\n                                ref={this.scrollViewRef}\r\n                                style={styles.scroller}\r\n                                contentContainerStyle={[styles.itemsContainer, itemsContainerStyle]}\r\n                                refreshControl={\r\n                                    <RefreshControl\r\n                                        progressViewOffset={progressViewOffset}\r\n                                        refreshing={fetching}\r\n                                        onRefresh={() => {\r\n                                            if (!fetching) refresh();\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                                    const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                                    const distanceToBottom =\r\n                                        contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                                    if (distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                                }}\r\n                            >\r\n                                {this.getShownItems().map((it: T) => renderItem(it, () => this.hideItem(it)))}\r\n                                {!fetching && items.length > 0 && !canFetchMore && (\r\n                                    <View style={styles.endOfItemsContainer}>{endOfItemsComponent}</View>\r\n                                )}\r\n                                {!fetching && items.length == 0 && (\r\n                                    <View style={styles.noResultsContainer}>{noResultsComponent}</View>\r\n                                )}\r\n                                <View style={styles.loadingIndicatorContainer}>\r\n                                    {fetching && currentPage > 1 && items.length > 0 && (\r\n                                        <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                                    )}\r\n                                </View>\r\n                            </ScrollView>\r\n                        );\r\n                    }}\r\n                </ThemeConsumer>\r\n                <LocaleAware onLocaleChange={() => this.props.refresh()} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((/*theme: Theme*/) => {\r\n    return StyleSheet.create({\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        itemsContainer: {},\r\n        loadingIndicatorContainer: {\r\n            marginTop: 10,\r\n            marginBottom: 20, // compensate for bottom tab bar\r\n            height: 50,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n        },\r\n        endOfItemsContainer: {\r\n            marginTop: 20,\r\n            alignItems: \"center\",\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMatchRooms, refreshMatchRooms} from \"../../state/messaging/actions\";\r\nimport ChatRoomCard from \"../../components/cards/ChatRoomCard\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {TabMessagingRoot} from \"../../navigation/types\";\r\nimport InfiniteScroller from \"../../components/InfiniteScroller\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    roomIds: state.messaging.matchRoomsOrdered,\r\n    fetchingRooms: state.messaging.matchRoomsPagination.fetching,\r\n    canFetchMore: state.messaging.matchRoomsPagination.canFetchMore,\r\n    currentPage: state.messaging.matchRoomsPagination.page,\r\n}));\r\n\r\ntype ChatRoomsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<TabMessagingRoot>;\r\n\r\nclass ChatRoomsScreen extends React.Component<ChatRoomsScreenProps> {\r\n    private fetchMore(): void {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, rooms, roomIds, fetchingRooms, canFetchMore, currentPage, navigation, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={ROOMS_FETCH_LIMIT}\r\n                    fetchMore={() => this.fetchMore()}\r\n                    fetching={fetchingRooms}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    refreshOnFocus={true}\r\n                    refresh={() => dispatch(refreshMatchRooms())}\r\n                    items={roomIds}\r\n                    id={(roomId: string): string => roomId}\r\n                    noResultsComponent={<Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>}\r\n                    renderItem={(roomId: string) => (\r\n                        <ChatRoomCard key={`chat-room-card-${roomId}`} room={rooms[roomId]} />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n            paddingHorizontal: 50,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomsScreen));\r\n","import * as React from \"react\";\r\nimport {Avatar, AvatarProps} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\n\r\n// Component props\r\nexport type ProfileAvatarProps = {profile?: UserProfile} & AvatarProps;\r\n\r\nclass ProfileAvatar extends React.Component<ProfileAvatarProps> {\r\n    render(): JSX.Element {\r\n        const {children, profile, ...avatarProps} = this.props;\r\n\r\n        const avatarTitle =\r\n            avatarProps.title || (profile ? (profile.firstName[0] + profile.lastName[0]).toUpperCase() : undefined);\r\n\r\n        const avatarSourceProp = profile && profile.avatarUrl ? {source: {uri: profile.avatarUrl}} : {};\r\n\r\n        return (\r\n            <Avatar {...avatarProps} title={avatarTitle} {...avatarSourceProp}>\r\n                {children}\r\n            </Avatar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileAvatar;\r\n","import {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {StyleSheet} from \"react-native\";\r\n\r\nexport const headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            backgroundColor: theme.background,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            paddingHorizontal: 15,\r\n            height: 90,\r\n            paddingBottom: 5,\r\n        },\r\n        wrapperBlur: {\r\n            backgroundColor: \"transparent\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        wrapperNoShadow: {\r\n            shadowColor: \"transparent\",\r\n            elevation: 0,\r\n        },\r\n        backButton: {\r\n            width: 40,\r\n            height: 40,\r\n            marginRight: 5,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        backButtonIcon: {\r\n            fontSize: 28,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        avatarTitle: {\r\n            color: theme.textWhite,\r\n        },\r\n        title: {\r\n            flex: 1,\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            fontSize: 20,\r\n        },\r\n        rightButton: {\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 50,\r\n            marginLeft: 8,\r\n        },\r\n        rightIcon: {\r\n            fontSize: 22,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, TouchableOpacity, View, ViewStyle} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {headerTitle, navigateBack, rootNavigate} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {BlurProps, BlurView} from \"expo-blur\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {Route} from \"@react-navigation/native\";\r\nimport {BLUR_HEADER_INTENSITY} from \"../../styles/general\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\nexport type HeaderButtonProps = {\r\n    buttonStyle: StyleProp<ViewStyle>;\r\n    iconStyle: StyleProp<TextStyle>;\r\n};\r\n\r\ntype AdditionalProps = {\r\n    rightButtons?: ((props: HeaderButtonProps) => JSX.Element)[];\r\n    backButton?: boolean;\r\n    noAvatar?: boolean;\r\n    noShadow?: boolean;\r\n    noSettingsButton?: boolean;\r\n    blur?: boolean;\r\n    overrideAvatar?: JSX.Element;\r\n    overrideTitle?: string;\r\n    wrapperStyle?: StyleProp<ViewStyle>;\r\n    titleStyle?: StyleProp<TextStyle>;\r\n    color?: string;\r\n    buttonBackgroundColor?: string;\r\n};\r\n\r\nexport type MainHeaderStackProps = Partial<StackHeaderProps> & {route?: Route<string, undefined>};\r\n\r\n// Component props\r\nexport type MainHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps & {insets: EdgeInsets} & MainHeaderStackProps &\r\n    AdditionalProps;\r\n\r\nclass MainHeaderClass extends React.Component<MainHeaderProps> {\r\n    back(): void {\r\n        navigateBack(\"MainScreen\");\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets,\r\n            user,\r\n            rightButtons,\r\n            backButton,\r\n            noAvatar,\r\n            noShadow,\r\n            noSettingsButton,\r\n            blur,\r\n            overrideAvatar,\r\n            overrideTitle,\r\n            wrapperStyle,\r\n            titleStyle,\r\n            color,\r\n        } = this.props;\r\n\r\n        const styles = headerStyles(theme);\r\n\r\n        const routeName = (this.props.route || this.props.scene?.route || {name: \"undef\"}).name;\r\n        const title = headerTitle(routeName as NavigatorRoute);\r\n        const textColor = color || theme.text;\r\n        const buttonBackgroundColor = this.props.buttonBackgroundColor || theme.cardBackground;\r\n\r\n        const WrapperComponent = blur ? BlurView : View;\r\n        const blurProps: Partial<BlurProps> = blur\r\n            ? {\r\n                  tint: theme.id === \"dark\" ? \"dark\" : \"default\",\r\n                  intensity: BLUR_HEADER_INTENSITY,\r\n              }\r\n            : {};\r\n\r\n        return (\r\n            <WrapperComponent\r\n                style={[\r\n                    {paddingTop: insets.top},\r\n                    styles.wrapper,\r\n                    blur ? styles.wrapperBlur : {},\r\n                    noShadow ? styles.wrapperNoShadow : {},\r\n                    wrapperStyle,\r\n                ]}\r\n                {...blurProps}\r\n            >\r\n                {backButton && (\r\n                    <TouchableOpacity style={styles.backButton} onPress={() => this.back()}>\r\n                        <MaterialIcons style={[styles.backButtonIcon, {color: textColor}]} name=\"arrow-back\" />\r\n                    </TouchableOpacity>\r\n                )}\r\n                {!noAvatar &&\r\n                    (overrideAvatar || (\r\n                        <ProfileAvatar\r\n                            profile={user?.profile}\r\n                            rounded\r\n                            size={40}\r\n                            containerStyle={styles.avatarContainer}\r\n                            titleStyle={styles.avatarTitle}\r\n                            activeOpacity={0.75}\r\n                            onPress={() => rootNavigate(\"MyProfileScreen\")}\r\n                        />\r\n                    ))}\r\n                <Text style={[styles.title, {marginLeft: 12, color: textColor}, titleStyle]} numberOfLines={1}>\r\n                    {overrideTitle || title}\r\n                </Text>\r\n                {rightButtons?.map((ButtonComponent, i) => (\r\n                    <ButtonComponent\r\n                        key={`header-button-${routeName.toLowerCase()}-${i}`}\r\n                        buttonStyle={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        iconStyle={[styles.rightIcon, {color: textColor}]}\r\n                    />\r\n                ))}\r\n                {!noSettingsButton && (\r\n                    <TouchableOpacity\r\n                        style={[styles.rightButton, {backgroundColor: buttonBackgroundColor}]}\r\n                        onPress={() => rootNavigate(\"SettingsScreen\")}\r\n                    >\r\n                        <MaterialIcons name=\"settings\" style={styles.rightIcon} color={textColor} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </WrapperComponent>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainHeaderComp = reduxConnector(withTheme(MainHeaderClass));\r\n\r\nexport default function MainHeader(props: MainHeaderStackProps & AdditionalProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return <MainHeaderComp insets={insets} {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport store from \"../../state/store\";\r\nimport {Route} from \"@react-navigation/native\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: store.getState().messaging.matchRooms,\r\n    activeRoom: store.getState().messaging.activeRoom,\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenHeaderProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens> &\r\n    Omit<MainHeaderStackProps, \"route\">;\r\n\r\nclass ChatScreenHeaderClass extends React.Component<ChatScreenHeaderProps> {\r\n    private getRoomId(): string | null {\r\n        const {route} = this.props;\r\n        // Get the room ID from the route parameters\r\n        if (route.params) {\r\n            const params = route.params as {[key: string]: string};\r\n            const {roomId} = params;\r\n            return roomId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoom} = this.props;\r\n        const roomId = this.getRoomId();\r\n        return activeRoom || (roomId ? rooms[roomId] : null);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profileId, ...stackProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        if (room) {\r\n            const user = room.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n            return (\r\n                <MainHeader\r\n                    {...stackProps}\r\n                    route={stackProps.route as Route<string, undefined>}\r\n                    backButton={true}\r\n                    blur={true}\r\n                    overrideAvatar={\r\n                        <GiftedAvatar\r\n                            avatarStyle={hstyles.avatarContainer}\r\n                            user={user}\r\n                            onPress={() => rootNavigate(\"ProfileScreen\", {id: user._id})}\r\n                        />\r\n                    }\r\n                    overrideTitle={user.name}\r\n                    titleStyle={styles.name}\r\n                />\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        name: {\r\n            fontSize: 18,\r\n            fontWeight: \"600\",\r\n        },\r\n    });\r\n});\r\n\r\nconst ChatScreenHeaderComp = reduxConnector(withTheme(ChatScreenHeaderClass));\r\n\r\nexport default function ChatScreenHeader(\r\n    props: StackScreenProps<RootNavigatorScreens> & MainHeaderStackProps,\r\n): JSX.Element {\r\n    return <ChatScreenHeaderComp {...props} />;\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Platform, ScrollView, ScrollViewProps, StyleSheet, TextStyle, View, FlatList} from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {\r\n    Actions,\r\n    ActionsProps,\r\n    Bubble,\r\n    BubbleProps,\r\n    Composer,\r\n    ComposerProps,\r\n    GiftedAvatar,\r\n    GiftedAvatarProps,\r\n    GiftedChat,\r\n    IMessage,\r\n    InputToolbar,\r\n    InputToolbarProps,\r\n    Message,\r\n    MessageProps,\r\n    Send,\r\n    SendProps,\r\n} from \"react-native-gifted-chat\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport chatSocket from \"../../api/chat-socket\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {\r\n    connectToChat,\r\n    fetchEarlierMessages,\r\n    fetchMatchRoom,\r\n    fetchNewMessages,\r\n    joinChatRoom,\r\n    leaveChatRoom,\r\n    sendChatMessage,\r\n} from \"../../state/messaging/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {TypingAnimation} from \"react-native-typing-animation\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport store from \"../../state/store\";\r\nimport {DEBUG_MODE, MESSAGES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {normalizeWheelEvent} from \"../../polyfills\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    activeRoom: state.messaging.activeRoom,\r\n    localChatUser: state.messaging.localChatUser,\r\n    connected: state.messaging.socketState.connected,\r\n    connecting: state.messaging.socketState.connecting,\r\n    fetchingNewMessages: state.messaging.fetchingNewMessages,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nconst MIN_INPUT_HEIGHT = 45;\r\nconst INPUT_VERTICAL_MARGIN = 10;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    ref = React.createRef<GiftedChat>();\r\n    listRef: FlatList | null = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    removeScrollListener: () => void = () => {};\r\n\r\n    private getRoomId(): string | null {\r\n        const {route} = this.props;\r\n        // Get the room ID from the route parameters\r\n        if (route.params) {\r\n            const params = route.params as {[key: string]: string};\r\n            const {roomId} = params;\r\n            return roomId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getRoom(): ChatRoom | null {\r\n        const {rooms, activeRoom} = this.props;\r\n        const roomId = this.getRoomId();\r\n        return activeRoom || (roomId ? rooms[roomId] : null);\r\n    }\r\n\r\n    private connectToRoom(): void {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        const joinRoom = async (room: ChatRoom) => {\r\n            dispatch(joinChatRoom(room));\r\n            this.ensureLatestMessages();\r\n        };\r\n\r\n        const roomId = this.getRoomId();\r\n        // If a roomId parameter was given, we first ensure we have that room (in storage or we fetch it) before joining it.\r\n        if (roomId) {\r\n            const room = store.getState().messaging.matchRooms[roomId];\r\n            if (room) joinRoom(room);\r\n            else dispatch(fetchMatchRoom(roomId)).then((r) => r && joinRoom(r));\r\n        }\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const {navigation} = this.props;\r\n        navigation.addListener(\"blur\", () => this.onBlur());\r\n        navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: ChatScreenProps): void {\r\n        const {activeRoom, connected} = this.props;\r\n        // If we've just connected to the chat, connect to the room\r\n        if (!oldProps.connected && connected) this.connectToRoom();\r\n        // If we're at the beginning of the messages pagination\r\n        if (!oldProps.activeRoom && activeRoom && activeRoom.messagePagination.page == 1) this.ensureLatestMessages();\r\n    }\r\n\r\n    private onBlur(): void {\r\n        // Leave the room when navigating to another screen\r\n        const {dispatch, activeRoom} = this.props;\r\n        if (activeRoom) (dispatch as MyThunkDispatch)(leaveChatRoom(activeRoom));\r\n    }\r\n\r\n    private onFocus(): void {\r\n        const {connected, connecting, dispatch} = this.props;\r\n\r\n        // If are already connected to the chat, connect to the room\r\n        if (connected) this.connectToRoom();\r\n        // If we are not connected nor connecting to the chat, connect to the chat first\r\n        else if (!connecting) (dispatch as MyThunkDispatch)(connectToChat());\r\n    }\r\n\r\n    /**\r\n     * Ensures that the latest n messages are loaded\r\n     */\r\n    private ensureLatestMessages(): void {\r\n        const {dispatch, fetchingNewMessages} = this.props;\r\n        const room = this.getRoom();\r\n\r\n        // Fetch all messages that are more recent than the last one we have\r\n        if (room && !fetchingNewMessages) (dispatch as MyThunkDispatch)(fetchNewMessages(room));\r\n\r\n        // Fetch earlier messages if we need to\r\n        if (room && room.messages.length < MESSAGES_FETCH_LIMIT) this.fetchEarlier();\r\n    }\r\n\r\n    private fetchEarlier(): void {\r\n        const {dispatch} = this.props;\r\n        const room = this.getRoom();\r\n        if (room && !room.messagePagination.fetching) (dispatch as MyThunkDispatch)(fetchEarlierMessages(room));\r\n    }\r\n\r\n    private setListRef(listRef: FlatList | null): void {\r\n        if (Platform.OS === \"web\") {\r\n            if (listRef === null) this.removeScrollListener();\r\n            else if (this.listRef === null) {\r\n                // fix scrolling being reversed with the mouse wheel\r\n                // taken from https://www.gitmemory.com/issue/necolas/react-native-web/995/511242048\r\n                const scrollNode = listRef.getScrollableNode();\r\n                const listener = scrollNode.addEventListener(\"wheel\", (e: WheelEvent) => {\r\n                    const r = normalizeWheelEvent(e);\r\n                    scrollNode.scrollTop -= r.pixelY * 0.15;\r\n                    e.preventDefault();\r\n                });\r\n                this.removeScrollListener = () => scrollNode.removeEventListener(\"wheel\", listener);\r\n                listRef.setNativeProps({style: {transform: \"translate3d(0,0,0) scaleY(-1)\"}});\r\n            }\r\n            this.listRef = listRef;\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localChatUser, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const room = this.getRoom();\r\n\r\n        let chatComponent = <></>;\r\n        if (room && localChatUser) {\r\n            const isWritingId = Object.keys(room.writing).find((id: string) => room.writing[id] === true);\r\n            const userWriting = isWritingId ? room.users.find((u) => u._id == isWritingId) : undefined;\r\n\r\n            // Store in a messageId -> user map whether each message is the last seen message of a user\r\n            const lastMessageDict: {[key: string]: ChatRoomUser[]} = {};\r\n            if (room.messages.length > 0) {\r\n                room.users.forEach((u: ChatRoomUser) => {\r\n                    if (u._id != localChatUser._id && u.lastMessageSeenId) {\r\n                        if (lastMessageDict[u.lastMessageSeenId]) lastMessageDict[u.lastMessageSeenId].push(u);\r\n                        else lastMessageDict[u.lastMessageSeenId] = [u];\r\n                    }\r\n                });\r\n            }\r\n\r\n            chatComponent = (\r\n                <GiftedChat\r\n                    ref={this.ref}\r\n                    messages={room.messages}\r\n                    user={localChatUser}\r\n                    renderSend={(props: SendProps<IMessage>) => (\r\n                        <Send {...props} containerStyle={styles.sendContainer}>\r\n                            <MaterialIcons name=\"send\" style={styles.send} />\r\n                        </Send>\r\n                    )}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            renderTicks={(currentMessage: IMessage) => (\r\n                                <View style={styles.messageTicksContainer}>\r\n                                    {currentMessage.received && (\r\n                                        <MaterialIcons name=\"check\" style={styles.messageTick} />\r\n                                    )}\r\n                                    {currentMessage.sent && <MaterialIcons name=\"check\" style={styles.messageTick} />}\r\n                                </View>\r\n                            )}\r\n                            textStyle={{left: styles.bubbleTextLeft, right: styles.bubbleTextRight}}\r\n                            wrapperStyle={{left: styles.bubbleWrapperLeft, right: styles.bubbleWrapperRight}}\r\n                        />\r\n                    )}\r\n                    renderMessage={(props: MessageProps<IMessage>) => {\r\n                        const seenBy = props.currentMessage ? lastMessageDict[props.currentMessage._id] : [];\r\n                        return <ChatMessage theme={theme} seenBy={seenBy || []} messageProps={props} />;\r\n                    }}\r\n                    renderInputToolbar={(props: InputToolbarProps) => (\r\n                        <InputToolbar\r\n                            {...props}\r\n                            containerStyle={styles.inputToolbarContainer}\r\n                            primaryStyle={styles.inputToolbarPrimary}\r\n                        />\r\n                    )}\r\n                    renderFooter={() => <ChatFooter userWriting={userWriting} theme={theme} />}\r\n                    renderActions={(props: ActionsProps) => <ChatActions actionsProps={props} theme={theme} />}\r\n                    //renderLoadEarlier={() => <></>}\r\n                    onInputTextChanged={(t) => {\r\n                        if (t.length > 0) chatSocket.setWriting(room);\r\n                    }}\r\n                    onSend={(messages) => {\r\n                        messages.forEach((m) =>\r\n                            (dispatch as MyThunkDispatch)(sendChatMessage(m._id + \"\", m.text, m.createdAt as Date)),\r\n                        );\r\n                    }}\r\n                    loadEarlier={room.messagePagination.canFetchMore && room.messagePagination.fetching}\r\n                    isLoadingEarlier={room.messagePagination.fetching}\r\n                    onLoadEarlier={() => {\r\n                        this.fetchEarlier();\r\n                    }}\r\n                    timeFormat={\"HH:mm\"}\r\n                    listViewProps={{\r\n                        ref: (el: unknown) => this.setListRef(el as FlatList | null),\r\n                        onEndReached: () => this.fetchEarlier(),\r\n                        renderScrollComponent: (props: ScrollViewProps) => (\r\n                            <ScrollView\r\n                                {...props}\r\n                                contentContainerStyle={[\r\n                                    props.contentContainerStyle,\r\n                                    // This is actually a paddingTop but gifted-chat flips the rendering.\r\n                                    // (compensates for the height of the transparent header)\r\n                                    {paddingBottom: 100},\r\n                                ]}\r\n                            />\r\n                        ),\r\n                    }}\r\n                    renderComposer={(props: ComposerProps) => (\r\n                        <Composer\r\n                            {...props}\r\n                            textInputProps={{\r\n                                ...props.textInputProps,\r\n                                autoFocus: false,\r\n                                style: [\r\n                                    styles.textInput,\r\n                                    Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : {},\r\n                                ],\r\n                                multiline: true,\r\n                                ...(Platform.OS === \"web\"\r\n                                    ? {\r\n                                          onFocus: () => this.forceUpdate(), // workaround to get the ugly outline on web to disappear properly\r\n                                          onKeyPress: (ev) => {\r\n                                              const e = (ev as unknown) as KeyboardEvent;\r\n                                              if (e.key === \"Enter\" && !e.altKey && !e.shiftKey && props.text) {\r\n                                                  // The typing expects _id, createdAt and user properties, but gifted-chat creates them itself if not given\r\n                                                  this.ref.current?.onSend([{text: props.text.trim()} as never], true);\r\n                                              }\r\n                                          },\r\n                                      }\r\n                                    : {}),\r\n                            }}\r\n                        />\r\n                    )}\r\n                    minInputToolbarHeight={MIN_INPUT_HEIGHT + INPUT_VERTICAL_MARGIN * 2}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>{chatComponent}</View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ChatFooter({userWriting, theme}: {userWriting?: ChatRoomUser; theme: Theme}): JSX.Element {\r\n    if (userWriting) {\r\n        return (\r\n            <View style={{height: 50, paddingTop: 10, marginBottom: 5}}>\r\n                <Message\r\n                    key=\"isWriting\"\r\n                    user={userWriting}\r\n                    showUserAvatar={true}\r\n                    position=\"left\"\r\n                    renderAvatar={(props: GiftedAvatarProps) => <GiftedAvatar {...props} user={userWriting} />}\r\n                    renderBubble={(props: BubbleProps<IMessage>) => (\r\n                        <Bubble\r\n                            {...props}\r\n                            wrapperStyle={{\r\n                                left: {backgroundColor: \"transparent\"},\r\n                                right: {},\r\n                            }}\r\n                            renderCustomView={() => (\r\n                                <TypingAnimation\r\n                                    dotColor={theme.textLight}\r\n                                    dotAmplitude={3}\r\n                                    dotSpeed={0.16}\r\n                                    dotMargin={8}\r\n                                    dotRadius={4}\r\n                                    dotX={20}\r\n                                    dotY={-25}\r\n                                />\r\n                            )}\r\n                        />\r\n                    )}\r\n                ></Message>\r\n            </View>\r\n        );\r\n    } else return <></>;\r\n}\r\n\r\nfunction ChatMessage({\r\n    theme,\r\n    seenBy,\r\n    messageProps,\r\n}: {\r\n    theme: Theme;\r\n    seenBy: ChatRoomUser[];\r\n    messageProps: MessageProps<IMessage>;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <View style={messageProps.position === \"left\" ? styles.messageContainerLeft : styles.messageContainerRight}>\r\n            <Message\r\n                {...messageProps}\r\n                containerStyle={{\r\n                    left: [messageProps.containerStyle?.left],\r\n                    right: [messageProps.containerStyle?.right, {marginBottom: 2}],\r\n                }}\r\n            />\r\n            {seenBy.length > 0 && (\r\n                <View\r\n                    style={[\r\n                        messageProps.position === \"left\"\r\n                            ? styles.messageReadContainerLeft\r\n                            : styles.messageReadContainerRight,\r\n                    ]}\r\n                >\r\n                    {seenBy.map((u: ChatRoomUser) => (\r\n                        <GiftedAvatar\r\n                            key={`read-message-${u._id}`}\r\n                            user={u}\r\n                            avatarStyle={styles.messageReadAvatar}\r\n                            textStyle={styles.messageReadAvatarText}\r\n                        />\r\n                    ))}\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction ChatActions({actionsProps, theme}: {actionsProps: ActionsProps; theme: Theme}): JSX.Element {\r\n    return <></>;\r\n\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <>\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"photo-camera\" />}\r\n                    options={{\r\n                        \"Send a picture\": async () => {\r\n                            await ImagePicker.launchImageLibraryAsync({\r\n                                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                                allowsEditing: true,\r\n                                aspect: [1, 1],\r\n                                //quality: AVATAR_QUALITY,\r\n                            });\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n            {DEBUG_MODE && (\r\n                <Actions\r\n                    {...actionsProps}\r\n                    containerStyle={styles.actionContainer}\r\n                    icon={() => <MaterialIcons style={styles.actionIcon} name=\"build\" />}\r\n                    options={{\r\n                        \"Spam Lorem Ipsum\": async () => {\r\n                            const text =\r\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dosum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\";\r\n                            const words = text.split(\" \");\r\n                            let i = 0;\r\n                            while (i < words.length) {\r\n                                const n = 1 + Math.min(Math.floor(Math.random() * 12), words.length - 1 - i);\r\n                                const msg = words.slice(i, i + n).join(\" \");\r\n                                const id = GiftedChat.defaultProps.messageIdGenerator();\r\n                                (store.dispatch as MyThunkDispatch)(sendChatMessage(id, msg, new Date()));\r\n                                i += n;\r\n                            }\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        inputToolbarContainer: {\r\n            justifyContent: \"center\",\r\n            borderTopWidth: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        inputToolbarPrimary: {\r\n            alignItems: \"flex-end\",\r\n        },\r\n        textInput: {\r\n            backgroundColor: theme.cardBackground,\r\n            //borderWidth: 1,\r\n            //borderColor: theme.cardBackground,\r\n            borderRadius: 20,\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginHorizontal: 20,\r\n            paddingHorizontal: 15,\r\n            paddingTop: 10,\r\n            paddingBottom: 10,\r\n            fontSize: 15,\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            alignSelf: \"flex-end\",\r\n            color: theme.text,\r\n        },\r\n        send: {\r\n            fontSize: 30,\r\n            color: theme.accent,\r\n        },\r\n        sendContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n            marginVertical: INPUT_VERTICAL_MARGIN,\r\n            marginRight: 10,\r\n        },\r\n        actionContainer: {\r\n            height: MIN_INPUT_HEIGHT,\r\n            justifyContent: \"center\",\r\n        },\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            width: 28,\r\n            height: 28,\r\n            color: theme.text,\r\n        },\r\n        bubbleWrapperLeft: {\r\n            backgroundColor: theme.chatBubble,\r\n        },\r\n        bubbleWrapperRight: {\r\n            paddingLeft: 10,\r\n        },\r\n        bubbleTextLeft: {\r\n            color: theme.text,\r\n        },\r\n        bubbleTextRight: {\r\n            marginLeft: 0,\r\n        },\r\n        messageContainerLeft: {},\r\n        messageContainerRight: {\r\n            paddingRight: 20,\r\n        },\r\n        messageReadContainerLeft: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadContainerRight: {\r\n            position: \"absolute\",\r\n            right: 5,\r\n            bottom: 3,\r\n        },\r\n        messageReadAvatar: {\r\n            width: 20,\r\n            height: 20,\r\n        },\r\n        messageReadAvatarText: {\r\n            fontSize: 12,\r\n        },\r\n        messageTicksContainer: {\r\n            marginRight: 4,\r\n            minWidth: 15,\r\n        },\r\n        messageTick: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatScreen));\r\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport {Dimensions} from \"react-native\";\r\nimport {colors} from \"react-native-elements\";\r\n\r\nexport function initPolyfills(): void {\r\n    // FIXME: https://github.com/react-native-elements/react-native-elements/pull/2561\r\n\r\n    // @ts-ignore react-native-elements typings are missing \"web\"\r\n    if (!colors.platform.web) {\r\n        // @ts-ignore react-native-elements typings are missing \"web\"\r\n        colors.platform.web = {\r\n            primary: \"#2089dc\",\r\n            secondary: \"#ca71eb\",\r\n            grey: \"#393e42\",\r\n            searchBg: \"#303337\",\r\n            success: \"#52c41a\",\r\n            error: \"#ff190c\",\r\n            warning: \"#faad14\",\r\n        };\r\n    }\r\n}\r\n\r\nexport function normalizeWheelEvent(e: WheelEvent): {spinY: number; pixelY: number} {\r\n    // Reasonable defaults\r\n    const PIXEL_STEP = 10;\r\n    const LINE_HEIGHT = 40;\r\n    const PAGE_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\n    let sY = 0; // spinY\r\n    let pY = 0; // pixelY\r\n\r\n    // Legacy\r\n    if (\"detail\" in e) sY = e.detail;\r\n    if (\"wheelDelta\" in e) sY = -(e as {wheelDelta: number}).wheelDelta / 120;\r\n    if (\"wheelDeltaY\" in e) sY = -(e as {wheelDeltaY: number}).wheelDeltaY / 120;\r\n\r\n    if (\"deltaY\" in e) pY = e.deltaY;\r\n    else pY = sY * PIXEL_STEP;\r\n\r\n    if (pY && e.deltaMode) {\r\n        // delta in LINE units\r\n        if (e.deltaMode == 1) pY *= LINE_HEIGHT;\r\n        // delta in PAGE units\r\n        else pY *= PAGE_HEIGHT;\r\n    }\r\n\r\n    // Fall-back if spin cannot be determined\r\n    if (pY && !sY) sY = pY < 1 ? -1 : 1;\r\n\r\n    return {spinY: sY, pixelY: pY};\r\n}\r\n","import {NavigatorRoute} from \"../navigation/types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\n// The navigation routes that require a connection to the chat socket.\r\nexport const CHAT_CONNECTED_ROUTES: NavigatorRoute[] = [\"ChatScreen\", \"ChatRoomsScreen\"];\r\n\r\n// Override the status bar theme for certain screens\r\nexport const STATUS_BAR_THEME_OVERRIDES: {[key in NavigatorRoute]?: ThemeKey} = {\r\n    SigninScreen: \"light\",\r\n    SignupScreen: \"light\",\r\n    ForgotPasswordScreen: \"light\",\r\n    ProfileScreen: \"light\",\r\n    MyProfileScreen: \"light\",\r\n};\r\n\r\n// Routes that will redirect when not authenticated\r\nexport const AUTHENTICATED_ROUTES: NavigatorRoute[] = ([\r\n    \"ChatRoomsScreen\",\r\n    \"ChatScreen\",\r\n    \"DeleteAccountScreen\",\r\n    \"MainScreen\",\r\n    \"MatchFilteringScreen\",\r\n    \"MatchHistoryScreen\",\r\n    \"MyProfileScreen\",\r\n    \"OnboardingSuccessfulScreen\",\r\n    \"ProfileScreen\",\r\n    \"SettingsScreen\",\r\n    \"TabHome\",\r\n    \"TabHomeScreen\",\r\n    \"TabMatching\",\r\n    \"TabMatchingScreen\",\r\n    \"TabMessaging\",\r\n    \"TabNotifications\",\r\n    \"TabNotificationsScreen\",\r\n] as NavigatorRoute[]).concat(ONBOARDING_ORDER);\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport ChatRoomsScreen from \"../screens/messaging/ChatRoomsScreen\";\r\nimport {NavigatorRoute, TabMessagingRoot} from \"./types\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport ChatScreenHeader from \"../components/headers/ChatScreenHeader\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport {AppStateStatus, AppState as RNAppState} from \"react-native\";\r\nimport chatSocket from \"../api/chat-socket\";\r\nimport {CHAT_CONNECTED_ROUTES} from \"../constants/route-settings\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {connectToChat, disconnectFromChat} from \"../state/messaging/actions\";\r\nimport store from \"../state/store\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\n\r\nclass MessagingNavigator extends React.Component {\r\n    componentDidMount(): void {\r\n        // Handle app state changes (active / inactive)\r\n        let previousAppStatus: AppStateStatus;\r\n        RNAppState.addEventListener(\"change\", (status: AppStateStatus) => {\r\n            // If the app is now active\r\n            if (previousAppStatus !== \"active\" && status === \"active\") this.onAppActive();\r\n            // If the app is no longer active\r\n            if (previousAppStatus === \"active\" && status !== \"active\") this.onAppInactive();\r\n            previousAppStatus = status;\r\n        });\r\n    }\r\n\r\n    private onAppActive(): void {\r\n        // Reconnect to chat if needed\r\n        if (!chatSocket.isConnected()) {\r\n            const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n            const isChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n            if (isChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n        }\r\n    }\r\n\r\n    private onAppInactive(): void {\r\n        // Disconnect from the chat if connected\r\n        if (chatSocket.isConnected()) store.dispatch(disconnectFromChat());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Stack.Navigator headerMode=\"screen\">\r\n                <Stack.Screen\r\n                    name=\"ChatRoomsScreen\"\r\n                    component={ChatRoomsScreen}\r\n                    options={{\r\n                        title: screenTitle(\"ChatRoomsScreen\"),\r\n                        headerShown: true,\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ChatScreen\"\r\n                    options={() => ({headerShown: false, title: screenTitle(\"ChatScreen\")})}\r\n                >\r\n                    {(props) => (\r\n                        <>\r\n                            <ChatScreen {...props} />\r\n                            <ChatScreenHeader {...props} />\r\n                        </>\r\n                    )}\r\n                </Stack.Screen>\r\n            </Stack.Navigator>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Handle connecting / disconnecting from the chat depending on the focused route.\r\n */\r\nexport function handleRouteChangeForChat(route: NavigatorRoute, previousRoute: NavigatorRoute | undefined): void {\r\n    const toChat = CHAT_CONNECTED_ROUTES.includes(route);\r\n    const fromChat = previousRoute && CHAT_CONNECTED_ROUTES.includes(previousRoute);\r\n    if (!fromChat && toChat) (store.dispatch as MyThunkDispatch)(connectToChat());\r\n    if (fromChat && !toChat) (store.dispatch as MyThunkDispatch)(disconnectFromChat());\r\n}\r\n\r\nexport default MessagingNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut?: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nexport type TabHomeScreenProps = ThemeProps;\r\n\r\nclass TabHomeScreen extends React.Component<TabHomeScreenProps> {\r\n    private async fetchPostEmbed(shortCode: string): Promise<Response> {\r\n        // seaEuAlliance profile ID: 32204624961\r\n        // url=\r\n        const BASE_URL = \"https://graph.facebook.com/v9.0/instagram_oembed\";\r\n        const CLIENT_TOKEN = \"80cd0bc3c132ad645a15d234ccd841bd\";\r\n        const POST_URL = `https://www.instagram.com/p/${shortCode}/`;\r\n        const url = `${BASE_URL}?url=${POST_URL}&access_token=${CLIENT_TOKEN}`;\r\n\r\n        const headers: {[key: string]: string} = {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n        };\r\n        console.log(url);\r\n        const response = await fetch(url, {method: \"GET\", headers});\r\n        return response;\r\n    }\r\n\r\n    fetchEmbed() {\r\n        this.fetchPostEmbed(\"CJQ-ZX_rZb8\").then((response) => console.log(JSON.stringify(response)));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    {/*<TouchableOpacity onPress={() => this.fetchEmbed()}>\r\n                        <Text style={{fontSize: 22, padding: 20}}>Fetch</Text>\r\n                    </TouchableOpacity>*/}\r\n                    <FontAwesome style={styles.icon} name=\"heart\" />\r\n                    <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                    <View style={styles.separator} />\r\n                    <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                        Found a bug or have some feedback for us or ideas for the app?\r\n                    </Text>\r\n                    <Text style={styles.alphaText}>\r\n                        Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                    </Text>\r\n                    <LogOutButton style={styles.logoutButton} />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabHomeScreen);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport CustomModal, {CustomModalClass, CustomModalProps} from \"./CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock?: () => void; profile: UserProfile | null};\r\n\r\nexport class BlockProfileModalClass extends React.Component<BlockProfileModalProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    show(): void {\r\n        this.modalRef.current?.show();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) =>\r\n                    profile ? (\r\n                        <>\r\n                            <Text style={styles.text}>\r\n                                {i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                            </Text>\r\n                            <View style={styles.actionButtonsWrapper}>\r\n                                <Button\r\n                                    text={i18n.t(\"cancel\")}\r\n                                    onPress={() => hide()}\r\n                                    skin=\"rounded-hollow\"\r\n                                    style={styles.actionButton}\r\n                                    textStyle={styles.actionText}\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"block.action\")}\r\n                                    onPress={() => {\r\n                                        hide();\r\n                                        (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                                        if (onBlock) onBlock();\r\n                                    }}\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.actionButton, styles.redBackground]}\r\n                                    textStyle={styles.actionText}\r\n                                />\r\n                            </View>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n        },\r\n        actionButton: {\r\n            flex: 1,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BlockProfileModalClass);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n    flagSize?: number;\r\n    flagEmoji?: boolean;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, flagSize, flagEmoji, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag\r\n                            countryCode={university.country}\r\n                            flagSize={flagSize || 18}\r\n                            withEmoji={flagEmoji || false}\r\n                        />\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleProp, Text, View, ViewStyle, StyleSheet, TextStyle, TouchableOpacity} from \"react-native\";\r\nimport {ThemeConsumer, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ChipsProps<T> = {\r\n    items: T[];\r\n    label?: (item: T) => string;\r\n    removable?: boolean;\r\n    onRemove?: (item: T) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    chipStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nclass Chips<T> extends React.Component<ChipsProps<T>> {\r\n    render(): JSX.Element {\r\n        const {items, label, removable, onRemove, containerStyle, chipStyle, textStyle} = this.props;\r\n\r\n        return (\r\n            // Use a theme consumer instead of the withTheme() pattern because it breaks genericity\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    return (\r\n                        <View style={[styles.container, containerStyle]}>\r\n                            {items.map((it: T, i: number) => (\r\n                                <Chip\r\n                                    key={`chips-${i}-${it}`}\r\n                                    text={label ? label(it) : typeof it === \"string\" ? it : JSON.stringify(it)}\r\n                                    removable={removable}\r\n                                    onRemove={() => {\r\n                                        if (onRemove) onRemove(it);\r\n                                    }}\r\n                                    chipStyle={chipStyle}\r\n                                    textStyle={textStyle}\r\n                                />\r\n                            ))}\r\n                        </View>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\ntype ChipProps = {\r\n    text: string;\r\n    removable?: boolean;\r\n    onRemove?: () => void;\r\n    chipStyle: StyleProp<ViewStyle>;\r\n    textStyle: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nconst Chip = withTheme(\r\n    ({text, removable, onRemove, theme, chipStyle, textStyle}: ChipProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={[styles.chip, chipStyle]}>\r\n                <Text\r\n                    style={[\r\n                        styles.chipText,\r\n                        removable ? {marginRight: 20} /* depends on width of \"remove\" button */ : {},\r\n                        textStyle,\r\n                    ]}\r\n                    numberOfLines={1}\r\n                >\r\n                    {text}\r\n                </Text>\r\n                {removable && (\r\n                    <TouchableOpacity\r\n                        style={styles.chipRemoveButton}\r\n                        onPress={() => {\r\n                            if (onRemove) onRemove();\r\n                        }}\r\n                    >\r\n                        <MaterialIcons name=\"close\" style={styles.chipRemoveIcon} />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        chip: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.accentSlight,\r\n            paddingVertical: 6,\r\n            paddingHorizontal: 10,\r\n            borderRadius: 20,\r\n            marginRight: 4,\r\n            marginBottom: 4,\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n        chipRemoveButton: {\r\n            position: \"absolute\",\r\n            right: 0,\r\n            width: 32,\r\n            height: 32,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        chipRemoveIcon: {\r\n            fontSize: 22,\r\n            color: theme.textBlack,\r\n        },\r\n    });\r\n});\r\n\r\nexport default Chips;\r\n","import * as React from \"react\";\r\nimport {useFocusEffect} from \"@react-navigation/native\";\r\n\r\nexport default function FocusAware({onFocus, onBlur}: {onFocus?: () => void; onBlur?: () => void}): JSX.Element {\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            if (onFocus) onFocus();\r\n            return () => {\r\n                if (onBlur) onBlur();\r\n            };\r\n        }, []),\r\n    );\r\n    return <></>;\r\n}\r\n","import {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {StyleProp, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport FocusAware from \"./utility/FocusAware\";\r\n\r\nconst ANIMATION_AMPLITUDE = 25;\r\nconst DURATION = 400; // the animation duration (ms)\r\nconst PAUSE = 1000; // how much time to wait before looping the animation (ms)\r\n\r\n// Component props\r\nexport type SwipeTipProps = {\r\n    direction: \"horizontal\" | \"left\";\r\n    style?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n};\r\n\r\nconst ICON_NAMES: {[key: string]: string} = {\r\n    horizontal: \"gesture-swipe-horizontal\",\r\n    left: \"gesture-swipe-left\",\r\n};\r\n\r\n// Component props\r\nexport type SwipeTipState = {animating: boolean};\r\n\r\nclass SwipeTip extends React.Component<SwipeTipProps, SwipeTipState> {\r\n    offset = new ReAnimated.Value(0);\r\n\r\n    constructor(props: SwipeTipProps) {\r\n        super(props);\r\n        this.state = {animating: false};\r\n    }\r\n\r\n    setAnimating(b: boolean): void {\r\n        if (b === this.state.animating) return;\r\n\r\n        this.setState({...this.state, animating: b});\r\n\r\n        if (b) {\r\n            const dir = this.props.direction;\r\n            if (dir === \"horizontal\") {\r\n                const animate = (even: boolean): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: even ? ANIMATION_AMPLITUDE / 2 : -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) {\r\n                                if (even) setTimeout(() => animate(!even), PAUSE);\r\n                                else animate(!even);\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                animate(true);\r\n            } else if (dir === \"left\") {\r\n                const animate = (): void => {\r\n                    ReAnimated.timing(this.offset, {\r\n                        toValue: -ANIMATION_AMPLITUDE / 2,\r\n                        duration: DURATION,\r\n                        easing: Easing.inOut(Easing.circle),\r\n                    }).start(() => {\r\n                        // Come back to initial position\r\n                        ReAnimated.timing(this.offset, {\r\n                            toValue: 0,\r\n                            duration: DURATION,\r\n                            easing: Easing.linear,\r\n                        }).start(() => {\r\n                            // Pause before animating again\r\n                            if (this.state.animating) setTimeout(animate, PAUSE);\r\n                        });\r\n                    });\r\n                };\r\n                animate();\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {direction, style, iconStyle} = this.props;\r\n\r\n        const iconName = ICON_NAMES[direction];\r\n\r\n        return (\r\n            <View style={[style]}>\r\n                <FocusAware onFocus={() => this.setAnimating(true)} onBlur={() => this.setAnimating(false)} />\r\n                <ReAnimated.View style={{left: this.offset}}>\r\n                    {iconName && <MaterialCommunityIcons name={iconName} style={iconStyle} />}\r\n                </ReAnimated.View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwipeTip;\r\n","import * as React from \"react\";\r\nimport {LayoutChangeEvent, LayoutRectangle, Text, TouchableOpacity, View, StyleSheet, Platform} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {UserProfile, UserProfileStudent} from \"../../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"../modals/BlockProfileModal\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {styleTextLight, styleTextThin} from \"../../styles/general\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport Chips from \"../Chips\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionContainer} from \"./SwipeableCard\";\r\nimport SwipeTip from \"../SwipeTip\";\r\n\r\n// Component props\r\nexport type MatchProfileCardProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\n// Component state\r\nexport type MatchProfileCardState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 15,\r\n    verticalSpacing: 10,\r\n    borderRadius: 20,\r\n};\r\n\r\nclass MatchProfileCard extends React.Component<MatchProfileCardProps, MatchProfileCardState> {\r\n    cardRef = React.createRef<SwipeableCardClass>();\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: MatchProfileCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: true,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_EXPANDED_HEIGHT),\r\n            });\r\n        } else {\r\n            this.setState({...this.state, animating: true});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n                duration,\r\n                easing: Easing.elastic(1.0),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n        }\r\n    }\r\n\r\n    collapse() {\r\n        if (Platform.OS === \"web\") {\r\n            this.setState({\r\n                ...this.state,\r\n                expanded: false,\r\n                height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            });\r\n        } else {\r\n            const duration = 100;\r\n            this.setState({...this.state, animating: true, expanded: false});\r\n            ReAnimated.timing(this.state.height, {\r\n                toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n                duration,\r\n                easing: Easing.out(Easing.linear),\r\n            }).start();\r\n            setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n        }\r\n    }\r\n\r\n    hide(onFinish?: () => void, right?: boolean) {\r\n        /*const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            this.cardRef.current?.hide();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);*/\r\n        this.cardRef.current?.collapse(onFinish, right);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, showSwipeTip} = this.props;\r\n        const {expanded, animating, height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        const chipStyleProps = {chipStyle: styles.chip};\r\n\r\n        const content = (\r\n            <>\r\n                <View style={styles.collapsedContent}>\r\n                    <View style={styles.avatarContainer}>\r\n                        <ProfileAvatar profile={profile} size={120} rounded containerStyle={styles.avatar} />\r\n                    </View>\r\n                    <View style={styles.infoContainer}>\r\n                        <Text style={styles.name}>{fullName}</Text>\r\n                        {profile && <FormattedUniversity style={styles.infoText} university={profile.university} />}\r\n                        <Text style={styles.infoText}>\r\n                            {i18n.t(`genders.${profile.gender}`)}\r\n                            {\", \"}\r\n                            {i18n.t(`allRoles.${profile.type}`)}\r\n                            {profile.type == \"student\"\r\n                                ? ` (${i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)})`\r\n                                : \"\"}\r\n                        </Text>\r\n                        {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                    </View>\r\n                    {showSwipeTip && (\r\n                        <SwipeTip direction=\"horizontal\" style={styles.swipeTip} iconStyle={styles.swipeTipIcon} />\r\n                    )}\r\n                </View>\r\n                {(expanded || animating) && (\r\n                    <View style={styles.expandedContent}>\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <Chips\r\n                            items={profile.languages}\r\n                            label={(v: SpokenLanguageDto) =>\r\n                                `${i18n.t(`languageNames.${v.code}`)}${\r\n                                    v.level != \"native\" ? ` (${v.level.toUpperCase()})` : \"\"\r\n                                }`\r\n                            }\r\n                            {...chipStyleProps}\r\n                        />\r\n                        <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                        <Chips\r\n                            items={profile.profileOffers}\r\n                            label={(o: OfferValueDto) => i18n.t(`allOffers.${o.offerId}.name`)}\r\n                            {...chipStyleProps}\r\n                        />\r\n\r\n                        {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                        <BlockProfileModal\r\n                            profile={profile}\r\n                            activator={(open) => (\r\n                                <TouchableOpacity style={styles.blockButton} onPress={() => open()}>\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            onBlock={() => this.hide()}\r\n                        />\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <SwipeableCard\r\n                ref={this.cardRef}\r\n                looks={LOOKS}\r\n                wrapperProps={{\r\n                    onLayout: (e: LayoutChangeEvent) => {\r\n                        this.layout = e.nativeEvent.layout;\r\n                    },\r\n                }}\r\n                useNativeAnimations={Platform.OS !== \"web\"}\r\n                friction={1}\r\n                leftThreshold={100}\r\n                rightThreshold={100}\r\n                onSwipeableRightWillOpen={() => {\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                    }, false);\r\n                }}\r\n                onSwipeableLeftWillOpen={() => {\r\n                    this.hide(() => {\r\n                        if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                    }, true);\r\n                }}\r\n                renderRightActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"right\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentRight}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                renderLeftActions={() => (\r\n                    <SwipeActionContainer\r\n                        side=\"left\"\r\n                        looks={LOOKS}\r\n                        fullCardWidth\r\n                        contentStyle={styles.swipeActionContentLeft}\r\n                    >\r\n                        <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                    </SwipeActionContainer>\r\n                )}\r\n                onPress={() => this.toggleExpanded()}\r\n            >\r\n                {Platform.OS !== \"web\" && (\r\n                    <ReAnimated.View style={[styles.cardContent, {height}]}>{content}</ReAnimated.View>\r\n                )}\r\n                {Platform.OS === \"web\" && (\r\n                    <View style={[styles.cardContent, {height: height[\" __value\"]}]}>{content}</View>\r\n                )}\r\n            </SwipeableCard>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 150;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 360;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            padding: 20,\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            padding: 20,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        // Card content\r\n\r\n        cardContent: {\r\n            padding: 10,\r\n        },\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTip: {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 5,\r\n        },\r\n        swipeTipIcon: {\r\n            fontSize: 22,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chip: {\r\n            //borderRadius: 6,\r\n            paddingHorizontal: 5,\r\n            paddingVertical: 2,\r\n            flexGrow: 1,\r\n            justifyContent: \"center\",\r\n        },\r\n\r\n        expandedSectionTitle: {\r\n            ...styleTextLight,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(MatchProfileCard);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, Text, View, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport Button, {ButtonProps, BUTTON_SKINS} from \"./Button\";\r\n\r\n// Component props\r\nexport type AsyncButtonProps = Omit<ButtonProps, \"onPress\"> & {\r\n    onPress: () => Promise<unknown>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    loadingIndicatorColor?: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype AsyncButtonState = {\r\n    loading: boolean;\r\n};\r\n\r\nclass AsyncButton extends React.Component<AsyncButtonProps, AsyncButtonState> {\r\n    constructor(props: AsyncButtonProps) {\r\n        super(props);\r\n        this.state = {loading: false};\r\n    }\r\n\r\n    onPress() {\r\n        if (!this.state.loading) {\r\n            this.setState({...this.state, loading: true});\r\n            this.props.onPress().then(() => this.setState({...this.state, loading: false}));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {loadingIndicatorStyle, loadingIndicatorColor, theme, ...otherProps} = this.props;\r\n        const {loading} = this.state;\r\n\r\n        const skinStyles = this.props.skin ? BUTTON_SKINS[this.props.skin](theme) : {button: {}, text: {}};\r\n\r\n        return (\r\n            <Button {...otherProps} {...{onPress: loading ? undefined : () => this.onPress()}}>\r\n                {loading && (\r\n                    <>\r\n                        <ActivityIndicator\r\n                            color={loadingIndicatorColor || theme.accentTernary}\r\n                            style={[\r\n                                {position: \"absolute\", top: 0, right: 0, bottom: 0, left: 0, margin: \"auto\"},\r\n                                loadingIndicatorStyle,\r\n                            ]}\r\n                        />\r\n                        <View style={{opacity: 0}}>\r\n                            <Text style={[skinStyles.text, this.props.textStyle]}>{this.props.text}</Text>\r\n                            {this.props.icon}\r\n                        </View>\r\n                    </>\r\n                )}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(AsyncButton);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Svg, {Path} from \"react-native-svg\";\r\n\r\nexport type WaveProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    patternIndex?: number | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WaveState = {\r\n    wavePatternIdx: number;\r\n};\r\n\r\nconst WAVE_PATTERNS = [\r\n    \"M0,160L48,154.7C96,149,192,139,288,165.3C384,192,480,256,576,245.3C672,235,768,149,864,101.3C960,53,1056,43,1152,64C1248,85,1344,139,1392,165.3L1440,192L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,224L48,197.3C96,171,192,117,288,128C384,139,480,213,576,218.7C672,224,768,160,864,144C960,128,1056,160,1152,181.3C1248,203,1344,213,1392,218.7L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,96L48,106.7C96,117,192,139,288,160C384,181,480,203,576,213.3C672,224,768,224,864,192C960,160,1056,96,1152,85.3C1248,75,1344,117,1392,138.7L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,192L48,197.3C96,203,192,213,288,197.3C384,181,480,139,576,122.7C672,107,768,117,864,128C960,139,1056,149,1152,133.3C1248,117,1344,75,1392,53.3L1440,32L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,128L48,138.7C96,149,192,171,288,160C384,149,480,107,576,122.7C672,139,768,213,864,202.7C960,192,1056,96,1152,64C1248,32,1344,64,1392,80L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,64L48,90.7C96,117,192,171,288,170.7C384,171,480,117,576,96C672,75,768,85,864,101.3C960,117,1056,139,1152,160C1248,181,1344,203,1392,213.3L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,160L48,154.7C96,149,192,139,288,122.7C384,107,480,85,576,96C672,107,768,149,864,138.7C960,128,1056,64,1152,53.3C1248,43,1344,85,1392,106.7L1440,128L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n    \"M0,32L60,69.3C120,107,240,181,360,186.7C480,192,600,128,720,90.7C840,53,960,43,1080,48C1200,53,1320,75,1380,85.3L1440,96L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,128L60,117.3C120,107,240,85,360,64C480,43,600,21,720,64C840,107,960,213,1080,250.7C1200,288,1320,256,1380,240L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,288L60,245.3C120,203,240,117,360,101.3C480,85,600,139,720,176C840,213,960,235,1080,240C1200,245,1320,235,1380,229.3L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,96L60,117.3C120,139,240,181,360,181.3C480,181,600,139,720,138.7C840,139,960,181,1080,202.7C1200,224,1320,224,1380,224L1440,224L1440,0L1380,0C1320,0,1200,0,1080,0C960,0,840,0,720,0C600,0,480,0,360,0C240,0,120,0,60,0L0,0Z\",\r\n    \"M0,160L48,181.3C96,203,192,245,288,261.3C384,277,480,267,576,224C672,181,768,107,864,106.7C960,107,1056,181,1152,202.7C1248,224,1344,192,1392,176L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\",\r\n];\r\n\r\nexport const WAVE_HEADER_HEIGHT = 100;\r\n\r\nexport default class Wave extends React.Component<WaveProps, WaveState> {\r\n    constructor(props: WaveProps) {\r\n        super(props);\r\n        this.state = {\r\n            wavePatternIdx:\r\n                props.patternIndex === \"random\"\r\n                    ? Math.floor(Math.random() * WAVE_PATTERNS.length)\r\n                    : (props.patternIndex as number),\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown} = this.props;\r\n        const {wavePatternIdx} = this.state;\r\n\r\n        const wavePattern = WAVE_PATTERNS[wavePatternIdx];\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    {\r\n                        minWidth: 400, // fix empty space above the wave on narrow screens\r\n                        height: WAVE_HEADER_HEIGHT,\r\n                        ...(upsideDown ? {transform: [{rotate: \"180deg\"}]} : {}),\r\n                    },\r\n                    style,\r\n                ]}\r\n            >\r\n                <Svg viewBox=\"0 40 1440 320\" preserveAspectRatio=\"none\">\r\n                    <Path fill={color} d={wavePattern} />\r\n                </Svg>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {openChat, rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport AsyncButton from \"../AsyncButton\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {OfferValueDto} from \"../../api/dto\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport Button from \"../Button\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport CustomModal, {CustomModalClass} from \"./CustomModal\";\r\nimport {getMatchingOffers} from \"../../model/utils\";\r\nimport Wave from \"../Wave\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect(\r\n    (state: AppState) => ({\r\n        localProfile: state.profile.user?.profile,\r\n    }),\r\n    null,\r\n    null,\r\n    {forwardRef: true},\r\n);\r\n\r\n// Component props\r\nexport type MatchSuccessModalProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\ntype MatchSuccessModalState = {\r\n    profile: UserProfile | null;\r\n    roomId: string | null;\r\n    maxOffersDisplayed: number;\r\n    waveWidth: number;\r\n};\r\n\r\nconst VERTICAL_SPACE_AROUND = 0;\r\nconst MAX_WIDTH = 500;\r\n\r\nconst OFFERS_CARD_VERTICAL_PADDING = 10;\r\nconst OFFERS_CARD_LINE_HEIGHT = 20;\r\n\r\nexport class MatchSuccessModalClass extends React.Component<MatchSuccessModalProps, MatchSuccessModalState> {\r\n    private modalRef = React.createRef<CustomModalClass>();\r\n\r\n    constructor(props: MatchSuccessModalProps) {\r\n        super(props);\r\n        this.state = {profile: null, roomId: null, maxOffersDisplayed: 999, waveWidth: 0};\r\n    }\r\n\r\n    show(profile: UserProfile, roomId: string | null): void {\r\n        this.modalRef.current?.show();\r\n\r\n        /*if (Math.random() < 0.5) {\r\n            profile = JSON.parse(\r\n                '{\"id\":\"f70bd845-26e9-4aa9-9c13-33c4ff3d5036\",\"type\":\"student\",\"firstName\":\"Test\",\"lastName\":\"Test\",\"gender\":\"male\",\"nationality\":\"FR\",\"languages\":[{\"code\":\"fr\",\"level\":\"native\"}],\"profileOffers\":[{\"allowStaff\":false,\"allowStudent\":false,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"grab-a-drink\"},{\"allowStaff\":false,\"allowStudent\":false,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"provide-a-couch\"},{\"allowStaff\":false,\"allowStudent\":false,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"get-into-campus-life\"},{\"allowStaff\":true,\"allowStudent\":true,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"cowork-on-a-project\"},{\"allowStaff\":true,\"allowStudent\":true,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"answer-academic-questions\"},{\"allowStaff\":true,\"allowStudent\":true,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"language-tandem\"},{\"allowStaff\":true,\"allowStudent\":true,\"allowMale\":true,\"allowFemale\":true,\"allowOther\":true,\"offerId\":\"share-interests\"}],\"avatar\":null,\"score\":0,\"degree\":\"m2\",\"avatarUrl\":null,\"birthdate\":\"1997-02-13T23:00:00.000Z\",\"educationFields\":[],\"interests\":[\"climbing\",\"bbq\"],\"university\":{\"key\":\"univ-brest\",\"country\":\"FR\"}}'\r\n            );\r\n        }*/\r\n\r\n        this.setState({...this.state, profile, roomId, maxOffersDisplayed: 999});\r\n    }\r\n\r\n    hide(): void {\r\n        this.modalRef.current?.hide();\r\n        this.setState({...this.state, profile: null});\r\n    }\r\n\r\n    async chat(): Promise<void> {\r\n        const {roomId} = this.state;\r\n        this.hide();\r\n        if (roomId) openChat(roomId);\r\n        else rootNavigate(\"MainScreen\", {screen: \"TabMessaging\"});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, localProfile} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const {profile, maxOffersDisplayed, waveWidth} = this.state;\r\n        const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(profile.profileOffers, localProfile)\r\n                : [];\r\n\r\n        /*const profileOffers =\r\n            localProfile && profile && profile.profileOffers\r\n                ? getMatchingOffers(\r\n                      [\r\n                          {\r\n                              offerId: \"provide-a-couch\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"grab-a-drink\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"answer-academic-questions\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"get-into-campus-life\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"cowork-on-a-project\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"share-interests\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                          {\r\n                              offerId: \"language-tandem\",\r\n                              allowMale: true,\r\n                              allowFemale: true,\r\n                              allowOther: true,\r\n                              allowStaff: true,\r\n                              allowStudent: true,\r\n                          },\r\n                      ],\r\n                      localProfile,\r\n                  )\r\n                : [];*/\r\n\r\n        return (\r\n            <CustomModal\r\n                ref={this.modalRef}\r\n                fullHeight\r\n                noBackground\r\n                backdropBlur\r\n                backdropOpacity={0}\r\n                animationType=\"fade\"\r\n                modalViewStyle={styles.modal}\r\n                renderContent={() => (\r\n                    <>\r\n                        <Wave\r\n                            color={theme.greenModalBackground}\r\n                            style={{width: waveWidth}}\r\n                            upsideDown\r\n                            patternIndex={9}\r\n                        />\r\n\r\n                        <View\r\n                            style={styles.container}\r\n                            onLayout={(layout) => {\r\n                                const {width} = layout.nativeEvent.layout;\r\n                                this.setState({...this.state, waveWidth: width});\r\n                            }}\r\n                        >\r\n                            <View style={styles.topContainer}>\r\n                                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                                <View style={styles.separator} />\r\n                            </View>\r\n\r\n                            <View style={styles.profileInfoContainer}>\r\n                                <ProfileAvatar\r\n                                    profile={profile || undefined}\r\n                                    size={150}\r\n                                    rounded\r\n                                    containerStyle={styles.avatarContainer}\r\n                                />\r\n                                <Text style={styles.name}>\r\n                                    {profile?.firstName} {profile?.lastName}\r\n                                </Text>\r\n\r\n                                {profileOffers.length > 0 && (\r\n                                    <View\r\n                                        style={[styles.offersCard, maxOffersDisplayed === 999 ? {opacity: 0} : {}]}\r\n                                        onLayout={(layout) => {\r\n                                            const height = layout.nativeEvent.layout.height;\r\n                                            const availableHeight = height - OFFERS_CARD_VERTICAL_PADDING * 2;\r\n                                            let numItems = Math.floor(availableHeight / OFFERS_CARD_LINE_HEIGHT) - 1;\r\n                                            if (numItems < profileOffers.length) numItems--; // leave space to show \"n more\"\r\n                                            if (numItems >= 0 && numItems != maxOffersDisplayed)\r\n                                                this.setState({...this.state, maxOffersDisplayed: numItems});\r\n                                        }}\r\n                                    >\r\n                                        <Text style={styles.offerText}>{i18n.t(\"matching.success.offersTitle\")}</Text>\r\n                                        {profileOffers.slice(0, maxOffersDisplayed).map((o: OfferValueDto) => (\r\n                                            <View key={`match-profile-offer-${o.offerId}`}>\r\n                                                <Text numberOfLines={1} style={styles.offerText}>\r\n                                                    - {i18n.t(`allOffers.${o.offerId}.name`)}\r\n                                                </Text>\r\n                                            </View>\r\n                                        ))}\r\n                                        {maxOffersDisplayed < profileOffers.length && (\r\n                                            <Text style={styles.offerText}>\r\n                                                {profileOffers.length - maxOffersDisplayed}{\" \"}\r\n                                                {i18n.t(\"matching.success.offersMore\")}\r\n                                            </Text>\r\n                                        )}\r\n                                    </View>\r\n                                )}\r\n                            </View>\r\n\r\n                            <View style={styles.actionsContainer}>\r\n                                <AsyncButton\r\n                                    text={i18n.t(\"matching.success.chat\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    icon={<MaterialCommunityIcons name=\"chat\" style={styles.actionIcon} />}\r\n                                    style={styles.action}\r\n                                    onPress={async () => await this.chat()}\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"matching.success.continue\")}\r\n                                    icon={\r\n                                        <MaterialCommunityIcons\r\n                                            name=\"gesture-swipe-vertical\"\r\n                                            style={styles.actionIcon}\r\n                                        />\r\n                                    }\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.action, {backgroundColor: theme.actionNeutral}]}\r\n                                    onPress={() => this.hide()}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n\r\n                        <Wave color={theme.greenModalBackground} style={{width: waveWidth}} patternIndex={5} />\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            paddingHorizontal: 0,\r\n            paddingVertical: VERTICAL_SPACE_AROUND,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: MAX_WIDTH,\r\n            justifyContent: \"center\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            backgroundColor: theme.greenModalBackground,\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n            flexShrink: 1,\r\n        },\r\n        topContainer: {\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n        },\r\n        profileInfoContainer: {\r\n            alignItems: \"center\",\r\n            flexShrink: 1,\r\n        },\r\n        actionsContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            width: \"85%\",\r\n            maxWidth: 400,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 26,\r\n            color: theme.textWhite,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginTop: 10,\r\n            marginBottom: 20,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.textWhite,\r\n            opacity: 0.4,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: theme.textWhite,\r\n            borderWidth: 0.5,\r\n        },\r\n        name: {\r\n            color: theme.textWhite,\r\n            fontSize: 24,\r\n            marginVertical: 5,\r\n        },\r\n        offersCard: {\r\n            backgroundColor: \"#0001\",\r\n            borderRadius: 20,\r\n            paddingVertical: OFFERS_CARD_VERTICAL_PADDING,\r\n            paddingHorizontal: 20,\r\n            marginVertical: 10,\r\n            flexShrink: 1,\r\n            overflow: \"hidden\",\r\n        },\r\n        offerText: {\r\n            color: theme.textWhite,\r\n            fontSize: 16,\r\n            lineHeight: OFFERS_CARD_LINE_HEIGHT,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            marginHorizontal: 5,\r\n        },\r\n        actionIcon: {\r\n            fontSize: 22,\r\n            color: theme.textWhite,\r\n            marginLeft: 10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchSuccessModalClass));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {LayoutRectangle, StyleSheet, Text} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport MatchProfileCard from \"../components/cards/MatchProfileCard\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport MatchSuccessModal, {MatchSuccessModalClass} from \"../components/modals/MatchSuccessModal\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profiles: state.matching.fetchedProfiles,\r\n    fetchingProfiles: state.matching.profilesPagination.fetching,\r\n    canFetchMore: state.matching.profilesPagination.canFetchMore,\r\n    currentPage: state.matching.profilesPagination.page,\r\n    isFirstLaunch: state.settings.isFirstLaunch,\r\n}));\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"TabMatchingScreen\">;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps> {\r\n    scrollerRef = React.createRef<InfiniteScroller<UserProfile>>();\r\n    successModalRef = React.createRef<MatchSuccessModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            profiles,\r\n            theme,\r\n            fetchingProfiles,\r\n            canFetchMore,\r\n            isFirstLaunch,\r\n            currentPage,\r\n            navigation,\r\n            dispatch,\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <InfiniteScroller\r\n                    ref={this.scrollerRef}\r\n                    navigation={navigation}\r\n                    fetchLimit={PROFILES_FETCH_LIMIT}\r\n                    fetchMore={() => (dispatch as MyThunkDispatch)(fetchProfiles())}\r\n                    fetching={fetchingProfiles}\r\n                    canFetchMore={canFetchMore}\r\n                    // refreshOnFocus={true}\r\n                    currentPage={currentPage}\r\n                    items={profiles}\r\n                    id={(profile: UserProfile): string => profile.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    endOfItemsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.noMoreItems\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.noItemsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedProfiles())}\r\n                    renderItem={(profile: UserProfile, hide: () => void) => (\r\n                        <MatchProfileCard\r\n                            key={`match-profile-card-${profile.id}`}\r\n                            profile={profile}\r\n                            onExpand={(layout: LayoutRectangle) => {\r\n                                const scroll = this.scrollerRef.current?.scrollViewRef.current;\r\n                                if (scroll) scroll.scrollTo({y: layout.y - 100, animated: true});\r\n                            }}\r\n                            onSwipeRight={async () => {\r\n                                const response = await (dispatch as MyThunkDispatch)(likeProfile(profile));\r\n                                if (response && response.status === MatchActionStatus.Matched)\r\n                                    this.successModalRef.current?.show(profile, response.roomId);\r\n                            }}\r\n                            onSwipeLeft={() => (dispatch as MyThunkDispatch)(dislikeProfile(profile))}\r\n                            onHidden={() => hide()}\r\n                            showSwipeTip={profile.id == profiles[0].id && isFirstLaunch}\r\n                        />\r\n                    )}\r\n                    // Compensate for the header\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                    progressViewOffset={100}\r\n                />\r\n                <MatchSuccessModal ref={this.successModalRef} />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            paddingTop: 100,\r\n            paddingBottom: 25,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity} from \"react-native\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport MainHeader, {MainHeaderStackProps} from \"./MainHeader\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\n\r\n// Component props\r\nexport type MatchScreenHeaderProps = MainHeaderStackProps & {\r\n    backButton?: boolean;\r\n    blur?: boolean;\r\n};\r\n\r\nclass MatchScreenHeaderClass extends React.Component<MatchScreenHeaderProps> {\r\n    render(): JSX.Element {\r\n        const {backButton, blur, ...stackProps} = this.props;\r\n\r\n        return (\r\n            <MainHeader\r\n                {...stackProps}\r\n                backButton={backButton || false}\r\n                blur={blur}\r\n                rightButtons={[\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchFilteringScreen\")}>\r\n                            <FontAwesome name=\"sliders\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                    ({buttonStyle, iconStyle}) => (\r\n                        <TouchableOpacity style={buttonStyle} onPress={() => rootNavigate(\"MatchHistoryScreen\")}>\r\n                            <MaterialIcons name=\"history\" style={iconStyle} />\r\n                        </TouchableOpacity>\r\n                    ),\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default function MatchScreenHeader(props: MatchScreenHeaderProps): JSX.Element {\r\n    return <MatchScreenHeaderClass {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport Chips from \"./Chips\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n    single?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n        if (props.selected) this.tempSelected = props.selected;\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n        this.tempSelected = this.props.selected || [];\r\n    }\r\n\r\n    open() {\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        this.apply();\r\n    }\r\n\r\n    apply() {\r\n        if (this.props.onChange) this.props.onChange(this.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            single,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                this.tempSelected = this.tempSelected.filter((v) => v !== item);\r\n                                this.apply();\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {this.state.open && (\r\n                    <CustomModal\r\n                        visible={this.state.open}\r\n                        onHide={() => this.close()}\r\n                        modalViewStyle={{\r\n                            height: 150 + items.length * 40,\r\n                            maxHeight: \"70%\",\r\n                            overflow: \"hidden\",\r\n                            paddingHorizontal: 0,\r\n                            paddingVertical: 0,\r\n                        }}\r\n                        renderContent={() => (\r\n                            <>\r\n                                <View\r\n                                    style={styles.dropdownWrapper}\r\n                                    onLayout={(e: LayoutChangeEvent) => {\r\n                                        this.setState({\r\n                                            ...this.state,\r\n                                            dropdownWrapperHeight: e.nativeEvent.layout.height,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <DropDownPicker\r\n                                        items={items}\r\n                                        multiple={!single}\r\n                                        searchable={true}\r\n                                        defaultValue={selected}\r\n                                        onChangeItem={(values: string[]) => {\r\n                                            this.tempSelected = values;\r\n                                        }}\r\n                                        placeholder={placeholder}\r\n                                        multipleText={multipleText}\r\n                                        searchablePlaceholder={searchablePlaceholder}\r\n                                        scrollViewProps={{keyboardShouldPersistTaps: \"handled\"}} // ensures items are clickable even when the keyboard is open\r\n                                        isVisible={true}\r\n                                        showArrow={false}\r\n                                        dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                        // Style props\r\n                                        selectedLabelStyle={{display: \"none\"}}\r\n                                        style={styles.dropdownStyle}\r\n                                        itemStyle={styles.dropdownItemStyle}\r\n                                        activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                        activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                        labelStyle={styles.dropdownLabelStyle}\r\n                                    />\r\n                                </View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </>\r\n                        )}\r\n                    />\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport {Theme} from \"../types\";\r\n\r\nexport type ToggleStyleVariant = \"classic\" | \"classic-rounded\" | \"no-buttons\" | \"chips\";\r\n\r\nexport function getToggleStyleProps(variant: ToggleStyleVariant = \"classic\", theme: Theme): Partial<ButtonGroupProps> {\r\n    if (variant === \"no-buttons\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"chips\") {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 32,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 4,\r\n                flex: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.accentSlight,\r\n                borderRadius: 50,\r\n            },\r\n            textStyle: {\r\n                color: theme.textBlack,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.textWhite,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else if (variant === \"classic-rounded\") {\r\n        return {\r\n            containerStyle: {\r\n                height: 36,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderRadius: 20,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n                borderColor: theme.buttonGroupBorder,\r\n                borderWidth: 1,\r\n            },\r\n            innerBorderStyle: {\r\n                color: theme.buttonGroupBorder,\r\n                width: 1,\r\n            },\r\n            buttonStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            textStyle: {\r\n                color: theme.text,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: theme.accent,\r\n            },\r\n            disabledStyle: {\r\n                backgroundColor: theme.cardBackground,\r\n            },\r\n            disabledSelectedStyle: {\r\n                backgroundColor: theme.background,\r\n            },\r\n            disabledSelectedTextStyle: {\r\n                fontWeight: \"bold\",\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(styleVariant, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type LanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n    multiple?: boolean;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, multiple, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                single={!multiple}\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguagePicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, styleVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import * as React from \"react\";\r\nimport {StyleProp, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {OfferCategory} from \"../api/dto\";\r\nimport {getLocalSvg} from \"../assets\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SvgProps} from \"react-native-svg\";\r\nimport SemiHighlightedText from \"./SemiHighlightedText\";\r\n\r\n// Component props\r\nexport type FormattedOfferCategoryProps = {\r\n    category: OfferCategory;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconProps?: Partial<SvgProps>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconSize?: number;\r\n    fontSize?: number;\r\n} & ThemeProps;\r\n\r\nclass FormattedOfferCategory extends React.Component<FormattedOfferCategoryProps> {\r\n    render(): JSX.Element {\r\n        const {containerStyle, category, theme, textStyle, iconProps, iconSize, fontSize} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const translationKey = `onboarding.offers${category[0].toUpperCase() + category.slice(1)}.title`;\r\n        const SvgIcon = getLocalSvg(`offers.categories.${category}`, () => this.forceUpdate());\r\n\r\n        const size = iconSize || 75;\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <SvgIcon width={size} height={size} {...iconProps} />\r\n                <SemiHighlightedText text={i18n.t(translationKey)} textStyle={textStyle} fontSize={fontSize} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginLeft: -10,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedOfferCategory);\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport LanguagePicker from \"../components/LanguagePicker\";\r\nimport {Degree, Role} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport FormattedOfferCategory from \"../components/FormattedOfferCategory\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nexport const filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n\r\n        // Remove the \"degrees\" filters when not filtering for students\r\n        if (filters.types && filters.types.indexOf(\"student\") === -1) filters.degrees = [];\r\n\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        // <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator />\r\n                <FormattedOfferCategory category={category} iconSize={60} fontSize={24} />\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            />\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                    <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                        <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                        <MaterialIcons name=\"refresh\" style={styles.resetButtonIcon} />\r\n                    </TouchableOpacity>\r\n                    <View style={styles.sectionContainer}>\r\n                        <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <MultiUniversityPicker\r\n                                    universities={filters.universities}\r\n                                    showChips={false}\r\n                                    onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                            <View style={styles.entryControls}>\r\n                                <LanguagePicker\r\n                                    multiple={true}\r\n                                    languages={filters.languages}\r\n                                    showChips={false}\r\n                                    onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                                />\r\n                                <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                            </View>\r\n                        </View>\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                            <RoleToggleMulti\r\n                                roles={filters.types}\r\n                                onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                                styleVariant=\"classic-rounded\"\r\n                            />\r\n                        </View>\r\n                        {filters.types.indexOf(\"student\") != -1 && (\r\n                            <View style={styles.twoLineEntryContainer}>\r\n                                <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                                <DegreeToggleMulti\r\n                                    degrees={filters.degrees}\r\n                                    onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                    style={{width: \"100%\"}}\r\n                                    styleVariant=\"classic-rounded\"\r\n                                />\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                    {offerSections}\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            paddingHorizontal: 40,\r\n            paddingTop: 10,\r\n            paddingBottom: 70,\r\n            width: \"100%\",\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            flex: 1,\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 50,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.textBlack,\r\n        },\r\n        resetButtonIcon: {\r\n            fontSize: 16,\r\n            color: theme.textBlack,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {headerStyles} from \"../../styles/headers\";\r\nimport {headerTitle} from \"../../navigation/utils\";\r\nimport {NavigatorRoute} from \"../../navigation/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {filteringScreenRef} from \"../../screens/MatchFilteringScreen\";\r\nimport {refreshFetchedProfiles} from \"../../state/matching/actions\";\r\n\r\n// Component props\r\nexport type FilteringScreenHeaderProps = ThemeProps & StackHeaderProps;\r\n\r\nclass FilteringScreenHeaderClass extends React.Component<FilteringScreenHeaderProps> {\r\n    back() {\r\n        const nav = this.props.navigation;\r\n        if (nav.canGoBack()) nav.goBack();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, insets, scene, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n        const hstyles = headerStyles(theme);\r\n\r\n        const title = headerTitle(scene.route.name as NavigatorRoute);\r\n\r\n        return (\r\n            <View style={[{paddingTop: insets.top}, hstyles.wrapper]}>\r\n                <TouchableOpacity style={{}} onPress={() => this.back()}>\r\n                    <MaterialIcons name=\"close\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n                <Text style={[hstyles.title, {textAlign: \"center\"}]} numberOfLines={1}>\r\n                    {title}\r\n                </Text>\r\n                <TouchableOpacity\r\n                    style={{paddingVertical: 10}}\r\n                    onPress={() => {\r\n                        if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                        navigation.navigate(\"TabMatchingScreen\");\r\n                        store.dispatch(refreshFetchedProfiles());\r\n                    }}\r\n                >\r\n                    <MaterialIcons name=\"check\" style={styles.actionIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionIcon: {\r\n            fontSize: 28,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst FilteringScreenHeaderComp = withTheme(FilteringScreenHeaderClass);\r\n\r\nexport default function FilteringScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return <FilteringScreenHeaderComp {...props} />;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextStyle, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MatchActionStatus} from \"../api/dto\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Component props\r\nexport type FormattedMatchStatusProps = {\r\n    status: MatchActionStatus;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass FormattedMatchStatus extends React.Component<FormattedMatchStatusProps> {\r\n    render(): JSX.Element {\r\n        const {status, theme, containerStyle, textStyle, iconStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const text = i18n.t(`matching.history.status.${status}`);\r\n\r\n        let IconComponent;\r\n        let iconName;\r\n\r\n        switch (status) {\r\n            case MatchActionStatus.Blocked:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"block\";\r\n                break;\r\n            case MatchActionStatus.Declined:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-down\";\r\n                break;\r\n            case MatchActionStatus.Matched:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"people\";\r\n                break;\r\n            case MatchActionStatus.Requested:\r\n                IconComponent = MaterialIcons;\r\n                iconName = \"thumb-up\";\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <IconComponent style={[styles.icon, iconStyle]} name={iconName} />\r\n                <Text style={[styles.text, textStyle]}>{text}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        icon: {\r\n            marginRight: 5,\r\n            paddingTop: 2,\r\n        },\r\n        text: {\r\n            fontSize: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormattedMatchStatus);\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport ProfileAvatar from \"../ProfileAvatar\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {MatchHistoryItem} from \"../../model/matching\";\r\nimport FormattedMatchStatus from \"../FormattedMatchStatus\";\r\nimport SwipeableCard, {SwipeableCardClass, SwipeActionButtons, SwipeActionProps} from \"./SwipeableCard\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport BlockProfileModal, {BlockProfileModalClass} from \"../modals/BlockProfileModal\";\r\nimport {MatchActionStatus} from \"../../api/dto\";\r\nimport QuickFormReport, {QuickFormReportClass} from \"../forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../../constants/reports\";\r\nimport {cancelMatchAction} from \"../../state/matching/actions\";\r\nimport SwipeTip from \"../SwipeTip\";\r\n\r\n// Component props\r\nexport type HistoryProfileCardProps = ThemeProps & {\r\n    item: MatchHistoryItem;\r\n    style?: ViewStyle;\r\n    onHidden?: () => void;\r\n    showSwipeTip?: boolean;\r\n};\r\n\r\nconst LOOKS = {\r\n    sideMargin: 10,\r\n    borderRadius: 10,\r\n    minHeight: 100,\r\n};\r\n\r\nclass HistoryProfileCard extends React.Component<HistoryProfileCardProps> {\r\n    swipeableCardRef = React.createRef<SwipeableCardClass>();\r\n    reportFormRef = React.createRef<QuickFormReportClass>();\r\n    blockModalRef = React.createRef<BlockProfileModalClass>();\r\n\r\n    private getActions(hideCard: () => void): SwipeActionProps[] {\r\n        const {\r\n            theme,\r\n            item: {id, status},\r\n        } = this.props;\r\n        const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n        const reportButton = {\r\n            icon: \"report\",\r\n            text: i18n.t(\"matching.history.actions.report\"),\r\n            backgroundColor: theme.error,\r\n            color: theme.textWhite,\r\n            onPress: () => this.reportFormRef.current?.open(),\r\n        };\r\n        const blockButton = {\r\n            icon: \"block\",\r\n            text: i18n.t(\"matching.history.actions.block\"),\r\n            backgroundColor: theme.error,\r\n            color: theme.textWhite,\r\n            onPress: () => this.blockModalRef.current?.show(),\r\n        };\r\n        const cancelButton = {\r\n            icon: \"close\",\r\n            text: i18n.t(`matching.history.actions.cancel.${status}`),\r\n            backgroundColor: theme.accent,\r\n            color: theme.textWhite,\r\n            onPress: () => {\r\n                hideCard();\r\n                dispatch(cancelMatchAction(id));\r\n            },\r\n        };\r\n\r\n        if (status === MatchActionStatus.Blocked) return [reportButton, cancelButton];\r\n        else return [reportButton, blockButton, cancelButton];\r\n    }\r\n\r\n    render() {\r\n        const {theme, item, showSwipeTip} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const profile = item.profile;\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n\r\n        return (\r\n            <>\r\n                <SwipeableCard\r\n                    ref={this.swipeableCardRef}\r\n                    looks={LOOKS}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    rightActions={(hideCard) => (\r\n                        <SwipeActionButtons\r\n                            id={`${item.profile.id}-${item.status}`}\r\n                            looks={LOOKS}\r\n                            side=\"right\"\r\n                            actions={this.getActions(hideCard)}\r\n                            buttonStyle={styles.actionButton}\r\n                        />\r\n                    )}\r\n                >\r\n                    <View style={styles.cardContent}>\r\n                        <View style={styles.avatarContainer}>\r\n                            <ProfileAvatar\r\n                                profile={profile}\r\n                                size={60}\r\n                                rounded\r\n                                containerStyle={styles.avatar}\r\n                                onPress={() => rootNavigate(\"ProfileScreen\", {id: profile.id})}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{fullName}</Text>\r\n                            {profile && (\r\n                                <FormattedUniversity\r\n                                    flagSize={14}\r\n                                    flagEmoji={true}\r\n                                    style={[styles.infoText, {marginLeft: -10}]}\r\n                                    university={profile.university}\r\n                                />\r\n                            )}\r\n                            <FormattedMatchStatus\r\n                                status={item.status}\r\n                                textStyle={styles.infoText}\r\n                                iconStyle={styles.infoText}\r\n                            />\r\n                        </View>\r\n                        {showSwipeTip && <SwipeTip direction=\"left\" iconStyle={styles.swipeTipIcon} />}\r\n                    </View>\r\n                </SwipeableCard>\r\n                <QuickFormReport\r\n                    ref={this.reportFormRef}\r\n                    entityType={ReportEntityType.PROFILE_ENTITY}\r\n                    entity={profile}\r\n                    onSubmit={() => this.swipeableCardRef.current?.resetSwipe()}\r\n                />\r\n                <BlockProfileModal\r\n                    ref={this.blockModalRef}\r\n                    profile={profile}\r\n                    onBlock={() => this.swipeableCardRef.current?.collapse()}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        cardContent: {\r\n            flexDirection: \"row\",\r\n            padding: 10,\r\n        },\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.8,\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 15,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        swipeTipIcon: {\r\n            color: theme.textLight,\r\n            fontSize: 18,\r\n        },\r\n\r\n        actionButton: {\r\n            paddingHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(HistoryProfileCard);\r\n","import * as React from \"react\";\r\nimport {SearchBar, SearchBarProps} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BufferedSearchBarProps = {\r\n    bufferDelay: number;\r\n    onBufferedUpdate?: (text: string) => void;\r\n} & SearchBarProps;\r\n\r\nclass BufferedSearchBar extends React.Component<BufferedSearchBarProps> {\r\n    private updateTimeout: NodeJS.Timeout | null = null;\r\n\r\n    private onChange(text: string) {\r\n        const {bufferDelay, onBufferedUpdate} = this.props;\r\n\r\n        if (this.updateTimeout) clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            this.updateTimeout = null;\r\n            if (onBufferedUpdate) onBufferedUpdate(text);\r\n        }, bufferDelay);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const {bufferDelay, onBufferedUpdate, onChangeText, ...searchBarProps} = this.props;\r\n\r\n        return (\r\n            <SearchBar\r\n                onChangeText={(search: string) => {\r\n                    if (onChangeText) onChangeText(search);\r\n                    this.onChange(search);\r\n                }}\r\n                {...searchBarProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BufferedSearchBar;\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {Button, withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {fetchHistory, refreshFetchedHistory, setHistoryFilters} from \"../state/matching/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {HISTORY_FETCH_LIMIT, SEARCH_BUFFER_DELAY} from \"../constants/config\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport HistoryProfileCard from \"../components/cards/HistoryProfileCard\";\r\nimport InfiniteScroller from \"../components/InfiniteScroller\";\r\nimport {MATCH_ACTION_HISTORY_STATUSES} from \"../api/dto\";\r\nimport {MatchHistoryItem} from \"../model/matching\";\r\nimport BufferedSearchBar from \"../components/BufferedSearchBar\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    historyItems: state.matching.historyItems,\r\n    fetchingHistory: state.matching.historyPagination.fetching,\r\n    canFetchMore: state.matching.historyPagination.canFetchMore,\r\n    currentPage: state.matching.historyPagination.page,\r\n    historyFilters: state.matching.historyFilters,\r\n}));\r\n\r\n// Component props\r\ntype MatchHistoryScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"MatchHistoryScreen\">;\r\n\r\n// Component state\r\ntype MatchHistoryScreenState = {\r\n    search: string;\r\n};\r\n\r\nclass MatchHistoryScreen extends React.Component<MatchHistoryScreenProps, MatchHistoryScreenState> {\r\n    constructor(props: MatchHistoryScreenProps) {\r\n        super(props);\r\n        this.state = {search: \"\"};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            historyItems,\r\n            theme,\r\n            historyFilters,\r\n            fetchingHistory,\r\n            canFetchMore,\r\n            currentPage,\r\n            navigation,\r\n            dispatch,\r\n        } = this.props;\r\n        const {search} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const filters = MATCH_ACTION_HISTORY_STATUSES;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.filtersContainer}>\r\n                    {filters.map((key: string) => (\r\n                        <Filter\r\n                            theme={theme}\r\n                            key={`match-history-filter-${key}`}\r\n                            filterKey={key}\r\n                            selected={historyFilters[key]}\r\n                            onPress={() => {\r\n                                dispatch(setHistoryFilters({[key]: !historyFilters[key]}));\r\n                                dispatch(refreshFetchedHistory());\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </View>\r\n                <BufferedSearchBar\r\n                    onBufferedUpdate={() => dispatch(refreshFetchedHistory())}\r\n                    bufferDelay={SEARCH_BUFFER_DELAY}\r\n                    placeholder={i18n.t(\"search\")}\r\n                    onChangeText={(search: string) => this.setState({...this.state, search})}\r\n                    value={search}\r\n                    containerStyle={styles.searchBarContainer}\r\n                    inputContainerStyle={styles.searchBarInputContainer}\r\n                    inputStyle={styles.searchBarInput}\r\n                />\r\n                <InfiniteScroller\r\n                    navigation={navigation}\r\n                    fetchLimit={HISTORY_FETCH_LIMIT}\r\n                    fetchMore={() => (dispatch as MyThunkDispatch)(fetchHistory(search))}\r\n                    fetching={fetchingHistory}\r\n                    canFetchMore={canFetchMore}\r\n                    currentPage={currentPage}\r\n                    items={historyItems}\r\n                    id={(it: MatchHistoryItem): string => it.id}\r\n                    noResultsComponent={\r\n                        <>\r\n                            <Text style={styles.noResultsText1}>{i18n.t(\"matching.history.noResults\")}</Text>\r\n                            <Text style={styles.noResultsText2}>{i18n.t(\"matching.history.noResultsAdvice\")}</Text>\r\n                        </>\r\n                    }\r\n                    refresh={() => dispatch(refreshFetchedHistory())}\r\n                    refreshOnFocus\r\n                    renderItem={(item: MatchHistoryItem, hide: () => void) => (\r\n                        <HistoryProfileCard\r\n                            key={`history-card-${item.id}-${item.status}`}\r\n                            item={item}\r\n                            onHidden={hide}\r\n                            showSwipeTip={item.id === historyItems[0].id}\r\n                        />\r\n                    )}\r\n                    itemsContainerStyle={styles.itemsContainer}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Filter({\r\n    theme,\r\n    selected,\r\n    filterKey,\r\n    onPress,\r\n}: {\r\n    theme: Theme;\r\n    selected: boolean;\r\n    filterKey: string;\r\n    onPress: () => void;\r\n}): JSX.Element {\r\n    const styles = themedStyles(theme);\r\n    return (\r\n        <Button\r\n            onPress={onPress}\r\n            title={i18n.t(`matching.history.status.${filterKey}`)}\r\n            containerStyle={styles.filterButtonContainer}\r\n            buttonStyle={[styles.filterButton, selected ? styles.filterButtonSelected : {}]}\r\n            titleStyle={[styles.filterLabel, selected ? styles.filterLabelSelected : {}]}\r\n            raised={false}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        itemsContainer: {\r\n            width: \"100%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        // Filters\r\n        filtersContainer: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n            flexDirection: \"row\",\r\n        },\r\n        filterButtonContainer: {\r\n            flex: 1,\r\n            marginHorizontal: 15,\r\n            borderRadius: 25,\r\n        },\r\n        filterButton: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        filterButtonSelected: {\r\n            backgroundColor: theme.accent,\r\n        },\r\n        filterLabel: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.6,\r\n        },\r\n        filterLabelSelected: {\r\n            color: theme.textWhite,\r\n            fontWeight: \"600\",\r\n        },\r\n        filterIcon: {\r\n            fontSize: 18,\r\n            color: theme.text,\r\n            marginRight: 4,\r\n        },\r\n        filterIconSelected: {\r\n            color: theme.textWhite,\r\n        },\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"100%\",\r\n            marginBottom: 5,\r\n            paddingVertical: 0,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: \"transparent\",\r\n            borderTopWidth: 0,\r\n            borderBottomWidth: 0,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 40,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n            borderRadius: 25,\r\n        },\r\n        searchBarInput: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(MatchHistoryScreen));\r\n","/* eslint-disable react/display-name */\r\nimport * as React from \"react\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {TabMatchingRoot} from \"./types\";\r\nimport TabMatchingScreen from \"../screens/TabMatchingScreen\";\r\nimport {screenTitle} from \"./utils\";\r\nimport MatchScreenHeader from \"../components/headers/MatchScreenHeader\";\r\nimport MatchFilteringScreen from \"../screens/MatchFilteringScreen\";\r\nimport FilteringScreenHeader from \"../components/headers/FilteringScreenHeader\";\r\nimport MatchHistoryScreen from \"../screens/MatchHistoryScreen\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nexport const TabMatchingNavigator = (): JSX.Element => (\r\n    <TabMatchingStack.Navigator>\r\n        <TabMatchingStack.Screen\r\n            name=\"TabMatchingScreen\"\r\n            options={() => ({\r\n                headerShown: false,\r\n                title: screenTitle(\"TabMatchingScreen\"),\r\n            })}\r\n        >\r\n            {(props) => (\r\n                <>\r\n                    <TabMatchingScreen {...props} />\r\n                    <MatchScreenHeader blur={true} {...props} />\r\n                </>\r\n            )}\r\n        </TabMatchingStack.Screen>\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchFilteringScreen\"\r\n            component={MatchFilteringScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchFilteringScreen\"),\r\n                header: FilteringScreenHeader,\r\n            }}\r\n        />\r\n        <TabMatchingStack.Screen\r\n            name=\"MatchHistoryScreen\"\r\n            component={MatchHistoryScreen}\r\n            options={{\r\n                headerShown: true,\r\n                title: screenTitle(\"MatchHistoryScreen\"),\r\n                header: (props: StackHeaderProps) => <MainHeader backButton={true} {...props} />,\r\n            }}\r\n        />\r\n        {/* TODO delete */}\r\n        {/*<TabMatchingStack.Screen\r\n            name=\"MatchSuccessScreen\"\r\n            component={MatchSuccessScreen}\r\n            options={{\r\n                headerShown: false,\r\n                cardStyleInterpolator:\r\n                    Platform.OS == \"ios\"\r\n                        ? CardStyleInterpolators.forVerticalIOS\r\n                        : CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                title: screenTitle(\"MatchSuccessScreen\"),\r\n            }}\r\n        />*/}\r\n    </TabMatchingStack.Navigator>\r\n);\r\n","import * as React from \"react\";\r\nimport {Text, StyleSheet, Platform} from \"react-native\";\r\nimport {BottomTabBar, BottomTabBarProps} from \"@react-navigation/bottom-tabs\";\r\nimport {BlurView} from \"expo-blur\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport {useSafeAreaInsets, EdgeInsets} from \"react-native-safe-area-context\";\r\nimport {LabelPosition} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {BLUR_TAB_INTENSITY} from \"../../styles/general\";\r\n\r\n// Component props\r\nexport type MainTabBarProps = ThemeProps & BottomTabBarProps & {insets: EdgeInsets};\r\n\r\nclass MainTabBarClass extends React.Component<MainTabBarProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            insets: {bottom},\r\n            ...tabBarProps\r\n        } = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <BlurView\r\n                style={styles.blurViewStyle}\r\n                tint={theme.id === \"dark\" ? \"dark\" : \"default\"}\r\n                intensity={BLUR_TAB_INTENSITY}\r\n            >\r\n                <BottomTabBar\r\n                    {...tabBarProps}\r\n                    activeTintColor={theme.accent}\r\n                    style={[styles.tabBar, {paddingBottom: bottom}]}\r\n                    tabStyle={styles.tab}\r\n                    iconStyle={styles.icon}\r\n                    showLabel={false}\r\n                />\r\n            </BlurView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        blurViewStyle:\r\n            Platform.OS === \"web\"\r\n                ? {} // On web, scrolling on certain pages breaks if the tab bar is position absolutely\r\n                : {\r\n                      position: \"absolute\",\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      right: 0,\r\n                  },\r\n        tabBar: {\r\n            borderTopWidth: 0,\r\n            elevation: 0,\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        tab: {\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n        icon: {\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nfunction MainTabBar(props: BottomTabBarProps): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <ThemeConsumer>\r\n            {(themeProps: ThemeProps) => <MainTabBarClass insets={insets} {...themeProps} {...props} />}\r\n        </ThemeConsumer>\r\n    );\r\n}\r\n\r\nexport type MainTabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\nexport type MainTabBarLabelProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    position: LabelPosition;\r\n};\r\n\r\nexport function MainTabBarIcon({name, color}: {name: string} & MainTabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\n// Unused\r\nexport function MainTabBarLabel({text, color}: {text: string} & MainTabBarLabelProps): JSX.Element {\r\n    return <Text style={{color, fontSize: 12}}>{text}</Text>;\r\n}\r\n\r\nexport default MainTabBar;\r\n","/* eslint-disable react/display-name */\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {MainNavigatorTabs, RootNavigatorScreens, TabHomeRoot} from \"../navigation/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {BottomTabBarButtonProps, BottomTabBarProps} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport {TabMatchingNavigator} from \"./TabMatchingNavigator\";\r\nimport MainTabBar, {MainTabBarIcon} from \"../components/tabs/MainTabBar\";\r\nimport {getFocusedRouteNameFromRoute} from \"@react-navigation/native\";\r\nimport {TouchableOpacity} from \"react-native\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent(): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabMatching\"\r\n            tabBar={(props: BottomTabBarProps) => <MainTabBar {...props} />}\r\n        >\r\n            {/*<TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />*/}\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={({route}) => ({\r\n                    tabBarVisible: getFocusedRouteNameFromRoute(route) !== \"ChatScreen\",\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"message\" {...props} />,\r\n                    // Override the button to make sure we redirect to the rooms screen instead of a previously open conversation\r\n                    tabBarButton: (props: BottomTabBarButtonProps) => (\r\n                        <TouchableOpacity\r\n                            {...props}\r\n                            activeOpacity={1}\r\n                            onPress={() => rootNavigate(\"TabMessaging\", {screen: \"ChatRoomsScreen\"})}\r\n                        />\r\n                    ),\r\n                })}\r\n            />\r\n            {/*\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarIcon: (props) => <MainTabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n            */}\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\n/*\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator screenOptions={{header: MainHeader}}>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n*/\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, StyleProp, ViewStyle, Platform} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\n\r\nexport type OnboardingProgressBarProps = {\r\n    index: number;\r\n    style?: StyleProp<ViewStyle>;\r\n    foregroundStyle?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass OnboardingProgressBar extends React.Component<OnboardingProgressBarProps> {\r\n    containerWidth = 0;\r\n    width = new ReAnimated.Value<number>(0);\r\n\r\n    componentDidMount() {\r\n        this.setIndex(this.props.index);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: OnboardingProgressBarProps): void {\r\n        const {index} = this.props;\r\n        if (oldProps.index !== index) this.setIndex(index);\r\n    }\r\n\r\n    private setIndex(index: number) {\r\n        const progress = (index + 1) / ONBOARDING_ORDER.length;\r\n        const targetWidth = progress * this.containerWidth;\r\n\r\n        if (Platform.OS === \"web\") this.width.setValue(targetWidth);\r\n        else {\r\n            ReAnimated.timing(this.width, {\r\n                toValue: targetWidth,\r\n                duration: 150,\r\n                easing: Easing.sin,\r\n            }).start();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, foregroundStyle, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View\r\n                style={[styles.background, style]}\r\n                onLayout={(layout) => {\r\n                    this.containerWidth = layout.nativeEvent.layout.width;\r\n                    this.setIndex(this.props.index);\r\n                }}\r\n            >\r\n                <ReAnimated.View style={[styles.foreground, {width: this.width}, foregroundStyle]} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        background: {\r\n            width: \"100%\",\r\n            height: 12,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        foreground: {\r\n            backgroundColor: theme.accent,\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingProgressBar);\r\n","import {StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideScrollView: {\r\n            width: \"100%\",\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"75%\",\r\n            flexDirection: \"column\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 150,\r\n            paddingBottom: 20,\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"75%\",\r\n            alignItems: \"center\",\r\n            marginTop: 20,\r\n            marginBottom: 40,\r\n        },\r\n        slideNavButtons: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        navButton: {\r\n            flex: 1,\r\n            marginHorizontal: 0,\r\n            marginVertical: 0,\r\n            maxWidth: 200,\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const onboardingOffersStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        categoryTitleText: {},\r\n        offerControl: {\r\n            marginVertical: 10,\r\n        },\r\n        offerControlPreText: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n            marginVertical: 10,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps, ToggleStyleVariant} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    styleVariant?: ToggleStyleVariant;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, styleVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(styleVariant, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme} from \"../types\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport {CustomTooltipProps} from \"./CustomTooltip.native\";\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps> {\r\n    modalRef = React.createRef<CustomModalClass>();\r\n\r\n    render(): JSX.Element {\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity activeOpacity={0.5} onPress={() => this.modalRef.current?.show()}>\r\n                    {this.props.children}\r\n                </TouchableOpacity>\r\n                <CustomModal\r\n                    ref={this.modalRef}\r\n                    onHide={() => this.setState({...this.state, shown: false})}\r\n                    modalViewStyle={styles.container}\r\n                    renderContent={() => <Text style={styles.text}>{text}</Text>}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const tooltipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            paddingHorizontal: 20,\r\n            width: 250,\r\n            paddingVertical: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport CustomModal, {CustomModalClass} from \"./modals/CustomModal\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport Button from \"./Button\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    settingsModalRef = React.createRef<CustomModalClass>();\r\n\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <View style={styles.titleLeft}>\r\n                        <CheckBox\r\n                            checked={isSomethingSelected}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                            containerStyle={styles.checkboxContainer}\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={styles.offerNameTouchable}\r\n                            onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        >\r\n                            <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View style={{flexDirection: \"row\"}}>\r\n                        <TouchableOpacity\r\n                            style={styles.sideButton}\r\n                            onPress={() => this.settingsModalRef.current?.show()}\r\n                        >\r\n                            <FontAwesome style={styles.sideButtonIcon} name=\"gear\" />\r\n                        </TouchableOpacity>\r\n                        <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                            <MaterialIcons style={[styles.sideButton, styles.sideButtonIcon]} name=\"help\" />\r\n                        </CustomTooltip>\r\n                    </View>\r\n                </View>\r\n                {/*isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                styleVariant=\"chips\"\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )*/}\r\n                <CustomModal\r\n                    ref={this.settingsModalRef}\r\n                    modalViewStyle={styles.settingsModal}\r\n                    renderContent={(hide: () => void) => (\r\n                        <>\r\n                            {offer.allowChooseGender && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.genders\")}</InputLabel>\r\n                                    <GenderToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        genders={genders}\r\n                                        onSelect={(selected: Gender[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowFemale: selected.indexOf(\"female\") != -1,\r\n                                                allowMale: selected.indexOf(\"male\") != -1,\r\n                                                allowOther: selected.indexOf(\"other\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n\r\n                            {offer.allowChooseProfileType && (\r\n                                <View style={styles.settingsModalTargetType}>\r\n                                    <InputLabel>{i18n.t(\"offerSettings.roles\")}</InputLabel>\r\n                                    <RoleToggleMulti\r\n                                        styleVariant=\"classic-rounded\"\r\n                                        roles={roles}\r\n                                        onSelect={(selected: Role[]) =>\r\n                                            this.offerValueChange({\r\n                                                allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                                allowStudent: selected.indexOf(\"student\") != -1,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                            <Button\r\n                                style={styles.settingsModalButton}\r\n                                textStyle={styles.settingsModalButtonText}\r\n                                skin=\"rounded-filled\"\r\n                                text={i18n.t(\"ok\")}\r\n                                onPress={hide}\r\n                            />\r\n                        </>\r\n                    )}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        titleLeft: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        offerNameTouchable: {\r\n            flex: 1,\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        sideButton: {\r\n            paddingVertical: 10,\r\n            paddingHorizontal: 5,\r\n        },\r\n        sideButtonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textLight,\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n\r\n        settingsModal: {\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 15,\r\n            alignItems: \"flex-start\",\r\n        },\r\n        settingsModalTargetType: {\r\n            width: \"100%\",\r\n            marginBottom: 10,\r\n        },\r\n        settingsModalButton: {\r\n            height: 38,\r\n            marginHorizontal: 5,\r\n            marginVertical: 0,\r\n            marginTop: 20,\r\n        },\r\n        settingsModalButtonText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {Theme} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text} from \"react-native\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n    theme: Theme,\r\n): JSX.Element {\r\n    const styles = onboardingOffersStyle(theme);\r\n    return (\r\n        <>\r\n            <Text style={styles.offerControlPreText}>{i18n.t(\"offersPreText\")}</Text>\r\n            {offers\r\n                .filter((offer: OfferDto) => offer.category == category)\r\n                .map((offer: OfferDto, i: number) => (\r\n                    <OfferControl\r\n                        key={i}\r\n                        offer={offer}\r\n                        value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                        onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                        style={styles.offerControl}\r\n                    />\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.type!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds.map((id) => ({id})),\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.type == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.type == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRoles: Object.keys(onboardingState.staffRoles)\r\n                .filter((k) => onboardingState.staffRoles[k])\r\n                .map((id: string) => ({id})),\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {toggleTheme} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type FloatingThemeToggleProps = ThemeProps;\r\n\r\nfunction FloatingThemeToggle(props: FloatingThemeToggleProps): JSX.Element {\r\n    const {theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <View style={styles.toggleThemeContainer}>\r\n            <TouchableOpacity style={styles.toggleThemeButton} onPress={() => store.dispatch(toggleTheme())}>\r\n                <MaterialCommunityIcons style={styles.toggleThemeIcon} name=\"theme-light-dark\" color=\"black\" />\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        toggleThemeContainer: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        toggleThemeButton: {\r\n            width: 48,\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        toggleThemeIcon: {\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FloatingThemeToggle);\r\n","import * as React from \"react\";\r\nimport {\r\n    Text,\r\n    View,\r\n    ScrollView,\r\n    KeyboardAvoidingView,\r\n    ViewStyle,\r\n    StyleProp,\r\n    Alert,\r\n    Dimensions,\r\n    Platform,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {logout} from \"../../state/auth/actions\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport FloatingThemeToggle from \"../../components/FloatingThemeToggle\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n    noKeyboardAvoidance?: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string | JSX.Element;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nfunction ButtonSpacer(): JSX.Element {\r\n    return <View style={{width: 10, height: 1}}></View>;\r\n}\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {\r\n            title,\r\n            subtitle,\r\n            index,\r\n            hideNavNext,\r\n            hasNext,\r\n            handleSubmit,\r\n            next,\r\n            containerStyle,\r\n            noKeyboardAvoidance,\r\n            theme,\r\n        } = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        const Background = getLocalSvg(\"background.onboarding\", () => this.forceUpdate());\r\n        const {width, height} = Dimensions.get(\"screen\");\r\n        return (\r\n            <ScreenWrapper>\r\n                {!layout.isWideDevice && (\r\n                    <View style={{position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0, opacity: 1, zIndex: 0}}>\r\n                        <Background\r\n                            preserveAspectRatio={\"true\"}\r\n                            viewBox={`${50} ${50} ${width * 1.25} ${height * 1.25}`}\r\n                            style={{width, height}}\r\n                        />\r\n                    </View>\r\n                )}\r\n                <View style={styles.wrapper}>\r\n                    <ScrollView\r\n                        style={styles.slideScrollView}\r\n                        contentContainerStyle={[containerStyle, styles.slideContentWrapper]}\r\n                    >\r\n                        <KeyboardAvoidingView\r\n                            behavior=\"position\"\r\n                            keyboardVerticalOffset={70}\r\n                            enabled={!noKeyboardAvoidance}\r\n                        >\r\n                            <View style={styles.header}>\r\n                                {title && typeof title === \"string\" && <Text style={styles.title}>{title}</Text>}\r\n                                {title && typeof title !== \"string\" && title}\r\n                                {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n                            </View>\r\n                            {this.props.children}\r\n                        </KeyboardAvoidingView>\r\n                    </ScrollView>\r\n                    <View style={styles.slideNavWrapper}>\r\n                        <View style={styles.slideNavButtons}>\r\n                            {hasPrevious && (\r\n                                <Button\r\n                                    style={styles.navButton}\r\n                                    skin=\"rounded-hollow\"\r\n                                    text={i18n.t(\"onboarding.back\")}\r\n                                    onPress={() => this.props.previous()}\r\n                                />\r\n                            )}\r\n                            {!hasPrevious && (\r\n                                <Button\r\n                                    style={styles.navButton}\r\n                                    skin=\"rounded-hollow\"\r\n                                    text={i18n.t(\"onboarding.leave\")}\r\n                                    onPress={() => this.quitOnboarding()}\r\n                                />\r\n                            )}\r\n                            {!hideNavNext && hasNext && (\r\n                                <>\r\n                                    <ButtonSpacer />\r\n                                    <Button\r\n                                        style={styles.navButton}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"onboarding.next\")}\r\n                                        onPress={navigateRight}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            {!hasNext && (\r\n                                <>\r\n                                    <ButtonSpacer />\r\n                                    <Button\r\n                                        style={styles.navButton}\r\n                                        skin=\"rounded-filled\"\r\n                                        text={i18n.t(\"onboarding.submit\")}\r\n                                        onPress={() => {\r\n                                            if (handleSubmit) handleSubmit();\r\n                                            finishOnboarding(store.getState().auth.onboarding);\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <FloatingThemeToggle />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n\r\n    quitOnboarding() {\r\n        const quit = () => store.dispatch(logout());\r\n\r\n        if (Platform.OS === \"web\") {\r\n            quit(); // no alerts on web\r\n        } else {\r\n            Alert.alert(i18n.t(\"onboarding.quit.title\"), i18n.t(\"onboarding.quit.text\"), [\r\n                {\r\n                    text: i18n.t(\"onboarding.quit.cancel\"),\r\n                    style: \"cancel\",\r\n                },\r\n                {text: i18n.t(\"onboarding.quit.yes\"), onPress: quit, style: \"destructive\"},\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/forms/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    lastNameInputRef = React.createRef<FormTextInput>();\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <FormTextInput\r\n                                {...textInputProps(\"firstname\")}\r\n                                label={i18n.t(\"firstname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"next\"\r\n                                blurOnSubmit={false}\r\n                                onSubmitEditing={() => this.lastNameInputRef.current?.focus()}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                {...textInputProps(\"lastname\")}\r\n                                ref={this.lastNameInputRef}\r\n                                label={i18n.t(\"lastname\")}\r\n                                autoCompleteType=\"name\"\r\n                                enablesReturnKeyAutomatically={true}\r\n                                returnKeyType=\"done\"\r\n                                onSubmitEditing={() => handleSubmit()}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n    disabled?: boolean;\r\n};\r\n\r\nfunction GenderToggle(props: GenderToggleProps & ThemeProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender, disabled, theme} = props;\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            disabled={disabled}\r\n            {...styleProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggle);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {\r\n    Country,\r\n    CountryCode,\r\n    DARK_THEME,\r\n    DEFAULT_THEME,\r\n    TranslationLanguageCode,\r\n} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (this.props.onSelect) this.props.onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n                theme={theme.id === \"dark\" ? DARK_THEME : DEFAULT_THEME}\r\n            ></CountryPicker>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, nationality ? styles.buttonOk : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                ></NationalityPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet, Platform, LayoutChangeEvent} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight, webFontFamily} from \"../styles/general\";\r\nimport Chips from \"./Chips\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.userSettings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showChips?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n    width: number;\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n            width: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        if (this.state.open && this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (apply) this.apply(this.state.tempSelected);\r\n    }\r\n\r\n    apply(items: string[]) {\r\n        if (this.props.onChange) this.props.onChange(items);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showChips,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const {tempSelected, width} = this.state;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        const select = this.state.items.get(locale) ? (\r\n            <SectionedMultiSelect\r\n                ref={this.selectRef}\r\n                items={this.state.items.get(locale)}\r\n                onSelectedItemsChange={(items) =>\r\n                    this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                }\r\n                selectedItems={tempSelected}\r\n                uniqueKey=\"id\"\r\n                displayKey=\"label\"\r\n                subKey=\"children\"\r\n                // Listeners\r\n                onCancel={() => this.close(false)}\r\n                onConfirm={() => this.close(true)}\r\n                // Dirty work-arounds to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                icons={undefined as never}\r\n                // Customization\r\n                showDropDowns={true}\r\n                readOnlyHeadings={true}\r\n                showChips={false}\r\n                showCancelButton={true}\r\n                selectedIconOnLeft={true}\r\n                animateDropDowns={false}\r\n                hideSelect={true}\r\n                noResultsComponent={<Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>}\r\n                searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                // Localization\r\n                confirmText={i18n.t(\"apply\")}\r\n                searchPlaceholderText={searchablePlaceholder}\r\n                // Styling\r\n                colors={{\r\n                    primary: theme.accent,\r\n                    cancel: theme.error,\r\n                    success: theme.okay,\r\n                    text: theme.text,\r\n                    subText: theme.textLight,\r\n                    searchPlaceholderTextColor: theme.textLight,\r\n                    selectToggleTextColor: theme.error,\r\n                    itemBackground: theme.cardBackground,\r\n                    subItemBackground: theme.cardBackground,\r\n                }}\r\n                confirmFontFamily={webFontFamily}\r\n                itemFontFamily={webFontFamily}\r\n                searchTextFontFamily={webFontFamily}\r\n                subItemFontFamily={webFontFamily}\r\n                styles={{\r\n                    ...multiSelectStyles,\r\n                    ...(Platform.OS === \"web\"\r\n                        ? {\r\n                              modalWrapper: {width},\r\n                              container: [multiSelectStyles.container, {width}],\r\n                          }\r\n                        : {}),\r\n                }}\r\n            />\r\n        ) : (\r\n            <></>\r\n        );\r\n\r\n        return (\r\n            <View\r\n                {...viewProps}\r\n                style={{position: \"relative\"}}\r\n                onLayout={(e: LayoutChangeEvent) => this.setState({...this.state, width: e.nativeEvent.layout.width})}\r\n            >\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {showChips && (\r\n                        <Chips\r\n                            items={selectedItems}\r\n                            label={(v) => (genLabel ? i18n.t(genLabel(v)) : v)}\r\n                            containerStyle={styles.chipContainer}\r\n                            removable={true}\r\n                            onRemove={(item: string) => {\r\n                                const selected = this.state.tempSelected.filter((v) => v !== item);\r\n                                this.setState({...this.state, tempSelected: selected});\r\n                                this.apply(selected);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </View>\r\n                {(Platform.OS === \"android\" || Platform.OS === \"ios\") && <View>{select}</View>}\r\n                {Platform.OS === \"web\" && this.state.open && select}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            backgroundColor: theme.cardBackground,\r\n            ...(Platform.OS === \"web\"\r\n                ? {\r\n                      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                      position: \"fixed\" as any,\r\n                      top: 50,\r\n                      bottom: 50,\r\n                      alignSelf: \"center\",\r\n                      borderWidth: 0,\r\n                      maxWidth: 700,\r\n                      maxHeight: 600,\r\n                      boxShadow: \"0px 0px 8px 0px rgba(0,0,0,0.1)\",\r\n                  }\r\n                : {}),\r\n        },\r\n        scrollView: {paddingVertical: 10, ...(Platform.OS === \"web\" ? {overflowY: \"auto\"} : {})},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            ...styleTextLight,\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        subItemText: {\r\n            marginLeft: 5,\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * @see page 18 of {@link https://eqe.ge/res/docs/228085e.pdf}\r\n * @see page 18 of {@link http://uis.unesco.org/fr/file/1390} for french translations\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"welfare\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"care-elderly-disabled-adults\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"child-care-youth-services\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"social-work-counselling\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"welfare\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport SectionedMultiPicker, {SectionedMultiPickerProps} from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<SectionedMultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        //const day = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const day = date.getDate() + \"\";\r\n        const formattedDate = `${day} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {TextInput, TextInputProps, View, StyleSheet, StyleProp, TextStyle, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type DateInputProps = {\r\n    date?: Date;\r\n    onChange?: (date?: Date, error?: string) => void;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    inputStyle?: StyleProp<TextStyle>;\r\n    inputStyleValid?: StyleProp<TextStyle>;\r\n    minimumDate?: Date;\r\n    maximumDate?: Date;\r\n    autoFocus?: boolean;\r\n} & ThemeProps;\r\n\r\n// Component state\r\ntype DateInputState = {\r\n    year: string;\r\n    month: string;\r\n    day: string;\r\n    touched: boolean;\r\n    error: string | undefined;\r\n};\r\n\r\nconst dateInputProps = (\r\n    ref: React.RefObject<TextInput>,\r\n    value: string,\r\n    maxLength: number,\r\n    next?: React.RefObject<TextInput>,\r\n    onChange?: (v: string) => void,\r\n): TextInputProps => ({\r\n    autoCorrect: false,\r\n    clearTextOnFocus: true,\r\n    keyboardType: \"number-pad\",\r\n    returnKeyType: next ? \"next\" : \"done\",\r\n    value,\r\n    maxLength,\r\n    onSubmitEditing: () => {\r\n        if (next) next.current?.focus();\r\n    },\r\n    onChangeText: (text: string) => {\r\n        text = text.replace(/\\D+/g, \"\"); // only keep numbers\r\n        if (onChange) onChange(text);\r\n        if (text.length == maxLength) {\r\n            if (next) next.current?.focus();\r\n            else ref.current?.blur();\r\n        }\r\n    },\r\n});\r\n\r\nexport class DateInputClass extends React.Component<DateInputProps, DateInputState> {\r\n    constructor(props: DateInputProps) {\r\n        super(props);\r\n        this.state = this.deriveStateFromDate(props.date);\r\n    }\r\n\r\n    input1Ref = React.createRef<TextInput>();\r\n    input2Ref = React.createRef<TextInput>();\r\n    input3Ref = React.createRef<TextInput>();\r\n\r\n    componentDidUpdate(oldProps: DateInputProps): void {\r\n        if (this.props.date != oldProps.date) {\r\n            this.setState({...this.state, ...this.deriveStateFromDate(this.props.date)});\r\n        }\r\n    }\r\n\r\n    focus(): void {\r\n        this.input1Ref.current?.focus();\r\n    }\r\n\r\n    private validDate(): {date?: Date; error?: string} {\r\n        const {year, month, day} = this.state;\r\n        const parsable = year.length >= 4 && month.length > 0 && day.length > 0;\r\n\r\n        if (parsable) {\r\n            try {\r\n                const pyear = parseInt(year);\r\n                const pmonth = parseInt(month) - 1;\r\n                const pday = parseInt(day);\r\n                // Verify that all individual parts of the date are correct.\r\n                if (pyear > 0 && pmonth >= 0 && pmonth < 12 && pday > 0 && pday <= 31) {\r\n                    const date = new Date(pyear, pmonth, pday);\r\n                    const error = this.getError(date);\r\n                    if (error) return {error};\r\n                    else return {date};\r\n                }\r\n            } catch (e) {}\r\n            return {error: \"validation.date.invalid\"};\r\n        } else if (this.state.touched) return {error: \"validation.date.invalid\"};\r\n\r\n        // If one of the fields is empty, we only output an error if the input was touched\r\n        // i.e. it was completed before\r\n        return {};\r\n    }\r\n\r\n    private getError(date: Date): string | undefined {\r\n        const {minimumDate, maximumDate} = this.props;\r\n        if (maximumDate && date > maximumDate) return \"validation.date.tooYoung\";\r\n        else if (minimumDate && date < minimumDate) return \"validation.date.invalid\";\r\n        else return undefined;\r\n    }\r\n\r\n    deriveStateFromDate(date?: Date): DateInputState {\r\n        const year = date?.getFullYear();\r\n        const month = date?.getMonth();\r\n        const day = date?.getDate();\r\n\r\n        return {\r\n            year: year === undefined ? \"\" : year + \"\",\r\n            month: month === undefined ? \"\" : month + 1 + \"\",\r\n            day: day === undefined ? \"\" : day + \"\",\r\n            touched: date !== undefined,\r\n            error: date ? this.getError(date) : undefined,\r\n        };\r\n    }\r\n\r\n    set(values: Partial<DateInputState>): void {\r\n        const {onChange} = this.props;\r\n        this.setState({...this.state, ...values}, () => {\r\n            if (onChange) {\r\n                const {date, error} = this.validDate();\r\n                if (date || error) {\r\n                    onChange(date, error);\r\n                    this.setState({...this.state, touched: true, error});\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {inputStyle, containerStyle, autoFocus, theme} = this.props;\r\n        const {year, month, day, touched, error} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const valid = touched && !error;\r\n        const inputStyleValid = valid ? this.props.inputStyleValid : {};\r\n\r\n        return (\r\n            <View style={[styles.container, containerStyle]}>\r\n                <TextInput\r\n                    {...dateInputProps(this.input1Ref, day, 2, this.input2Ref, (day) => this.set({day}))}\r\n                    ref={this.input1Ref}\r\n                    style={[styles.input, styles.inputDay, inputStyle, inputStyleValid]}\r\n                    blurOnSubmit={false}\r\n                    returnKeyType=\"next\"\r\n                    placeholder={\"Day\"}\r\n                    autoFocus={autoFocus}\r\n                />\r\n                <TextInput\r\n                    {...dateInputProps(this.input2Ref, month, 2, this.input3Ref, (month) => this.set({month}))}\r\n                    ref={this.input2Ref}\r\n                    style={[styles.input, styles.inputMonth, inputStyle, inputStyleValid]}\r\n                    blurOnSubmit={false}\r\n                    onSubmitEditing={() => this.input3Ref.current?.focus()}\r\n                    returnKeyType=\"next\"\r\n                    placeholder={\"Month\"}\r\n                />\r\n                <TextInput\r\n                    {...dateInputProps(this.input3Ref, year, 4, undefined, (year) => this.set({year}))}\r\n                    ref={this.input3Ref}\r\n                    style={[styles.input, styles.inputYear, inputStyle, inputStyleValid]}\r\n                    returnKeyType=\"done\"\r\n                    placeholder={\"Year\"}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        input: {\r\n            borderWidth: 1,\r\n            borderColor: theme.componentBorder,\r\n            paddingHorizontal: 6,\r\n        },\r\n        inputDay: {flex: 1},\r\n        inputMonth: {flex: 1, marginLeft: 10},\r\n        inputYear: {flex: 2, marginLeft: 10},\r\n    });\r\n});\r\n\r\nexport default withTheme(DateInputClass);\r\n","import * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateInput, {DateInputClass, DateInputProps} from \"./DateInput\";\r\n\r\n// Component props\r\nexport type BirthDateInputProps = Omit<Omit<DateInputProps, \"minimumDate\">, \"maximumDate\">;\r\n\r\nconst minDate = new Date(1920, 0, 0);\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nexport class BirthDateInputClass extends React.Component<BirthDateInputProps> {\r\n    dateInputRef = React.createRef<DateInputClass>();\r\n\r\n    focus(): void {\r\n        this.dateInputRef.current?.focus();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const dateInputProps = this.props;\r\n        return <DateInput ref={this.dateInputRef} minimumDate={minDate} maximumDate={maxDate} {...dateInputProps} />;\r\n    }\r\n}\r\n\r\nexport default withTheme(BirthDateInputClass);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport GenderToggle from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {FormattedDate} from \"../../components/FormattedDate\";\r\nimport BirthDateInput from \"../../components/BirthDateInput\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingProfileScreen1Props = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingProfile1FormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen1 extends React.Component<OnboardingProfileScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingProfileScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingProfile1FormState) {\r\n        if (values.birthdate && values.gender && values.nationality && values.educationFields) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                    educationFields: values.educationFields,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n\r\n        const spacing = 30;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile1FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile1FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile1FormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                        setFieldTouched,\r\n                    } = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile1.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            noKeyboardAvoidance={true}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateInput\r\n                                inputStyle={styles.dateTextInput}\r\n                                inputStyleValid={styles.dateTextInputValid}\r\n                                onChange={(date, error) => {\r\n                                    if (error) setFieldError(\"birthdate\", error);\r\n                                    else setFieldValue(\"birthdate\", date);\r\n                                    setFieldTouched(\"birthdate\", true);\r\n                                }}\r\n                            />\r\n                            {values.birthdate && !errors.birthdate && (\r\n                                <FormattedDate style={styles.birthdateText} date={values.birthdate} />\r\n                            )}\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showChips={true}\r\n                            />\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        dateTextInput: {\r\n            height: 44,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            fontSize: 18,\r\n            color: theme.text,\r\n        },\r\n        dateTextInputValid: {\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        birthdateText: {\r\n            textAlign: \"right\",\r\n            marginTop: 4,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingProfileScreen1));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, ViewStyle} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level?: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n} & ThemeProps;\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, level, theme, buttonStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={LANGUAGE_LEVELS}\r\n                label={(l: string) => i18n.t(`languageLevels.${l}`)}\r\n                selected={level ? [level] : []}\r\n                valueStyle={styles.value}\r\n                buttonStyle={[styles.button, buttonStyle]}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as LanguageLevel);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            width: 75,\r\n            height: 40,\r\n            alignItems: \"center\",\r\n        },\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LanguageLevelPicker);\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle, Text, Alert} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {languages};\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        this.setState({...this.state, languages});\r\n        const hasErrors = languages.filter((l) => !l.level).length > 0;\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length)\r\n            this.onChange(this.state.languages.filter((v, i) => i !== idx));\r\n    }\r\n\r\n    setLanguages(codes: string[]) {\r\n        const levelDict = new Map(this.state.languages.map((l) => [l.code, l.level]));\r\n        const languages = codes.map((code: string) => ({code, level: levelDict.get(code)}));\r\n        this.onChange(languages);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            languages,\r\n        });\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.map((l, i) => (i === idx ? {...l, level} : l));\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            return (\r\n                <View key={`spoken-languages-input-${sl.code}`} style={styles.rowContainer}>\r\n                    <Text style={styles.languageLabel}>{i18n.t(`languageNames.${sl.code}`)}</Text>\r\n                    <LanguageLevelPicker\r\n                        level={sl.level}\r\n                        buttonStyle={styles.levelPicker}\r\n                        onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                    />\r\n                    <MaterialIcons onPress={() => this.removeRow(i)} style={styles.deleteIcon} name=\"delete\" />\r\n                </View>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <View style={style}>\r\n                <LanguagePicker\r\n                    multiple={true}\r\n                    languages={languages.map((l) => l.code || \"\")}\r\n                    style={styles.languagePicker}\r\n                    onChange={(languageCodes: string[]) => {\r\n                        if (languageCodes.length > MAX_SPOKEN_LANGUAGES)\r\n                            Alert.alert(`You cannot select more than ${MAX_SPOKEN_LANGUAGES} languages`);\r\n                        this.setLanguages(languageCodes.slice(0, MAX_SPOKEN_LANGUAGES));\r\n                    }}\r\n                    showChips={false}\r\n                />\r\n                {rows}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 24,\r\n            color: theme.error,\r\n            paddingHorizontal: 4,\r\n        },\r\n        languagePicker: {},\r\n        languageLabel: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        levelPicker: {\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS, VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingProfileScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingProfileScreen2State = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingProfile2FormState = {\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingProfileScreen2 extends React.Component<OnboardingProfileScreen2Props, OnboardingProfileScreen2State> {\r\n    constructor(props: OnboardingProfileScreen2Props) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    submit(values: OnboardingProfile2FormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages, interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const {hasErrors} = this.state;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingProfile2FormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingProfile2FormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingProfile2FormState>) => {\r\n                    const {handleSubmit, values, touched, setFieldValue, errors} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.profile2.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            />\r\n                            {touched.languages && hasErrors && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.specifyLevel\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n                            {touched.languages && !hasErrors && values.languages.length == 0 && (\r\n                                <InputErrorText\r\n                                    error={\"validation.language.atLeastOne\"}\r\n                                    style={{marginBottom: 0, marginTop: 10}}\r\n                                />\r\n                            )}\r\n\r\n                            <InputLabel style={{marginBottom: 6, marginTop: spacing}}>\r\n                                {i18n.t(\"chooseInterests\")}\r\n                            </InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[]) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                }}\r\n                                showChips={true}\r\n                            />\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds} />}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingProfileScreen2);\r\n","import * as React from \"react\";\r\nimport {Text, ViewStyle, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingRoleScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    type: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.role.title\")} hideNavNext={true} {...this.props}>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({type: \"student\"})}>\r\n                    <MaterialIcons name={\"school\"} style={styles.roleButtonIconStudent}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStudent}>{i18n.t(\"allRoles.student\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({type: \"staff\"})}>\r\n                    <MaterialIcons name={\"group\"} style={styles.roleButtonIconStaff}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStaff}>{i18n.t(\"allRoles.staff\")}</Text>\r\n                </TouchableOpacity>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    const studentColor = theme.accent;\r\n    const staffColor = theme.okay;\r\n\r\n    const common = StyleSheet.create({\r\n        roleButtonText: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n        },\r\n        roleButtonIcon: {\r\n            fontSize: 50,\r\n            marginRight: 15,\r\n        },\r\n    });\r\n\r\n    return StyleSheet.create({\r\n        roleButton: {\r\n            height: 100,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        } as ViewStyle,\r\n        roleButtonTextStaff: {\r\n            ...common.roleButtonText,\r\n            color: staffColor,\r\n        },\r\n        roleButtonTextStudent: {\r\n            ...common.roleButtonText,\r\n            color: studentColor,\r\n        },\r\n        roleButtonIconStaff: {\r\n            ...common.roleButtonIcon,\r\n            color: staffColor,\r\n        },\r\n        roleButtonIconStudent: {\r\n            ...common.roleButtonIcon,\r\n            color: studentColor,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleScreen));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Discover;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} fontSize={24} />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen1));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Collaborate;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} fontSize={24} />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen2));\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\nimport {onboardingOffersStyle} from \"../../styles/onboarding\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport FormattedOfferCategory from \"../../components/FormattedOfferCategory\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps & ThemeProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch, theme} = this.props;\r\n        const styles = onboardingOffersStyle(theme);\r\n        const category = OfferCategory.Meet;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={\r\n                    <FormattedOfferCategory category={category} textStyle={styles.categoryTitleText} fontSize={24} />\r\n                }\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, category, onboardingState, dispatch, theme)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingOfferScreen3));\r\n","import * as React from \"react\";\r\nimport {ButtonGroup, withTheme} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n} & ThemeProps;\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, theme} = this.props;\r\n        const styleProps = getToggleStyleProps(false, theme);\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                {...styleProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DegreeToggle);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet, Switch} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme, onboardingState, dispatch} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n        const staffRoles = onboardingState.staffRoles;\r\n        const atLeastOne = Object.values(staffRoles).some((v) => v === true);\r\n\r\n        const setValue = (sr: StaffRole, b: boolean) =>\r\n            dispatch(setOnboardingValues({staffRoles: {...staffRoles, [sr]: b}}));\r\n\r\n        const buttons = STAFF_ROLES.map((sr: StaffRole, i: number) => (\r\n            <TouchableOpacity\r\n                key={i}\r\n                style={styles.button}\r\n                activeOpacity={0.6}\r\n                onPress={() => setValue(sr, !staffRoles[sr])}\r\n            >\r\n                <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.buttonIcon} />\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n                <Switch\r\n                    value={staffRoles[sr]}\r\n                    thumbColor={theme.accent}\r\n                    trackColor={{true: theme.accentTernary, false: theme.accentSlight}}\r\n                    onValueChange={(b: boolean) => setValue(sr, b)}\r\n                />\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.roleSpecific1.staff.title\")}\r\n                hideNavNext={!atLeastOne}\r\n                {...this.props}\r\n            >\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        return (\r\n            <>\r\n                {onboardingState.type === \"student\" && this.studentRender()}\r\n                {onboardingState.type === \"staff\" && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n            flexGrow: 1,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {theme, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"legal.modal.disclaimer1\")}\r\n                            {\"\\n\\n\"}\r\n                            {i18n.t(\"legal.modal.disclaimer2\")}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <Button\r\n                                text={i18n.t(\"cancel\")}\r\n                                onPress={() => hide()}\r\n                                skin=\"rounded-hollow\"\r\n                                style={styles.actionButton}\r\n                                textStyle={styles.actionText}\r\n                            />\r\n                            <Button\r\n                                text={i18n.t(\"legal.decline\")}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    rootNavigate(\"LoginRoot\", {\r\n                                        screen: \"LoginScreens\",\r\n                                        params: {screen: \"SigninScreen\"},\r\n                                    });\r\n                                }}\r\n                                skin=\"rounded-filled\"\r\n                                style={[styles.actionButton, styles.redBackground]}\r\n                                textStyle={styles.actionText}\r\n                            />\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n        },\r\n        actionButton: {\r\n            flex: 1,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {TERMS_AND_CONDITIONS_URL} from \"../../constants/config\";\r\nimport {Linking} from \"expo\";\r\n\r\n// Component props\r\ntype OnboardingLegalSlideProps = ThemeProps & OnboardingScreenProps & {title: string; text: string};\r\n\r\nclass OnboardingLegalSlide extends React.Component<OnboardingLegalSlideProps> {\r\n    render(): JSX.Element {\r\n        const {theme, title, text, next, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={title} hideNavNext={true} next={next} {...otherProps}>\r\n                <Text style={styles.legalText}>{text}</Text>\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"legal.readMore\")[0]}\r\n                    <TextLink\r\n                        onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                        text={i18n.t(\"legal.readMore\")[1]}\r\n                    />\r\n                    {i18n.t(\"legal.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TOSDeclinedModal\r\n                        activator={(show) => (\r\n                            <TouchableOpacity style={styles.actionButton} onPress={show}>\r\n                                <Text style={styles.actionButtonTextDecline}>{i18n.t(\"legal.decline\")}</Text>\r\n                                <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                            </TouchableOpacity>\r\n                        )}\r\n                    />\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"legal.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        actionButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        actionButtonTextDecline: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.error,\r\n        },\r\n        actionButtonTextAccept: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.okay,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginVertical: 30,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n        },\r\n        legalText: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            lineHeight: 22,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingLegalSlide);\r\n","import OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingProfileScreen1 from \"./OnboardingProfileScreen1\";\r\nimport OnboardingProfileScreen2 from \"./OnboardingProfileScreen2\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingLegalScreen1 from \"./OnboardingLegalScreen1\";\r\nimport OnboardingLegalScreen2 from \"./OnboardingLegalScreen2\";\r\nimport OnboardingLegalScreen3 from \"./OnboardingLegalScreen3\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingProfileScreen1,\r\n    OnboardingProfileScreen2,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingLegalScreen1,\r\n    OnboardingLegalScreen2,\r\n    OnboardingLegalScreen3,\r\n};\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal1.title\")}\r\n                text={i18n.t(\"onboarding.legal1.text\")}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal2.title\")}\r\n                text={i18n.t(\"onboarding.legal2.text\")}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingLegalSlide from \"./OnboardingLegalSlide\";\r\n\r\nclass OnboardingLegalScreen1 extends React.Component<OnboardingScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <OnboardingLegalSlide\r\n                title={i18n.t(\"onboarding.legal3.title\")}\r\n                text={i18n.t(\"onboarding.legal3.text\")}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default OnboardingLegalScreen1;\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER} from \"../screens/onboarding\";\r\nimport {screenTitle} from \"./utils\";\r\nimport OnboardingProgressBar from \"../components/OnboardingProgressBar\";\r\nimport {nextOnboardingSlide, previousOnboardingSlide} from \"../state/auth/actions\";\r\nimport store from \"../state/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {ONBOARDING_SCREENS} from \"../screens/onboarding/screens\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => hasNext && store.dispatch(nextOnboardingSlide());\r\n    const previous = () => i > 0 && store.dispatch(previousOnboardingSlide());\r\n\r\n    const ComponentClass = ONBOARDING_SCREENS[name] as typeof React.Component;\r\n    function Wrapper(): JSX.Element {\r\n        return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={Wrapper} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingIndex: state.auth.onboardingIndex,\r\n}));\r\n\r\nfunction OnboardingNavigator({onboardingIndex}: {onboardingIndex: number}): JSX.Element {\r\n    return (\r\n        <>\r\n            <OnboardingStack.Navigator\r\n                initialRouteName={ONBOARDING_ORDER[onboardingIndex]}\r\n                tabBarOptions={{showLabel: false, showIcon: false}}\r\n                tabBar={() => <></>}\r\n                springConfig={{\r\n                    stiffness: 500,\r\n                    damping: 2000,\r\n                    mass: 5,\r\n                }}\r\n                swipeEnabled={false}\r\n                lazy={true}\r\n                lazyPreloadDistance={0}\r\n            >\r\n                {screens}\r\n            </OnboardingStack.Navigator>\r\n            <OnboardingProgressBar index={onboardingIndex} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default reduxConnector(OnboardingNavigator);\r\n","import * as React from \"react\";\r\nimport {Dimensions, StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"../ScreenWrapper\";\r\nimport {getLocalSvg} from \"../../assets\";\r\nimport Button from \"../../components/Button\";\r\nimport layout from \"../../constants/layout\";\r\nimport {DEBUG_MODE} from \"../../constants/config\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const BackgroundSvg = getLocalSvg(\"large-wave-bg\", () => this.forceUpdate());\r\n        const ForegroundSvg = getLocalSvg(\"woman-holding-phone\", () => this.forceUpdate());\r\n\r\n        const height = Dimensions.get(\"window\").height;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <View style={styles.root}>\r\n                    {layout.isWideDevice ? (\r\n                        <View style={styles.largeDeviceLeftPanel}>\r\n                            <View style={{position: \"absolute\", bottom: -150, left: -100, width: \"100%\"}}>\r\n                                <ForegroundSvg />\r\n                            </View>\r\n                        </View>\r\n                    ) : (\r\n                        <>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    ...(height > 1000 ? {bottom: 0} : {top: 250}),\r\n                                }}\r\n                            >\r\n                                <BackgroundSvg width=\"100%\" />\r\n                            </View>\r\n                            <View\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    ...(height > 1000 ? {bottom: -200} : {top: 350}),\r\n                                    left: -100,\r\n                                }}\r\n                            >\r\n                                <ForegroundSvg />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                    <View style={styles.container}>\r\n                        <View>\r\n                            <Text style={styles.title}>{i18n.t(\"onboarding.success.title\")}</Text>\r\n                            <Text style={styles.subtitle}>{i18n.t(\"onboarding.success.subtitle\")}</Text>\r\n                            {layout.isWideDevice && (\r\n                                /* Hey, you have found an easter egg...plant */\r\n                                <Text style={styles.wideDeviceIcon}>{DEBUG_MODE ? \"🍆\" : \"🚀\"}</Text>\r\n                            )}\r\n                        </View>\r\n                        <Button\r\n                            text={i18n.t(\"onboarding.success.button\")}\r\n                            onPress={() => rootNavigate(\"MainScreen\")}\r\n                            skin=\"rounded-filled\"\r\n                            style={{opacity: 0.9}}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme, wideDevice: boolean) => {\r\n    return StyleSheet.create({\r\n        root: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n        },\r\n        largeDeviceLeftPanel: {\r\n            width: \"50%\",\r\n            backgroundColor: \"#0071BB\",\r\n        },\r\n        container: {\r\n            width: wideDevice ? \"50%\" : \"100%\",\r\n            height: \"100%\",\r\n            paddingTop: wideDevice ? 150 : 100,\r\n            paddingBottom: 100,\r\n            paddingHorizontal: 60,\r\n            justifyContent: \"space-between\",\r\n            alignItems: wideDevice ? \"center\" : \"flex-start\",\r\n        },\r\n        title: {\r\n            fontSize: 36,\r\n            letterSpacing: 0.5,\r\n            lineHeight: 40,\r\n            color: theme.text,\r\n            fontWeight: \"600\",\r\n            maxWidth: wideDevice ? 9999 : 200,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 18,\r\n            marginTop: 20,\r\n            color: theme.text,\r\n            textAlign: wideDevice ? \"center\" : \"left\",\r\n        },\r\n        wideDeviceIcon: {\r\n            fontSize: 80,\r\n            textAlign: \"center\",\r\n            marginVertical: 100,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, TextInput, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ResetPasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ResetPasswordFormProps = {token?: string; containerStyle?: StyleProp<ViewStyle>} & FormProps<FormState> &\r\n    ThemeProps;\r\n\r\n// Component state\r\ntype ResetPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ResetPasswordForm extends React.Component<ResetPasswordFormProps, ResetPasswordFormState> {\r\n    pwdRepeatRef = React.createRef<FormTextInput>();\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ResetPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: ValidatedActionReturn) => {\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                    if (errors && errors.fields) {\r\n                        const f = errors.fields;\r\n                        Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                    }\r\n                    this.setState({remoteErrors: errors, submitting: false});\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({remoteErrors: {general: \"error.reset_password_no_token\", fields: {}}, submitting: false});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ResetPasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"next\"\r\n                                    blurOnSubmit={false}\r\n                                    onSubmitEditing={() => this.pwdRepeatRef.current?.focus()}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                {/* TEMP This is a workaround for a bug on some iOS versions.\r\n                                    See https://github.com/facebook/react-native/issues/21572 */}\r\n                                <TextInput style={{width: 1, height: 1}} />\r\n\r\n                                <FormTextInput\r\n                                    ref={this.pwdRepeatRef}\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    returnKeyType=\"done\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"resetPassword.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        title: {\r\n            width: \"100%\",\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ResetPasswordForm from \"../components/forms/ResetPasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype ResetPasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ResetPasswordScreenState = {token?: string};\r\n\r\nclass ResetPasswordScreen extends React.Component<ResetPasswordScreenProps, ResetPasswordScreenState> {\r\n    constructor(props: ResetPasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {token} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <ResetPasswordForm token={token} containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ResetPasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>{i18n.t(\"resetPassword.instructions\")}</Text>\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordEmailSentScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport Button from \"../components/Button\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"resetPassword.success\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"login\")}\r\n                        icon={<MaterialCommunityIcons name=\"login\" style={styles.buttonIcon} />}\r\n                        onPress={() => {\r\n                            rootNavigate(\"LoginRoot\", {\r\n                                screen: \"LoginScreens\",\r\n                                params: {screen: \"SigninScreen\"},\r\n                            });\r\n                        }}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n            marginLeft: 4,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n    const styleProps = getToggleStyleProps(false, theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...styleProps}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {StyleProp, ViewStyle, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES, STAFF_ROLE_ICONS} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRoles: StaffRole[];\r\n    onChange?: (staffRoles: StaffRole[]) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    multiple?: boolean;\r\n    atLeastOne?: boolean;\r\n};\r\n\r\nfunction StaffRolePicker(props: StaffRoleToggleProps & ThemeProps): JSX.Element {\r\n    const {staffRoles, multiple, atLeastOne, buttonStyle, onChange, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    return (\r\n        <PopUpSelector\r\n            values={STAFF_ROLES}\r\n            label={(r: string) => i18n.t(`staffRoles.${r}`)}\r\n            icon={(_, i: number) => <MaterialIcons name={STAFF_ROLE_ICONS[i]} style={styles.icon} />}\r\n            selected={staffRoles}\r\n            valueStyle={styles.value}\r\n            buttonStyle={[styles.button, buttonStyle]}\r\n            onSelect={(values: string[]) => {\r\n                if (onChange) onChange(values as StaffRole[]);\r\n            }}\r\n            multiple={multiple}\r\n            atLeastOne={atLeastOne}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 40,\r\n            alignItems: \"center\",\r\n        },\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            fontSize: 20,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(StaffRolePicker);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_QUALITY} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect: [1, 1],\r\n                    quality: AVATAR_QUALITY,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity style={styles.button} onPress={() => this.showPicker()}>\r\n                <MaterialIcons style={styles.buttonIcon} name=\"edit\" />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {width: 0, height: 1},\r\n            shadowOpacity: 0.2,\r\n            shadowRadius: 1.41,\r\n            elevation: 2,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {ArraySchema, Schema, ValidationError} from \"yup\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\nimport CustomModal from \"../modals/CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\n// Component props\r\ntype ValueCardProps<T> = {\r\n    label: string;\r\n    icon?: JSX.Element;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T, error?: string | null) => void) => JSX.Element;\r\n    validator?: Schema<unknown> | ArraySchema<unknown>;\r\n    initialValue?: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n    oneLine?: boolean;\r\n    onPress?: () => void;\r\n    onModalShown?: () => void;\r\n    blank?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype ValueCardState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T | undefined;\r\n};\r\n\r\nclass ValueCard<T> extends React.Component<ValueCardProps<T>, ValueCardState<T>> {\r\n    constructor(props: ValueCardProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        const {initialValue} = this.props;\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T, error?: string | null): void {\r\n        if (error === undefined) error = this.state.error;\r\n        this.setState({...this.state, value, error}, () => this.validate());\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            if (this.props.apply && this.state.value) this.props.apply(this.state.value);\r\n            this.setModal(false);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (theme: Theme): JSX.Element => {\r\n        const {label, renderInput, oneLine} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        const styles = themedStyles(oneLine)(theme);\r\n\r\n        return (\r\n            <>\r\n                <Text style={styles.modalLabel}>{label}</Text>\r\n                {renderInput && value ? (\r\n                    renderInput(value, error, (value: T, error?: string | null) => this.onChange(value, error))\r\n                ) : (\r\n                    <></>\r\n                )}\r\n                <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                <View style={styles.modalButtonsContainer}>\r\n                    <Button\r\n                        onPress={() => this.apply()}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"apply\")}\r\n                        skin=\"rounded-filled\"\r\n                    />\r\n                    <Button\r\n                        onPress={() => this.setModal(false)}\r\n                        style={styles.modalButton}\r\n                        text={i18n.t(\"cancel\")}\r\n                        skin=\"rounded-hollow\"\r\n                    />\r\n                </View>\r\n            </>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            label,\r\n            icon,\r\n            display,\r\n            overrideModal,\r\n            noModal,\r\n            style,\r\n            locked,\r\n            oneLine,\r\n            blank,\r\n            onPress,\r\n            onModalShown,\r\n            ...otherProps\r\n        } = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        const onShow = () => {\r\n            if (onModalShown) onModalShown();\r\n        };\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(oneLine)(theme);\r\n                    return (\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={[styles.cardWrapper, style]}\r\n                                activeOpacity={0.9}\r\n                                disabled={noModal && !onPress}\r\n                                onPress={() => {\r\n                                    if (!noModal) {\r\n                                        if (!locked) this.setModal(true);\r\n                                    } else if (onPress) onPress();\r\n                                }}\r\n                                {...otherProps}\r\n                            >\r\n                                <View style={styles.cardContent}>\r\n                                    <View style={styles.cardLabelContainer}>\r\n                                        {!blank && icon}\r\n                                        <Text style={styles.cardLabel}>{!blank && label}</Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        {!blank && display !== undefined && display}\r\n                                        {!blank && display === undefined && this.props.children}\r\n                                    </View>\r\n                                </View>\r\n                                {!noModal && (\r\n                                    <View style={styles.rightIconContainer}>\r\n                                        <MaterialIcons\r\n                                            name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                            size={locked ? 30 : 40}\r\n                                            style={styles.rightIcon}\r\n                                        />\r\n                                    </View>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                            {!noModal && (\r\n                                <>\r\n                                    {overrideModal !== undefined &&\r\n                                        modalOpen &&\r\n                                        overrideModal(() => this.setModal(false))}\r\n                                    {overrideModal === undefined && modalOpen && (\r\n                                        <CustomModal\r\n                                            visible={modalOpen}\r\n                                            modalViewStyle={styles.modalContent}\r\n                                            animationType=\"slide\"\r\n                                            renderContent={() => this.renderModalContent(theme)}\r\n                                            onShow={onShow}\r\n                                            onHide={() => this.setModal(false)}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = (oneLine?: boolean) =>\r\n    preTheme((theme: Theme) => {\r\n        return StyleSheet.create({\r\n            modalContent: {\r\n                alignItems: \"flex-start\",\r\n                paddingHorizontal: 20,\r\n            },\r\n            modalErrorText: {\r\n                fontSize: 12,\r\n                color: theme.error,\r\n            },\r\n            modalLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1.5,\r\n                fontSize: 13,\r\n                marginBottom: 12,\r\n            },\r\n            modalButtonsContainer: {\r\n                flexDirection: \"column\",\r\n                width: \"100%\",\r\n            },\r\n            modalButton: {\r\n                marginVertical: 0,\r\n                marginTop: 15,\r\n            },\r\n            cardWrapper: {\r\n                width: \"100%\",\r\n                flexDirection: \"row\",\r\n                backgroundColor: theme.cardBackground,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"space-evenly\",\r\n                paddingVertical: 15,\r\n                minHeight: oneLine ? 0 : 80,\r\n                borderRadius: 10,\r\n            },\r\n            cardContent: {\r\n                flex: 1,\r\n                flexDirection: oneLine ? \"row\" : \"column\",\r\n                ...(oneLine ? {alignItems: \"center\"} : {}),\r\n                justifyContent: \"space-between\",\r\n            },\r\n            cardLabelContainer: {\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginBottom: oneLine ? 0 : 10,\r\n            },\r\n            cardLabel: {\r\n                color: theme.textLight,\r\n                textTransform: \"uppercase\",\r\n                letterSpacing: 1,\r\n                fontSize: 11,\r\n            },\r\n            rightIconContainer: {justifyContent: \"center\"},\r\n            rightIcon: {color: theme.textLight},\r\n        });\r\n    });\r\n\r\nexport default ValueCard;\r\n","import * as React from \"react\";\r\nimport {AvatarProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = {profile?: UserProfile} & AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    showEnlarged() {\r\n        this.setState({...this.state, enlarged: true});\r\n    }\r\n\r\n    hideEnlarged() {\r\n        this.setState({...this.state, enlarged: false});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, profile, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.showEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <ProfileAvatar\r\n                    profile={profile}\r\n                    {...avatarProps}\r\n                    {...(avatarProps.source || profile?.avatarUrl ? {onPress} : {})}\r\n                >\r\n                    {children}\r\n                </ProfileAvatar>\r\n                <CustomModal\r\n                    visible={enlarged}\r\n                    onHide={() => this.hideEnlarged()}\r\n                    fullWidth\r\n                    noBackground\r\n                    backdropOpacity={0.5}\r\n                    modalViewStyle={styles.modal}\r\n                    renderContent={() => (\r\n                        <ProfileAvatar\r\n                            profile={profile}\r\n                            source={avatarProps.source}\r\n                            containerStyle={styles.enlargedAvatarContainer}\r\n                            avatarStyle={styles.enlargedAvatar}\r\n                            activeOpacity={0.8}\r\n                            onPress={() => this.hideEnlarged()}\r\n                            rounded\r\n                        />\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        modal: {\r\n            aspectRatio: 1,\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import React from \"react\";\r\nimport {StyleProp, View, ViewStyle} from \"react-native\";\r\nimport Wave from \"../Wave\";\r\n\r\nexport type WavyHeaderProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    color: string;\r\n    wavePatternIndex?: number | \"random\";\r\n    upsideDown?: boolean;\r\n};\r\n\r\ntype WavyHeaderState = {\r\n    headerWidth: number;\r\n    waveTop: number;\r\n};\r\n\r\nexport default class WavyHeader extends React.Component<WavyHeaderProps, WavyHeaderState> {\r\n    constructor(props: WavyHeaderProps) {\r\n        super(props);\r\n        this.state = {\r\n            headerWidth: 0,\r\n            waveTop: props.upsideDown ? 1 : -1,\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {style, color, upsideDown, children, wavePatternIndex} = this.props;\r\n        const {headerWidth, waveTop} = this.state;\r\n\r\n        return (\r\n            <>\r\n                <View\r\n                    style={[{backgroundColor: color, width: \"100%\", zIndex: 10}, style]}\r\n                    onLayout={(layout) => {\r\n                        const {y, height, width} = layout.nativeEvent.layout;\r\n                        this.setState({...this.state, headerWidth: width, waveTop: y + height});\r\n                    }}\r\n                >\r\n                    {children}\r\n                </View>\r\n                {waveTop !== -1 && (\r\n                    <Wave\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: waveTop + (upsideDown ? 1 : -1),\r\n                            width: headerWidth,\r\n                            zIndex: 10,\r\n                        }}\r\n                        color={color}\r\n                        patternIndex={wavePatternIndex || \"random\"}\r\n                        upsideDown={upsideDown}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Text, View, ScrollView} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRolePicker from \"../StaffRolePicker\";\r\nimport GenderToggle from \"../GenderToggle\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport ValueCard from \"../cards/ValueCard\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport Chips from \"../Chips\";\r\nimport WavyHeader from \"../headers/WavyHeader\";\r\nimport BirthDateInput, {BirthDateInputClass} from \"../BirthDateInput\";\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps & {\r\n    user: User | null;\r\n    onChange?: (fields: Partial<UserProfile>) => void;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    birthDateInputRef = React.createRef<BirthDateInputClass>();\r\n\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        const profile = user?.profile;\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={user?.profile}\r\n                        size={140}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {profile && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={profile.university}\r\n                        />\r\n                    )}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                    {!user && <ActivityIndicator size=\"large\" style={styles.loadingIndicator} color={theme.accent} />}\r\n\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user?.email}\r\n                        display={(user && <Text style={styles.cardText}>{user.email}</Text>) || undefined}\r\n                        locked={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile?.birthdate}\r\n                        display={profile && <FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        renderInput={(value: Date, _error, onChange) => (\r\n                            <BirthDateInput\r\n                                ref={this.birthDateInputRef}\r\n                                date={value}\r\n                                containerStyle={styles.birthdateInputContainer}\r\n                                inputStyle={styles.birthdateInput}\r\n                                onChange={(birthdate?: Date, inputError?: string) => {\r\n                                    onChange(birthdate || value, inputError || null);\r\n                                }}\r\n                            />\r\n                        )}\r\n                        onModalShown={() => this.birthDateInputRef.current?.focus()}\r\n                        apply={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile?.nationality}\r\n                        display={\r\n                            profile && (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            )\r\n                        }\r\n                        overrideModal={\r\n                            profile &&\r\n                            ((hide: () => void) => (\r\n                                <NationalityPicker\r\n                                    nationality={profile.nationality}\r\n                                    onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                    onHide={hide}\r\n                                />\r\n                            ))\r\n                        }\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile?.gender}\r\n                        display={\r\n                            profile && (\r\n                                <GenderToggle\r\n                                    gender={profile.gender}\r\n                                    onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile?.type}\r\n                        display={\r\n                            profile && (\r\n                                <>\r\n                                    <RoleToggle role={profile.type} disabled={true} />\r\n                                    {profile.type == \"staff\" && (\r\n                                        <StaffRolePicker\r\n                                            staffRoles={(profile as UserProfileStaff).staffRoles}\r\n                                            onChange={(staffRoles: StaffRole[]) => this.onFieldChanged({staffRoles})}\r\n                                            multiple={true}\r\n                                            atLeastOne={true}\r\n                                            buttonStyle={styles.staffRoleButton}\r\n                                        />\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <DegreeToggle\r\n                                            degree={(profile as UserProfileStudent).degree}\r\n                                            onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile?.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile?.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                                showChips={true}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile?.interests}\r\n                        display={\r\n                            profile && (\r\n                                <InterestsPicker\r\n                                    interests={profile.interests}\r\n                                    onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                                    showChips={true}\r\n                                />\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!user}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile?.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            profile && (\r\n                                <Chips\r\n                                    items={profile?.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            )\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <SpokenLanguagesInput\r\n                                languages={value}\r\n                                onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile?.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                        theme={theme}\r\n                    />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | undefined;\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n    theme: Theme;\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n        const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n        return (\r\n            <ValueCard\r\n                blank={!profileOffers}\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={\r\n                    items.length > 0 ? (\r\n                        <Chips\r\n                            items={items}\r\n                            label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                        />\r\n                    ) : (\r\n                        <Text style={{color: theme.textLight}}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                    )\r\n                }\r\n                renderInput={(value: OfferValueDto[], error, onChange) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10, width: \"100%\"}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        // Header-related styles\r\n        header: {\r\n            alignItems: \"center\",\r\n            paddingBottom: 10,\r\n        },\r\n        name: {\r\n            fontSize: 28,\r\n            color: theme.textWhite,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatarContainer: {\r\n            backgroundColor: theme.accentSecondary,\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            top: 70,\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n            marginBottom: 20,\r\n            width: \"100%\",\r\n        },\r\n\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n        staffRoleButton: {\r\n            marginTop: 10,\r\n        },\r\n        birthdateInputContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 50,\r\n        },\r\n        birthdateInput: {\r\n            height: 50,\r\n            fontSize: 16,\r\n            borderRadius: 10,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditProfileForm);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype MyProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens, \"MyProfileScreen\">;\r\n\r\nclass MyProfileScreen extends React.Component<MyProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {user, dispatch} = this.props;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MyProfileScreen));\r\n","import * as React from \"react\";\r\nimport {StyleProp, Text, TextProps, TextStyle, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender} from \"../constants/profile-constants\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type FormattedGenderProps = {\r\n    gender: Gender;\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    iconStyle?: StyleProp<TextStyle>;\r\n} & TextProps &\r\n    ThemeProps;\r\n\r\nclass FormattedGender extends React.Component<FormattedGenderProps> {\r\n    render(): JSX.Element {\r\n        const {gender, containerStyle, iconStyle, theme, ...otherProps} = this.props;\r\n\r\n        const icon = gender === \"female\" ? \"female\" : gender === \"male\" ? \"male\" : undefined;\r\n        return (\r\n            <View style={[{flexDirection: \"row\", alignItems: \"center\"}, containerStyle]}>\r\n                {icon && <FontAwesome name={icon} size={24} color={theme.textLight} style={iconStyle} />}\r\n                <Text {...otherProps} style={[{marginLeft: icon ? 10 : 0}, otherProps.style]}>\r\n                    {i18n.t(`genders.${gender}`)}\r\n                </Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormattedGender);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ScrollView} from \"react-native\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {UserProfile, UserProfileStaff, UserProfileStudent} from \"../model/user-profile\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {StaffRole} from \"../constants/profile-constants\";\r\nimport ValueCard from \"./cards/ValueCard\";\r\nimport EnlargeableAvatar from \"./EnlargeableAvatar\";\r\nimport {OfferCategory, OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport FormattedGender from \"./FormattedGender\";\r\nimport Chips from \"./Chips\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport WavyHeader from \"./headers/WavyHeader\";\r\n\r\n// Component props\r\nexport type ProfileViewProps = ThemeProps & {\r\n    profile: UserProfile | null;\r\n    actionBar?: JSX.Element;\r\n};\r\n\r\nfunction Spacer(): JSX.Element {\r\n    return <View style={{height: 25}}></View>;\r\n}\r\n\r\nclass ProfileView extends React.Component<ProfileViewProps> {\r\n    render() {\r\n        const {theme, profile, actionBar} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const fullName = profile ? profile.firstName + \" \" + profile.lastName : \"\";\r\n\r\n        return (\r\n            <ScrollView style={styles.rootScroll} contentContainerStyle={styles.scrollContent} overScrollMode=\"never\">\r\n                <WavyHeader style={styles.header} color={theme.accent}>\r\n                    <EnlargeableAvatar\r\n                        profile={profile || undefined}\r\n                        size={120}\r\n                        rounded\r\n                        containerStyle={styles.avatarContainer}\r\n                        activeOpacity={0.8}\r\n                    />\r\n                    {!profile && (\r\n                        <ActivityIndicator size=\"large\" color={theme.textWhite} style={styles.loadingIndicator} />\r\n                    )}\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    <FormattedUniversity\r\n                        containerStyle={styles.universityContainer}\r\n                        style={styles.university}\r\n                        university={profile?.university || null}\r\n                    />\r\n                    {actionBar}\r\n                </WavyHeader>\r\n\r\n                <View style={styles.body}>\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        display={profile ? <FormattedDate style={styles.cardText} date={profile.birthdate} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"nationality\")}\r\n                        display={\r\n                            profile ? (\r\n                                <FormattedNationality style={styles.cardText} countryCode={profile.nationality} />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"gender\")}\r\n                        display={profile ? <FormattedGender style={styles.cardText} gender={profile.gender} /> : <></>}\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"profileType\")}\r\n                        display={\r\n                            profile ? (\r\n                                <>\r\n                                    <Text style={styles.cardText}>{i18n.t(`allRoles.${profile.type}`)}</Text>\r\n                                    {profile.type == \"staff\" && (\r\n                                        <>\r\n                                            {(profile as UserProfileStaff).staffRoles.map((sr: StaffRole) => (\r\n                                                <Text key={`profile-staff-role-${sr}`}>\r\n                                                    {i18n.t(`staffRoles.${sr}`)}\r\n                                                </Text>\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                    {profile.type == \"student\" && (\r\n                                        <Text style={styles.cardText}>\r\n                                            {i18n.t(`degrees.${(profile as UserProfileStudent).degree}`)}\r\n                                        </Text>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.educationFields}\r\n                                    label={(item: string) => i18n.t(`educationFields.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"interests\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.interests}\r\n                                    label={(item: string) => i18n.t(`interestNames.${item}`)}\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <ValueCard\r\n                        blank={!profile}\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        display={\r\n                            profile ? (\r\n                                <Chips\r\n                                    items={profile.languages}\r\n                                    label={(item: SpokenLanguageDto) =>\r\n                                        `${i18n.t(`languageNames.${item.code}`)} (${i18n.t(\r\n                                            `languageLevels.${item.level}`,\r\n                                        )})`\r\n                                    }\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile?.profileOffers || null}\r\n                    />\r\n                    <Spacer />\r\n                    <OfferCategoryRow category={OfferCategory.Meet} profileOffers={profile?.profileOffers || null} />\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[] | null;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    withTheme(\r\n        ({category, profileOffers, offerIdToCategory, theme}: OfferCategoryRowProps): JSX.Element => {\r\n            const items = profileOffers?.filter((o) => offerIdToCategory.get(o.offerId) == category) || [];\r\n            const styles = themedStyles(theme);\r\n\r\n            return (\r\n                <ValueCard\r\n                    blank={!profileOffers}\r\n                    label={i18n.t(`offerCategories.${category}`)}\r\n                    display={\r\n                        items.length > 0 ? (\r\n                            <Chips\r\n                                items={items}\r\n                                label={(item: OfferValueDto) => i18n.t(`allOffers.${item.offerId}.name`)}\r\n                            />\r\n                        ) : (\r\n                            <Text style={styles.cardText}>{i18n.t(\"profile.noOffersSelected\")}</Text>\r\n                        )\r\n                    }\r\n                    noModal={true}\r\n                />\r\n            );\r\n        },\r\n    ),\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rootScroll: {\r\n            width: \"100%\",\r\n        },\r\n        scrollContent: {\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        header: {\r\n            alignItems: \"center\",\r\n        },\r\n        // Content-related style\r\n        body: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            paddingTop: 90,\r\n            paddingBottom: 50,\r\n        },\r\n        formWrapper: {\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            alignSelf: \"center\",\r\n            paddingTop: 80,\r\n            paddingBottom: 20,\r\n        },\r\n        loadingIndicator: {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 140,\r\n        },\r\n        name: {\r\n            fontSize: 24,\r\n            color: theme.textWhite,\r\n            marginTop: 10,\r\n            height: 30,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            height: 25,\r\n            marginTop: 5,\r\n        },\r\n        avatarContainer: {\r\n            borderColor: theme.textWhite,\r\n            borderWidth: 1,\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileView);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {blockProfile, cancelMatchAction} from \"../../state/matching/actions\";\r\nimport store from \"../../state/store\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport Button from \"../Button\";\r\n\r\nexport type UnmatchProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {\r\n        onSubmit?: (block: boolean) => void;\r\n        profile: UserProfile | null;\r\n        matchId: string | null;\r\n    };\r\n\r\ntype UnmatchProfileModalState = {block: boolean};\r\n\r\nclass UnmatchProfileModal extends React.Component<UnmatchProfileModalProps, UnmatchProfileModalState> {\r\n    constructor(props: UnmatchProfileModalProps) {\r\n        super(props);\r\n        this.state = {block: false};\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, matchId, onSubmit, ...otherProps} = this.props;\r\n        const {block} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) =>\r\n                    profile ? (\r\n                        <>\r\n                            <Text style={styles.text}>\r\n                                {i18n.t(\"unmatch.text\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                            </Text>\r\n                            <Text style={styles.text}>\r\n                                {i18n.t(\"unmatch.blockQuestion\", {\r\n                                    firstname: profile.firstName,\r\n                                    lastname: profile.lastName,\r\n                                })}\r\n                            </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.blockTouchable}\r\n                                onPress={() => this.setState({...this.state, block: !block})}\r\n                            >\r\n                                <CheckBox\r\n                                    containerStyle={styles.checkboxContainer}\r\n                                    checked={block}\r\n                                    onPress={() => this.setState({...this.state, block: !block})}\r\n                                />\r\n                                <Text style={styles.text}>{i18n.t(\"block.action\")}</Text>\r\n                            </TouchableOpacity>\r\n                            <View style={styles.actionButtonsWrapper}>\r\n                                <Button\r\n                                    text={i18n.t(\"cancel\")}\r\n                                    onPress={() => hide()}\r\n                                    skin=\"rounded-hollow\"\r\n                                    style={styles.actionButton}\r\n                                    textStyle={styles.actionText}\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"unmatch.action\")}\r\n                                    onPress={() => {\r\n                                        hide();\r\n                                        if (matchId)\r\n                                            (store.dispatch as MyThunkDispatch)(cancelMatchAction(matchId, true));\r\n                                        if (block) (store.dispatch as MyThunkDispatch)(blockProfile(profile.id));\r\n                                        if (onSubmit) onSubmit(block);\r\n                                    }}\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.actionButton, styles.redBackground]}\r\n                                    textStyle={styles.actionText}\r\n                                />\r\n                            </View>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )\r\n                }\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n        blockTouchable: {\r\n            width: \"100%\",\r\n            marginTop: 5,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n        },\r\n\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n        },\r\n        actionButton: {\r\n            flex: 1,\r\n            marginHorizontal: 7,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(UnmatchProfileModal);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport QuickFormReport from \"./forms/QuickFormReport\";\r\nimport {ReportEntityType} from \"../constants/reports\";\r\nimport UnmatchProfileModal from \"./modals/UnmatchProfileModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {navigateBack, openChat} from \"../navigation/utils\";\r\n\r\nexport type ProfileActionBarProps = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n} & ThemeProps;\r\n\r\nfunction ProfileActionBar(props: ProfileActionBarProps): JSX.Element {\r\n    const {profile, isMatched, roomId, matchId, theme} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    let buttons;\r\n\r\n    const buttonBlock = (\r\n        <BlockProfileModal\r\n            profile={profile}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.block\")} icon=\"block\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    const buttonReport = (\r\n        <QuickFormReport\r\n            entity={profile}\r\n            entityType={ReportEntityType.PROFILE_ENTITY}\r\n            activator={(open) => (\r\n                <ActionButton blank={!profile} text={i18n.t(\"profile.action.report\")} icon=\"report\" onPress={open} />\r\n            )}\r\n        />\r\n    );\r\n\r\n    if (isMatched) {\r\n        const buttonChat = (\r\n            <ActionButton\r\n                blank={!profile}\r\n                text={i18n.t(\"profile.action.chat\")}\r\n                icon=\"chat\"\r\n                onPress={() => roomId && openChat(roomId)}\r\n            />\r\n        );\r\n\r\n        // TODO implement chat mute\r\n        /*const buttonMute = (\r\n            <ActionButton blank={!profile} text={i18n.t(\"profile.action.mute\")} icon=\"notifications-off\" />\r\n        );*/\r\n        const buttonMute = <></>;\r\n\r\n        const buttonUnmatch = (\r\n            <UnmatchProfileModal\r\n                profile={profile}\r\n                matchId={matchId}\r\n                onSubmit={(block: boolean) => {\r\n                    if (block) navigateBack();\r\n                }}\r\n                activator={(open) => (\r\n                    <ActionButton\r\n                        blank={!profile}\r\n                        text={i18n.t(\"profile.action.unmatch\")}\r\n                        icon=\"close\"\r\n                        onPress={open}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n\r\n        buttons = (\r\n            <>\r\n                {buttonChat}\r\n                {buttonMute}\r\n                {buttonUnmatch}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    } else {\r\n        buttons = (\r\n            <>\r\n                {buttonBlock}\r\n                {buttonReport}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return <View style={styles.container}>{buttons}</View>;\r\n}\r\n\r\ntype ActionButtonProps = ThemeProps & {\r\n    text: string;\r\n    icon?: string;\r\n    onPress?: () => void;\r\n    blank?: boolean;\r\n};\r\n\r\nconst ActionButton = withTheme(\r\n    ({text, icon, onPress, blank, theme}: ActionButtonProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity style={styles.button} activeOpacity={0.75} onPress={blank ? undefined : onPress}>\r\n                {icon && (\r\n                    <View style={[styles.buttonTop, blank ? styles.buttonTopBlank : {}]}>\r\n                        {!blank && <MaterialIcons name={icon} style={styles.buttonTopIcon} />}\r\n                    </View>\r\n                )}\r\n                <Text style={styles.buttonText}>{text}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 15,\r\n        },\r\n        button: {\r\n            width: 75,\r\n            marginHorizontal: 10,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonText: {\r\n            fontSize: 12,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 0.5,\r\n            color: theme.textWhite,\r\n            textAlign: \"center\",\r\n            ...styleTextLight,\r\n        },\r\n        buttonTop: {\r\n            fontSize: 24,\r\n            width: 36,\r\n            height: 36,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 60,\r\n            marginBottom: 5,\r\n            backgroundColor: \"#fff4\",\r\n        },\r\n        buttonTopBlank: {\r\n            opacity: 0.4,\r\n            backgroundColor: \"transparent\",\r\n            borderColor: theme.textWhite,\r\n            borderWidth: 1,\r\n        },\r\n        buttonTopIcon: {\r\n            fontSize: 24,\r\n            color: theme.textInverted,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileActionBar);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ProfileView from \"../components/ProfileView\";\r\nimport {UserProfile, UserProfileWithMatchInfo} from \"../model/user-profile\";\r\nimport {fetchProfile} from \"../state/profile/actions\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ProfileActionBar from \"../components/ProfileActionBar\";\r\n\r\nconst reduxConnector = connect(() => ({}));\r\n\r\n// Component props\r\ntype ProfileScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\n// Component state\r\ntype ProfileScreenState = {\r\n    profile: UserProfile | null;\r\n    isMatched: boolean;\r\n    roomId: string | null;\r\n    matchId: string | null;\r\n};\r\n\r\nclass ProfileScreen extends React.Component<ProfileScreenProps, ProfileScreenState> {\r\n    constructor(props: ProfileScreenProps) {\r\n        super(props);\r\n        this.state = {profile: null, isMatched: false, roomId: null, matchId: null};\r\n    }\r\n\r\n    getRouteParams(): {[key: string]: string | boolean | number} {\r\n        const params = this.props.route.params;\r\n        return params ? (params as {[key: string]: string | boolean | number}) : {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, navigation} = this.props;\r\n\r\n        navigation.addListener(\"focus\", () => {\r\n            const {id} = this.getRouteParams();\r\n            if (id && (!this.state.profile || this.state.profile.id !== id)) {\r\n                (dispatch as MyThunkDispatch)(fetchProfile(id as string)).then(\r\n                    (profileWithMatchInfo: UserProfileWithMatchInfo | null) => {\r\n                        if (profileWithMatchInfo) {\r\n                            const {profile, isMatched, roomId, matchingId} = profileWithMatchInfo;\r\n                            this.setState({...this.state, profile, isMatched, roomId, matchId: matchingId});\r\n                        } else {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                profile: null,\r\n                                isMatched: false,\r\n                                roomId: null,\r\n                                matchId: null,\r\n                            });\r\n                        }\r\n                    },\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profile, isMatched, roomId, matchId} = this.state;\r\n\r\n        return (\r\n            <ScreenWrapper forceFullWidth>\r\n                <ProfileView\r\n                    profile={profile}\r\n                    actionBar={\r\n                        <ProfileActionBar profile={profile} isMatched={isMatched} roomId={roomId} matchId={matchId} />\r\n                    }\r\n                />\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(ProfileScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {StyleProp, StyleSheet, TextStyle, ViewStyle} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport PopUpSelector from \"./PopUpSelector\";\r\nimport {SupportedLocale, SUPPORTED_LOCALES} from \"../localization\";\r\n\r\n// Component props\r\nexport type LocalePickerProps = {\r\n    locale?: SupportedLocale;\r\n    onChange?: (locale: SupportedLocale) => void;\r\n    buttonStyle?: StyleProp<ViewStyle>;\r\n    valueStyle?: StyleProp<TextStyle>;\r\n} & ThemeProps;\r\n\r\nclass LocalePicker extends React.Component<LocalePickerProps> {\r\n    render(): JSX.Element {\r\n        const {onChange, locale, theme, buttonStyle, valueStyle} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <PopUpSelector\r\n                values={SUPPORTED_LOCALES}\r\n                label={(l: string) => i18n.t(`locales.${l}`)}\r\n                selected={locale ? [locale] : []}\r\n                valueStyle={[styles.value, valueStyle]}\r\n                buttonStyle={buttonStyle}\r\n                onSelect={(values: string[]) => {\r\n                    if (values.length > 0 && onChange) onChange(values[0] as SupportedLocale);\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        value: {\r\n            letterSpacing: 0.5,\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(LocalePicker);\r\n","import {SupportedLocale} from \"../localization\";\r\nimport {ThemeKey} from \"../types\";\r\n\r\nexport type CookiesPreferences = {\r\n    auth: boolean;\r\n    cache: boolean;\r\n    settings: boolean;\r\n};\r\n\r\nexport const COOKIES_PREFERENCES_KEYS = [\"auth\", \"cache\", \"settings\"];\r\n\r\nexport type UserSettings = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    cookies: CookiesPreferences;\r\n    cookieConsentDate: Date | null;\r\n};\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {AppState} from \"../../state/types\";\r\nimport store from \"../../state/store\";\r\nimport {CookiesPreferences, COOKIES_PREFERENCES_KEYS} from \"../../model/user-settings\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {saveCookiesPreferences} from \"../../state/settings/actions\";\r\nimport Button from \"../Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n}));\r\n\r\n// Component props\r\nexport type CustomizeCookiesModalProps = ThemeProps & Partial<CustomModalProps> & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CustomizeCookiesModalState = {cookies: CookiesPreferences};\r\n\r\nclass CustomizeCookiesModal extends React.Component<CustomizeCookiesModalProps, CustomizeCookiesModalState> {\r\n    constructor(props: CustomizeCookiesModalProps) {\r\n        super(props);\r\n        this.state = {cookies: props.cookies};\r\n    }\r\n\r\n    private onShow(): void {\r\n        const storeCookies = this.props.cookies as {[key: string]: boolean};\r\n        const localCookies = this.state.cookies as {[key: string]: boolean};\r\n\r\n        // Update component cookies state with the state from the store if it is different\r\n        const changed = Object.keys(storeCookies).some((key: string) => storeCookies[key] != localCookies[key]);\r\n        if (changed) this.setState({...this.state, cookies: this.props.cookies});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, ...otherProps} = this.props;\r\n        const {cookies} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const cookieDict = this.state.cookies as {[key: string]: boolean};\r\n\r\n        const toggleCookie = (key: string) =>\r\n            this.setState({...this.state, cookies: {...cookies, [key]: !cookieDict[key]}});\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                modalViewStyle={[{paddingHorizontal: 20, alignItems: \"flex-start\"}, otherProps.modalViewStyle]}\r\n                onShow={() => {\r\n                    this.onShow();\r\n                    if (otherProps.onShow) otherProps.onShow();\r\n                }}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.title}>{i18n.t(\"cookies.title\")}</Text>\r\n                        <Text style={styles.text}>{i18n.t(\"cookies.preferences.text\")}</Text>\r\n                        {COOKIES_PREFERENCES_KEYS.map((k) => (\r\n                            <View style={styles.preferenceRow} key={`cookie-preference-${k}`}>\r\n                                <TouchableOpacity style={styles.preferenceRowButton} onPress={() => toggleCookie(k)}>\r\n                                    <CheckBox\r\n                                        checked={cookieDict[k]}\r\n                                        containerStyle={styles.checkBoxContainer}\r\n                                        onPress={() => toggleCookie(k)}\r\n                                    />\r\n                                    <Text style={styles.preferenceName}>{i18n.t(`cookies.preferences.${k}.name`)}</Text>\r\n                                </TouchableOpacity>\r\n                                <Text style={styles.preferenceDescription}>\r\n                                    {i18n.t(`cookies.preferences.${k}.description`)}\r\n                                </Text>\r\n                            </View>\r\n                        ))}\r\n                        <View style={styles.actions}>\r\n                            <Button\r\n                                text={i18n.t(\"save\")}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    store.dispatch(saveCookiesPreferences(cookies));\r\n                                }}\r\n                                skin=\"rounded-filled\"\r\n                                textStyle={styles.buttonText}\r\n                                style={styles.button}\r\n                            />\r\n                            <Button\r\n                                text={i18n.t(\"cancel\")}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    this.setState({...this.state, cookies: this.props.cookies});\r\n                                }}\r\n                                skin=\"rounded-hollow\"\r\n                                textStyle={styles.buttonText}\r\n                                style={styles.button}\r\n                            />\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        title: {\r\n            fontSize: 20,\r\n            textAlign: \"left\",\r\n            marginBottom: 10,\r\n            color: theme.text,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n\r\n        preferenceRow: {\r\n            marginTop: 10,\r\n        },\r\n        preferenceRowButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        checkBoxContainer: {\r\n            marginLeft: 0,\r\n            marginRight: 5,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingVertical: 0,\r\n        },\r\n        preferenceName: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n        },\r\n        preferenceDescription: {\r\n            fontSize: 14,\r\n            color: theme.textLight,\r\n        },\r\n\r\n        actions: {\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            maxWidth: 350,\r\n        },\r\n        button: {\r\n            flex: 1,\r\n            height: 40,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        buttonText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CustomizeCookiesModal));\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {Alert, Dimensions, Platform, ScrollView, StyleSheet, Switch, Text, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ValueCard from \"../components/cards/ValueCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {FontAwesome, MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {AppState} from \"../state/types\";\r\nimport {setLocale, setTheme} from \"../state/settings/actions\";\r\nimport LocalePicker from \"../components/LocalePicker\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {APP_VERSION, BUG_REPORT_EMAIL_ADDRESS, TERMS_AND_CONDITIONS_URL} from \"../constants/config\";\r\nimport LocalImage from \"../components/LocalImage\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport CustomizeCookiesModal from \"../components/modals/CustomizeCookiesModal\";\r\nimport Button from \"../components/Button\";\r\nimport * as Linking from \"expo-linking\";\r\nimport store from \"../state/store\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    settings: state.settings.userSettings,\r\n}));\r\n\r\n// Component props\r\ntype SettingsScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nlet versionClickCount = 0;\r\n\r\nclass SettingsScreen extends React.Component<SettingsScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, settings, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollView style={styles.scroll} contentContainerStyle={styles.container}>\r\n                    <Section theme={theme} title={i18n.t(\"settings.sections.general\")}>\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.language\")}\r\n                            icon={<FontAwesome name=\"language\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <LocalePicker\r\n                                    locale={settings.locale}\r\n                                    onChange={(l: SupportedLocale) => dispatch(setLocale(l))}\r\n                                    buttonStyle={styles.localeButton}\r\n                                    valueStyle={styles.localButtonValue}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.darkTheme\")}\r\n                            icon={<MaterialCommunityIcons name=\"theme-light-dark\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))}\r\n                            display={\r\n                                <Switch\r\n                                    value={settings.theme === \"dark\"}\r\n                                    onValueChange={() =>\r\n                                        dispatch(setTheme(settings.theme === \"dark\" ? \"light\" : \"dark\"))\r\n                                    }\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.logOut\")}\r\n                            icon={<MaterialCommunityIcons name=\"logout\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.logOut\")}\r\n                                    onPress={() => dispatch(logout())}\r\n                                    skin=\"rounded-filled\"\r\n                                    textStyle={styles.cardButtonText}\r\n                                    style={[styles.oneLineCardButton, styles.redBackground]}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.customizeCookies\")}\r\n                            icon={<MaterialCommunityIcons name=\"cookie\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            overrideModal={(hide) => <CustomizeCookiesModal visible={true} onHide={hide} />}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.about\")}\r\n                        icon={{name: \"info\", color: theme.accent}}\r\n                    >\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.version\")}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                // Easter-egg trigger\r\n                                versionClickCount++;\r\n                                if (versionClickCount === 7) {\r\n                                    versionClickCount = 0;\r\n                                    Alert.alert(\"Insert easter egg here\");\r\n                                }\r\n                                setTimeout(() => (versionClickCount = Math.max(0, versionClickCount - 1)), 3000);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{APP_VERSION}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.termsOfService\")}\r\n                            oneLine={true}\r\n                            onPress={() => Linking.openURL(TERMS_AND_CONDITIONS_URL)}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                        <ValueCard\r\n                            style={styles.card}\r\n                            label={i18n.t(\"settings.reportABug\")}\r\n                            icon={<MaterialIcons name=\"bug-report\" style={styles.cardIcon} />}\r\n                            oneLine={true}\r\n                            onPress={() => {\r\n                                const {width, height} = Dimensions.get(\"window\");\r\n                                const fromEmail = store.getState().profile.user?.email;\r\n                                let text = \"\";\r\n                                text += `Platform: ${Platform.OS} (${Platform.Version})\\n`;\r\n                                text += `Dimensions: ${Math.round(width)} x ${Math.round(height)}\\n`;\r\n                                text += `App version: ${APP_VERSION}\\n`;\r\n                                text += `User: ${fromEmail}\\n`;\r\n                                text += `_______________________\\n\\n`;\r\n                                text += `${i18n.t(\"bugReport.mailTitle\")}\\n\\n`;\r\n\r\n                                const subject = i18n.t(\"bugReport.mailSubject\");\r\n                                Linking.openURL(`mailto:${BUG_REPORT_EMAIL_ADDRESS}?subject=${subject}&body=${text}`);\r\n                            }}\r\n                            display={<Text style={styles.infoText}>{\"\"}</Text>}\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <Section\r\n                        theme={theme}\r\n                        title={i18n.t(\"settings.sections.danger\")}\r\n                        icon={{name: \"warning\", color: theme.warn}}\r\n                    >\r\n                        <ValueCard\r\n                            style={[styles.card, {height: 100}]}\r\n                            label={i18n.t(\"settings.deleteAccount\")}\r\n                            display={\r\n                                <Button\r\n                                    text={i18n.t(\"settings.deleteMyAccount\")}\r\n                                    onPress={() => rootNavigate(\"DeleteAccountScreen\")}\r\n                                    skin=\"rounded-filled\"\r\n                                    style={[styles.cardButton, styles.redBackground]}\r\n                                    textStyle={styles.cardButtonText}\r\n                                />\r\n                            }\r\n                            noModal={true}\r\n                        />\r\n                    </Section>\r\n                    <View style={styles.logosContainer}>\r\n                        <LocalImage\r\n                            imageKey=\"logos.sea-eu-around.small\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoSeaEuAround]}\r\n                        />\r\n                        <LocalImage\r\n                            imageKey=\"logos.erasmusLeft\"\r\n                            resizeMode=\"contain\"\r\n                            style={[styles.logo, styles.logoErasmus]}\r\n                        />\r\n                    </View>\r\n                </ScrollView>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\ntype SectionProps = {\r\n    theme: Theme;\r\n    title: string;\r\n    icon?: {name: string; color: string};\r\n};\r\n\r\nclass Section extends React.Component<SectionProps> {\r\n    render(): JSX.Element {\r\n        const {title, icon, theme, children} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.section}>\r\n                <View style={styles.sectionTitleContainer}>\r\n                    {icon && <MaterialIcons name={icon.name} color={icon.color} style={styles.sectionIcon} />}\r\n                    <Text style={styles.sectionTitle}>{title}</Text>\r\n                </View>\r\n                {children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n        },\r\n        container: {\r\n            width: \"100%\",\r\n            maxWidth: 700,\r\n            alignSelf: \"center\",\r\n            paddingTop: 10,\r\n            paddingBottom: 50,\r\n            paddingHorizontal: 20,\r\n        },\r\n        section: {\r\n            paddingVertical: 10,\r\n            justifyContent: \"flex-start\",\r\n        },\r\n        sectionTitleContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n        },\r\n        sectionTitle: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n        },\r\n        sectionIcon: {\r\n            fontSize: 16,\r\n            marginRight: 5,\r\n        },\r\n        card: {\r\n            marginVertical: 6,\r\n            height: 60,\r\n        },\r\n        cardIcon: {\r\n            marginRight: 6,\r\n            padding: 0,\r\n            fontSize: 18,\r\n            color: theme.textLight,\r\n        },\r\n        localeButton: {\r\n            height: 30,\r\n        },\r\n        localButtonValue: {\r\n            fontSize: 14,\r\n            marginHorizontal: 10,\r\n        },\r\n        cardButton: {\r\n            height: 42,\r\n            marginVertical: 0,\r\n        },\r\n        oneLineCardButton: {\r\n            width: 120,\r\n            height: 40,\r\n            marginVertical: 0,\r\n        },\r\n        cardButtonText: {\r\n            fontSize: 16,\r\n        },\r\n        redBackground: {\r\n            backgroundColor: theme.error,\r\n        },\r\n\r\n        infoText: {\r\n            color: theme.text,\r\n            fontSize: 16,\r\n        },\r\n        logosContainer: {},\r\n        logo: {\r\n            marginTop: 30,\r\n            width: \"100%\",\r\n        },\r\n        logoErasmus: {height: 40},\r\n        logoSeaEuAround: {height: 60},\r\n        /*logoJA: {height: 40},\r\n        developedBy: {\r\n            textTransform: \"uppercase\",\r\n            textAlign: \"center\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            color: theme.textLight,\r\n            marginTop: 40,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SettingsScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {MaterialCommunityIcons} from \"@expo/vector-icons\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport Button from \"../components/Button\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\ntype DeleteAccountSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountSuccessScreen extends React.Component<DeleteAccountSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={styles.container}>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success1\")}</Text>\r\n                    <Text style={styles.successText}>{i18n.t(\"deleteAccount.success2\")}</Text>\r\n                    <Button\r\n                        text={i18n.t(\"deleteAccount.leave\")}\r\n                        icon={<MaterialCommunityIcons name=\"logout\" style={styles.buttonIcon} />}\r\n                        onPress={() => rootNavigate(\"LoginRoot\", {screen: \"WelcomeScreen\"})}\r\n                        skin=\"rounded-filled\"\r\n                        style={styles.button}\r\n                    />\r\n                </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"75%\",\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 25,\r\n            marginTop: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            marginTop: 30,\r\n            backgroundColor: theme.error,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 20,\r\n            color: theme.textWhite,\r\n            marginLeft: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountSuccessScreen);\r\n","import * as React from \"react\";\r\nimport {StyleProp, StyleSheet, Text, View, ViewStyle} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../forms/FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {deleteAccount} from \"../../state/auth/actions\";\r\n\r\ntype FormState = {password: string};\r\n\r\nconst initialState = (): FormState => ({password: \"\"});\r\n\r\n// Use Yup to create the validation schema\r\nconst DeleteAccountFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Component props\r\ntype DeleteAccountFormProps = FormProps<FormState> & ThemeProps & {containerStyle?: StyleProp<ViewStyle>};\r\n\r\n// Component state\r\ntype DeleteAccountFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass DeleteAccountForm extends React.Component<DeleteAccountFormProps, DeleteAccountFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: DeleteAccountFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(deleteAccount(values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, containerStyle} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={containerStyle}>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"deleteAccount.title\")}</Text>\r\n                    <MaterialIcons name=\"warning\" style={styles.warningIcon} />\r\n                    <Text style={styles.warning}>{i18n.t(\"deleteAccount.warning\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={DeleteAccountFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    label={i18n.t(\"deleteAccount.inputLabel\")}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={styles.button}\r\n                                    skin=\"rounded-filled\"\r\n                                    text={i18n.t(\"deleteAccount.button\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        warning: {\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        warningIcon: {\r\n            color: theme.warn,\r\n            fontSize: 32,\r\n            marginTop: 20,\r\n        },\r\n        button: {\r\n            backgroundColor: theme.error,\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(DeleteAccountForm);\r\n","import * as React from \"react\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport DeleteAccountForm from \"../components/forms/DeleteAccountForm\";\r\nimport ScreenWrapper from \"./ScreenWrapper\";\r\nimport ScrollFormWrapper from \"../components/forms/ScrollFormWrapper\";\r\n\r\ntype DeleteAccountScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass DeleteAccountScreen extends React.Component<DeleteAccountScreenProps> {\r\n    render(): JSX.Element {\r\n        return (\r\n            <ScreenWrapper>\r\n                <ScrollFormWrapper>\r\n                    <DeleteAccountForm containerStyle={{width: \"80%\", maxWidth: 400}} />\r\n                </ScrollFormWrapper>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(DeleteAccountScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {NavigationContainer, DefaultTheme, DarkTheme, NavigationState} from \"@react-navigation/native\";\r\nimport {createStackNavigator, StackHeaderProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {NavigatorRoute, RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle, unauthorizedRedirect} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\nimport MyProfileScreen from \"../screens/MyProfileScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport {AUTHENTICATED_ROUTES} from \"../constants/route-settings\";\r\nimport store from \"../state/store\";\r\nimport MainHeader from \"../components/headers/MainHeader\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport DeleteAccountSuccessScreen from \"../screens/DeleteAccountSuccessScreen\";\r\nimport DeleteAccountScreen from \"../screens/DeleteAccountScreen\";\r\nimport {handleRouteChangeForChat} from \"./MessagingNavigator\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\nimport {BackHandler} from \"react-native\";\r\n\r\ntype RootNavigationProps = React.PropsWithRef<ThemeProps & {initialRoute?: keyof RootNavigatorScreens}> & {\r\n    onReady?: () => void;\r\n};\r\n\r\n// The root stack navigator\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\nlet consumedInitialRoute = false;\r\nlet previousRoute: NavigatorRoute | undefined = undefined;\r\nlet prePreviousRoute: NavigatorRoute | undefined = undefined;\r\nlet savedNavigationState: NavigationState | undefined = undefined;\r\n\r\n// Handle route changes\r\nfunction onStateChange(state: NavigationState | undefined) {\r\n    if (state) savedNavigationState = state;\r\n    const route = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute | undefined;\r\n    if (route) {\r\n        // Handle redirecting when not authenticated\r\n        if (!DEBUG_MODE) {\r\n            if (!store.getState().auth.authenticated && AUTHENTICATED_ROUTES.includes(route)) unauthorizedRedirect();\r\n        }\r\n\r\n        handleRouteChangeForChat(route, previousRoute);\r\n\r\n        prePreviousRoute = previousRoute;\r\n        previousRoute = route;\r\n    }\r\n}\r\n\r\nfunction Navigation({theme, initialRoute, onReady}: RootNavigationProps): JSX.Element {\r\n    // Ensure we do not go back to the initial route when the navigation container updates (e.g. on theme change)\r\n    const initialRouteName = consumedInitialRoute ? (previousRoute as keyof RootNavigatorScreens) : initialRoute;\r\n    consumedInitialRoute = true;\r\n\r\n    const reactNavigationTheme = {\r\n        dark: theme.id === \"dark\",\r\n        colors: {\r\n            ...(theme.id === \"dark\" ? DarkTheme : DefaultTheme).colors,\r\n            background: theme.background,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            initialState={savedNavigationState}\r\n            linking={LinkingConfiguration}\r\n            theme={reactNavigationTheme}\r\n            onReady={() => {\r\n                onStateChange(undefined);\r\n                // Prevent going back to a screen where the user shouldn't go\r\n                BackHandler.addEventListener(\"hardwareBackPress\", () => {\r\n                    if (prePreviousRoute) {\r\n                        const toAuthRoute = AUTHENTICATED_ROUTES.indexOf(prePreviousRoute) !== -1;\r\n                        const authenticated = store.getState().auth.authenticated;\r\n                        if (toAuthRoute && !authenticated) return true;\r\n                        if (!toAuthRoute && authenticated) return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (onReady) onReady();\r\n            }}\r\n            onStateChange={onStateChange}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={initialRouteName}>\r\n                <Stack.Screen name=\"LoginRoot\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordScreen\"\r\n                    component={ResetPasswordScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen\r\n                    name=\"MyProfileScreen\"\r\n                    component={MyProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"MyProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noAvatar={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={theme.textWhite}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ProfileScreen\"\r\n                    component={ProfileScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"ProfileScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader\r\n                                {...props}\r\n                                backButton={true}\r\n                                noShadow={true}\r\n                                buttonBackgroundColor={theme.accent}\r\n                                wrapperStyle={{backgroundColor: theme.accent}}\r\n                                color={theme.textWhite}\r\n                            />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"SettingsScreen\"\r\n                    component={SettingsScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"SettingsScreen\"),\r\n                        header: (props: StackHeaderProps) => (\r\n                            <MainHeader {...props} backButton={true} noSettingsButton={true} />\r\n                        ),\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountScreen\"\r\n                    component={DeleteAccountScreen}\r\n                    options={{\r\n                        headerShown: true,\r\n                        title: screenTitle(\"DeleteAccountScreen\"),\r\n                        header: (props: StackHeaderProps) => <MainHeader {...props} backButton={true} />,\r\n                    }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"DeleteAccountSuccessScreen\"\r\n                    component={DeleteAccountSuccessScreen}\r\n                    options={{title: screenTitle(\"DeleteAccountSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.userSettings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {STATUS_BAR_THEME_OVERRIDES} from \"../constants/route-settings\";\r\nimport {NavigatorRoute} from \"../navigation/types\";\r\nimport {rootNavigationRef} from \"../navigation/utils\";\r\nimport {ThemeKey, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ThemeProps;\r\n\r\nclass ThemedStatusBar extends React.Component<ThemedStatusBarProps> {\r\n    previousThemeOverride: ThemeKey | undefined;\r\n\r\n    getThemeOverride(): ThemeKey | undefined {\r\n        const routeName = rootNavigationRef.current?.getCurrentRoute()?.name as NavigatorRoute;\r\n        return STATUS_BAR_THEME_OVERRIDES[routeName];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const nav = rootNavigationRef.current;\r\n\r\n        if (nav) {\r\n            // Ensure we update the status bar theme when needed\r\n            nav.addListener(\"state\", () => {\r\n                const override = this.getThemeOverride();\r\n                if (override !== this.previousThemeOverride) this.forceUpdate();\r\n                this.previousThemeOverride = override;\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const defaultStyle: ThemeKey = theme.id == \"dark\" ? \"light\" : \"dark\";\r\n\r\n        return <StatusBar style={this.getThemeOverride() || defaultStyle} />;\r\n    }\r\n}\r\n\r\nexport default withTheme(ThemedStatusBar);\r\n","import React from \"react\";\r\nimport {Text, StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {acceptAllCookies} from \"../state/settings/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport CustomModal from \"./modals/CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport CustomizeCookiesModal from \"./modals/CustomizeCookiesModal\";\r\nimport {hasUserGivenCookieConsent} from \"../state/static-storage-middleware\";\r\nimport Button from \"./Button\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    cookies: state.settings.userSettings.cookies,\r\n    consentDate: state.settings.userSettings.cookieConsentDate,\r\n}));\r\n\r\n// Component props\r\nexport type CookieBannerProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\nexport type CookieBannerState = {showCustomize: boolean};\r\n\r\nclass CookieBanner extends React.Component<CookieBannerProps, CookieBannerState> {\r\n    constructor(props: CookieBannerProps) {\r\n        super(props);\r\n        this.state = {showCustomize: false};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, consentDate} = this.props;\r\n        const {showCustomize} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        if (hasUserGivenCookieConsent(consentDate)) return <></>;\r\n\r\n        return (\r\n            <>\r\n                <CustomModal\r\n                    visible={!showCustomize}\r\n                    animationType=\"slide\"\r\n                    fullWidth\r\n                    bottom\r\n                    nonDismissable\r\n                    modalViewStyle={styles.modalView}\r\n                    renderContent={() => (\r\n                        <>\r\n                            <Text style={styles.cookieText}>{i18n.t(\"cookies.bannerText\")}</Text>\r\n                            <View style={styles.actions}>\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.acceptAll\")}\r\n                                    onPress={() => (store.dispatch as MyThunkDispatch)(acceptAllCookies())}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-filled\"\r\n                                />\r\n                                <Button\r\n                                    text={i18n.t(\"cookies.customize\")}\r\n                                    onPress={() => this.setState({...this.state, showCustomize: true})}\r\n                                    style={styles.action}\r\n                                    textStyle={styles.actionText}\r\n                                    skin=\"rounded-hollow\"\r\n                                />\r\n                            </View>\r\n                        </>\r\n                    )}\r\n                />\r\n                <CustomizeCookiesModal\r\n                    visible={showCustomize}\r\n                    onHide={() => this.setState({...this.state, showCustomize: false})}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalView: {\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n            justifyContent: \"center\",\r\n        },\r\n        cookieText: {\r\n            fontSize: 14,\r\n            lineHeight: 20,\r\n            color: theme.text,\r\n            textAlign: \"justify\",\r\n        },\r\n        actions: {\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            maxWidth: 350,\r\n        },\r\n        action: {\r\n            flex: 1,\r\n            height: 40,\r\n            marginHorizontal: 10,\r\n            marginVertical: 0,\r\n        },\r\n        actionText: {\r\n            fontSize: 16,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(CookieBanner));\r\n","import {registerRootComponent} from \"expo\";\r\nimport React, {useState} from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\nimport {configureNotifications} from \"./notifications\";\r\nimport {initPolyfills} from \"./polyfills\";\r\nimport CookieBanner from \"./components/CookieBanner\";\r\n\r\nfunction App() {\r\n    initPolyfills();\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n    configureNotifications();\r\n\r\n    const [navigationReady, setNavigationReady] = useState<boolean>(false);\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <Navigation onReady={() => setNavigationReady(true)} initialRoute={initialRoute} />\r\n                        {navigationReady && <ThemedStatusBar />}\r\n                        <CookieBanner />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n"],"sourceRoot":""}