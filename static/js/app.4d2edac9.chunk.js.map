{"version":3,"sources":["web-build/register-service-worker.js","src/state/types.ts","src/constants/config.ts","src/constants/universities.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/reducer.ts","src/api/converters.ts","src/state/profile/reducer.ts","src/state/matching/reducer.ts","src/navigation/utils.ts","src/state/navigation-middleware.ts","src/state/auth-storage-middleware.ts","src/state/static-storage-middleware.ts","src/state/store.ts","src/api/utils.ts","src/state/profile/actions.ts","src/state/auth/actions.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/LoginTabBar.tsx","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/FormTextInput.tsx","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/screens/TabLoginScreen.tsx","src/state/settings/actions.ts","src/components/forms/SignupForm.tsx","src/screens/TabSignupFormScreen.tsx","src/navigation/LoginNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabNotImplementedScreen.tsx","src/styles/picker.ts","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/DegreeToggle.tsx","src/components/RoleToggle.tsx","src/components/StaffRoleToggle.tsx","src/components/GenderToggle.tsx","src/components/BirthDatePicker.tsx","src/components/AvatarEditButton.tsx","src/components/forms/FormRow.tsx","src/components/FormattedDate.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/FormattedUniversity.tsx","src/components/MultiPicker.tsx","src/components/InterestsPicker.tsx","src/api/dto.ts","src/components/LanguagePicker.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/EnlargeableAvatar.tsx","src/styles/toggles.ts","src/components/GenderToggleMulti.tsx","src/components/RoleToggleMulti.tsx","src/styles/tooltips.ts","src/components/CustomTooltip.tsx","src/components/OfferControl.tsx","src/components/forms/EditProfileForm.tsx","src/screens/TabProfileScreen.tsx","src/components/modals/CustomModal.tsx","src/components/modals/BlockProfileModal.tsx","src/state/matching/actions.ts","src/styles/general.ts","src/components/ProfilePreview.tsx","src/screens/TabMatchingScreen.tsx","src/components/MultiUniversityPicker.tsx","src/components/DegreeToggleMulti.tsx","src/components/MultiLanguagePicker.tsx","src/screens/MatchFilteringScreen.tsx","src/screens/messaging/ChatScreen.tsx","src/components/messaging/ProfileMessagingCard.tsx","src/screens/messaging/IndividualMessagingTab.tsx","src/screens/messaging/GroupMessagingTab.tsx","src/navigation/MessagingNavigator.tsx","src/screens/TabHomeScreen.tsx","src/navigation/MainNavigator.tsx","src/styles/onboarding.ts","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/BirthDateControl.tsx","src/components/NationalityControl.tsx","src/screens/onboarding/OnboardingPersonalInfoScreen.tsx","src/screens/onboarding/OnboardingLanguageScreen.tsx","src/screens/onboarding/OnboardingInterestsScreen.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingTosScreen.tsx","src/screens/onboarding/OnboardingPrivacyScreen.tsx","src/screens/onboarding/index.ts","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/screens/MatchSuccessScreen.tsx","src/components/forms/ChangePasswordForm.tsx","src/screens/ChangePasswordScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/ThemedStatusBar.tsx","src/App.tsx","src/hooks/useCachedResources.ts"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","AUTH_ACTION_TYPES","SETTINGS_ACTION_TYPES","PROFILE_ACTION_TYPES","MATCHING_ACTION_TYPES","Environment","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_URL","PARTNER_UNIVERSITIES","key","domain","country","extractNamesFromEmail","email","splitName","split","capitalize","str","length","toUpperCase","slice","firstname","lastname","getUniversityFromEmail","trim","find","uni","initialState","authenticated","token","connecting","validated","registerEmail","registerFailure","registerErrors","validatedEmail","loginErrors","onboarded","onboarding","birthdate","gender","nationality","role","degree","staffRole","languages","offerValues","interestIds","educationFields","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","en","welcome","picker","callToAction","login","tabsignin","tabsignup","emailAddress","password","passwordRepeat","send","forgotPassword","newPassword","forgotPasswordExplanation","cancel","signupWelcome","noResultsFound","tos","modal","disclaimer1","disclaimer2","decline","accept","readMore","privacy","emailNotificationsLabel","emailValidation","validating","success","createAccount","validation","atLeastOne","addAtLeastOne","invalid","invalidDomain","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","multiple","pageNotFound","pageDoesntExist","goHome","tabs","home","matching","messaging","profile","notifications","myProfile","editProfile","educationFieldsPicker","placeholder","searchPlaceholder","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","university","search","selectCountry","countryPickerLanguageCode","profileType","profileTypes","allRoles","student","staff","staffRoles","teaching","researcher","supporting","administrative","technical","ambassador","other","genders","male","female","dateOfBirth","months","0","1","2","3","4","5","6","7","8","9","10","11","fieldsOfEducation","apply","universities","universitiesPicker","logOut","name","title","subtitle","personalInfo","language","interests","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","submit","getStarted","profileCreated","spokenLanguages","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageLevels","a1","a2","b1","b2","c1","c2","native","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","tango","sneakers","baking","tarot","art","tea","picnicking","motorcycles","parties","shopping","couchsurfing","netflix","cooking","vegan","brunch","politics","bbq","surfing","spirituality","gardening","astrology","climbing","tennis","writer","comedy","wine","diy","coffee","sailing","music","cycling","activism","trivia","travel","instagram","museum","karaoke","fashion","disney","blogging","yoga","investing","petanque","theater","environmentalism","crossfit","dancing","hiking","running","golf","photography","vlogging","volunteering","tattoos","outdoors","esports","snowboarding","athlete","extrovert","podcasts","walking","vegetarian","reading","movies","foodie","soccer","skiing","sushi","introvert","skateboarder","festivals","fishing","swimming","expositions","gamer","piano","offerCategories","meet","discover","collaborate","offers","allOffers","help","block","warning","action","tabIndividual","tabGroup","noMatches","noResults","noResultsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","chat","continue","noOffersSelected","screenTitles","suffix","LoginForm","ForgotPassword","TabSignup","OnboardingNameScreen","OnboardingPersonalInfoScreen","OnboardingLanguageScreen","OnboardingInterestsScreen","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingTosScreen","OnboardingPrivacyScreen","IndividualMessagingTab","GroupMessagingTab","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","TabNotificationsScreen","TabProfileScreen","ValidationEmailSentScreen","ValidateEmailScreen","ChangePasswordScreen","OnboardingSuccessfulScreen","NotFoundScreen","MatchSuccessScreen","signup","SUPPORTED_LOCALES","getDefaultLocale","l","Localization","LANGUAGES_CODES","getLocalizedLanguageItems","locale","translations","map","code","label","value","theme","localizedLanguageItems","stripSuperfluousOffers","filter","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","avatarUrl","avatar","Date","profileOffers","convertPartialProfileToCreateDto","toJSON","undefined","convertDtoToUser","user","offerIdToCategory","Map","filters","roles","fetchedProfiles","fetchingProfiles","fetchingPage","canFetchMore","myMatches","fetchingMyMatches","rootNavigationRef","React","rootNavigate","route","current","navigate","screenTitle","i18n","t","readCachedCredentials","a","async","SecureStore","raw","JSON","parse","storeStaticData","data","log","storageObject","updatedAt","AsyncStorage","setItem","stringify","readCachedStaticData","getItem","rootReducer","combineReducers","auth","state","type","REGISTER_BEGIN","REGISTER_FAILURE","errors","REGISTER_SUCCESS","verificationToken","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","LOG_IN_BEGIN","LOG_IN_FAILURE","LOG_IN_SUCCESS","names","LOG_OUT","SET_ONBOARDING_VALUES","values","SET_ONBOARDING_OFFER_VALUE","settings","SET_THEME","TOGGLE_THEME","SET_LOCALE","PROFILE_SET_FIELDS_SUCCESS","fields","LOAD_PROFILE_OFFERS_SUCCESS","category","LOAD_PROFILE_INTERESTS_SUCCESS","sort","b","FETCH_USER_SUCCESS","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","offerId","SET_FILTERS","FETCH_PROFILES_BEGIN","FETCH_PROFILES_FAILURE","FETCH_PROFILES_SUCCESS","profiles","concat","FETCH_PROFILES_REFRESH","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","LIKE_PROFILE_SUCCESS","profileId","p","DISLIKE_PROFILE_SUCCESS","BLOCK_PROFILE_SUCCESS","combinedMiddleware","applyMiddleware","thunk","next","usingCachedCredentials","available","toStore","storeAuthInformation","fromCache","PROFILE_CREATE_SUCCESS","matchStatus","createStore","encodeRequestParams","args","Object","keys","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","requestBackend","endpoint","method","params","body","verbose","authToken","headers","Accept","store","getState","Authorization","accessToken","Alert","alert","codes","formattedParams","fetch","response","json","setProfileFieldsSuccess","createProfile","dispatch","loadProfileOffersSuccess","loadProfileInterestsSuccess","fetchUserSuccess","registerBegin","requestRegister","registerSuccess","loginBegin","loginSuccess","loginFailure","requestLogin","payload","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","setOnboardingValues","light","text","textWhite","textBlack","textLight","textInverted","background","cardBackground","accent","accentSlight","accentSecondary","accentTernary","tint","actionNeutral","okay","warn","tabIconDefault","tabIconSelected","componentBorder","dark","preTheme","generator","styles","themes","forEach","this","props","navigation","themedStyles","View","style","container","Text","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginTop","paddingVertical","color","withTheme","reduxConnector","connect","Staging","wrapper","ActivityIndicator","size","successText","path","fallbackRoute","fallback","Platform","OS","location","setTimeout","attemptRedirectToApp","width","height","marginVertical","textAlign","lineHeight","FontAwesome","mailIcon","description","config","prefixes","Linking","screens","LoginScreen","TabSignin","MainScreen","TabHome","TabMatching","MAtchFilteringScren","TabMessaging","ChatScreen","MessagingScreen","TabProfile","TabNotifications","ValidateEmailSentScreen","ChangePassword","OnboardingScreen","TabBarComponent","index","isFocused","event","emit","target","canPreventDefault","defaultPrevented","descriptors","position","tabBarWrapper","tabBar","routes","options","toLowerCase","inputRange","_","i","opacity","Animated","interpolate","outputRange","tabButton","tabButtonBg","accessibilityRole","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","onLongPress","tabButtonText","tabButtonTextFocused","Component","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","maxWidth","flexDirection","letterSpacing","textTransform","waveImageStyle","bottom","margin","InputLabel","otherProps","children","InputErrorText","errorStr","marginBottom","ValidatedTextInput","focused","showErrorText","wrapperStyle","untouched","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","onBlur","onFocus","e","setState","defaultProps","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","formStyle","inputErrorText","inputRow","actionRow","buttonMajor","borderRadius","buttonMajorText","getLoginTextInputsStyleProps","wrapperVerticalMargin","outline","commonStyle","textInputWrapper","textInput","paddingHorizontal","borderWidth","textInputError","borderBottomWidth","borderBottomColor","textInputValid","placeholderTextColor","loginTabsStyles","formWrapper","versionInfoContainer","left","versionText","versionDisclaimerContainer","versionDisclaimerIcon","debugContainer","debugTitle","debugButton","debugButtonText","toggleThemeContainer","right","toggleThemeButton","toggleThemeIcon","FormError","LoginFormSchema","shape","remoteErrors","LoginFormComponent","setFieldValue","oldProps","onSuccessfulSubmit","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","keyboardType","autoCompleteType","secureTextEntry","loginButton","disabled","forgotPwdLink","forgotPasswordText","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","submitForm","formikCfg","goBack","buttonCancel","buttonSend","marginLeft","marginRight","LoginTabComponent","KeyboardAvoidingView","behavior","Math","round","random","firstName","lastName","level","MaterialIcons","MaterialCommunityIcons","ForgotPasswordTabComponent","SubTabLogin","SubTabForgotPassword","SignupFormSchema","SignupForm","validateOnChange","createAccountButton","inlineInputs","inlineInputLeft","inlineInputRight","SignupTabComponent","contentContainerStyle","SigninStack","createStackNavigator","Tab","createMaterialTopTabNavigator","LoginNavigator","Navigator","initialRouteName","LoginTabBar","Screen","component","headerShown","TabSignupFormScreen","LogOutButton","onLogOut","TabNotImplementedScreen","FontAwesome5","constructionIcon","separator","logoutButton","pickerStyles","overlay","maxHeight","overflow","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","openButton","borderStyle","borderColor","openButtonText","selectedItemView","selectedItemText","SectionedMultiPicker","selectRef","items","open","tempSelected","selected","has","get","set","section","genSectionLabel","genLabel","updateItems","_toggleSelector","onChange","searchablePlaceholder","showSelected","viewProps","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","selectedItems","toString","val","numberOfLines","ref","onSelectedItemsChange","onCancel","close","onConfirm","IconRenderer","uniqueKey","displayKey","subKey","showDropDowns","readOnlyHeadings","showChips","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsComponent","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","EducationFieldCategory","marginHorizontal","scrollView","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","fontFamily","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","f","push","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","multipleText","DegreeToggle","buttonLabels","d","idx","onUpdate","selectedIndex","indexOf","buttons","containerStyle","onSelect","r","StaffRoleToggle","pickerItems","Picker","Item","selectedValue","onValueChange","GenderToggle","BirthDatePicker","showModal","hideModal","onHide","date","maxDate","now","setFullYear","getFullYear","minimumDate","maximumDate","mode","AvatarEditButton","ensurePermission","Permissions","status","showPicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","result","cancelled","onPictureSelected","buttonStyle","FormRowComponent","renderModalContent","renderInput","modalTouchable","setModal","activeOpacity","modalWrapper","modalLabel","modalErrorText","modalActions","modalCancel","modalActionText","modalOk","modalOpen","initialValue","validate","validator","validateSync","setError","err","display","overrideModal","noModal","locked","cardWrapper","cardContent","cardLabel","rightIconContainer","rightIcon","Modal","transparent","visible","animationType","minHeight","FormattedDate","localizedMonth","getMonth","formattedDate","getDate","NationalityPicker","countryCode","filterProps","withFlag","withFilter","withEmoji","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","flagSize","FormattedUniversity","MultiPicker","dropdownWrapperHeight","overlayStyle","isVisible","onRequestClose","onBackdropPress","onLayout","nativeEvent","layout","searchable","defaultValue","onChangeItem","scrollViewProps","keyboardShouldPersistTaps","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","OfferCategory","allInterests","updateValues","interest","forceUpdate","interestId","initOfferValue","genderVal","allowChooseGender","typeVal","allowChooseProfileType","languageItems","LanguagePicker","single","pickerItem","pickerLabel","arrowSize","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","LanguageLevelPicker","item","pickerContainer","SpokenLanguagesInput","addRow","computeErrors","hasErrors","splice","rows","rowContainer","inputRowContainer","pickerStyle","inputs","languageCodes","setLanguageCode","levelPicker","setLanguageLevel","removeRow","deleteIcon","errorRowContainer","canAddMore","plusButtonWrapper","plusButton","flexGrow","EnlargeableAvatar","enlarged","avatarProps","source","toggleEnlarged","backdropStyle","overlayBackdrop","rounded","enlargedAvatarContainer","avatarStyle","enlargedAvatar","aspectRatio","getToggleStyleProps","nobuttonBariant","innerBorderStyle","buttonContainerStyle","textStyle","flexShrink","selectedButtonStyle","selectedTextStyle","noButtonVariant","selectMultiple","selectedIndexes","tooltipStyles","alignContent","CustomTooltip","popover","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","checked","setAllValues","offerName","helpIcon","buttonsWrapper","FormFieldSpacer","EditProfileForm","avatarTitle","avatarSource","uri","profileFieldComponents","FormRow","cardText","hide","onFieldChanged","cc","OfferCategoryRow","Discover","onApply","Collaborate","Meet","screenWrapper","topView","imageInfo","image","mimeType","fail","SET_AVATAR_FAILURE","fileName","url","s3Url","blob","imageBlob","response2","universityContainer","ScrollView","scrollWrapper","keyboardVerticalOffset","offerVal","updatedVal","alignSelf","paddingTop","avatarAccessory","textShadowRadius","setProfileFields","CustomModal","modalVisible","modalViewStyle","centeredView","setModalVisible","modalView","renderContent","BlockProfileModal","onBlock","actionButtonsWrapper","TouchableHighlight","actionButton","actionButtonCancel","actionText","actionButtonDecline","fetchProfilesFailure","fetchProfilesSuccess","refreshFetchedProfiles","likeProfileSuccess","dislikeProfileSuccess","blockProfileSuccess","fetchMyMatches","resp","styleTextThin","styleTextLight","ProfilePreview","expanded","ReAnimated","Value","PROFILE_PREVIEW_COLLAPSED_HEIGHT","blockModalOpen","animating","x","y","timing","toValue","PROFILE_PREVIEW_EXPANDED_HEIGHT","duration","easing","Easing","elastic","start","out","linear","onFinish","onHidden","collapse","expand","onExpand","univ","fullName","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","onSwipeableRightWillOpen","onSwipeLeft","onSwipeableLeftWillOpen","onSwipeRight","leftThreshold","rightThreshold","renderRightActions","swipeAction","swipeActionRight","swipeActionContent","swipeActionContentRight","swipeActionText","renderLeftActions","swipeActionLeft","swipeActionContentLeft","toggleExpanded","touchable","collapsedContent","avatarContainer","infoContainer","infoText","expandedContent","expandedSectionTitle","chipsContainer","ItemChip","blockButton","blockButtonIcon","toProfileId","chipStyles","chip","chipText","paddingRight","sideMargin","paddingLeft","verticalSpacing","cardPadding","flexWrap","actionContainer","justRefreshed","scrollViewRef","nonEmptyOrUndef","filterParams","page","limit","meta","currentPage","totalPages","fetchMore","hiddenProfiles","previewComponents","scroll","scrollTo","animated","toUserId","scroller","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","layoutMeasurement","contentOffset","distanceToBottom","contentSize","matchContainer","loadingIndicatorContainer","noResultsContainer","noResultsText1","noResultsText2","topBar","flexBasis","filtersIcon","headerContainer","MatchingHeaderRight","MultiUniversityPicker","univKey","styleProps","MultiLanguagePicker","languageId","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","sectionTitle","entryContainer","entryLabel","Switch","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","entryControls","ClearFilterButton","twoLineEntryContainer","headerStyles","headerButtonIcon","FilteringHeaderLeft","FilteringHeaderRight","applyFilters","ProfileMessagingCard","CARD_HEIGHT","overshootRight","SwipeActionButton","icon","swipeActionButton","swipeActionButtonIcon","ACTION_BUTTON_WIDTH","fetchingMatches","matchesContainer","noMatchesContainer","noMatchesText","Stack","MessagingNavigator","insets","useSafeAreaInsets","headerMode","tabBarOptions","top","tabBarLabel","alphaText","paddingBottom","TabNavigator","createBottomTabNavigator","TabBarIcon","TabBarLabel","TabHomeStack","TabHomeNavigator","TabMatchingStack","TabMatchingNavigator","headerLeft","headerTitle","headerTitleStyle","headerTitleAlign","headerRight","TabNotificationsStack","TabNotificationsNavigator","TabProfileStack","TabProfileNavigator","activeTintColor","tabStyle","iconStyle","tabBarIcon","onboardingStyle","slideWrapper","header","slideContentWrapper","slideNavWrapper","navButton","navButtonIcon","finishButtonText","tosSlideStyle","actionsWrapper","actionButtonTextDecline","actionButtonTextAccept","readMoreText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","OnboardingSlide","hideNavNext","hasNext","hasPrevious","previous","VALIDATION_SCHEMA","nextProps","prev","Keyboard","dismiss","getOnboardingTextInputsStyleProps","BirthDateControl","button","buttonOk","dateText","NationalityControl","roleButton","roleButtonIconStudent","roleButtonTextStudent","roleButtonIconStaff","roleButtonTextStaff","studentColor","staffColor","common","roleButtonText","roleButtonIcon","studentThemedStyles","staffThemedStyles","icons","buttonIcon","buttonText","isStudent","studentRender","staffRender","TOSDeclinedModal","TextLink","textProps","declined","ONBOARDING_SCREENS","ONBOARDING_ORDER","OnboardingStack","ComponentClass","temp","OnboardingNavigator","showLabel","showIcon","springConfig","stiffness","damping","mass","swipeEnabled","lazy","lazyPreloadDistance","ReciprocalMatchScreen","ChangePasswordFormSchema","ChangePasswordForm","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","screenOptions","MainNavigator","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","forFadeFromBottomAndroid","currentTheme","StatusBar","registerRootComponent","isLoadingComplete","setLoadingComplete","SplashScreen","cached","Font","font","credentials","loadResourcesAndDataAsync","useCachedResources","fallbacks"],"mappings":"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,mBAIlBpY,QAAS,CACLqY,iBAAkB,uBAEtBC,aAAc,CACVC,OAAQ,mBACRC,UAAW,QACXC,eAAgB,kBAChBC,UAAW,UACXC,qBAAsB,UACtBC,6BAA8B,UAC9BC,yBAA0B,UAC1BC,0BAA2B,UAC3BC,qBAAsB,UACtBC,6BAA8B,UAC9BC,wBAAyB,WACzBC,wBAAyB,cACzBC,wBAAyB,OACzBC,oBAAqB,mBACrBC,wBAAyB,iBACzBC,uBAAwB,WACxBC,kBAAmB,SACnBC,cAAe,OACfC,kBAAmB,SACnBC,qBAAsB,UACtBC,uBAAwB,gBACxBC,iBAAkB,UAClBC,0BAA2B,wBAC3BC,oBAAqB,uBACrBC,qBAAsB,sBACtBC,2BAA4B,0BAC5BC,eAAgB,YAChBC,mBAAoB,WAG5B7Q,GAAI,CACArM,QAAS,YACTG,MAAO,YACPgd,OAAQ,cACR7c,aAAc,gBACdC,SAAU,eACVG,eAAgB,yBAChB8E,0BAA2B,QCvsBtB4X,GAAuC,CAAC,KAAM,MAEpD,SAASC,KACZ,OAAOD,GAAkBrgB,MAAK,SAACugB,GAAD,OAAwBA,GAAKC,QAAwB,KCPhF,IAAMC,GAA4B,CACrC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC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","file":"static/js/app.4d2edac9.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {ThemeKey} from \"../types\";\r\nimport {\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    LikeProfileResponseDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    role: Role | null;\r\n    degree: Degree | null;\r\n    staffRole: StaffRole | null;\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    connecting: boolean;\r\n    registerEmail: string;\r\n    registerFailure: boolean;\r\n    registerErrors: string[];\r\n    loginErrors: string[];\r\n    validatedEmail: string | null;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n};\r\n\r\nexport type SettingsState = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    roles: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    fetchedProfiles: UserProfile[];\r\n    fetchingProfiles: boolean;\r\n    fetchingPage: number;\r\n    canFetchMore: boolean;\r\n    myMatches: UserProfile[];\r\n    fetchingMyMatches: boolean;\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n\r\n/*### AUTH ###*/\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_BEGIN = \"AUTH/LOG_IN_BEGIN\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type RegisterSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type RegisterFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type LogInBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\n\r\nexport type LogInFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type LogOutAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ValidateAccountFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInBeginAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction;\r\n\r\n/*### SETTINGS ###*/\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction;\r\n\r\n/*### PROFILE ###*/\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\n\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\n\r\nexport type SetAvatarFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\n/*### MATCHING ###*/\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n    matchStatus: LikeProfileResponseDto;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type FetchProfilesRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type BeginFetchProfilesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type BeginFetchMyMatchesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | BeginFetchProfilesAction\r\n    | FetchProfilesSuccessAction\r\n    | FetchProfilesFailureAction\r\n    | FetchProfilesRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | BeginFetchMyMatchesAction\r\n    | FetchMyMatchesFailureAction\r\n    | FetchMyMatchesSuccessAction;\r\n","import Constants from \"expo-constants\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = extra.version;\r\nexport const APP_SCHEME: string = extra.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\n\r\n/**\r\n * The number of profiles fetched per request when scrolling in the Matching tab.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8;\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n * (limited for rendering reasons).\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    domain: string;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        domain: \"uca.es\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        domain: \"univ-brest.fr\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        domain: \"ug.edu.pl\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        domain: \"um.edu.mt\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        domain: \"kms.uni-kiel.de\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        domain: \"unist.hr\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Extracts a partner university from a given email.\r\n * @param email A valid email address.\r\n * @returns a University object if one matches the given email, null otherwise.\r\n */\r\nexport function getUniversityFromEmail(email: string): University | null {\r\n    const split = email.split(\"@\");\r\n    if (split.length > 0) {\r\n        const domain = split[1].trim();\r\n        return PARTNER_UNIVERSITIES.find((uni: University) => uni.domain == domain) || null;\r\n    }\r\n    return null;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {\r\n    AuthState,\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterFailureAction,\r\n    LogInFailureAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n} from \"../types\";\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    connecting: false,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    registerFailure: false,\r\n    registerErrors: [],\r\n    validatedEmail: null,\r\n    loginErrors: [],\r\n    onboarded: false,\r\n    onboarding: {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        birthdate: null,\r\n        gender: null,\r\n        nationality: null,\r\n        role: null,\r\n        degree: null,\r\n        staffRole: null,\r\n        languages: [],\r\n        offerValues: {},\r\n        interestIds: [],\r\n        educationFields: [],\r\n    },\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = <RegisterBeginAction>action;\r\n            return {\r\n                ...state,\r\n                registerFailure: false,\r\n                registerErrors: [],\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_FAILURE: {\r\n            const {errors} = <RegisterFailureAction>action;\r\n            return {...state, registerFailure: true, registerErrors: errors};\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = <RegisterSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                registerFailure: false,\r\n                registerErrors: [],\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = <ValidateAccountSuccessAction>action;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_BEGIN: {\r\n            return {...state, connecting: true, loginErrors: []};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            const {errors} = <LogInFailureAction>action;\r\n            return {...state, connecting: false, loginErrors: errors};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = <LogInSuccessAction>action;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                connecting: false,\r\n                authenticated: true,\r\n                loginErrors: [],\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, token: null, authenticated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = <SetOnboardingValuesAction>action;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = <SetOnboardingOfferValueAction>action;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole =\r\n    | \"teaching\"\r\n    | \"researcher\"\r\n    | \"supporting\"\r\n    | \"administrative\"\r\n    | \"technical\"\r\n    | \"ambassador\"\r\n    | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\r\n    \"teaching\",\r\n    \"researcher\",\r\n    \"supporting\",\r\n    \"administrative\",\r\n    \"technical\",\r\n    \"ambassador\",\r\n    \"other\",\r\n];\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 18;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\n\r\n// Email domains are not verified to allow for server-side whitelisting of specific adresses.\r\n// const VALID_EMAIL_DOMAINS = PARTNER_UNIVERSITIES.map((uni: University) => uni.domain);\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n/*.test(\r\n    \"email-domain\",\r\n    \"validation.email.invalidDomain\",\r\n    (value: string | null | undefined) =>\r\n        value !== null && value !== undefined && VALID_EMAIL_DOMAINS.some((domain) => value.endsWith(domain)),\r\n);*/\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n","import {MIN_PASSWORD_LENGTH} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        welcome: \"Welcome\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n\r\n        login: \"Log in\",\r\n        tabsignin: \"Log in\",\r\n        tabsignup: \"Sign up\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        send: \"Send\",\r\n        forgotPassword: \"Forgot Password\",\r\n        newPassword: \"New Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        cancel: \"Cancel\",\r\n        signupWelcome: \"We can't wait for you to join our community!\\n\\nJust one more step.\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        noResultsFound: \"No results found\",\r\n        tos: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\",\r\n                disclaimer2: \"Declining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms of service \", \"here\", \".\"],\r\n        },\r\n        privacy: {\r\n            readMore: [\"Read more about our privacy policy \", \"here\", \".\"],\r\n        },\r\n        emailNotificationsLabel: \"Send me useful notifications by email.\",\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        createAccount: \"Create account\",\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n                invalidDomain: \"Your email address must match one of our partner universities.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            languages: {\r\n                multiple: \"You cannot add two entries for the same language.\",\r\n            },\r\n        },\r\n        pageNotFound: \"404: Page not found.\",\r\n        pageDoesntExist: \"This page doesn't exist.\",\r\n        goHome: \"Go to home screen\",\r\n        tabs: {\r\n            home: \"Home\",\r\n            matching: \"Matching\",\r\n            messaging: \"Messaging\",\r\n            profile: \"Profile\",\r\n            notifications: \"Notifications\",\r\n        },\r\n        myProfile: \"My Profile\",\r\n        editProfile: \"Edit profile\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSC1\",\r\n            bsc2: \"BSC2\",\r\n            bsc3: \"BSC3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        search: \"Search\",\r\n        selectCountry: \"Select country\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            researcher: \"Researcher\",\r\n            supporting: \"Supporting\",\r\n            administrative: \"Administrative\",\r\n            technical: \"Technical\",\r\n            ambassador: \"SEA-EU Ambassador\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        fieldsOfEducation: \"Fields of education\",\r\n        apply: \"Apply\",\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Western Brittany\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        logOut: \"Log out\",\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            personalInfo: {\r\n                title: \"Profile\",\r\n            },\r\n            language: {\r\n                title: \"Languages\",\r\n            },\r\n            interests: {\r\n                title: \"Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff position\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            tos: {\r\n                title: \"Terms of service\",\r\n                subtitle:\r\n                    \"I am aware that I am entering a space of intercultural exchange and I am committed to caring and respectful exchanges with other members. My name and surname will be visible by other users.\",\r\n            },\r\n            privacy: {\r\n                title: \"Privacy policy\",\r\n                subtitle:\r\n                    \"I am entering a university community. I agree to provide some personal data, that will not be shared with anyone but the SEA-EU Around community.\",\r\n            },\r\n            submit: \"Submit\",\r\n            getStarted: \"Get Started\",\r\n            profileCreated: \"Welcome! Your profile is now created.\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"native\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            \"language-exchange\": \"Language exchange\",\r\n            \"second-hand-apparel\": \"Second hand apparel\",\r\n            \"board-games\": \"Board games\",\r\n            \"road-trips\": \"Road trips\",\r\n            tango: \"Tango\",\r\n            sneakers: \"Sneakers\",\r\n            sports: \"Sports\",\r\n            baking: \"Baking\",\r\n            tarot: \"Tarot\",\r\n            art: \"Art\",\r\n            tea: \"Tea\",\r\n            picnicking: \"Picnicking\",\r\n            motorcycles: \"Motorcycles\",\r\n            parties: \"Parties\",\r\n            shopping: \"Shopping\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            netflix: \"Netflix\",\r\n            cooking: \"Cooking\",\r\n            vegan: \"Vegan\",\r\n            brunch: \"Brunch\",\r\n            \"motor-sports\": \"Motor sports\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            \"working-out\": \"Working out\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            \"amateur-cook\": \"Amateur cook\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            \"vintage-fashion\": \"Vintage fashion\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            \"second-hand-shopping\": \"Second hand shopping\",\r\n            politics: \"Politics\",\r\n            bbq: \"BBQ\",\r\n            surfing: \"Surfing\",\r\n            spirituality: \"Spirituality\",\r\n            gardening: \"Gardening\",\r\n            astrology: \"Astrology\",\r\n            climbing: \"Climbing\",\r\n            tennis: \"Tennis\",\r\n            writer: \"Writer\",\r\n            comedy: \"Comedy\",\r\n            wine: \"Wine\",\r\n            diy: \"Diy\",\r\n            coffee: \"Coffee\",\r\n            sailing: \"Sailing\",\r\n            music: \"Music\",\r\n            cycling: \"Cycling\",\r\n            activism: \"Activism\",\r\n            trivia: \"Trivia\",\r\n            travel: \"Travel\",\r\n            instagram: \"Instagram\",\r\n            museum: \"Museum\",\r\n            karaoke: \"Karaoke\",\r\n            fashion: \"Fashion\",\r\n            disney: \"Disney\",\r\n            blogging: \"Blogging\",\r\n            yoga: \"Yoga\",\r\n            investing: \"Investing\",\r\n            petanque: \"Petanque\",\r\n            theater: \"Theater\",\r\n            environmentalism: \"Environmentalism\",\r\n            crossfit: \"Crossfit\",\r\n            dancing: \"Dancing\",\r\n            hiking: \"Hiking\",\r\n            running: \"Running\",\r\n            golf: \"Golf\",\r\n            photography: \"Photography\",\r\n            vlogging: \"Vlogging\",\r\n            volunteering: \"Volunteering\",\r\n            tattoos: \"Tattoos\",\r\n            outdoors: \"Outdoors\",\r\n            esports: \"Esports\",\r\n            snowboarding: \"Snowboarding\",\r\n            athlete: \"Athlete\",\r\n            extrovert: \"Extrovert\",\r\n            podcasts: \"Podcasts\",\r\n            walking: \"Walking\",\r\n            vegetarian: \"Vegetarian\",\r\n            reading: \"Reading\",\r\n            movies: \"Movies\",\r\n            foodie: \"Foodie\",\r\n            soccer: \"Soccer\",\r\n            skiing: \"Skiing\",\r\n            sushi: \"Sushi\",\r\n            introvert: \"Introvert\",\r\n            skateboarder: \"Skateboarder\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            swimming: \"Swimming\",\r\n            expositions: \"Expositions\",\r\n            gamer: \"Gamer\",\r\n            piano: \"Piano\",\r\n            \"foodie-tour\": \"Foodie Tour\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n        },\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offers: \"Offers\",\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Provide a couch\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"do-a-campus-tour\": {\r\n                name: \"Do a campus tour\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"help-on-a-project\": {\r\n                name: \"Help on a project\",\r\n                help: \"I am open to helping someone work on a project.\",\r\n            },\r\n            \"look-for-collaborators\": {\r\n                name: \"Look for collaborators\",\r\n                help: \"\",\r\n            },\r\n            \"answer-questions\": {\r\n                name: \"Answer questions\",\r\n                help: \"\",\r\n            },\r\n            \"talk-a-bit\": {\r\n                name: \"Talk a bit\",\r\n                help: \"\",\r\n            },\r\n            \"chat-to-practice\": {\r\n                name: \"Chat to practice\",\r\n                help: \"\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Language tandem\",\r\n                help: \"\",\r\n            },\r\n        },\r\n        block: {\r\n            warning:\r\n                \"Are you sure you want to block this user? You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            tabIndividual: \"Matches\",\r\n            tabGroup: \"Groups\",\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noResultsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match !\",\r\n                chat: \"Start chatting\",\r\n                continue: \"Keep scrolling\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            LoginForm: \"Login\",\r\n            ForgotPassword: \"Forgot Password\",\r\n            TabSignup: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingPersonalInfoScreen: \"Profile\",\r\n            OnboardingLanguageScreen: \"Profile\",\r\n            OnboardingInterestsScreen: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingTosScreen: \"Terms of Service\",\r\n            OnboardingPrivacyScreen: \"Privacy Policy\",\r\n            IndividualMessagingTab: \"Messages\",\r\n            GroupMessagingTab: \"Groups\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Browse\",\r\n            MatchFilteringScreen: \"Filters\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            TabProfileScreen: \"Profile\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Valiate your account\",\r\n            ChangePasswordScreen: \"Reset your password\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            MatchSuccessScreen: \"Match!\",\r\n        },\r\n    },\r\n    fr: {\r\n        welcome: \"Bienvenue\",\r\n        login: \"Connexion\",\r\n        signup: \"Inscription\",\r\n        emailAddress: \"Adresse email\",\r\n        password: \"Mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    return SUPPORTED_LOCALES.find((l: SupportedLocale) => l == Localization.locale) || \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // Set the locale on startup\r\n    i18n.locale = getDefaultLocale();\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"de\",\r\n    \"en\",\r\n    \"hr\",\r\n    \"es\",\r\n    \"fr\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport {SettingsState, SettingsAction, SetThemeAction, SetLocaleAction, SETTINGS_ACTION_TYPES} from \"../types\";\r\nimport translations from \"../../constants/translations\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const trans = (translations as {[key: string]: {[key: string]: unknown}})[locale];\r\n    const languageNames = trans.languageNames as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    theme: \"light\",\r\n    locale: getDefaultLocale(),\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = <SetThemeAction>action;\r\n            return {...state, theme};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            return {...state, theme: state.theme == \"light\" ? \"dark\" : \"light\"};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = <SetLocaleAction>action;\r\n            return {...state, locale, localizedLanguageItems: getLocalizedLanguageItems(locale)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    OfferValueDto,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n} from \"./dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    return {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: dto.interests || [],\r\n        languages: dto.languages || [],\r\n    };\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    return {...common, ...(profile.type == \"staff\" ? {staffRole: profile.staffRole!} : {degree: profile.degree!})};\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(profile: Partial<UserProfile>): Partial<CreateProfileDto> {\r\n    return {\r\n        ...profile,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: convertDtoToProfile(dto.profile),\r\n    };\r\n}\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferDto} from \"../../api/dto\";\r\nimport {\r\n    ProfileState,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    LoadProfileOffersSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n    FetchUserSuccessAction,\r\n    SetAvatarSuccessAction,\r\n} from \"../types\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n};\r\n\r\nexport const profileReducer = (state: ProfileState = initialState, action: ProfileAction): ProfileState => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = <SetProfileFieldsSuccessAction>action;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {...state, user: {...state.user, profile: {...state.user.profile, ...fields}}};\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers} = <LoadProfileOffersSuccessAction>action;\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = <LoadProfileInterestsSuccessAction>action;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = <FetchUserSuccessAction>action;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = <SetAvatarSuccessAction>action;\r\n            if (state.user === null) return {...state};\r\n            else return {...state, user: {...state.user, profile: {...state.user.profile, avatarUrl}}};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {UserProfile} from \"../../model/user-profile\";\r\nimport {\r\n    MatchingState,\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    FetchProfilesSuccessAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    MatchingFiltersState,\r\n    FetchMyMatchesSuccessAction,\r\n} from \"../types\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    roles: [],\r\n});\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    fetchedProfiles: [],\r\n    fetchingProfiles: false,\r\n    fetchingPage: 1,\r\n    canFetchMore: true,\r\n    myMatches: [],\r\n    fetchingMyMatches: false,\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = <SetOfferFilterAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = <SetMatchingFiltersAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, fetchingProfiles: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, fetchingProfiles: false, canFetchMore: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {profiles, canFetchMore} = <FetchProfilesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.concat(profiles),\r\n                fetchingProfiles: false,\r\n                fetchingPage: state.fetchingPage + 1,\r\n                canFetchMore,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: [],\r\n                fetchingProfiles: false,\r\n                fetchingPage: 1,\r\n                canFetchMore: true,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, fetchingMyMatches: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {...state, fetchingMyMatches: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {profiles} = <FetchMyMatchesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                myMatches: profiles,\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <LikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <DislikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = <BlockProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef} from \"@react-navigation/native\";\r\nimport {NavigatorRoute} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Store a ref to several navigators\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function rootNavigate(route: NavigatorRoute): void {\r\n    rootNavigationRef.current?.navigate(route as string);\r\n}\r\n\r\nexport function attemptRedirectToApp(path: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS == \"web\") {\r\n        const link = `${APP_SCHEME}://${path}`;\r\n        window.location.replace(link);\r\n\r\n        console.log(`window.location.replace(${link})`);\r\n        // TODO fallback after a timeout ?\r\n        setTimeout(fallback, 5000);\r\n    } else fallback();\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {\r\n    AppState,\r\n    AUTH_ACTION_TYPES,\r\n    LikeProfileSuccessAction,\r\n    LogInSuccessAction,\r\n    MATCHING_ACTION_TYPES,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (/*store: MiddlewareAPI<Dispatch, AppState>*/) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    // TEMP action printing\r\n    console.log(action.type);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            rootNavigate(user.onboarded ? \"MainScreen\" : \"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            // Let the user click\r\n            // attemptRedirectToApp(\"login\", \"TabSignin\");\r\n            break;\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {matchStatus} = action as LikeProfileSuccessAction;\r\n            if (matchStatus == \"matched\") rootNavigate(\"MatchSuccessScreen\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {TokenDto} from \"../api/dto\";\r\nimport {AppState, AUTH_ACTION_TYPES, LogInSuccessAction} from \"./types\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nexport type CredentialsStorageObject = {\r\n    email: string;\r\n    token: TokenDto;\r\n};\r\n\r\n/**\r\n * Override auth information in secure storage. Data will be stored if expo-secure-store is available on the device.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nfunction storeAuthInformation(email: string, token: TokenDto): void {\r\n    // Use expo-secure-store to securely store sensitive data\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) {\r\n            const toStore: CredentialsStorageObject = {email, token};\r\n            SecureStore.setItemAsync(\"auth\", JSON.stringify(toStore));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from the secure storage.\r\n */\r\nfunction discardAuthInformation(): void {\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) SecureStore.deleteItemAsync(\"auth\");\r\n    });\r\n}\r\n\r\n/**\r\n * Read auth information from secure storage, if available on the device.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const available = await SecureStore.isAvailableAsync();\r\n    if (available) {\r\n        const raw = await SecureStore.getItemAsync(\"auth\");\r\n        return raw ? JSON.parse(raw) : false;\r\n    } else return false;\r\n}\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n            // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n            if (!usingCachedCredentials) storeAuthInformation(user.email, token);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {\r\n    AppState,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./types\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n */\r\nfunction storeStaticData<T>(key: string, data: T) {\r\n    console.log(`Updating cache entry for '${key}'.`);\r\n\r\n    // Store the data along with the date\r\n    const storageObject = {\r\n        updatedAt: new Date().toJSON(),\r\n        data,\r\n    };\r\n\r\n    console.log(\"date\", storageObject.updatedAt);\r\n\r\n    AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n            if (!fromCache) storeStaticData(\"interests\", interests);\r\n            break;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n            if (!fromCache) storeStaticData(\"offers\", offers);\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(thunk, authStorageMiddleware, staticStorageMiddleware, navigationMiddleware);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {TokenDto} from \"./dto\";\r\n\r\nexport type Primitive = string | number | boolean | Primitive[] | undefined;\r\nexport type URLParams = {[key: string]: Primitive};\r\nexport type URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\nexport type RequestResponse = {success: boolean; codes: string[]} & {[key: string]: unknown};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    auth = false,\r\n    verbose = false,\r\n    authToken: TokenDto | undefined = undefined,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (auth) {\r\n        const token = authToken || store.getState().auth.token;\r\n        if (token) headers.Authorization = `Bearer ${token.accessToken}`;\r\n        else {\r\n            console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {success: false, codes: [\"error.no-auth\"]};\r\n        }\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n\r\n    try {\r\n        if (verbose) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        const response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        const json = await response.json();\r\n        if (verbose) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        console.error(\r\n            `An unexpected error occured with a request to ${endpoint}. ` +\r\n                `Method = ${method}, auth = ${auth}, params=${JSON.stringify(params)}, body=${JSON.stringify(body)}`,\r\n        );\r\n        console.error(error);\r\n        return {success: false, codes: [\"error.unknown\"]};\r\n    }\r\n}\r\n","import {\r\n    AppThunk,\r\n    CreateProfileSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n    LoadProfileOffersSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n    FetchUserSuccessAction,\r\n    SetAvatarSuccessAction,\r\n    SetAvatarFailureAction,\r\n} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    ResponseUserDto,\r\n    SignedUrlResponseDto,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {convertDtoToUser, convertPartialProfileToCreateDto} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {readCachedStaticData} from \"../static-storage-middleware\";\r\n\r\nexport const setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch) => {\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, true);\r\n    if (response.success) {\r\n        dispatch(setProfileFieldsSuccess(fields));\r\n    } else {\r\n        console.log(\"error in setProfileFields\");\r\n    }\r\n};\r\n\r\nexport const createProfileSuccess = (): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, true);\r\n    if (response.success) dispatch(createProfileSuccess());\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n\r\n    if (fromCache) {\r\n        // If we already have the data in cache, we send the request in case an update is needed, but we're not awaiting for it\r\n        requestBackend(\"offers\", \"GET\", {updatedAt: fromCache.updatedAt}, false, true).then((response) => {\r\n            const offers = response.data as OfferDto[];\r\n            const cached = offers.length == 0;\r\n            if (response.success) dispatch(loadProfileOffersSuccess(cached ? fromCache.data : offers, cached));\r\n        });\r\n    } else {\r\n        const response = await requestBackend(\"offers\", \"GET\");\r\n        if (response.success) dispatch(loadProfileOffersSuccess(response.data as OfferDto[]));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n\r\n    if (fromCache) {\r\n        // If we already have the data in cache, we send the request in case an update is needed, but we're not awaiting for it\r\n        requestBackend(\"interests\", \"GET\", {updatedAt: fromCache.updatedAt}, {}, false, true).then((response) => {\r\n            const interests = response.data as InterestDto[];\r\n            const cached = interests.length == 0;\r\n            if (response.success) dispatch(loadProfileInterestsSuccess(cached ? fromCache.data : interests, cached));\r\n        });\r\n    } else {\r\n        const response = await requestBackend(\"interests\", \"GET\");\r\n        if (response.success) dispatch(loadProfileInterestsSuccess(response.data as InterestDto[]));\r\n    }\r\n};\r\n\r\nexport const loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, true);\r\n    if (response.success) {\r\n        const dto = response.data as ResponseUserDto;\r\n        dispatch(fetchUserSuccess(convertDtoToUser(dto)));\r\n    }\r\n};\r\n\r\nexport const fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nexport const setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, true);\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (response.success) {\r\n        const dto = response.data as SignedUrlResponseDto;\r\n        const fileName = dto.fileName;\r\n        const url = dto.s3Url;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(url, {\r\n                method: \"PUT\",\r\n                body: imageBlob,\r\n            });\r\n\r\n            // Submit the file name to the server\r\n            const response2 = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, true);\r\n\r\n            if (response2.success) {\r\n                const {avatar} = response2.data as AvatarSuccessfulUpdatedDto;\r\n                dispatch(setAvatarSuccess(avatar));\r\n            } else fail();\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            fail();\r\n        }\r\n    } else fail();\r\n};\r\n","import {\r\n    LogOutAction,\r\n    LogInBeginAction,\r\n    LogInSuccessAction,\r\n    LogInFailureAction,\r\n    AppThunk,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    RegisterFailureAction,\r\n    ValidateAccountSuccessAction,\r\n    ValidateAccountFailureAction,\r\n    OnboardingState,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport store from \"../store\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {readCachedCredentials} from \"../auth-storage-middleware\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\n\r\n// Register actions\r\n\r\nexport const registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): AppThunk => async (dispatch) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = store.getState().settings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.success) dispatch(registerSuccess(response.data as User));\r\n    else dispatch(registerFailure(response.codes));\r\n};\r\n\r\nexport const registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const registerFailure = (errors: string[]): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n    errors,\r\n});\r\n\r\n// Log in actions\r\n\r\nexport const loginBegin = (email: string, password: string): LogInBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\nexport const loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nexport const loginFailure = (errors: string[]): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n    errors,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk => async (dispatch) => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, true, false, token);\r\n\r\n        if (response.success) {\r\n            const user: User = convertDtoToUser(response.data as ResponseUserDto);\r\n            dispatch(loginSuccess(token, user, true));\r\n        } else {\r\n            // e.g. token is invalid\r\n            dispatch(loginFailure([]));\r\n        }\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string): AppThunk => async (dispatch) => {\r\n    dispatch(loginBegin(email, password));\r\n\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password}, false);\r\n    if (response.success) {\r\n        const payload = response.data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, payload.user, false));\r\n    } else dispatch(loginFailure(response.codes));\r\n};\r\n\r\nexport const logout = (): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.success) {\r\n        const {email} = response.data as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure(response.codes));\r\n    }\r\n};\r\n\r\nexport const validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nexport const validateAccountFailure = (errors: string[]): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n    errors,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch) => {\r\n    const email = `test${Math.round(Math.random() * 1e6)}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = store.getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"student\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin410891\",\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"talk-a-bit\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [],\r\n                degree: \"m2\",\r\n            }),\r\n        );\r\n    }\r\n};\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst tintColorLight = \"#2f95dc\";\r\nconst tintColorDark = \"#fff\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fafafa\",\r\n        cardBackground: \"#ffffff\", //\"#f7f7f7\",\r\n        accent: \"#003da5\", // Pantone 293c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#009ace\", // Pantone 801c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorLight,\r\n        error: \"#ff4a6a\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorLight,\r\n        componentBorder: \"#eee\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#333\",\r\n        cardBackground: \"#3d3d3d\",\r\n        accent: \"#009ace\", // Pantone 801c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\", // Pantone 293c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorDark,\r\n        error: \"#f9819d\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorDark,\r\n        componentBorder: \"#555\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStyles<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"pageNotFound\")}</Text>\r\n                <Text style={styles.subtitle}>{i18n.t(\"pageDoesntExist\")}</Text>\r\n                <TouchableOpacity onPress={() => navigation.replace(\"LoginScreen\")} style={styles.link}>\r\n                    <Text style={styles.linkText}>{i18n.t(\"goHome\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 64,\r\n            fontWeight: \"100\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginTop: 50,\r\n        },\r\n        link: {\r\n            paddingVertical: 10,\r\n        },\r\n        linkText: {\r\n            fontSize: 14,\r\n            color: \"#2e78b7\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"TabSignin\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\n\r\n// Map props from state\r\nconst mapStateToProps = (state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To validate your account, click the link in the email we just sent to\r\n                    </Text>\r\n                    <Text style={styles.email}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={{marginVertical: 30, textAlign: \"center\", fontSize: 16, color: \"blue\"}}>\r\n                                debug: click here\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        email: {\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginScreen: {\r\n                screens: {\r\n                    TabSignin: {\r\n                        screens: {\r\n                            LoginForm: \"login\",\r\n                            ForgotPassword: \"forgot-password\",\r\n                        },\r\n                    },\r\n                    TabSignup: \"signup\",\r\n                },\r\n            },\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MAtchFilteringScren: \"match/filters\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            ChatScreen: \"messaging/talk\",\r\n                            MessagingScreen: \"messaging\",\r\n                        },\r\n                    },\r\n                    TabProfile: {\r\n                        screens: {\r\n                            TabProfileScreen: \"profile\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ChangePassword: \"reset-password\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingPersonalInfoScreen: \"onboarding/info\",\r\n                    OnboardingLanguageScreen: \"onboarding/language\",\r\n                    OnboardingInterestsScreen: \"onboarding/interests\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingTosScreen: \"onboarding/tos\",\r\n                    OnboardingPrivacyScreen: \"onboarding/privacy\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            MatchSuccessScreen: \"match/success\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport {MaterialTopTabBarProps} from \"@react-navigation/material-top-tabs\";\r\nimport {View, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\ntype LoginTabBarProps = ThemeProps & MaterialTopTabBarProps;\r\n\r\nclass TabBarComponent extends React.Component<LoginTabBarProps> {\r\n    onPress(route: {name: string; key: string}, index: number): void {\r\n        const {navigation} = this.props;\r\n        const isFocused = index == this.props.state.index;\r\n\r\n        const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n        });\r\n\r\n        if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n        }\r\n    }\r\n\r\n    onLongPress(route: {name: string; key: string}): void {\r\n        const {navigation} = this.props;\r\n        navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {state, descriptors, position, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        // <Image source={waveImage} resizeMode=\"contain\" style={styles.waveImageStyle} />\r\n        return (\r\n            <View style={styles.tabBarWrapper}>\r\n                {/*<Text style={styles.appTitle}>SEA-EU Around</Text>*/}\r\n                <View style={styles.tabBar}>\r\n                    {state.routes.map((route, index) => {\r\n                        const {options} = descriptors[route.key];\r\n                        const label = i18n.t(route.name.toLowerCase());\r\n                        const isFocused = state.index === index;\r\n\r\n                        const inputRange = state.routes.map((_, i) => i);\r\n                        const opacity = Animated.interpolate(position, {\r\n                            inputRange,\r\n                            outputRange: inputRange.map((i) => (i === index ? 0.15 : 0)),\r\n                        });\r\n\r\n                        return (\r\n                            <View key={index} style={styles.tabButton}>\r\n                                <Animated.View style={[styles.tabButtonBg, {opacity}]} />\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                                    testID={options.tabBarTestID}\r\n                                    onPress={() => this.onPress(route, index)}\r\n                                    onLongPress={() => this.onLongPress(route)}\r\n                                >\r\n                                    <Text style={[styles.tabButtonText, isFocused ? styles.tabButtonTextFocused : {}]}>\r\n                                        {label}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        tabBarWrapper: {\r\n            height: \"30%\",\r\n            backgroundColor: theme.accent,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 6,\r\n            },\r\n            shadowOpacity: 0.37,\r\n            shadowRadius: 7.49,\r\n            elevation: 12,\r\n        },\r\n        tabBar: {\r\n            width: \"100%\",\r\n            maxWidth: 400,\r\n            height: 40,\r\n            flexDirection: \"row\",\r\n        },\r\n        tabButton: {\r\n            flex: 1,\r\n        },\r\n        tabButtonBg: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        tabButtonText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            letterSpacing: 1,\r\n            textTransform: \"capitalize\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n        },\r\n        tabButtonTextFocused: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        waveImageStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            padding: 0,\r\n            margin: 0,\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        },\r\n        /*appTitle: {\r\n            fontSize: 16,\r\n            color: theme.textInverted,\r\n            letterSpacing: 2,\r\n            marginBottom: 70,\r\n            ...styleTextThin,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default withTheme(TabBarComponent);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? i18n.t(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {TextStyle, StyleProp, View, TextInputProps} from \"react-native\";\r\nimport {TextInput} from \"react-native-gesture-handler\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    style?: StyleProp<TextStyle>;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n} & Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nexport class ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            style,\r\n            wrapperStyle,\r\n            error,\r\n            value,\r\n            label,\r\n            untouched,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <View style={[wrapperStyle, {width: \"100%\", flexDirection: \"column\", position: \"relative\"}]}>\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <TextInput\r\n                    style={[\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                    onBlur={(e) => {\r\n                        if (onBlur) onBlur(e);\r\n                        this.setState({focused: false});\r\n                    }}\r\n                    onFocus={(e) => {\r\n                        if (onFocus) onFocus(e);\r\n                        this.setState({focused: true});\r\n                    }}\r\n                    value={value}\r\n                    {...otherProps}\r\n                />\r\n                {showErrorText && !untouched && error && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ValidatedTextInput, ValidatedTextInputProps} from \"./ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n} & ValidatedTextInputProps;\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        handleChange: (): void => {},\r\n        handleBlur: (): void => {},\r\n        /* eslint-ensable @typescript-eslint/no-empty-function */\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {field, touched, handleChange, handleBlur, error, onBlur, onChangeText, ...otherProps} = this.props;\r\n        return (\r\n            <ValidatedTextInput\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(this.props.field)(e);\r\n                }}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, Platform, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormTextInputProps} from \"../components/FormTextInput\";\r\nimport {FormCheckBoxProps} from \"../components/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const formStyle = StyleSheet.create({\r\n    inputErrorText: {\r\n        fontSize: 12,\r\n        marginTop: 2,\r\n        marginBottom: -12, // prevents an offset from appearing when there is an error\r\n    },\r\n    inputRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    actionRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        marginTop: 25,\r\n    },\r\n    buttonMajor: {\r\n        justifyContent: \"center\",\r\n        height: 60,\r\n        borderRadius: 5,\r\n\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    buttonMajorText: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n        letterSpacing: 1,\r\n        textTransform: \"uppercase\",\r\n    },\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): Partial<FormTextInputProps> {\r\n    const focusedStyle = Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            paddingHorizontal: 20,\r\n            borderRadius: 5,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        placeholderTextColor: \"#222\",\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n\r\nexport function getLoginCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n\r\nexport const loginTabsStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"70%\",\r\n            maxWidth: 400,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"column\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight},\r\n        versionDisclaimerContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        versionDisclaimerIcon: {color: theme.error},\r\n        debugContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        debugTitle: {\r\n            fontWeight: \"bold\",\r\n            width: 75,\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            letterSpacing: 0.8,\r\n        },\r\n        debugButton: {\r\n            padding: 6,\r\n        },\r\n        debugButtonText: {\r\n            fontSize: 16,\r\n            color: theme.error,\r\n        },\r\n        toggleThemeContainer: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        toggleThemeButton: {\r\n            padding: 10,\r\n        },\r\n        toggleThemeIcon: {\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): Partial<FormTextInputProps> {\r\n    const focusedStyle =\r\n        Platform.OS === \"web\"\r\n            ? ({\r\n                  backgroundColor: \"transparent\",\r\n                  outline: \"none\",\r\n              } as TextStyle)\r\n            : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport {Text, View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error: string;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]} {...otherProps}>\r\n                <Text style={[styles.text]}>{error}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginVertical: 10,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, Alert, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\n\r\ntype LoginFormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst mapStateToProps = (state: AppState) => ({\r\n    connecting: state.auth.connecting,\r\n    remoteErrors: state.auth.loginErrors,\r\n    validatedEmail: state.auth.validatedEmail,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<LoginFormState> & {navigation: StackNavigationProp<TabLoginSigninScreens, \"LoginForm\">};\r\n\r\nclass LoginFormComponent extends React.Component<LoginFormProps> {\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: LoginFormState) {\r\n        console.log(\"Login form submitted\", values);\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password));\r\n        if (this.props.onSuccessfulSubmit !== undefined) this.props.onSuccessfulSubmit(values);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation, connecting, remoteErrors} = this.props;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{email: \"\", password: \"\"} as LoginFormState}\r\n                validationSchema={LoginFormSchema}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: LoginFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<LoginFormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        setFieldValue,\r\n                    } = formikProps;\r\n                    const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                    this.setFieldValue = setFieldValue;\r\n\r\n                    return (\r\n                        <>\r\n                            <FormTextInput\r\n                                field=\"email\"\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                error={errors.email}\r\n                                value={values.email}\r\n                                touched={touched.email}\r\n                                keyboardType=\"email-address\"\r\n                                autoCompleteType=\"email\"\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                field=\"password\"\r\n                                placeholder={i18n.t(\"password\")}\r\n                                error={errors.password}\r\n                                value={values.password}\r\n                                touched={touched.password}\r\n                                secureTextEntry={true}\r\n                                autoCompleteType=\"password\"\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <View style={formStyle.actionRow}>\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={i18n.t(\"login\")}\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={[styles.loginButton]}\r\n                                    disabled={connecting}\r\n                                >\r\n                                    {!connecting && <Text style={formStyle.buttonMajorText}>{i18n.t(\"login\")}</Text>}\r\n                                    {connecting && <ActivityIndicator size=\"large\" color={theme.accentSecondary} />}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <FormError error={remoteErrors.length > 0 ? remoteErrors[0] : \"\"} />\r\n\r\n                            <TouchableOpacity\r\n                                accessibilityRole=\"link\"\r\n                                accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                onPress={() => {\r\n                                    // TODO re-enable forgot password\r\n                                    // navigation.navigate(\"ForgotPassword\");\r\n                                    Alert.alert(\"Temporarily disabled.\");\r\n                                }}\r\n                                style={styles.forgotPwdLink}\r\n                            >\r\n                                <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        loginButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        forgotPwdLink: {\r\n            marginTop: 40,\r\n            padding: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport const LoginForm = reduxConnector(withTheme(LoginFormComponent));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {LoginTabNavigatorScreens} from \"../../navigation/types\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\ntype ForgotPasswordFormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {\r\n    navigation: StackNavigationProp<LoginTabNavigatorScreens, \"ForgotPassword\">;\r\n};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps> {\r\n    // Form submission handler\r\n    submitForm({email}: ForgotPasswordFormState) {\r\n        console.log(\"Reset Password form submitted\", email);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as ForgotPasswordFormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={this.submitForm}\r\n                >\r\n                    {(formikCfg: FormikProps<ForgotPasswordFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    keyboardType=\"email-address\"\r\n                                    autoCompleteType=\"email\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => navigation.goBack()}\r\n                                        style={[formStyle.buttonMajor, styles.buttonCancel]}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"cancel\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"send\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[formStyle.buttonMajor, styles.buttonSend]}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"send\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        buttonCancel: {\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView, Text} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {LoginForm} from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {debugConnect} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport store from \"../state/store\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION, DEBUG_MODE} from \"../constants/config\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {toggleTheme} from \"../state/settings/actions\";\r\nimport {TabLoginSigninScreens} from \"../navigation/types\";\r\n\r\ntype TabLoginScreenProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"LoginForm\">;\r\n\r\nclass LoginTabComponent extends React.Component<TabLoginScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <LoginForm navigation={navigation}></LoginForm>\r\n                    {DEBUG_MODE && (\r\n                        <View style={styles.debugContainer}>\r\n                            <Text style={styles.debugTitle}>[DEBUG]</Text>\r\n                            <TouchableOpacity style={styles.debugButton} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                                <Text style={styles.debugButtonText}>access</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => {\r\n                                    (store.dispatch as MyThunkDispatch)(debugConnect());\r\n                                }}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>register</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => rootNavigate(\"OnboardingScreen\")}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>on-boarding</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                <View style={styles.versionInfoContainer}>\r\n                    <Text style={styles.versionText}>\r\n                        <Text style={{fontWeight: \"bold\"}}>Version:</Text>\r\n                        <Text> {APP_VERSION}</Text>\r\n                    </Text>\r\n                    <View style={styles.versionDisclaimerContainer}>\r\n                        <MaterialIcons style={styles.versionDisclaimerIcon} name=\"warning\" size={16}></MaterialIcons>\r\n                        <Text style={styles.versionText}> This is an alpha version</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.toggleThemeContainer}>\r\n                    <TouchableOpacity style={styles.toggleThemeButton} onPress={() => store.dispatch(toggleTheme())}>\r\n                        <MaterialCommunityIcons style={styles.toggleThemeIcon} name=\"theme-light-dark\" color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\ntype TabForgotPasswordProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"ForgotPassword\">;\r\n\r\nclass ForgotPasswordTabComponent extends React.Component<TabForgotPasswordProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ForgotPasswordForm navigation={navigation}></ForgotPasswordForm>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const SubTabLogin = withTheme(LoginTabComponent);\r\nexport const SubTabForgotPassword = withTheme(ForgotPasswordTabComponent);\r\n","import {SetLocaleAction, SetThemeAction, SETTINGS_ACTION_TYPES, ToggleThemeAction} from \"../types\";\r\nimport {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport const setTheme = (theme: ThemeKey): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_THEME, locale} as SetLocaleAction;\r\n};\r\n","import * as React from \"react\";\r\nimport {Alert, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type SignupFormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): SignupFormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Map props from the store\r\nconst mapStateToProps = (state: AppState) => ({\r\n    registerFailure: state.auth.registerFailure,\r\n    registerErrors: state.auth.registerErrors,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<SignupFormState> & ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass SignupForm extends React.Component<SignupFormProps> {\r\n    submit(values: SignupFormState) {\r\n        console.log(\"Signup form submitted\", values);\r\n        (this.props.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password));\r\n        if (this.props.onSuccessfulSubmit !== undefined) this.props.onSuccessfulSubmit(values);\r\n    }\r\n\r\n    componentDidUpdate(/*prevProps: SignupFormProps*/) {\r\n        if (this.props.registerFailure) {\r\n            /*const errorTexts = this.props.registerErrors.map((err: string, i: number) => (\r\n                <Text key={i} style={[formStyle.errorText, {color: this.props.theme.error}]}>\r\n                    {err}\r\n                </Text>\r\n            ));*/\r\n\r\n            Alert.alert(\"Unable to register\", this.props.registerErrors[0], [\r\n                {text: \"OK\", onPress: () => console.log(\"OK Pressed\")},\r\n            ]);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values: SignupFormState) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<SignupFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    keyboardType=\"email-address\"\r\n                                    autoCompleteType=\"email\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"createAccount\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={styles.createAccountButton}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"createAccount\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SignupForm));\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport {ScrollView} from \"react-native-gesture-handler\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\ntype SignupFormProps = ThemeProps;\r\n\r\nclass SignupTabComponent extends React.Component<SignupFormProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <ScrollView contentContainerStyle={{paddingVertical: 50, backgroundColor: theme.background}}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.formWrapper}>\r\n                        <SignupForm />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(SignupTabComponent);\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport LoginTabBar from \"../components/LoginTabBar\";\r\nimport {SubTabLogin, SubTabForgotPassword} from \"../screens/TabLoginScreen\";\r\nimport TabSignupFormScreen from \"../screens/TabSignupFormScreen\";\r\nimport {TabLoginRoot, TabLoginSigninScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst SigninStack = createStackNavigator<TabLoginSigninScreens>();\r\nconst Tab = createMaterialTopTabNavigator<TabLoginRoot>();\r\n\r\n/*\r\nfunction SigninTabNavigator(): JSX.Element {\r\n    return (\r\n        <SigninStack.Navigator initialRouteName=\"LoginForm\">\r\n            <SigninStack.Screen name=\"LoginForm\" component={SubTabLogin} options={{headerShown: false}} />\r\n            <SigninStack.Screen name=\"ForgotPassword\" component={SubTabForgotPassword} options={{headerShown: false}} />\r\n        </SigninStack.Navigator>\r\n    );\r\n}\r\n\r\nfunction SignupTabNavigator(): JSX.Element {\r\n    return (\r\n        <SignupTabStack.Navigator>\r\n            <SignupTabStack.Screen name=\"SignupForm\" component={TabSignupFormScreen} options={{headerShown: false}} />\r\n        </SignupTabStack.Navigator>\r\n    );\r\n}*/\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator initialRouteName=\"TabSignin\" tabBar={(props) => <LoginTabBar {...props} />}>\r\n        <Tab.Screen name=\"TabSignin\">\r\n            {() => (\r\n                <SigninStack.Navigator initialRouteName=\"LoginForm\">\r\n                    <SigninStack.Screen\r\n                        name=\"LoginForm\"\r\n                        component={SubTabLogin}\r\n                        options={{headerShown: false, title: screenTitle(\"LoginForm\")}}\r\n                    />\r\n                    <SigninStack.Screen\r\n                        name=\"ForgotPassword\"\r\n                        component={SubTabForgotPassword}\r\n                        options={{headerShown: false, title: screenTitle(\"ForgotPassword\")}}\r\n                    />\r\n                </SigninStack.Navigator>\r\n            )}\r\n        </Tab.Screen>\r\n        <Tab.Screen name=\"TabSignup\" component={TabSignupFormScreen} options={{title: screenTitle(\"TabSignup\")}} />\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                <Text style={styles.title}>Under construction</Text>\r\n                <View style={styles.separator} />\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        dropdownWrapper: {\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 5,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: theme.textInverted,\r\n        },\r\n        openButton: {\r\n            width: \"100%\",\r\n            height: 30,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 20,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderRadius: 2,\r\n            backgroundColor: theme.background,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        openButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        selectedItemView: {\r\n            width: \"100%\",\r\n            height: 20,\r\n            marginTop: 5,\r\n            fontSize: 12,\r\n            overflow: \"hidden\",\r\n        },\r\n        selectedItemText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        if (apply && this.props.onChange) this.props.onChange(this.state.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                <View /*style={{height: 0, overflow: \"hidden\"}}*/>\r\n                    {this.state.items.get(locale) && (\r\n                        <SectionedMultiSelect\r\n                            ref={this.selectRef}\r\n                            items={this.state.items.get(locale)}\r\n                            onSelectedItemsChange={(items) =>\r\n                                this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                            }\r\n                            selectedItems={this.state.tempSelected}\r\n                            // Listeners\r\n                            onCancel={() => this.close(false)}\r\n                            onConfirm={() => this.close(true)}\r\n                            // Technical\r\n                            // Dirty work-around to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                            IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                            uniqueKey=\"id\"\r\n                            displayKey=\"label\"\r\n                            subKey=\"children\"\r\n                            // Customization\r\n                            showDropDowns={true}\r\n                            readOnlyHeadings={true}\r\n                            showChips={false}\r\n                            showCancelButton={true}\r\n                            selectedIconOnLeft={true}\r\n                            animateDropDowns={false}\r\n                            hideSelect={true}\r\n                            noResultsComponent={\r\n                                <Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>\r\n                            }\r\n                            searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                            // Localization\r\n                            confirmText={i18n.t(\"apply\")}\r\n                            searchPlaceholderText={searchablePlaceholder}\r\n                            // Styling\r\n                            colors={{\r\n                                primary: theme.accent,\r\n                                cancel: theme.error,\r\n                                success: theme.okay,\r\n                                text: theme.text,\r\n                                subText: theme.textLight,\r\n                                searchPlaceholderTextColor: theme.textLight,\r\n                                selectToggleTextColor: theme.error,\r\n                                itemBackground: theme.cardBackground,\r\n                                subItemBackground: theme.cardBackground,\r\n                            }}\r\n                            styles={multiSelectStyles}\r\n                        />\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {backgroundColor: theme.cardBackground},\r\n        scrollView: {paddingVertical: 10},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            fontFamily: \"sans-serif-light\",\r\n            fontWeight: \"normal\",\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {MultiPickerProps} from \"./MultiPicker\";\r\nimport SectionedMultiPicker from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"educationFieldsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"educationFieldsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, style} = this.props;\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                containerStyle={[{height: 35, marginLeft: 0, marginRight: 0}, style]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DegreeToggle;\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES} from \"../constants/profile-constants\";\r\nimport {Picker} from \"react-native\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRole: StaffRole | null;\r\n    onSelect?: (staffRole: StaffRole) => void;\r\n};\r\n\r\nexport default function StaffRoleToggle(props: StaffRoleToggleProps): JSX.Element {\r\n    const {staffRole} = props;\r\n\r\n    const onSelect = (value: string) => {\r\n        if (props.onSelect) props.onSelect(value as StaffRole);\r\n    };\r\n\r\n    const pickerItems = STAFF_ROLES.map((r) => <Picker.Item key={r} label={i18n.t(`staffRoles.${r}`)} value={r} />);\r\n\r\n    return (\r\n        <View style={{width: \"100%\"}}>\r\n            <Picker selectedValue={staffRole} onValueChange={onSelect}>\r\n                {pickerItems}\r\n            </Picker>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n};\r\n\r\nexport function GenderToggle(props: GenderToggleProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender} = props;\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            containerStyle={{height: 35, marginLeft: 0, marginRight: 0}}\r\n        />\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport {Platform} from \"react-native\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateTimePicker, {Event} from \"@react-native-community/datetimepicker\";\r\n\r\n// Component props\r\nexport type BirthDatePickerProps = {\r\n    date?: Date;\r\n    open: boolean;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type BirthDatePickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass BirthDatePicker extends React.Component<BirthDatePickerProps, BirthDatePickerState> {\r\n    constructor(props: BirthDatePickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: BirthDatePickerProps): void {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    onChange(date: Date | undefined): void {\r\n        if (Platform.OS != \"ios\") this.hideModal();\r\n        if (date && this.props.onSelect) this.props.onSelect(date);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date} = this.props;\r\n        const {open} = this.state;\r\n\r\n        const maxDate = new Date(Date.now());\r\n        maxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\n        return (\r\n            <>\r\n                {open && (\r\n                    <DateTimePicker\r\n                        minimumDate={new Date(1900, 0, 0)}\r\n                        maximumDate={maxDate}\r\n                        value={date || maxDate}\r\n                        onChange={(e: Event, date: Date | undefined) => this.onChange(date)}\r\n                        mode=\"date\"\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BirthDatePicker;\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_QUALITY} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect: [1, 1],\r\n                    quality: AVATAR_QUALITY,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return <MaterialIcons onPress={() => this.showPicker()} style={styles.buttonStyle} name=\"edit\" />;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        buttonStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n            fontSize: 20,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Modal, Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport {formStyle} from \"../../styles/forms\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Schema, ValidationError} from \"yup\";\r\nimport {Theme} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from the store\r\nconst mapStateToProps = (state: AppState) => ({\r\n    theme: themes[state.settings.theme],\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype FormRowProps<T> = ConnectedProps<typeof reduxConnector> & {\r\n    label: string;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T) => void) => JSX.Element;\r\n    validator?: Schema<T>;\r\n    initialValue: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype FormRowState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T;\r\n};\r\n\r\nclass FormRowComponent<T> extends React.Component<FormRowProps<T>, FormRowState<T>> {\r\n    constructor(props: FormRowProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: this.props.initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T): void {\r\n        this.setState({...this.state, value}, () => {\r\n            this.validate();\r\n        });\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            this.setModal(false);\r\n            if (this.props.apply) this.props.apply(this.state.value);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (): JSX.Element => {\r\n        const {label, theme, renderInput} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity style={styles.modalTouchable} onPress={() => this.setModal(false)} activeOpacity={1}>\r\n                <TouchableOpacity activeOpacity={1} style={styles.modalWrapper}>\r\n                    <Text style={styles.modalLabel}>{label}</Text>\r\n                    {renderInput ? renderInput(value, error, (value: T) => this.onChange(value)) : <></>}\r\n                    <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                    <View style={styles.modalActions}>\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityLabel=\"CANCEL\"\r\n                            onPress={() => this.setModal(false)}\r\n                            style={styles.modalCancel}\r\n                        >\r\n                            <Text style={styles.modalActionText}>{i18n.t(\"cancel\")}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityLabel=\"OK\"\r\n                            onPress={() => this.apply()}\r\n                            style={styles.modalOk}\r\n                        >\r\n                            <Text style={styles.modalActionText}>{i18n.t(\"apply\")}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme, label, display, overrideModal, noModal, style, locked, ...otherProps} = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={[styles.cardWrapper, style]}\r\n                    activeOpacity={0.9}\r\n                    disabled={noModal}\r\n                    onPress={() => {\r\n                        if (!locked) this.setModal(true);\r\n                    }}\r\n                    {...otherProps}\r\n                >\r\n                    <View style={styles.cardContent}>\r\n                        <Text style={styles.cardLabel}>{label}</Text>\r\n                        <View>\r\n                            {display !== undefined && display}\r\n                            {display === undefined && this.props.children}\r\n                        </View>\r\n                    </View>\r\n                    {!noModal && (\r\n                        <View style={styles.rightIconContainer}>\r\n                            <MaterialIcons\r\n                                name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                size={locked ? 30 : 40}\r\n                                style={styles.rightIcon}\r\n                            ></MaterialIcons>\r\n                        </View>\r\n                    )}\r\n                </TouchableOpacity>\r\n                {!noModal && (\r\n                    <React.Fragment>\r\n                        {overrideModal !== undefined && modalOpen && overrideModal(() => this.setModal(false))}\r\n                        {overrideModal === undefined && modalOpen && (\r\n                            <Modal transparent={true} visible={modalOpen} animationType=\"slide\">\r\n                                {this.renderModalContent()}\r\n                            </Modal>\r\n                        )}\r\n                    </React.Fragment>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalTouchable: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        modalWrapper: {\r\n            width: \"80%\",\r\n            maxWidth: 500,\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            borderColor: \"#ccc\",\r\n            borderWidth: 0.5,\r\n            borderStyle: \"solid\",\r\n        },\r\n        modalErrorText: {\r\n            fontSize: 12,\r\n            color: theme.error,\r\n        },\r\n        modalLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1.5,\r\n            fontSize: 13,\r\n            marginBottom: 12,\r\n        },\r\n        modalActions: {\r\n            ...formStyle.actionRow,\r\n            height: 50,\r\n            marginTop: 20,\r\n        },\r\n        modalCancel: {\r\n            ...formStyle.buttonMajor,\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n            height: 50,\r\n        },\r\n        modalOk: {\r\n            ...formStyle.buttonMajor,\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n            height: 50,\r\n        },\r\n        modalActionText: {\r\n            ...formStyle.buttonMajorText,\r\n            lineHeight: 50,\r\n        },\r\n        cardWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            elevation: 1,\r\n            justifyContent: \"space-evenly\",\r\n            paddingVertical: 15,\r\n            minHeight: 80,\r\n        },\r\n        cardContent: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            //justifyContent: \"space-evenly\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        cardLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            marginBottom: 10,\r\n        },\r\n        rightIconContainer: {justifyContent: \"center\"},\r\n        rightIcon: {color: theme.textLight},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(FormRowComponent);\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        const paddedDay = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const formattedDate = `${paddedDay} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {Country, CountryCode, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (this.props.onSelect) this.props.onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n            ></CountryPicker>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag countryCode={university.country} flagSize={18} withEmoji={false}></Flag>\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {Overlay, withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.tempSelected = this.props.selected || [];\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.tempSelected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                {this.state.open && (\r\n                    <Overlay\r\n                        overlayStyle={[styles.overlay, {height: 150 + items.length * 40}]}\r\n                        isVisible={this.state.open}\r\n                        onRequestClose={() => this.close()}\r\n                        onBackdropPress={() => this.close()}\r\n                    >\r\n                        <>\r\n                            <View\r\n                                style={styles.dropdownWrapper}\r\n                                onLayout={(e: LayoutChangeEvent) => {\r\n                                    this.setState({...this.state, dropdownWrapperHeight: e.nativeEvent.layout.height});\r\n                                }}\r\n                            >\r\n                                <DropDownPicker\r\n                                    items={items}\r\n                                    multiple={true}\r\n                                    searchable={true}\r\n                                    defaultValue={selected}\r\n                                    onChangeItem={(values: string[]) => {\r\n                                        this.tempSelected = values;\r\n                                    }}\r\n                                    placeholder={placeholder}\r\n                                    multipleText={multipleText}\r\n                                    searchablePlaceholder={searchablePlaceholder}\r\n                                    scrollViewProps={{keyboardShouldPersistTaps: \"always\"}} // ensures items are clickable even when the keyboard is open\r\n                                    isVisible={true}\r\n                                    showArrow={false}\r\n                                    dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                    // Style props\r\n                                    selectedLabelStyle={{display: \"none\"}}\r\n                                    style={styles.dropdownStyle}\r\n                                    itemStyle={styles.dropdownItemStyle}\r\n                                    activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                    activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                    labelStyle={styles.dropdownLabelStyle}\r\n                                />\r\n                            </View>\r\n                            <View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                    </Overlay>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n};\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n\r\n        console.log(\"Interests : \" + this.props.allInterests.length);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Degree, Gender, LanguageLevel, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {User} from \"../model/user\";\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: User;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: string[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\n\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRole: StaffRole;\r\n};\r\n\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDto = CreateProfileDto & {id: string; university: UniversityKey; avatar: string};\r\n\r\nexport type FetchProfilesResponseDto = {\r\n    data: ResponseProfileDto[];\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type FetchMyMatchesResponseDto = ResponseProfileDto[];\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type LikeProfileResponseDto = \"requested\" | \"matched\";\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    languageItems: state.settings.localizedLanguageItems,\r\n}));\r\n\r\n// Component props\r\nexport type LanguagePickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    languages: string[];\r\n    single: boolean;\r\n    onChange?: (languages: string[]) => void;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    static defaultProps = {\r\n        languages: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, languageItems, single, languages, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={languageItems}\r\n                    multiple={!single}\r\n                    searchable={true}\r\n                    placeholder={i18n.t(`languagePicker.placeholder${single ? \"Single\" : \"Multiple\"}`)}\r\n                    searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                    onChangeItem={(items: PickerItem | PickerItem[]) => {\r\n                        const languages = (Array.isArray(items) ? items : [items]).map((it: PickerItem) => it.value);\r\n                        if (onChange) onChange(languages);\r\n                    }}\r\n                    defaultValue={single ? languages[0] : languages}\r\n                    style={styles.picker}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    containerStyle={styles.containerStyle}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        containerStyle: {height: 50},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguagePicker));\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n} & ViewProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\ntype PickerItem = {\r\n    value: LanguageLevel;\r\n    label: string;\r\n};\r\n\r\nconst items: Map<SupportedLocale, PickerItem[]> = new Map();\r\n\r\nfunction updateItems(locale: SupportedLocale) {\r\n    if (!items.has(locale)) {\r\n        items.set(\r\n            locale,\r\n            LANGUAGE_LEVELS.map((code: LanguageLevel) => ({\r\n                label: i18n.t(`languageLevels.${code}`),\r\n                value: code,\r\n            })),\r\n        );\r\n    }\r\n}\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    constructor(props: LanguageLevelPickerProps) {\r\n        super(props);\r\n        updateItems(this.props.locale);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LanguageLevelPickerProps) {\r\n        const locale = this.props.locale;\r\n        if (oldProps.locale != locale) updateItems(locale);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, locale, level, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={items.get(locale) || []}\r\n                    defaultValue={level}\r\n                    multiple={false}\r\n                    searchable={false}\r\n                    placeholder={i18n.t(\"languageLevelPicker.placeholder\")}\r\n                    onChangeItem={(item: PickerItem) => {\r\n                        if (onChange) onChange(item.value);\r\n                    }}\r\n                    style={styles.picker}\r\n                    containerStyle={styles.pickerContainer}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        pickerContainer: {maxWidth: 120, height: 50, borderRadius: 0},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguageLevelPicker));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n    errors: (string | boolean)[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {\r\n            languages,\r\n            errors: languages.map(() => false),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.languages.length == 0) this.addRow();\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        const errors = this.computeErrors(languages);\r\n        this.setState({...this.state, languages, errors});\r\n\r\n        if (this.props.onChange) {\r\n            const hasErrors = errors.filter((e: string | boolean) => e !== false).length > 0;\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    computeErrors(languages: Partial<SpokenLanguageDto>[]): (string | boolean)[] {\r\n        return languages.map((sl: Partial<SpokenLanguageDto>) => {\r\n            const multipleOccurrences =\r\n                languages.filter((l: Partial<SpokenLanguageDto>) => l.code && l.code == sl.code).length > 1;\r\n            return multipleOccurrences ? \"validation.languages.multiple\" : !sl.code || !sl.level;\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        if (this.state.languages.length < MAX_SPOKEN_LANGUAGES) {\r\n            const languages = this.state.languages.concat([{code: \"\"}]);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length) {\r\n            const languages = this.state.languages.slice(); // copy\r\n            languages.splice(idx, 1);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    setLanguageCode(idx: number, code: string) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].code = code;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].level = level;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            const error = this.state.errors[i];\r\n            return (\r\n                <View key={i} style={styles.rowContainer}>\r\n                    <View style={styles.inputRowContainer}>\r\n                        <LanguagePicker\r\n                            single={true}\r\n                            languages={[sl.code]}\r\n                            style={styles.languagePicker}\r\n                            pickerStyle={styles.inputs}\r\n                            onChange={(languageCodes: string[]) => this.setLanguageCode(i, languageCodes[0])}\r\n                        />\r\n                        <LanguageLevelPicker\r\n                            level={sl.level}\r\n                            style={styles.levelPicker}\r\n                            onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                        ></LanguageLevelPicker>\r\n                        <MaterialIcons onPress={() => this.removeRow(i)} style={styles.deleteIcon} name=\"delete\" />\r\n                    </View>\r\n                    {typeof error === \"string\" && (\r\n                        <View style={styles.errorRowContainer}>\r\n                            <InputErrorText error={error} />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n            );\r\n        });\r\n\r\n        const canAddMore =\r\n            this.state.languages.length < MAX_SPOKEN_LANGUAGES &&\r\n            this.state.languages.filter((sl: Partial<SpokenLanguageDto>) => !sl.level || !sl.code).length == 0;\r\n\r\n        return (\r\n            <View style={style}>\r\n                {rows}\r\n                <View style={styles.plusButtonWrapper}>\r\n                    {canAddMore && <MaterialIcons onPress={() => this.addRow()} style={styles.plusButton} name=\"add\" />}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginBottom: 8,\r\n        },\r\n        inputRowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        errorRowContainer: {\r\n            marginBottom: 8,\r\n        },\r\n        plusButtonWrapper: {\r\n            alignItems: \"center\",\r\n            marginTop: 10,\r\n        },\r\n        plusButton: {\r\n            width: 36,\r\n            height: 36,\r\n            fontSize: 36,\r\n            borderRadius: 18,\r\n            color: theme.background,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 24,\r\n            color: theme.error,\r\n        },\r\n        inputs: {\r\n            borderRadius: 0,\r\n        },\r\n        languagePicker: {\r\n            flex: 1,\r\n            flexGrow: 3,\r\n        },\r\n        levelPicker: {\r\n            flex: 1,\r\n            flexGrow: 2,\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport {Avatar, AvatarProps, Overlay, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    toggleEnlarged() {\r\n        this.setState({...this.state, enlarged: !this.state.enlarged});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.toggleEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Avatar {...avatarProps} {...(avatarProps.source ? {onPress} : {})}>\r\n                    {children}\r\n                </Avatar>\r\n                <Overlay\r\n                    isVisible={enlarged}\r\n                    onBackdropPress={() => this.toggleEnlarged()}\r\n                    overlayStyle={styles.overlay}\r\n                    backdropStyle={styles.overlayBackdrop}\r\n                >\r\n                    <Avatar\r\n                        rounded\r\n                        containerStyle={styles.enlargedAvatarContainer}\r\n                        avatarStyle={styles.enlargedAvatar}\r\n                        source={avatarProps.source}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.toggleEnlarged()}\r\n                    />\r\n                </Overlay>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"100%\",\r\n            aspectRatio: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n        },\r\n        overlayBackdrop: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport {Theme} from \"../types\";\r\n\r\nexport function getToggleStyleProps(nobuttonBariant: boolean, theme: Theme): Partial<ButtonGroupProps> {\r\n    if (nobuttonBariant) {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, noButtonVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const tooltipStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            width: undefined, // override default width so it adjusts based on the content\r\n            maxWidth: 240,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n","import React from \"react\";\r\nimport {Text} from \"react-native\";\r\nimport {Tooltip, withTheme} from \"react-native-elements\";\r\nimport {tooltipStyles} from \"../styles/tooltips\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type CustomTooltipProps = {\r\n    text: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\nexport type CustomTooltipState = {\r\n    height: number | undefined;\r\n};\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps, CustomTooltipState> {\r\n    constructor(props: CustomTooltipProps) {\r\n        super(props);\r\n        this.state = {height: undefined};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {height} = this.state;\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <Tooltip\r\n                popover={\r\n                    <Text\r\n                        style={styles.text}\r\n                        onLayout={(e) => {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                height: e.nativeEvent.layout.height,\r\n                            });\r\n                        }}\r\n                    >\r\n                        {text}\r\n                    </Text>\r\n                }\r\n                backgroundColor={theme.accentSlight}\r\n                containerStyle={styles.container}\r\n                height={height}\r\n            >\r\n                {this.props.children}\r\n            </Tooltip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <CheckBox\r\n                        checked={isSomethingSelected}\r\n                        onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                    ></CheckBox>\r\n                    <TouchableOpacity onPress={() => this.setAllValues(!isSomethingSelected)}>\r\n                        <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                    </TouchableOpacity>\r\n                    <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                        <MaterialIcons style={styles.helpIcon} name=\"help\"></MaterialIcons>\r\n                    </CustomTooltip>\r\n                </View>\r\n                {isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                noButtonVariant={true}\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                noButtonVariant={true}\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        helpIcon: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.textLight,\r\n        },\r\n        buttonsWrapper: {\r\n            width: \"100%\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, KeyboardAvoidingView, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {ScrollView, StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRoleToggle from \"../StaffRoleToggle\";\r\nimport {GenderToggle} from \"../GenderToggle\";\r\nimport BirthDatePicker from \"../BirthDatePicker\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport FormRow from \"./FormRow\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport {getUniversityFromEmail} from \"../../model/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps & {\r\n    user: User | null;\r\n    onChange?: (fields: Partial<UserProfile>) => void;\r\n};\r\n\r\nfunction FormFieldSpacer(): JSX.Element {\r\n    return <View style={{height: 30}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const avatarTitle = user ? (user.profile.firstName[0] + user.profile.lastName[0]).toUpperCase() : \"\";\r\n        const avatarSource = user && user.profile.avatarUrl ? {uri: user.profile.avatarUrl} : undefined;\r\n\r\n        /*const textInputStyleProps = {\r\n            placeholderTextColor: \"#222\",\r\n            style: {\r\n                width: \"100%\",\r\n                height: 50,\r\n                paddingHorizontal: 20,\r\n                borderRadius: 5,\r\n                borderWidth: 0,\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n            errorStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.error,\r\n            },\r\n            validStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.okay,\r\n            },\r\n            focusedStyle: Platform.OS === \"web\" ? ({outlineColor: \"transparent\"} as TextStyle) : null,\r\n        };*/\r\n\r\n        let profileFieldComponents = <></>;\r\n\r\n        if (user) {\r\n            const profile = user.profile;\r\n\r\n            profileFieldComponents = (\r\n                <>\r\n                    <FormRow\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user.email}\r\n                        display={<Text style={styles.cardText}>{user.email}</Text>}\r\n                        /*\r\n                        validator={VALIDATOR_EMAIL}\r\n                        renderInput={(value: string, error: string | null, onChange: (value: string) => void) => (\r\n                            <ValidatedTextInput\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                value={value}\r\n                                error={error || undefined}\r\n                                onChangeText={(val) => onChange(val)}\r\n                                keyboardType=\"email-address\"\r\n                                autoCompleteType=\"email\"\r\n                                autoFocus\r\n                                {...textInputStyleProps}\r\n                            />\r\n                        )}\r\n                        apply={(email: string) => onFieldChanged({email})}\r\n                        */\r\n                        locked={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile.birthdate}\r\n                        display={<FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <BirthDatePicker\r\n                                date={profile.birthdate}\r\n                                open={true}\r\n                                onSelect={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile.nationality}\r\n                        display={<FormattedNationality style={styles.cardText} countryCode={profile.nationality} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <NationalityPicker\r\n                                nationality={profile.nationality}\r\n                                onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile.gender}\r\n                        display={\r\n                            <GenderToggle\r\n                                gender={profile.gender}\r\n                                onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile.type}\r\n                        display={\r\n                            <>\r\n                                <RoleToggle\r\n                                    role={profile.type}\r\n                                    /*onSelect={(role: Role) => onFieldChanged({role})}*/\r\n                                    disabled={true}\r\n                                />\r\n                                {profile.type == \"staff\" && (\r\n                                    <StaffRoleToggle\r\n                                        staffRole={profile.staffRole || null}\r\n                                        onSelect={(staffRole: StaffRole) => this.onFieldChanged({staffRole})}\r\n                                    />\r\n                                )}\r\n                                {profile.type == \"student\" && (\r\n                                    <DegreeToggle\r\n                                        degree={profile.degree}\r\n                                        onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                            ></EducationFieldPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile.interests}\r\n                        display={\r\n                            <InterestsPicker\r\n                                interests={profile.interests}\r\n                                onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                            ></InterestsPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            <>\r\n                                {profile.languages.map((l: SpokenLanguageDto, i: number) => (\r\n                                    <View key={i}>\r\n                                        <Text>\r\n                                            {i18n.t(`languageNames.${l.code}`)} ({i18n.t(`languageLevels.${l.level}`)})\r\n                                        </Text>\r\n                                    </View>\r\n                                ))}\r\n                            </>\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <>\r\n                                <SpokenLanguagesInput\r\n                                    languages={value}\r\n                                    onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                            </>\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={styles.screenWrapper}>\r\n                <View style={styles.topView}>\r\n                    <EnlargeableAvatar\r\n                        size={140}\r\n                        rounded\r\n                        title={avatarTitle}\r\n                        containerStyle={{backgroundColor: theme.accentSecondary}}\r\n                        avatarStyle={styles.avatar}\r\n                        source={avatarSource}\r\n                        activeOpacity={0.8}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{user ? user.profile.firstName + \" \" + user.profile.lastName : \"\"}</Text>\r\n                    {user && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={getUniversityFromEmail(user.email)}\r\n                        ></FormattedUniversity>\r\n                    )}\r\n                </View>\r\n                <ScrollView style={styles.scrollWrapper} keyboardShouldPersistTaps=\"always\">\r\n                    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={-100} style={styles.formWrapper}>\r\n                        <View style={styles.titleWrapper}>\r\n                            <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                        </View>\r\n                        {profileFieldComponents}\r\n                        {!user && <ActivityIndicator size=\"large\" color={theme.accent} />}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[];\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory}: OfferCategoryRowProps): JSX.Element => {\r\n        let display: JSX.Element | JSX.Element[] = profileOffers\r\n            .filter((o) => offerIdToCategory.get(o.offerId) == category)\r\n            .map((value: OfferValueDto) => (\r\n                <Text key={`profile-${value.offerId}-display`}>{i18n.t(`allOffers.${value.offerId}.name`)}</Text>\r\n            ));\r\n\r\n        if (display.length == 0) display = <Text>{i18n.t(\"profile.noOffersSelected\")}</Text>;\r\n\r\n        return (\r\n            <FormRow\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={<>{display}</>}\r\n                renderInput={(\r\n                    value: OfferValueDto[],\r\n                    error: string | null,\r\n                    onChange: (value: OfferValueDto[]) => void,\r\n                ) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        screenWrapper: {\r\n            backgroundColor: theme.background,\r\n            width: \"100%\",\r\n        },\r\n        topView: {\r\n            width: \"160%\",\r\n            height: 280,\r\n            borderBottomLeftRadius: 200,\r\n            borderBottomRightRadius: 200,\r\n            paddingVertical: 50,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        scrollWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 40,\r\n            marginBottom: 300,\r\n        },\r\n        name: {\r\n            fontSize: 30,\r\n            color: theme.textWhite,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatar: {\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditProfileForm);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {MainNavigatorTabs} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    user: state.profile.user,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\ntype TabProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<MainNavigatorTabs, \"TabProfile\">;\r\n\r\nclass TabProfileScreen extends React.Component<TabProfileScreenProps> {\r\n    componentDidMount() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, user, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                ></EditProfileForm>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabProfileScreen));\r\n","import React from \"react\";\r\nimport {Modal, TouchableOpacity, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\nexport type CustomModalProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: ViewStyle;\r\n};\r\n\r\ntype CustomModalState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nclass CustomModal extends React.Component<CustomModalProps, CustomModalState> {\r\n    constructor(props: CustomModalProps) {\r\n        super(props);\r\n        this.state = {modalVisible: true};\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, modalViewStyle} = this.props;\r\n        const {modalVisible} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Modal animationType=\"fade\" transparent={true} visible={modalVisible}>\r\n                <TouchableOpacity\r\n                    style={styles.centeredView}\r\n                    activeOpacity={1.0}\r\n                    onPress={() => this.setModalVisible(false)}\r\n                >\r\n                    <View style={[styles.modalView, modalViewStyle]}>\r\n                        {this.props.renderContent(() => this.setModalVisible(false))}\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        centeredView: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.05)\",\r\n        },\r\n        modalView: {\r\n            width: \"80%\",\r\n            maxWidth: 300,\r\n            margin: 20,\r\n            borderRadius: 3,\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 30,\r\n            alignItems: \"center\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomModal);\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock: () => void; profile: UserProfile};\r\n\r\nclass BlockProfileModal extends React.Component<BlockProfileModalProps> {\r\n    render() {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    if (onBlock) onBlock();\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"block.action\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textWhite,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BlockProfileModal);\r\n","import {convertDtoToProfile} from \"../../api/converters\";\r\nimport {FetchMyMatchesResponseDto, FetchProfilesResponseDto, LikeProfileResponseDto} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport store from \"../store\";\r\nimport {\r\n    SetOfferFilterAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetMatchingFiltersAction,\r\n    MatchingFiltersState,\r\n    AppThunk,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    FetchProfilesFailureAction,\r\n    FetchProfilesSuccessAction,\r\n    FetchProfilesRefreshAction,\r\n    BeginFetchProfilesAction,\r\n    MatchingState,\r\n    LikeProfileSuccessAction,\r\n    FetchMyMatchesSuccessAction,\r\n    FetchMyMatchesFailureAction,\r\n    BeginFetchMyMatchesAction,\r\n} from \"../types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nexport const beginFetchProfiles = (): BeginFetchProfilesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch) => {\r\n    const state: MatchingState = store.getState().matching;\r\n    if (state.fetchingProfiles || !state.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    function nonEmptyOrUndef<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const filters = state.filters;\r\n    const filterParams = {\r\n        universities: nonEmptyOrUndef(filters.universities),\r\n        spokenLanguages: nonEmptyOrUndef(filters.languages),\r\n        degrees: nonEmptyOrUndef(filters.degrees),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: state.fetchingPage,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        true,\r\n    );\r\n\r\n    if (response.success) {\r\n        const resp = (response as unknown) as FetchProfilesResponseDto;\r\n        const canFetchMore = resp.meta.currentPage < resp.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(resp.data.map(convertDtoToProfile), canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nexport const fetchProfilesFailure = (): FetchProfilesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nexport const fetchProfilesSuccess = (profiles: UserProfile[], canFetchMore: boolean): FetchProfilesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    profiles,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): FetchProfilesRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nexport const likeProfileSuccess = (\r\n    profileId: string,\r\n    matchStatus: LikeProfileResponseDto,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n    matchStatus,\r\n});\r\n\r\nexport const likeProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toUserId: profileId}, true);\r\n    if (response.success) {\r\n        const matchStatus = response.data as LikeProfileResponseDto;\r\n        dispatch(likeProfileSuccess(profileId, matchStatus));\r\n    }\r\n};\r\n\r\nexport const dislikeProfileSuccess = (profileId: string): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const dislikeProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toUserId: profileId}, true);\r\n    if (response.success) dispatch(dislikeProfileSuccess(profileId));\r\n};\r\n\r\nexport const blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, true);\r\n    if (response.success) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nexport const beginFetchMyMatches = (): BeginFetchMyMatchesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nexport const fetchMyMatchesFailure = (): FetchMyMatchesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nexport const fetchMyMatchesSuccess = (profiles: UserProfile[]): FetchMyMatchesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    profiles,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch) => {\r\n    const state: MatchingState = store.getState().matching;\r\n    if (state.fetchingMyMatches) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, true);\r\n\r\n    if (response.success) {\r\n        const resp = response.data as FetchMyMatchesResponseDto;\r\n        dispatch(fetchMyMatchesSuccess(resp.map(convertDtoToProfile)));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle = {\r\n    fontFamily: Platform.OS == \"web\" ? undefined : \"sans-serif-thin\",\r\n    fontWeight: Platform.OS == \"web\" ? \"100\" : undefined,\r\n};\r\n\r\nexport const styleTextLight: TextStyle = {\r\n    fontFamily: Platform.OS == \"web\" ? undefined : \"sans-serif-light\",\r\n    fontWeight: Platform.OS == \"web\" ? \"200\" : undefined,\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Avatar, withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {blockProfile} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport {styleTextThin} from \"../styles/general\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n    blockModalOpen: boolean;\r\n};\r\n\r\nclass ProfilePreview extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            blockModalOpen: false,\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        this.setState({...this.state, animating: true});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n            duration,\r\n            easing: Easing.elastic(1.0),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n    }\r\n\r\n    collapse() {\r\n        const duration = 100;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n            duration,\r\n            easing: Easing.out(Easing.linear),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style} = this.props;\r\n        const {expanded, animating, height, blockModalOpen} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n        //const fullName = profile.firstName.length % 2 == 0 ? profile.firstName + \" \" + profile.lastName : \"Jimmy Jim McLongname\";\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                        this.hide();\r\n                    }}\r\n                    onSwipeableLeftWillOpen={() => {\r\n                        if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                        this.hide();\r\n                    }}\r\n                    leftThreshold={100}\r\n                    rightThreshold={100}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={[styles.swipeAction, styles.swipeActionRight]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentRight]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                    renderLeftActions={() => (\r\n                        <View style={[styles.swipeAction, styles.swipeActionLeft]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentLeft]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => this.toggleExpanded()}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.collapsedContent}>\r\n                            <View style={styles.avatarContainer}>\r\n                                <Avatar\r\n                                    size={120}\r\n                                    rounded\r\n                                    title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                    containerStyle={styles.avatar}\r\n                                    source={\r\n                                        profile.avatarUrl && profile.avatarUrl !== \"\"\r\n                                            ? {uri: profile.avatarUrl}\r\n                                            : undefined\r\n                                    }\r\n                                ></Avatar>\r\n                            </View>\r\n                            <View style={styles.infoContainer}>\r\n                                <Text style={styles.name}>{fullName}</Text>\r\n                                {university && <FormattedUniversity style={styles.infoText} university={university} />}\r\n                                <Text style={styles.infoText}>\r\n                                    {i18n.t(`genders.${profile.gender}`)}\r\n                                    {\", \"}\r\n                                    {i18n.t(`allRoles.${profile.type}`)} (\r\n                                    {profile.type == \"staff\"\r\n                                        ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n                                        : i18n.t(`degrees.${profile.degree}`)}\r\n                                    )\r\n                                </Text>\r\n                                {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                            </View>\r\n                        </View>\r\n                        {(expanded || animating) && (\r\n                            <View style={styles.expandedContent}>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.languages.map((l: SpokenLanguageDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${l.code}`}\r\n                                            text={`${i18n.t(`languageNames.${l.code}`)}${\r\n                                                l.level != \"native\" ? ` (${l.level.toUpperCase()})` : \"\"\r\n                                            }`}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.profileOffers.map((offer: OfferValueDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${offer.offerId}`}\r\n                                            text={i18n.t(`allOffers.${offer.offerId}.name`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                <TouchableOpacity\r\n                                    style={styles.blockButton}\r\n                                    onPress={() => this.setState({...this.state, blockModalOpen: true})}\r\n                                >\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                                {blockModalOpen && (\r\n                                    <BlockProfileModal\r\n                                        profile={profile}\r\n                                        onHide={() => this.setState({...this.state, blockModalOpen: false})}\r\n                                        onBlock={() => {\r\n                                            this.hide(() =>\r\n                                                (store.dispatch as MyThunkDispatch)(blockProfile(profile.id)),\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </View>\r\n                        )}\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst chipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        chip: {\r\n            backgroundColor: theme.accentSlight,\r\n            borderRadius: 6,\r\n            //paddingHorizontal: 7,\r\n            paddingHorizontal: 4,\r\n            paddingVertical: 2,\r\n            marginHorizontal: 2,\r\n            marginVertical: 2,\r\n            flexGrow: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n    });\r\n});\r\n\r\nconst ItemChip = withTheme(\r\n    ({text, theme}: {text: string} & ThemeProps): JSX.Element => {\r\n        const styles = chipStyles(theme);\r\n        return (\r\n            <View style={styles.chip}>\r\n                <Text style={styles.chipText}>{text}</Text>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 10;\r\nconst cardPadding = 10;\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 180;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 400;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n            padding: cardPadding,\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"column\",\r\n        },\r\n        swipeAction: {\r\n            width: \"100%\",\r\n            marginHorizontal: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionLeft: {\r\n            paddingRight: sideMargin * 2,\r\n        },\r\n        swipeActionRight: {\r\n            paddingLeft: sideMargin * 2,\r\n        },\r\n        swipeActionContent: {\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"flex-end\",\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        // Card content\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n            height: PROFILE_PREVIEW_COLLAPSED_HEIGHT - verticalSpacing * 2 - cardPadding * 2,\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chipsContainer: {\r\n            // TODO clean-up\r\n            /*flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            marginTop: 4,*/\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n            //maxHeight: 58,\r\n            overflow: \"hidden\",\r\n        },\r\n        expandedSectionTitle: {\r\n            fontFamily: \"sans-serif-light\",\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        actionContainer: {\r\n            flexDirection: \"column\",\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfilePreview);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport {StackNavigationProp, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    LayoutRectangle,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfilePreview from \"../components/ProfilePreview\";\r\nimport {TabMatchingParamList} from \"../navigation/types\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    profiles: state.matching.fetchedProfiles,\r\n    fetchingProfiles: state.matching.fetchingProfiles,\r\n    justRefreshed: state.matching.fetchingPage == 1,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingParamList, \"TabMatchingScreen\">;\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n\r\n    fetchMore() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchProfiles());\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.profiles.length == 0) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: TabMatchingScreenProps) {\r\n        if (this.props.profiles.length == 0) this.fetchMore();\r\n        // Reset the hidden profiles when the user purposedly refreshes\r\n        if (!oldProps.justRefreshed && this.props.justRefreshed) this.setState({...this.state, hiddenProfiles: {}});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profiles, theme, fetchingProfiles, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const previewComponents = profiles.map((profile: UserProfile) => (\r\n            <ProfilePreview\r\n                key={profile.id}\r\n                profile={profile}\r\n                onExpand={(layout: LayoutRectangle) => {\r\n                    const scroll = this.scrollViewRef.current;\r\n                    if (scroll) scroll.scrollTo({y: layout.y, animated: true});\r\n                }}\r\n                onSwipeRight={() => (dispatch as MyThunkDispatch)(likeProfile(profile.id))}\r\n                onSwipeLeft={() => (dispatch as MyThunkDispatch)(dislikeProfile(profile.id))}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView\r\n                    ref={this.scrollViewRef}\r\n                    style={styles.scroller}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingProfiles}\r\n                            onRefresh={() => store.dispatch(refreshFetchedProfiles())}\r\n                        />\r\n                    }\r\n                    onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                        const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                        if (!fetchingProfiles && distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                    }}\r\n                >\r\n                    <View style={styles.matchContainer}>\r\n                        {previewComponents}\r\n                        <View style={styles.loadingIndicatorContainer}>\r\n                            {fetchingProfiles && profiles.length > 0 && (\r\n                                <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                            )}\r\n                        </View>\r\n                        {!fetchingProfiles && previewComponents.length == 0 && (\r\n                            <View style={styles.noResultsContainer}>\r\n                                <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                                <Text style={styles.noResultsText2}>{i18n.t(\"matching.noResultsAdvice\")}</Text>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        matchContainer: {\r\n            flex: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderWidth: 0,\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginVertical: 10,\r\n            height: 50,\r\n        },\r\n        filtersIcon: {\r\n            paddingHorizontal: 5,\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\ntype MatchingHeaderRightProps = {\r\n    navigation: StackNavigationProp<TabMatchingParamList, \"TabMatchingScreen\">;\r\n} & ThemeProps;\r\n\r\nexport const MatchingHeaderRight = withTheme(\r\n    ({navigation, theme}: MatchingHeaderRightProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={styles.headerContainer}>\r\n                {/*<TouchableOpacity onPress={() => store.dispatch(refreshFetchedProfiles())}>\r\n                <MaterialIcons name=\"refresh\" size={32} />\r\n            </TouchableOpacity>*/}\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"MatchFilteringScreen\")}>\r\n                    <FontAwesome name=\"sliders\" style={styles.filtersIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    noButtonVariant?: boolean;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(noButtonVariant || false, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            buttonContainerStyle={[styleProps.buttonContainerStyle, {marginHorizontal: 2}]}\r\n            buttonStyle={[styleProps.buttonStyle, {paddingHorizontal: 0}]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type MultiLanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass MultiLanguagePicker extends React.Component<MultiLanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiLanguagePicker;\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {refreshFetchedProfiles, setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport MultiLanguagePicker from \"../components/MultiLanguagePicker\";\r\nimport {Degree, Role} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport store from \"../state/store\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {StackHeaderLeftButtonProps} from \"@react-navigation/stack\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator></Separator>\r\n                <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            ></Switch>\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                    <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.sectionContainer}>\r\n                    <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiUniversityPicker\r\n                                universities={filters.universities}\r\n                                showSelected={false}\r\n                                onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                            ></MultiUniversityPicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiLanguagePicker\r\n                                languages={filters.languages}\r\n                                showSelected={false}\r\n                                onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                            ></MultiLanguagePicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.twoLineEntryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                        <RoleToggleMulti\r\n                            roles={filters.roles}\r\n                            onSelect={(roles: Role[]) => this.updateLocalFilters({roles})}\r\n                            noButtonVariant={true}\r\n                        ></RoleToggleMulti>\r\n                    </View>\r\n                    {filters.roles.indexOf(\"student\") != -1 && (\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                            <DegreeToggleMulti\r\n                                degrees={filters.degrees}\r\n                                onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                style={{width: \"100%\"}}\r\n                                noButtonVariant={true}\r\n                            ></DegreeToggleMulti>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {offerSections}\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            backgroundColor: theme.background,\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            padding: 40,\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 20,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n        },\r\n    });\r\n});\r\n\r\nconst headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        headerButtonIcon: {\r\n            fontSize: 32,\r\n            paddingRight: 10,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport const FilteringHeaderLeft = withTheme(\r\n    (props: StackHeaderLeftButtonProps & ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(props.theme);\r\n        return (\r\n            <TouchableOpacity style={{padding: 10}} onPress={props.onPress}>\r\n                <MaterialIcons name=\"close\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const FilteringHeaderRight = withTheme(\r\n    ({theme}: ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(theme);\r\n        return (\r\n            <TouchableOpacity\r\n                style={{paddingVertical: 10}}\r\n                onPress={() => {\r\n                    if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                    rootNavigate(\"TabMatchingScreen\");\r\n                    store.dispatch(refreshFetchedProfiles());\r\n                }}\r\n            >\r\n                <MaterialIcons name=\"check\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\n//return <MaterialIcons name=\"refresh\" size={32} style={{paddingRight: 10}} />;\r\n/*\r\n<TouchableOpacity style={{marginRight: 16, padding: 10}} onPress={() => store.dispatch(resetMatchingFilters())}>\r\n    <Text>reset</Text>\r\n</TouchableOpacity>\r\n*/\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../../components/LogOutButton\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\nexport type ChatScreenProps = ThemeProps;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                <Text style={styles.title}>Under construction</Text>\r\n                <View style={styles.separator} />\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ChatScreen);\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Avatar, withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nclass ProfileMessagingCard extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            height: new ReAnimated.Value(CARD_HEIGHT),\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = 120;\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style, onPress} = this.props;\r\n        const {height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        // const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        //this.hide();\r\n                    }}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={styles.swipeAction}>\r\n                            <View style={styles.swipeActionContent}>\r\n                                <SwipeActionButton icon=\"notifications-off\" color={\"#ccc\"}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"report\" color={theme.warn}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"close\" color={theme.error}></SwipeActionButton>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            if (onPress) onPress();\r\n                        }}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.avatarContainer}>\r\n                            <Avatar\r\n                                size={CARD_HEIGHT - verticalSpacing * 2 - 20}\r\n                                rounded\r\n                                title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                containerStyle={styles.avatar}\r\n                                source={\r\n                                    profile.avatarUrl && profile.avatarUrl !== \"\" ? {uri: profile.avatarUrl} : undefined\r\n                                }\r\n                            ></Avatar>\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{profile.firstName + \" \" + profile.lastName}</Text>\r\n                            <Text style={styles.infoText}>\r\n                                {i18n.t(`allRoles.${profile.staffRole ? \"staff\" : \"student\"}`)} (\r\n                                {profile.staffRole\r\n                                    ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n                                    : i18n.t(`degrees.${profile.degree}`)}\r\n                                )\r\n                            </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\ntype SwipeActionProps = {icon: string; color?: string; onPress?: () => void};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, color, onPress, theme} = props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor: color}]}>\r\n                <MaterialIcons style={styles.swipeActionButtonIcon} name={icon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 5;\r\nconst CARD_HEIGHT = 75;\r\nconst ACTION_BUTTON_WIDTH = CARD_HEIGHT - verticalSpacing * 2;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            //paddingHorizontal: 20,\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n            padding: 10,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        swipeAction: {\r\n            width: ACTION_BUTTON_WIDTH * 3,\r\n            //marginHorizontal: sideMargin,\r\n            marginLeft: -sideMargin - 2,\r\n            marginRight: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionContent: {\r\n            flexDirection: \"row\",\r\n            borderTopRightRadius: 4,\r\n            borderBottomRightRadius: 4,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n        swipeActionButton: {\r\n            width: ACTION_BUTTON_WIDTH,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 22,\r\n        },\r\n\r\n        // Card content\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 15,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileMessagingCard);\r\n","import * as React from \"react\";\r\nimport {ScrollView, View, StyleSheet, Alert, Text, RefreshControl} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ProfileMessagingCard from \"../../components/messaging/ProfileMessagingCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMyMatches} from \"../../state/matching/actions\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    profiles: state.matching.myMatches,\r\n    fetchingMatches: state.matching.fetchingMyMatches,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// TEMP fake profiles\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst testProfiles: UserProfile[] = [\r\n    {\r\n        id: \"SpGiGSsGDdGSpogjQgsfGhfSdDFPFhGdShD\",\r\n        type: \"student\",\r\n        firstName: \"John\",\r\n        lastName: \"Doe\",\r\n        university: \"univ-brest\",\r\n        degree: \"bsc3\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"fr\", level: \"native\"},\r\n            {code: \"en\", level: \"c2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"FQSFDPSfpgsdsdfPIUJIjGSfgpQgqujpgodREjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Matt\",\r\n        lastName: \"Brooks\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"en\", level: \"c1\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"FDPSfpgssdfPIUJIjfgpQujpgodREjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Jeff\",\r\n        lastName: \"Dale\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"en\", level: \"c1\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"qdqsFDPSfpgssdfPIUJIjfgpQujpgodRdqEjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Harry\",\r\n        lastName: \"Dodd\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n];\r\n\r\ntype IndividualMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass IndividualMessagingTab extends React.Component<IndividualMessagingTabProps> {\r\n    componentDidMount() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchMyMatches());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profiles, fetchingMatches, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        //const profiles = testProfiles;\r\n        //const profiles: UserProfile[] = [];\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <ScrollView\r\n                    style={styles.matchesContainer}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingMatches}\r\n                            onRefresh={() => (dispatch as MyThunkDispatch)(fetchMyMatches())}\r\n                        />\r\n                    }\r\n                >\r\n                    {profiles.map((p: UserProfile) => (\r\n                        <ProfileMessagingCard\r\n                            key={p.id}\r\n                            profile={p}\r\n                            onPress={() => {\r\n                                Alert.alert(\"Chatting is not implemented yet\", \"\", [{text: \"OK\"}]);\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    {!fetchingMatches && profiles.length == 0 && (\r\n                        <View style={styles.noMatchesContainer}>\r\n                            <Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>\r\n                        </View>\r\n                    )}\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 20,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n            //height: 250,\r\n        },\r\n        matchesContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        noMatchesContainer: {\r\n            width: \"80%\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 40,\r\n        },\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(IndividualMessagingTab));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\ntype GroupMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass GroupMessagingTab extends React.Component<GroupMessagingTabProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <Text>Not implemented</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 20,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMessagingTab));\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {useSafeAreaInsets} from \"react-native-safe-area-context\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport IndividualMessagingTab from \"../screens/messaging/IndividualMessagingTab\";\r\nimport GroupMessagingTab from \"../screens/messaging/GroupMessagingTab\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMessagingRoot, TabMessagingTabs} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\nconst Tab = createMaterialTopTabNavigator<TabMessagingTabs>();\r\n\r\nexport default function MessagingNavigator(): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <Stack.Navigator initialRouteName=\"MessagingScreen\" headerMode=\"none\">\r\n            <Stack.Screen name=\"ChatScreen\" component={ChatScreen} />\r\n            <Stack.Screen name=\"MessagingScreen\">\r\n                {() => (\r\n                    <Tab.Navigator tabBarOptions={{style: {paddingTop: insets.top}}}>\r\n                        <Tab.Screen\r\n                            name=\"IndividualMessagingTab\"\r\n                            options={{\r\n                                tabBarLabel: i18n.t(\"messaging.tabIndividual\"),\r\n                                title: screenTitle(\"IndividualMessagingTab\"),\r\n                            }}\r\n                            component={IndividualMessagingTab}\r\n                        />\r\n                        <Tab.Screen\r\n                            name=\"GroupMessagingTab\"\r\n                            options={{\r\n                                tabBarLabel: i18n.t(\"messaging.tabGroup\"),\r\n                                title: screenTitle(\"GroupMessagingTab\"),\r\n                            }}\r\n                            component={GroupMessagingTab}\r\n                        />\r\n                    </Tab.Navigator>\r\n                )}\r\n            </Stack.Screen>\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"heart\" />\r\n                <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                <View style={styles.separator} />\r\n                <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                    Found a bug or have some feedback for us or ideas for the app?\r\n                </Text>\r\n                <Text style={styles.alphaText}>\r\n                    Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                </Text>\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackHeaderLeftButtonProps, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport TabNotImplementedScreen from \"../screens/TabNotImplementedScreen\";\r\nimport {\r\n    MainNavigatorTabs,\r\n    RootNavigatorScreens,\r\n    TabHomeRoot,\r\n    TabMatchingRoot,\r\n    TabNotificationsRoot,\r\n    TabProfileRoot,\r\n} from \"../navigation/types\";\r\nimport TabProfileScreen from \"../screens/TabProfileScreen\";\r\nimport i18n from \"i18n-js\";\r\nimport TabMatchingScreen, {MatchingHeaderRight} from \"../screens/TabMatchingScreen\";\r\nimport MatchFilteringScreen, {FilteringHeaderLeft, FilteringHeaderRight} from \"../screens/MatchFilteringScreen\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {Text} from \"react-native\";\r\nimport {LabelPosition} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent({theme}: MainNavigatorProps): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabHome\"\r\n            tabBarOptions={{\r\n                activeTintColor: theme.tint,\r\n                style: {height: 55, paddingTop: 2, paddingBottom: 5},\r\n                tabStyle: {flexDirection: \"column\"},\r\n                iconStyle: {flex: 1},\r\n            }}\r\n        >\r\n            <TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.home\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.matching\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.messaging\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"message\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabProfile\"\r\n                component={TabProfileNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.profile\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"person\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.notifications\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\ntype TabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\ntype TabBarLabelProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    position: LabelPosition;\r\n};\r\n\r\n// TODO move\r\nfunction TabBarIcon({name, color}: {name: string} & TabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nfunction TabBarLabel({text, color}: {text: string} & TabBarLabelProps): JSX.Element {\r\n    return <Text style={{color, fontSize: 12}}>{text}</Text>;\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nconst TabMatchingNavigator = withTheme(\r\n    (): JSX.Element => (\r\n        <TabMatchingStack.Navigator>\r\n            <TabMatchingStack.Screen\r\n                name=\"TabMatchingScreen\"\r\n                component={TabMatchingScreen}\r\n                options={({navigation}) => ({\r\n                    headerShown: true,\r\n                    headerLeft: () => <></>,\r\n                    headerTitle: \"Matching\",\r\n                    headerTitleStyle: {\r\n                        letterSpacing: 0.5,\r\n                        paddingLeft: 10,\r\n                    },\r\n                    headerTitleAlign: \"left\",\r\n                    // eslint-disable-next-line react/display-name\r\n                    headerRight: () => <MatchingHeaderRight navigation={navigation} />,\r\n                    title: screenTitle(\"TabMatchingScreen\"),\r\n                })}\r\n            />\r\n            <TabMatchingStack.Screen\r\n                name=\"MatchFilteringScreen\"\r\n                component={MatchFilteringScreen}\r\n                options={{\r\n                    headerShown: true,\r\n                    headerTitle: \"Filters\",\r\n                    headerTitleAlign: \"center\",\r\n                    headerLeft: (props: StackHeaderLeftButtonProps) => <FilteringHeaderLeft {...props} />,\r\n                    headerRight: () => <FilteringHeaderRight />,\r\n                    title: screenTitle(\"MatchFilteringScreen\"),\r\n                }}\r\n            />\r\n        </TabMatchingStack.Navigator>\r\n    ),\r\n);\r\n\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n\r\nconst TabProfileStack = createStackNavigator<TabProfileRoot>();\r\n\r\nconst TabProfileNavigator = (): JSX.Element => (\r\n    <TabProfileStack.Navigator>\r\n        <TabProfileStack.Screen\r\n            name=\"TabProfileScreen\"\r\n            component={TabProfileScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabProfileScreen\")}}\r\n        />\r\n    </TabProfileStack.Navigator>\r\n);\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import {StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        slideWrapper: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        header: {\r\n            marginBottom: \"20%\",\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"70%\",\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 50,\r\n        },\r\n        navButton: {},\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const tosSlideStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        actionButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        actionButtonTextDecline: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.error,\r\n        },\r\n        actionButtonTextAccept: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.okay,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginBottom: 40,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n): JSX.Element[] {\r\n    return offers\r\n        .filter((offer: OfferDto) => offer.category == category)\r\n        .map((offer: OfferDto, i: number) => (\r\n            <OfferControl\r\n                key={i}\r\n                offer={offer}\r\n                value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                style={{marginVertical: 20}}\r\n            />\r\n        ));\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.role!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds,\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.role == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.role == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRole: onboardingState.staffRole,\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {title, subtitle, index, hideNavNext, hasNext, handleSubmit, next, theme} = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        return (\r\n            <View style={styles.slideWrapper}>\r\n                <View style={styles.slideContentWrapper}>\r\n                    <View style={styles.header}>\r\n                        {title && <Text style={styles.title}>{title}</Text>}\r\n                        {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n                    </View>\r\n                    {this.props.children}\r\n                </View>\r\n                <View style={styles.slideNavWrapper}>\r\n                    {hasPrevious && (\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => this.props.previous()}>\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-left\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hideNavNext && hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            /*onPress={() => this.props.navigation.navigate(next)}*/ onPress={navigateRight}\r\n                        >\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-right\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            onPress={() => {\r\n                                finishOnboarding(store.getState().auth.onboarding);\r\n                            }}\r\n                        >\r\n                            <Text style={styles.finishButtonText}>{i18n.t(\"onboarding.submit\")}</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={200}>\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"firstname\")}\r\n                                    label={i18n.t(\"firstname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"lastname\")}\r\n                                    label={i18n.t(\"lastname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n                            </KeyboardAvoidingView>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet} from \"react-native\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport BirthDatePicker from \"./BirthDatePicker\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BirthDateControlProps = ThemeProps & {\r\n    date?: Date;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\nexport type BirthDateControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass BirthDateControl extends React.Component<BirthDateControlProps, BirthDateControlState> {\r\n    constructor(props: BirthDateControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, onSelect, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity style={[styles.button, date ? styles.buttonOk : {}]} onPress={() => this.showModal()}>\r\n                    {date && <FormattedDate style={styles.dateText} date={date} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <BirthDatePicker\r\n                    date={date}\r\n                    open={open}\r\n                    onSelect={(value: Date) => {\r\n                        if (onSelect) onSelect(value);\r\n                    }}\r\n                    onHide={() => this.hideModal()}\r\n                ></BirthDatePicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        dateText: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BirthDateControl);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, nationality ? styles.buttonOk : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                ></NationalityPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport BirthDateControl from \"../../components/BirthDateControl\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport {GenderToggle} from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingPersonalInfoScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingPersonalInfoFormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingPersonalInfoScreen extends React.Component<OnboardingPersonalInfoScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingPersonalInfoScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingPersonalInfoFormState) {\r\n        if (values.birthdate && values.gender && values.nationality) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingPersonalInfoFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingPersonalInfoFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingPersonalInfoFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.personalInfo.title\")}\r\n                            //subtitle={i18n.t(\"onboarding.personalInfo.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateControl\r\n                                date={values.birthdate || undefined}\r\n                                onSelect={(birthdate: Date) => setFieldValue(\"birthdate\", birthdate)}\r\n                            />\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showSelected={false}\r\n                            ></EducationFieldPicker>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingPersonalInfoScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n});\r\n\r\ntype OnboardingLanguageScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingLanguageScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingLanguageFormState = {\r\n    languages: SpokenLanguageDto[];\r\n};\r\n\r\nclass OnboardingLanguageScreen extends React.Component<OnboardingLanguageScreenProps, OnboardingLanguageScreenState> {\r\n    constructor(props: OnboardingLanguageScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingLanguageScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.languages != next.languages;\r\n    }\r\n\r\n    submit(values: OnboardingLanguageFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingLanguageFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingLanguageFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingLanguageFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.language.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></SpokenLanguagesInput>\r\n                            {touched.languages && <InputErrorText error={errors.languages}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingLanguageScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingInterestsScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingInterestsScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingInterestsFormState = {\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingInterestsScreen extends React.Component<\r\n    OnboardingInterestsScreenProps,\r\n    OnboardingInterestsScreenState\r\n> {\r\n    constructor(props: OnboardingInterestsScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingInterestsScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.interestIds != next.interestIds;\r\n    }\r\n\r\n    submit(values: OnboardingInterestsFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingInterestsFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingInterestsFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingInterestsFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.interests.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></InterestsPicker>\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingInterestsScreen);\r\n","import * as React from \"react\";\r\nimport {Text, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport store from \"../../state/store\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\ntype OnboardingRoleScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    role: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        store.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.role.title\")} hideNavNext={true} {...this.props}>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"student\"})}>\r\n                    <MaterialIcons name={\"school\"} style={styles.roleButtonIconStudent}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStudent}>{i18n.t(\"allRoles.student\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"staff\"})}>\r\n                    <MaterialIcons name={\"group\"} style={styles.roleButtonIconStaff}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStaff}>{i18n.t(\"allRoles.staff\")}</Text>\r\n                </TouchableOpacity>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    const studentColor = theme.accent;\r\n    const staffColor = theme.okay;\r\n\r\n    const common = StyleSheet.create({\r\n        roleButtonText: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n        },\r\n        roleButtonIcon: {\r\n            fontSize: 50,\r\n            marginRight: 15,\r\n        },\r\n    });\r\n\r\n    return StyleSheet.create({\r\n        roleButton: {\r\n            height: 100,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        } as ViewStyle,\r\n        roleButtonTextStaff: {\r\n            ...common.roleButtonText,\r\n            color: staffColor,\r\n        },\r\n        roleButtonTextStudent: {\r\n            ...common.roleButtonText,\r\n            color: studentColor,\r\n        },\r\n        roleButtonIconStaff: {\r\n            ...common.roleButtonIcon,\r\n            color: staffColor,\r\n        },\r\n        roleButtonIconStudent: {\r\n            ...common.roleButtonIcon,\r\n            color: studentColor,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingRoleScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersDiscover.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Discover, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen1);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersCollaborate.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Collaborate, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen2);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersMeet.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Meet, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen3);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n    staffRole: StaffRole | null;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n\r\n        const icons = [\"school\", \"library-books\", \"help\", \"account-balance\", \"build\", \"verified-user\"];\r\n\r\n        const buttons = STAFF_ROLES.map((sr: string, i: number) => (\r\n            <TouchableOpacity key={i} style={styles.button} onPress={() => this.submit({staffRole: sr as StaffRole})}>\r\n                <MaterialIcons name={icons[i]} style={styles.buttonIcon}></MaterialIcons>\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.roleSpecific1.staff.title\")} hideNavNext={true} {...this.props}>\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n    /*\r\n\r\n        <InputLabel style={{marginTop: spacing}}>{i18n.t(\"staffPosition\")}</InputLabel>\r\n        <StaffRoleToggle\r\n            staffRole={values.staffRole}\r\n            onSelect={(staffRole: StaffRole) => setFieldValue(\"staffRole\", staffRole)}\r\n        />\r\n        {touched.staffRole && <InputErrorText error={errors.staffRole}></InputErrorText>}\r\n    */\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const isStudent = onboardingState.role == \"student\";\r\n\r\n        return (\r\n            <>\r\n                {isStudent && this.studentRender()}\r\n                {!isStudent && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {theme, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"tos.modal.disclaimer1\")}\r\n                            {\"\\n\\n\"}\r\n                            {i18n.t(\"tos.modal.disclaimer2\")}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={[styles.actionText]}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    rootNavigate(\"LoginScreen\");\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"tos.decline\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textInverted,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {OnboardingScreenProps, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingTosScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingTosScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingTosScreen extends React.Component<OnboardingTosScreenProps, OnboardingTosScreenState> {\r\n    constructor(props: OnboardingTosScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.tos.title\")}\r\n                subtitle={i18n.t(\"onboarding.tos.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"tos.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"tos.readMore\")[1]} />\r\n                    {i18n.t(\"tos.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingTosScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingPrivacyScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingPrivacyScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingPrivacyScreen extends React.Component<OnboardingPrivacyScreenProps, OnboardingPrivacyScreenState> {\r\n    constructor(props: OnboardingPrivacyScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.privacy.title\")}\r\n                subtitle={i18n.t(\"onboarding.privacy.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"privacy.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"privacy.readMore\")[1]} />\r\n                    {i18n.t(\"privacy.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingPrivacyScreen);\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\nimport OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingPersonalInfoScreen from \"./OnboardingPersonalInfoScreen\";\r\nimport OnboardingLanguageScreen from \"./OnboardingLanguageScreen\";\r\nimport OnboardingInterestsScreen from \"./OnboardingInterestsScreen\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingTosScreen from \"./OnboardingTosScreen\";\r\nimport OnboardingPrivacyScreen from \"./OnboardingPrivacyScreen\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingPersonalInfoScreen,\r\n    OnboardingLanguageScreen,\r\n    OnboardingInterestsScreen,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingTosScreen,\r\n    OnboardingPrivacyScreen,\r\n};\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingTosScreen\",\r\n    \"OnboardingPrivacyScreen\",\r\n    \"OnboardingPersonalInfoScreen\",\r\n    \"OnboardingLanguageScreen\",\r\n    \"OnboardingInterestsScreen\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER, ONBOARDING_SCREENS} from \"../screens/onboarding\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const ComponentClass = ONBOARDING_SCREENS[name];\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => {\r\n        if (hasNext) rootNavigate(ONBOARDING_ORDER[i + 1]);\r\n    };\r\n    const previous = () => {\r\n        if (i > 0) rootNavigate(ONBOARDING_ORDER[i - 1]);\r\n    };\r\n\r\n    class temp extends React.Component {\r\n        render(): JSX.Element {\r\n            return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n        }\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={temp} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nexport default function OnboardingNavigator(): JSX.Element {\r\n    return (\r\n        <OnboardingStack.Navigator\r\n            initialRouteName={ONBOARDING_ORDER[0]}\r\n            tabBarOptions={{showLabel: false, showIcon: false}}\r\n            tabBar={() => <></>}\r\n            springConfig={{\r\n                stiffness: 500,\r\n                damping: 2000,\r\n                mass: 5,\r\n            }}\r\n            swipeEnabled={false}\r\n            lazy={true}\r\n            lazyPreloadDistance={0}\r\n        >\r\n            {screens}\r\n        </OnboardingStack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"home\"></FontAwesome>\r\n                <Text style={styles.title}>{i18n.t(\"onboarding.profileCreated\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity style={styles.button} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                    <Text style={styles.buttonText}>{i18n.t(\"onboarding.getStarted\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"85%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            color: theme.text,\r\n            fontSize: 40,\r\n            marginVertical: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        button: {\r\n            marginVertical: 20,\r\n            padding: 5,\r\n            borderBottomWidth: 0.75,\r\n            borderBottomColor: theme.textLight,\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 20,\r\n            letterSpacing: 1.5,\r\n            textTransform: \"uppercase\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMyMatches} from \"../state/matching/actions\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport store from \"../state/store\";\r\nimport {styleTextThin} from \"../styles/general\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass ReciprocalMatchScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity\r\n                    style={styles.actionButton}\r\n                    onPress={() => rootNavigate(\"TabMessaging\") /* TODO Redirect to chat tab directly instead */}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.chat\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    style={[styles.actionButton, {backgroundColor: theme.actionNeutral}]}\r\n                    onPress={() => {\r\n                        rootNavigate(\"TabMatchingScreen\");\r\n                        // Make sure the data is up to date\r\n                        // TODO this could be improved\r\n                        (store.dispatch as MyThunkDispatch)(fetchMyMatches());\r\n                    }}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.continue\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.okay,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 32,\r\n            color: theme.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n            opacity: 0.3,\r\n        },\r\n        actionButton: {\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 30,\r\n            paddingVertical: 10,\r\n            marginVertical: 20,\r\n            borderRadius: 20,\r\n        },\r\n        actionText: {\r\n            color: theme.textWhite,\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ReciprocalMatchScreen);\r\n","import * as React from \"react\";\r\nimport {Alert, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type ChangePasswordFormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): ChangePasswordFormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"$1\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ChangePasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Map props from the store\r\nconst mapStateToProps = (state: AppState) => ({\r\n    registerFailure: state.auth.registerFailure,\r\n    registerErrors: state.auth.registerErrors,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype ChangePasswordFormProps = FormProps<ChangePasswordFormState> & ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ChangePasswordForm extends React.Component<ChangePasswordFormProps> {\r\n    submit(values: ChangePasswordFormState) {\r\n        console.log(\"Change pwd form submitted\", values);\r\n        //(this.props.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password));\r\n        //if (this.props.onSuccessfulSubmit !== undefined) this.props.onSuccessfulSubmit(values);\r\n    }\r\n\r\n    componentDidUpdate(/*prevProps: SignupFormProps*/) {\r\n        if (this.props.registerFailure) {\r\n            /*const errorTexts = this.props.registerErrors.map((err: string, i: number) => (\r\n                <Text key={i} style={[formStyle.errorText, {color: this.props.theme.error}]}>\r\n                    {err}\r\n                </Text>\r\n            ));*/\r\n\r\n            Alert.alert(\"Unable to change password\", this.props.registerErrors[0], [\r\n                {text: \"OK\", onPress: () => console.log(\"OK Pressed\")},\r\n            ]);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ChangePasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values: ChangePasswordFormState) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<ChangePasswordFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"createAccount\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={styles.createAccountButton}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"createAccount\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChangePasswordForm));\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView} from \"react-native\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ChangePasswordForm from \"../components/forms/ChangePasswordForm\";\r\n\r\ntype ChangePasswordScreenProps = ThemeProps;\r\n\r\nclass ChangePasswordScreen extends React.Component<ChangePasswordScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ChangePasswordForm />\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ChangePasswordScreen);\r\n","import {NavigationContainer, DefaultTheme, DarkTheme} from \"@react-navigation/native\";\r\nimport {CardStyleInterpolators, createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport MatchSuccessScreen from \"../screens/MatchSuccessScreen\";\r\nimport {Platform} from \"react-native\";\r\nimport ChangePasswordScreen from \"../screens/ChangePasswordScreen\";\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nfunction Navigation({theme}: ThemeProps): JSX.Element {\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            linking={LinkingConfiguration}\r\n            theme={theme.id === \"dark\" ? DarkTheme : DefaultTheme}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}}>\r\n                <Stack.Screen name=\"LoginScreen\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ChangePasswordScreen\"\r\n                    component={ChangePasswordScreen}\r\n                    options={{title: screenTitle(\"ChangePasswordScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"MatchSuccessScreen\"\r\n                    component={MatchSuccessScreen}\r\n                    options={{\r\n                        headerShown: false,\r\n                        cardStyleInterpolator:\r\n                            Platform.OS == \"ios\"\r\n                                ? CardStyleInterpolators.forVerticalIOS\r\n                                : CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                        title: screenTitle(\"MatchSuccessScreen\"),\r\n                    }}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.theme,\r\n}));\r\nexport type ConnectedThemeProviderProps = ConnectedProps<typeof reduxConnector>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    theme: state.settings.theme,\r\n}));\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ConnectedProps<typeof reduxConnector>;\r\n\r\nfunction ThemedStatusBar(props: ThemedStatusBarProps): JSX.Element {\r\n    const {theme} = props;\r\n    return <StatusBar style={theme == \"dark\" ? \"dark\" : \"light\"} />;\r\n}\r\n\r\nexport default reduxConnector(ThemedStatusBar);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport {registerRootComponent} from \"expo\";\r\nimport React from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport * as Linking from \"expo-linking\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\n\r\n// Example for disabling a warning :\r\n// YellowBox.ignoreWarnings([\"VirtualizedLists should never be nested\"]);\r\n\r\nfunction App() {\r\n    const isLoadingComplete = useCachedResources();\r\n    configureLocalization();\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <Navigation />\r\n                        <ThemedStatusBar />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {attemptLoginFromCache} from \"../state/auth/actions\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\n\r\nexport default function useCachedResources(): boolean {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // TODO Improve data loading\r\n                //  - show something if the backend couldn't be reached\r\n\r\n                // Load static data\r\n                await dispatch(loadProfileOffers());\r\n                await dispatch(loadProfileInterests());\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    //\"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n                });\r\n\r\n                // Attempt to authenticate using cached data\r\n                dispatch(attemptLoginFromCache());\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    return isLoadingComplete;\r\n}\r\n"],"sourceRoot":""}