{"version":3,"sources":["web-build/register-service-worker.js","src/state/types.ts","src/constants/config.ts","src/constants/universities.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/reducer.ts","src/api/converters.ts","src/state/profile/reducer.ts","src/state/matching/reducer.ts","src/navigation/utils.ts","src/state/navigation-middleware.ts","src/state/auth-storage-middleware.ts","src/state/static-storage-middleware.ts","src/state/store.ts","src/api/utils.ts","src/state/profile/actions.ts","src/state/auth/actions.ts","src/hooks/useCachedResources.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/LoginTabBar.tsx","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/FormTextInput.tsx","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/screens/TabLoginScreen.tsx","src/state/settings/actions.ts","src/components/forms/SignupForm.tsx","src/screens/TabSignupFormScreen.tsx","src/navigation/LoginNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabNotImplementedScreen.tsx","src/styles/picker.ts","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/DegreeToggle.tsx","src/components/RoleToggle.tsx","src/components/StaffRoleToggle.tsx","src/components/GenderToggle.tsx","src/components/BirthDatePicker.tsx","src/components/AvatarEditButton.tsx","src/components/forms/FormRow.tsx","src/components/FormattedDate.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/FormattedUniversity.tsx","src/components/MultiPicker.tsx","src/components/InterestsPicker.tsx","src/api/dto.ts","src/components/LanguagePicker.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/EnlargeableAvatar.tsx","src/styles/toggles.ts","src/components/GenderToggleMulti.tsx","src/components/RoleToggleMulti.tsx","src/styles/tooltips.ts","src/components/CustomTooltip.tsx","src/components/OfferControl.tsx","src/components/forms/EditProfileForm.tsx","src/screens/TabProfileScreen.tsx","src/components/modals/CustomModal.tsx","src/components/modals/BlockProfileModal.tsx","src/state/matching/actions.ts","src/styles/general.ts","src/components/ProfilePreview.tsx","src/screens/TabMatchingScreen.tsx","src/components/MultiUniversityPicker.tsx","src/components/DegreeToggleMulti.tsx","src/components/MultiLanguagePicker.tsx","src/screens/MatchFilteringScreen.tsx","src/screens/messaging/ChatScreen.tsx","src/components/messaging/ProfileMessagingCard.tsx","src/screens/messaging/IndividualMessagingTab.tsx","src/screens/messaging/GroupMessagingTab.tsx","src/navigation/MessagingNavigator.tsx","src/screens/TabHomeScreen.tsx","src/navigation/MainNavigator.tsx","src/styles/onboarding.ts","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/BirthDateControl.tsx","src/components/NationalityControl.tsx","src/screens/onboarding/OnboardingPersonalInfoScreen.tsx","src/screens/onboarding/OnboardingLanguageScreen.tsx","src/screens/onboarding/OnboardingInterestsScreen.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingTosScreen.tsx","src/screens/onboarding/OnboardingPrivacyScreen.tsx","src/screens/onboarding/index.ts","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/screens/MatchSuccessScreen.tsx","src/components/forms/ChangePasswordForm.tsx","src/screens/ChangePasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/ThemedStatusBar.tsx","src/App.tsx"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","AUTH_ACTION_TYPES","SETTINGS_ACTION_TYPES","PROFILE_ACTION_TYPES","MATCHING_ACTION_TYPES","Environment","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_URL","PARTNER_UNIVERSITIES","key","domain","country","extractNamesFromEmail","email","splitName","split","capitalize","str","length","toUpperCase","slice","firstname","lastname","getUniversityFromEmail","trim","find","uni","initialState","authenticated","token","connecting","validated","registerEmail","validatedEmail","onboarded","onboarding","birthdate","gender","nationality","role","degree","staffRole","languages","offerValues","interestIds","educationFields","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","en","welcome","picker","callToAction","login","tabsignin","tabsignup","emailAddress","password","passwordRepeat","send","forgotPassword","newPassword","forgotPasswordExplanation","cancel","signupWelcome","noResultsFound","tos","modal","disclaimer1","disclaimer2","decline","accept","readMore","privacy","emailNotificationsLabel","emailValidation","validating","success","createAccount","validation","atLeastOne","addAtLeastOne","invalid","invalidDomain","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","multiple","pageNotFound","pageDoesntExist","goHome","tabs","home","matching","messaging","profile","notifications","myProfile","editProfile","educationFieldsPicker","placeholder","searchPlaceholder","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","university","search","selectCountry","countryPickerLanguageCode","profileType","profileTypes","allRoles","student","staff","staffRoles","teaching","researcher","supporting","administrative","technical","ambassador","other","genders","male","female","dateOfBirth","months","0","1","2","3","4","5","6","7","8","9","10","11","fieldsOfEducation","apply","universities","universitiesPicker","logOut","name","title","subtitle","personalInfo","language","interests","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","submit","getStarted","profileCreated","spokenLanguages","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageLevels","a1","a2","b1","b2","c1","c2","native","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","tango","sneakers","baking","tarot","art","tea","picnicking","motorcycles","parties","shopping","couchsurfing","netflix","cooking","vegan","brunch","politics","bbq","surfing","spirituality","gardening","astrology","climbing","tennis","writer","comedy","wine","diy","coffee","sailing","music","cycling","activism","trivia","travel","instagram","museum","karaoke","fashion","disney","blogging","yoga","investing","petanque","theater","environmentalism","crossfit","dancing","hiking","running","golf","photography","vlogging","volunteering","tattoos","outdoors","esports","snowboarding","athlete","extrovert","podcasts","walking","vegetarian","reading","movies","foodie","soccer","skiing","sushi","introvert","skateboarder","festivals","fishing","swimming","expositions","gamer","piano","offerCategories","meet","discover","collaborate","offers","allOffers","help","block","warning","action","resetPassword","button","tabIndividual","tabGroup","noMatches","noResults","noResultsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","chat","continue","noOffersSelected","screenTitles","suffix","LoginForm","ForgotPassword","TabSignup","OnboardingNameScreen","OnboardingPersonalInfoScreen","OnboardingLanguageScreen","OnboardingInterestsScreen","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingTosScreen","OnboardingPrivacyScreen","IndividualMessagingTab","GroupMessagingTab","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","TabNotificationsScreen","TabProfileScreen","ValidationEmailSentScreen","ValidateEmailScreen","ChangePasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","MatchSuccessScreen","ForgotPasswordEmailSentScreen","signup","SUPPORTED_LOCALES","getDefaultLocale","l","Localization","LANGUAGES_CODES","getLocalizedLanguageItems","locale","translations","map","code","label","value","theme","localizedLanguageItems","stripSuperfluousOffers","filter","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","avatarUrl","avatar","Date","profileOffers","convertPartialProfileToCreateDto","toJSON","undefined","convertDtoToUser","user","offerIdToCategory","Map","filters","types","fetchedProfiles","fetchingProfiles","fetchingPage","canFetchMore","myMatches","fetchingMyMatches","rootNavigationRef","React","rootNavigate","route","current","navigate","screenTitle","i18n","t","readCachedCredentials","a","async","SecureStore","raw","JSON","parse","storeStaticData","data","log","storageObject","updatedAt","AsyncStorage","setItem","stringify","readCachedStaticData","getItem","rootReducer","combineReducers","auth","state","type","REGISTER_BEGIN","REGISTER_SUCCESS","verificationToken","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","LOG_IN_BEGIN","LOG_IN_FAILURE","LOG_IN_SUCCESS","names","LOG_OUT","SET_ONBOARDING_VALUES","values","SET_ONBOARDING_OFFER_VALUE","PROFILE_CREATE_SUCCESS","settings","SET_THEME","TOGGLE_THEME","SET_LOCALE","PROFILE_SET_FIELDS_SUCCESS","fields","LOAD_PROFILE_OFFERS_SUCCESS","category","LOAD_PROFILE_INTERESTS_SUCCESS","sort","b","FETCH_USER_SUCCESS","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","offerId","SET_FILTERS","FETCH_PROFILES_BEGIN","FETCH_PROFILES_FAILURE","FETCH_PROFILES_SUCCESS","profiles","concat","FETCH_PROFILES_REFRESH","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MY_MATCHES_SUCCESS","LIKE_PROFILE_SUCCESS","profileId","p","DISLIKE_PROFILE_SUCCESS","BLOCK_PROFILE_SUCCESS","combinedMiddleware","applyMiddleware","thunk","next","usingCachedCredentials","available","toStore","storeAuthInformation","fromCache","FORGOT_PASSWORD_SUCCESS","RESET_PASSWORD_SUCCESS","matchStatus","createStore","encodeRequestParams","args","Object","keys","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","requestBackend","endpoint","method","params","body","verbose","authToken","headers","Accept","store","getState","Authorization","accessToken","Alert","alert","codes","formattedParams","fetch","response","json","setProfileFieldsSuccess","createProfile","dispatch","loadProfileOffersSuccess","loadProfileInterestsSuccess","fetchUserSuccess","registerBegin","requestRegister","registerSuccess","registerFailure","errors","REGISTER_FAILURE","loginBegin","loginSuccess","loginFailure","requestLogin","payload","message","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","forgotPasswordSuccess","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","setOnboardingValues","loggedInFromCache","light","text","textWhite","textBlack","textLight","textInverted","background","cardBackground","accent","accentSlight","accentSecondary","accentTernary","tint","actionNeutral","okay","warn","tabIconDefault","tabIconSelected","componentBorder","dark","preTheme","generator","styles","themes","forEach","this","props","navigation","themedStyles","View","style","container","Text","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginTop","paddingVertical","color","withTheme","reduxConnector","connect","Staging","wrapper","ActivityIndicator","size","successText","path","fallbackRoute","fallback","Platform","OS","location","setTimeout","attemptRedirectToApp","width","height","marginVertical","textAlign","lineHeight","FontAwesome","mailIcon","description","config","prefixes","Linking","screens","LoginScreen","TabSignin","MainScreen","TabHome","TabMatching","MAtchFilteringScren","TabMessaging","ChatScreen","MessagingScreen","TabProfile","TabNotifications","ValidateEmailSentScreen","ChangePassword","OnboardingScreen","TabBarComponent","index","isFocused","event","emit","target","canPreventDefault","defaultPrevented","descriptors","position","tabBarWrapper","tabBar","routes","options","toLowerCase","inputRange","_","i","opacity","Animated","interpolate","outputRange","tabButton","tabButtonBg","accessibilityRole","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","onLongPress","tabButtonText","tabButtonTextFocused","Component","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","maxWidth","flexDirection","letterSpacing","textTransform","waveImageStyle","bottom","margin","InputLabel","otherProps","children","InputErrorText","errorStr","marginBottom","ValidatedTextInput","focused","showErrorText","wrapperStyle","untouched","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","onBlur","onFocus","e","setState","defaultProps","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","formStyle","inputErrorText","inputRow","actionRow","buttonMajor","borderRadius","buttonMajorText","getLoginTextInputsStyleProps","wrapperVerticalMargin","outline","commonStyle","textInputWrapper","textInput","paddingHorizontal","borderWidth","textInputError","borderBottomWidth","borderBottomColor","textInputValid","placeholderTextColor","loginTabsStyles","formWrapper","versionInfoContainer","left","versionText","versionDisclaimerContainer","versionDisclaimerIcon","debugContainer","debugTitle","debugButton","debugButtonText","toggleThemeContainer","right","toggleThemeButton","toggleThemeIcon","FormError","LoginFormSchema","shape","LoginFormComponent","setFieldValue","oldProps","onSuccessfulSubmit","remoteErrors","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","keyboardType","autoCompleteType","secureTextEntry","loginButton","disabled","forgotPwdLink","forgotPasswordText","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","submitForm","formikCfg","goBack","buttonCancel","buttonSend","marginLeft","marginRight","LoginTabComponent","KeyboardAvoidingView","behavior","Math","round","random","firstName","lastName","level","MaterialIcons","MaterialCommunityIcons","ForgotPasswordTabComponent","SubTabLogin","SubTabForgotPassword","SignupFormSchema","SignupForm","failure","validateOnChange","createAccountButton","inlineInputs","inlineInputLeft","inlineInputRight","SignupTabComponent","contentContainerStyle","SigninStack","createStackNavigator","Tab","createMaterialTopTabNavigator","LoginNavigator","Navigator","LoginTabBar","Screen","component","headerShown","TabSignupFormScreen","LogOutButton","onLogOut","TabNotImplementedScreen","FontAwesome5","constructionIcon","separator","logoutButton","pickerStyles","overlay","maxHeight","overflow","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","openButton","borderStyle","borderColor","openButtonText","selectedItemView","selectedItemText","SectionedMultiPicker","selectRef","items","open","tempSelected","selected","has","get","set","section","genSectionLabel","genLabel","updateItems","_toggleSelector","onChange","searchablePlaceholder","showSelected","viewProps","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","selectedItems","toString","val","numberOfLines","ref","onSelectedItemsChange","onCancel","close","onConfirm","IconRenderer","uniqueKey","displayKey","subKey","showDropDowns","readOnlyHeadings","showChips","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsComponent","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","EducationFieldCategory","marginHorizontal","scrollView","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","fontFamily","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","f","push","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","multipleText","DegreeToggle","buttonLabels","d","idx","onUpdate","selectedIndex","indexOf","buttons","containerStyle","onSelect","r","StaffRoleToggle","pickerItems","Picker","Item","selectedValue","onValueChange","GenderToggle","maxDate","now","setFullYear","getFullYear","BirthDatePicker","showModal","hideModal","onHide","date","minimumDate","maximumDate","mode","AvatarEditButton","ensurePermission","Permissions","status","showPicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","result","cancelled","onPictureSelected","buttonStyle","FormRowComponent","renderModalContent","renderInput","modalTouchable","setModal","activeOpacity","modalWrapper","modalLabel","modalErrorText","modalActions","modalCancel","modalActionText","modalOk","modalOpen","initialValue","validate","validator","validateSync","setError","err","display","overrideModal","noModal","locked","cardWrapper","cardContent","cardLabel","rightIconContainer","rightIcon","Modal","transparent","visible","animationType","minHeight","FormattedDate","localizedMonth","getMonth","formattedDate","getDate","NationalityPicker","countryCode","filterProps","withFlag","withFilter","withEmoji","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","flagSize","FormattedUniversity","MultiPicker","dropdownWrapperHeight","overlayStyle","isVisible","onRequestClose","onBackdropPress","onLayout","nativeEvent","layout","searchable","defaultValue","onChangeItem","scrollViewProps","keyboardShouldPersistTaps","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","OfferCategory","allInterests","updateValues","interest","forceUpdate","interestId","initOfferValue","genderVal","allowChooseGender","typeVal","allowChooseProfileType","languageItems","LanguagePicker","single","pickerItem","pickerLabel","arrowSize","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","LanguageLevelPicker","item","pickerContainer","SpokenLanguagesInput","addRow","computeErrors","hasErrors","splice","rows","rowContainer","inputRowContainer","pickerStyle","inputs","languageCodes","setLanguageCode","levelPicker","setLanguageLevel","removeRow","deleteIcon","errorRowContainer","canAddMore","plusButtonWrapper","plusButton","flexGrow","EnlargeableAvatar","enlarged","avatarProps","source","toggleEnlarged","backdropStyle","overlayBackdrop","rounded","enlargedAvatarContainer","avatarStyle","enlargedAvatar","aspectRatio","getToggleStyleProps","nobuttonBariant","innerBorderStyle","buttonContainerStyle","textStyle","flexShrink","selectedButtonStyle","selectedTextStyle","noButtonVariant","selectMultiple","selectedIndexes","roles","tooltipStyles","alignContent","CustomTooltip","popover","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","checked","setAllValues","checkboxContainer","offerName","helpIcon","buttonsWrapper","FormFieldSpacer","EditProfileForm","avatarTitle","avatarSource","uri","fullName","profileFieldComponents","FormRow","cardText","hide","onFieldChanged","cc","OfferCategoryRow","Discover","onApply","Collaborate","Meet","screenWrapper","topView","imageInfo","image","mimeType","fail","SET_AVATAR_FAILURE","fileName","url","s3Url","blob","imageBlob","response2","universityContainer","ScrollView","scrollWrapper","keyboardVerticalOffset","offerVal","updatedVal","alignSelf","paddingTop","avatarAccessory","textShadowRadius","addListener","setProfileFields","CustomModal","modalVisible","modalViewStyle","centeredView","setModalVisible","modalView","renderContent","BlockProfileModal","onBlock","actionButtonsWrapper","TouchableHighlight","actionButton","actionButtonCancel","actionText","actionButtonDecline","fetchProfilesFailure","fetchProfilesSuccess","refreshFetchedProfiles","likeProfileSuccess","dislikeProfileSuccess","blockProfileSuccess","fetchMyMatches","resp","styleTextThin","styleTextLight","ProfilePreview","expanded","ReAnimated","Value","PROFILE_PREVIEW_COLLAPSED_HEIGHT","blockModalOpen","animating","x","y","timing","toValue","PROFILE_PREVIEW_EXPANDED_HEIGHT","duration","easing","Easing","elastic","start","out","linear","onFinish","onHidden","collapse","expand","onExpand","univ","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","onSwipeableRightWillOpen","onSwipeLeft","onSwipeableLeftWillOpen","onSwipeRight","leftThreshold","rightThreshold","renderRightActions","swipeAction","swipeActionRight","swipeActionContent","swipeActionContentRight","swipeActionText","renderLeftActions","swipeActionLeft","swipeActionContentLeft","toggleExpanded","touchable","collapsedContent","avatarContainer","infoContainer","infoText","expandedContent","expandedSectionTitle","chipsContainer","ItemChip","blockButton","blockButtonIcon","toProfileId","chipStyles","chip","chipText","paddingRight","sideMargin","paddingLeft","verticalSpacing","cardPadding","flexWrap","actionContainer","justRefreshed","scrollViewRef","nonEmptyOrUndef","k","filterParams","page","limit","meta","currentPage","totalPages","fetchMore","hiddenProfiles","previewComponents","scroll","scrollTo","animated","toUserId","scroller","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","layoutMeasurement","contentOffset","distanceToBottom","contentSize","matchContainer","loadingIndicatorContainer","noResultsContainer","noResultsText1","noResultsText2","topBar","flexBasis","filtersIcon","headerContainer","MatchingHeaderRight","MultiUniversityPicker","univKey","styleProps","MultiLanguagePicker","languageId","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","sectionTitle","entryContainer","entryLabel","Switch","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","entryControls","ClearFilterButton","twoLineEntryContainer","headerStyles","headerButtonIcon","FilteringHeaderLeft","FilteringHeaderRight","applyFilters","ProfileMessagingCard","CARD_HEIGHT","overshootRight","SwipeActionButton","icon","swipeActionButton","swipeActionButtonIcon","ACTION_BUTTON_WIDTH","fetchingMatches","matchesContainer","noMatchesContainer","noMatchesText","Stack","MessagingNavigator","insets","useSafeAreaInsets","headerMode","tabBarOptions","top","tabBarLabel","alphaText","paddingBottom","TabNavigator","createBottomTabNavigator","TabBarIcon","TabBarLabel","TabHomeStack","TabHomeNavigator","TabMatchingStack","TabMatchingNavigator","headerLeft","headerTitle","headerTitleStyle","headerTitleAlign","headerRight","TabNotificationsStack","TabNotificationsNavigator","TabProfileStack","TabProfileNavigator","initialRouteName","activeTintColor","tabStyle","iconStyle","tabBarIcon","onboardingStyle","slideWrapper","header","slideContentWrapper","Dimensions","slideNavWrapper","navButton","navButtonIcon","finishButtonText","tosSlideStyle","actionsWrapper","actionButtonTextDecline","actionButtonTextAccept","readMoreText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","OnboardingSlide","hideNavNext","hasNext","hasPrevious","previous","VALIDATION_SCHEMA","nextProps","prev","Keyboard","dismiss","getOnboardingTextInputsStyleProps","BirthDateControl","buttonOk","dateText","NationalityControl","roleButton","roleButtonIconStudent","roleButtonTextStudent","roleButtonIconStaff","roleButtonTextStaff","studentColor","staffColor","common","roleButtonText","roleButtonIcon","studentThemedStyles","staffThemedStyles","icons","buttonIcon","buttonText","isStudent","studentRender","staffRender","TOSDeclinedModal","TextLink","textProps","declined","ONBOARDING_SCREENS","ONBOARDING_ORDER","OnboardingStack","ComponentClass","temp","OnboardingNavigator","showLabel","showIcon","springConfig","stiffness","damping","mass","swipeEnabled","lazy","lazyPreloadDistance","ReciprocalMatchScreen","ChangePasswordFormSchema","ChangePasswordForm","initialRoute","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","screenOptions","MainNavigator","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","forFadeFromBottomAndroid","currentTheme","StatusBar","registerRootComponent","isLoadingComplete","setLoadingComplete","SplashScreen","cached","Font","font","credentials","loadResourcesAndDataAsync","useCachedResources","fallbacks"],"mappings":"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","file":"static/js/app.6aa35291.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {ThemeKey} from \"../types\";\r\nimport {\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    LikeProfileResponseDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    role: Role | null;\r\n    degree: Degree | null;\r\n    staffRole: StaffRole | null;\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    connecting: boolean;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n};\r\n\r\nexport type SettingsState = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    fetchedProfiles: UserProfile[];\r\n    fetchingProfiles: boolean;\r\n    fetchingPage: number;\r\n    canFetchMore: boolean;\r\n    myMatches: UserProfile[];\r\n    fetchingMyMatches: boolean;\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n\r\n/*### AUTH ###*/\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_BEGIN = \"AUTH/LOG_IN_BEGIN\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type RegisterSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type RegisterFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type LogInBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\n\r\nexport type LogInFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type LogOutAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ValidateAccountFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {\r\n    type: string;\r\n    errors: string[];\r\n};\r\n\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInBeginAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction;\r\n\r\n/*### SETTINGS ###*/\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction;\r\n\r\n/*### PROFILE ###*/\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\n\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\n\r\nexport type SetAvatarFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\n/*### MATCHING ###*/\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n    matchStatus: LikeProfileResponseDto;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type FetchProfilesRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type BeginFetchProfilesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type BeginFetchMyMatchesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | BeginFetchProfilesAction\r\n    | FetchProfilesSuccessAction\r\n    | FetchProfilesFailureAction\r\n    | FetchProfilesRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | BeginFetchMyMatchesAction\r\n    | FetchMyMatchesFailureAction\r\n    | FetchMyMatchesSuccessAction;\r\n","import Constants from \"expo-constants\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = extra.version;\r\nexport const APP_SCHEME: string = extra.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\n\r\n/**\r\n * The number of profiles fetched per request when scrolling in the Matching tab.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8;\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n * (limited for rendering reasons).\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    domain: string;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        domain: \"uca.es\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        domain: \"univ-brest.fr\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        domain: \"ug.edu.pl\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        domain: \"um.edu.mt\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        domain: \"kms.uni-kiel.de\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        domain: \"unist.hr\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Extracts a partner university from a given email.\r\n * @param email A valid email address.\r\n * @returns a University object if one matches the given email, null otherwise.\r\n */\r\nexport function getUniversityFromEmail(email: string): University | null {\r\n    const split = email.split(\"@\");\r\n    if (split.length > 0) {\r\n        const domain = split[1].trim();\r\n        return PARTNER_UNIVERSITIES.find((uni: University) => uni.domain == domain) || null;\r\n    }\r\n    return null;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {\r\n    AuthState,\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n    PROFILE_ACTION_TYPES,\r\n    OnboardingState,\r\n} from \"../types\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    role: null,\r\n    degree: null,\r\n    staffRole: null,\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    connecting: false,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = <RegisterBeginAction>action;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = <RegisterSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = <ValidateAccountSuccessAction>action;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_BEGIN: {\r\n            return {...state, connecting: true};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            return {...state, connecting: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = <LogInSuccessAction>action;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                connecting: false,\r\n                authenticated: true,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = <SetOnboardingValuesAction>action;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = <SetOnboardingOfferValueAction>action;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole =\r\n    | \"teaching\"\r\n    | \"researcher\"\r\n    | \"supporting\"\r\n    | \"administrative\"\r\n    | \"technical\"\r\n    | \"ambassador\"\r\n    | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\r\n    \"teaching\",\r\n    \"researcher\",\r\n    \"supporting\",\r\n    \"administrative\",\r\n    \"technical\",\r\n    \"ambassador\",\r\n    \"other\",\r\n];\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 18;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\n\r\n// Email domains are not verified to allow for server-side whitelisting of specific adresses.\r\n// const VALID_EMAIL_DOMAINS = PARTNER_UNIVERSITIES.map((uni: University) => uni.domain);\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n/*.test(\r\n    \"email-domain\",\r\n    \"validation.email.invalidDomain\",\r\n    (value: string | null | undefined) =>\r\n        value !== null && value !== undefined && VALID_EMAIL_DOMAINS.some((domain) => value.endsWith(domain)),\r\n);*/\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n","import {MIN_PASSWORD_LENGTH} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        welcome: \"Welcome\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n\r\n        login: \"Log in\",\r\n        tabsignin: \"Log in\",\r\n        tabsignup: \"Sign up\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        send: \"Send\",\r\n        forgotPassword: \"Forgot Password\",\r\n        newPassword: \"New Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        cancel: \"Cancel\",\r\n        signupWelcome: \"We can't wait for you to join our community!\\n\\nJust one more step.\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        noResultsFound: \"No results found\",\r\n        tos: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\",\r\n                disclaimer2: \"Declining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms of service \", \"here\", \".\"],\r\n        },\r\n        privacy: {\r\n            readMore: [\"Read more about our privacy policy \", \"here\", \".\"],\r\n        },\r\n        emailNotificationsLabel: \"Send me useful notifications by email.\",\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        createAccount: \"Create account\",\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n                invalidDomain: \"Your email address must match one of our partner universities.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            languages: {\r\n                multiple: \"You cannot add two entries for the same language.\",\r\n            },\r\n        },\r\n        pageNotFound: \"404: Page not found.\",\r\n        pageDoesntExist: \"This page doesn't exist.\",\r\n        goHome: \"Go to home screen\",\r\n        tabs: {\r\n            home: \"Home\",\r\n            matching: \"Matching\",\r\n            messaging: \"Messaging\",\r\n            profile: \"Profile\",\r\n            notifications: \"Notifications\",\r\n        },\r\n        myProfile: \"My Profile\",\r\n        editProfile: \"Edit profile\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSC1\",\r\n            bsc2: \"BSC2\",\r\n            bsc3: \"BSC3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        search: \"Search\",\r\n        selectCountry: \"Select country\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            researcher: \"Researcher\",\r\n            supporting: \"Supporting\",\r\n            administrative: \"Administrative\",\r\n            technical: \"Technical\",\r\n            ambassador: \"SEA-EU Ambassador\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        fieldsOfEducation: \"Fields of education\",\r\n        apply: \"Apply\",\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Western Brittany\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        logOut: \"Log out\",\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            personalInfo: {\r\n                title: \"Profile\",\r\n            },\r\n            language: {\r\n                title: \"Languages\",\r\n            },\r\n            interests: {\r\n                title: \"Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff position\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            tos: {\r\n                title: \"Terms of service\",\r\n                subtitle:\r\n                    \"I am aware that I am entering a space of intercultural exchange and I am committed to caring and respectful exchanges with other members. My name and surname will be visible by other users.\",\r\n            },\r\n            privacy: {\r\n                title: \"Privacy policy\",\r\n                subtitle:\r\n                    \"I am entering a university community. I agree to provide some personal data, that will not be shared with anyone but the SEA-EU Around community.\",\r\n            },\r\n            submit: \"Submit\",\r\n            getStarted: \"Get Started\",\r\n            profileCreated: \"Welcome! Your profile is now created.\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"native\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            \"language-exchange\": \"Language exchange\",\r\n            \"second-hand-apparel\": \"Second hand apparel\",\r\n            \"board-games\": \"Board games\",\r\n            \"road-trips\": \"Road trips\",\r\n            tango: \"Tango\",\r\n            sneakers: \"Sneakers\",\r\n            sports: \"Sports\",\r\n            baking: \"Baking\",\r\n            tarot: \"Tarot\",\r\n            art: \"Art\",\r\n            tea: \"Tea\",\r\n            picnicking: \"Picnicking\",\r\n            motorcycles: \"Motorcycles\",\r\n            parties: \"Parties\",\r\n            shopping: \"Shopping\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            netflix: \"Netflix\",\r\n            cooking: \"Cooking\",\r\n            vegan: \"Vegan\",\r\n            brunch: \"Brunch\",\r\n            \"motor-sports\": \"Motor sports\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            \"working-out\": \"Working out\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            \"amateur-cook\": \"Amateur cook\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            \"vintage-fashion\": \"Vintage fashion\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            \"second-hand-shopping\": \"Second hand shopping\",\r\n            politics: \"Politics\",\r\n            bbq: \"BBQ\",\r\n            surfing: \"Surfing\",\r\n            spirituality: \"Spirituality\",\r\n            gardening: \"Gardening\",\r\n            astrology: \"Astrology\",\r\n            climbing: \"Climbing\",\r\n            tennis: \"Tennis\",\r\n            writer: \"Writer\",\r\n            comedy: \"Comedy\",\r\n            wine: \"Wine\",\r\n            diy: \"Diy\",\r\n            coffee: \"Coffee\",\r\n            sailing: \"Sailing\",\r\n            music: \"Music\",\r\n            cycling: \"Cycling\",\r\n            activism: \"Activism\",\r\n            trivia: \"Trivia\",\r\n            travel: \"Travel\",\r\n            instagram: \"Instagram\",\r\n            museum: \"Museum\",\r\n            karaoke: \"Karaoke\",\r\n            fashion: \"Fashion\",\r\n            disney: \"Disney\",\r\n            blogging: \"Blogging\",\r\n            yoga: \"Yoga\",\r\n            investing: \"Investing\",\r\n            petanque: \"Petanque\",\r\n            theater: \"Theater\",\r\n            environmentalism: \"Environmentalism\",\r\n            crossfit: \"Crossfit\",\r\n            dancing: \"Dancing\",\r\n            hiking: \"Hiking\",\r\n            running: \"Running\",\r\n            golf: \"Golf\",\r\n            photography: \"Photography\",\r\n            vlogging: \"Vlogging\",\r\n            volunteering: \"Volunteering\",\r\n            tattoos: \"Tattoos\",\r\n            outdoors: \"Outdoors\",\r\n            esports: \"Esports\",\r\n            snowboarding: \"Snowboarding\",\r\n            athlete: \"Athlete\",\r\n            extrovert: \"Extrovert\",\r\n            podcasts: \"Podcasts\",\r\n            walking: \"Walking\",\r\n            vegetarian: \"Vegetarian\",\r\n            reading: \"Reading\",\r\n            movies: \"Movies\",\r\n            foodie: \"Foodie\",\r\n            soccer: \"Soccer\",\r\n            skiing: \"Skiing\",\r\n            sushi: \"Sushi\",\r\n            introvert: \"Introvert\",\r\n            skateboarder: \"Skateboarder\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            swimming: \"Swimming\",\r\n            expositions: \"Expositions\",\r\n            gamer: \"Gamer\",\r\n            piano: \"Piano\",\r\n            \"foodie-tour\": \"Foodie Tour\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n        },\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offers: \"Offers\",\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Provide a couch\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"do-a-campus-tour\": {\r\n                name: \"Do a campus tour\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"help-on-a-project\": {\r\n                name: \"Help on a project\",\r\n                help: \"I am open to helping someone work on a project.\",\r\n            },\r\n            \"look-for-collaborators\": {\r\n                name: \"Look for collaborators\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-questions\": {\r\n                name: \"Answer questions\",\r\n                help: \"I can give information about my university or answer to general questions.\",\r\n            },\r\n            \"talk-a-bit\": {\r\n                name: \"Talk a bit\",\r\n                help: \"I would like to get to know new people.\",\r\n            },\r\n            \"chat-to-practice\": {\r\n                name: \"Chat to practice\",\r\n                help: \"I would not mind chatting with other users who would like to improve their language skills\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        block: {\r\n            warning:\r\n                \"Are you sure you want to block this user? You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: [\"Your password has been updated! You may now \", \"log in\"],\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            tabIndividual: \"Matches\",\r\n            tabGroup: \"Groups\",\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noResultsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match !\",\r\n                chat: \"Start chatting\",\r\n                continue: \"Keep scrolling\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            LoginForm: \"Login\",\r\n            ForgotPassword: \"Forgot Password\",\r\n            TabSignup: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingPersonalInfoScreen: \"Profile\",\r\n            OnboardingLanguageScreen: \"Profile\",\r\n            OnboardingInterestsScreen: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingTosScreen: \"Terms of Service\",\r\n            OnboardingPrivacyScreen: \"Privacy Policy\",\r\n            IndividualMessagingTab: \"Messages\",\r\n            GroupMessagingTab: \"Groups\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Browse\",\r\n            MatchFilteringScreen: \"Filters\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            TabProfileScreen: \"Profile\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ChangePasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            MatchSuccessScreen: \"Match!\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n        },\r\n    },\r\n    fr: {\r\n        welcome: \"Bienvenue\",\r\n        login: \"Connexion\",\r\n        signup: \"Inscription\",\r\n        emailAddress: \"Adresse email\",\r\n        password: \"Mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    return SUPPORTED_LOCALES.find((l: SupportedLocale) => l == Localization.locale) || \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // Set the locale on startup\r\n    i18n.locale = getDefaultLocale();\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"de\",\r\n    \"en\",\r\n    \"hr\",\r\n    \"es\",\r\n    \"fr\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport {SettingsState, SettingsAction, SetThemeAction, SetLocaleAction, SETTINGS_ACTION_TYPES} from \"../types\";\r\nimport translations from \"../../constants/translations\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const trans = (translations as {[key: string]: {[key: string]: unknown}})[locale];\r\n    const languageNames = trans.languageNames as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    theme: \"light\",\r\n    locale: getDefaultLocale(),\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = <SetThemeAction>action;\r\n            return {...state, theme};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            return {...state, theme: state.theme == \"light\" ? \"dark\" : \"light\"};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = <SetLocaleAction>action;\r\n            return {...state, locale, localizedLanguageItems: getLocalizedLanguageItems(locale)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    OfferValueDto,\r\n    ResponseProfileDto,\r\n    ResponseUserDto,\r\n} from \"./dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    return {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: dto.interests || [],\r\n        languages: dto.languages || [],\r\n    };\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    return {...common, ...(profile.type == \"staff\" ? {staffRole: profile.staffRole!} : {degree: profile.degree!})};\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(profile: Partial<UserProfile>): Partial<CreateProfileDto> {\r\n    return {\r\n        ...profile,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferDto} from \"../../api/dto\";\r\nimport {\r\n    ProfileState,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    LoadProfileOffersSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n    FetchUserSuccessAction,\r\n    SetAvatarSuccessAction,\r\n    AUTH_ACTION_TYPES,\r\n} from \"../types\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n};\r\n\r\nexport const profileReducer = (state: ProfileState = initialState, action: ProfileAction): ProfileState => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = <SetProfileFieldsSuccessAction>action;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers} = <LoadProfileOffersSuccessAction>action;\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = <LoadProfileInterestsSuccessAction>action;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = <FetchUserSuccessAction>action;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = <SetAvatarSuccessAction>action;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {UserProfile} from \"../../model/user-profile\";\r\nimport {\r\n    MatchingState,\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    FetchProfilesSuccessAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    MatchingFiltersState,\r\n    FetchMyMatchesSuccessAction,\r\n    AUTH_ACTION_TYPES,\r\n} from \"../types\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    types: [],\r\n});\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    fetchedProfiles: [],\r\n    fetchingProfiles: false,\r\n    fetchingPage: 1,\r\n    canFetchMore: true,\r\n    myMatches: [],\r\n    fetchingMyMatches: false,\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = <SetOfferFilterAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = <SetMatchingFiltersAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, fetchingProfiles: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, fetchingProfiles: false, canFetchMore: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {profiles, canFetchMore} = <FetchProfilesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.concat(profiles),\r\n                fetchingProfiles: false,\r\n                fetchingPage: state.fetchingPage + 1,\r\n                canFetchMore,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: [],\r\n                fetchingProfiles: false,\r\n                fetchingPage: 1,\r\n                canFetchMore: true,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, fetchingMyMatches: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {...state, fetchingMyMatches: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {profiles} = <FetchMyMatchesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                myMatches: profiles,\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <LikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <DislikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = <BlockProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                fetchedProfiles: [],\r\n                fetchingProfiles: false,\r\n                fetchingPage: 1,\r\n                canFetchMore: true,\r\n                myMatches: [],\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef} from \"@react-navigation/native\";\r\nimport {NavigatorRoute} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function rootNavigate(route: NavigatorRoute): void {\r\n    rootNavigationRef.current?.navigate(route as string);\r\n}\r\n\r\nexport function attemptRedirectToApp(path: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS == \"web\") {\r\n        const link = `${APP_SCHEME}://${path}`;\r\n        window.location.replace(link);\r\n\r\n        console.log(`window.location.replace(${link})`);\r\n        // TODO fallback after a timeout ?\r\n        setTimeout(fallback, 5000);\r\n    } else fallback();\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {\r\n    AppState,\r\n    AUTH_ACTION_TYPES,\r\n    LikeProfileSuccessAction,\r\n    LogInSuccessAction,\r\n    MATCHING_ACTION_TYPES,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (/*store: MiddlewareAPI<Dispatch, AppState>*/) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    // TEMP action printing\r\n    console.log(action.type);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            rootNavigate(user.onboarded ? \"MainScreen\" : \"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            // Let the user click\r\n            // attemptRedirectToApp(\"login\", \"TabSignin\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            return;\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {matchStatus} = action as LikeProfileSuccessAction;\r\n            if (matchStatus == \"matched\") rootNavigate(\"MatchSuccessScreen\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {TokenDto} from \"../api/dto\";\r\nimport {AppState, AUTH_ACTION_TYPES, LogInSuccessAction} from \"./types\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nexport type CredentialsStorageObject = {\r\n    email: string;\r\n    token: TokenDto;\r\n};\r\n\r\n/**\r\n * Override auth information in secure storage. Data will be stored if expo-secure-store is available on the device.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nfunction storeAuthInformation(email: string, token: TokenDto): void {\r\n    // Use expo-secure-store to securely store sensitive data\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) {\r\n            const toStore: CredentialsStorageObject = {email, token};\r\n            SecureStore.setItemAsync(\"auth\", JSON.stringify(toStore));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from the secure storage.\r\n */\r\nfunction discardAuthInformation(): void {\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) SecureStore.deleteItemAsync(\"auth\");\r\n    });\r\n}\r\n\r\n/**\r\n * Read auth information from secure storage, if available on the device.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const available = await SecureStore.isAvailableAsync();\r\n    if (available) {\r\n        const raw = await SecureStore.getItemAsync(\"auth\");\r\n        return raw ? JSON.parse(raw) : false;\r\n    } else return false;\r\n}\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n            // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n            if (!usingCachedCredentials) storeAuthInformation(user.email, token);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {\r\n    AppState,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./types\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n */\r\nfunction storeStaticData<T>(key: string, data: T) {\r\n    console.log(`Updating cache entry for '${key}'.`);\r\n\r\n    // Store the data along with the date\r\n    const storageObject = {\r\n        updatedAt: new Date().toJSON(),\r\n        data,\r\n    };\r\n\r\n    console.log(\"date\", storageObject.updatedAt);\r\n\r\n    AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the interests cache.\");\r\n                storeStaticData(\"interests\", interests);\r\n            }\r\n            break;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the offers cache.\");\r\n                storeStaticData(\"offers\", offers);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(thunk, authStorageMiddleware, staticStorageMiddleware, navigationMiddleware);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {TokenDto} from \"./dto\";\r\n\r\nexport type Primitive = string | number | boolean | Primitive[] | undefined;\r\nexport type URLParams = {[key: string]: Primitive};\r\nexport type URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\nexport type RequestResponse = {success: boolean; codes: string[]} & {[key: string]: unknown};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    auth = false,\r\n    verbose = false,\r\n    authToken: TokenDto | undefined = undefined,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (auth) {\r\n        const token = authToken || store.getState().auth.token;\r\n        if (token) headers.Authorization = `Bearer ${token.accessToken}`;\r\n        else {\r\n            console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {success: false, codes: [\"error.no-auth\"]};\r\n        }\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n\r\n    try {\r\n        if (verbose) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        const response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        const json = await response.json();\r\n        if (verbose) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        console.error(\r\n            `An unexpected error occured with a request to ${endpoint}. ` +\r\n                `Method = ${method}, auth = ${auth}, params=${JSON.stringify(params)}, body=${JSON.stringify(body)}`,\r\n        );\r\n        console.error(error);\r\n        return {success: false, codes: [\"error.unknown\"]};\r\n    }\r\n}\r\n","import {\r\n    AppThunk,\r\n    CreateProfileSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n    LoadProfileOffersSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n    FetchUserSuccessAction,\r\n    SetAvatarSuccessAction,\r\n    SetAvatarFailureAction,\r\n} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    ResponseUserDto,\r\n    SignedUrlResponseDto,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {convertDtoToUser, convertPartialProfileToCreateDto} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {readCachedStaticData} from \"../static-storage-middleware\";\r\n\r\nexport const setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch) => {\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, true);\r\n    if (response.success) {\r\n        dispatch(setProfileFieldsSuccess(fields));\r\n    } else {\r\n        console.log(\"error in setProfileFields\");\r\n    }\r\n};\r\n\r\nexport const createProfileSuccess = (): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, true);\r\n    if (response.success) dispatch(createProfileSuccess());\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n\r\n    if (fromCache) {\r\n        // If we already have the data in cache, we send the request in case an update is needed, but we're not awaiting for it\r\n        requestBackend(\"offers\", \"GET\", {updatedAt: fromCache.updatedAt}, {}).then((response) => {\r\n            const offers = response.data as OfferDto[];\r\n            const cached = offers.length == 0;\r\n            if (response.success) dispatch(loadProfileOffersSuccess(cached ? fromCache.data : offers, cached));\r\n        });\r\n    } else {\r\n        const response = await requestBackend(\"offers\", \"GET\");\r\n        if (response.success) dispatch(loadProfileOffersSuccess(response.data as OfferDto[]));\r\n    }\r\n};\r\n\r\nexport const loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n\r\n    if (fromCache) {\r\n        // If we already have the data in cache, we send the request in case an update is needed, but we're not awaiting for it\r\n        requestBackend(\"interests\", \"GET\", {updatedAt: fromCache.updatedAt}, {}).then((response) => {\r\n            const interests = response.data as InterestDto[];\r\n            const cached = interests.length == 0;\r\n            if (response.success) dispatch(loadProfileInterestsSuccess(cached ? fromCache.data : interests, cached));\r\n        });\r\n    } else {\r\n        const response = await requestBackend(\"interests\", \"GET\");\r\n        if (response.success) dispatch(loadProfileInterestsSuccess(response.data as InterestDto[]));\r\n    }\r\n};\r\n\r\nexport const loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, true);\r\n    if (response.success) {\r\n        const dto = response.data as ResponseUserDto;\r\n        dispatch(fetchUserSuccess(convertDtoToUser(dto)));\r\n    }\r\n};\r\n\r\nexport const fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nexport const setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, true);\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (response.success) {\r\n        const dto = response.data as SignedUrlResponseDto;\r\n        const fileName = dto.fileName;\r\n        const url = dto.s3Url;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(url, {\r\n                method: \"PUT\",\r\n                body: imageBlob,\r\n            });\r\n\r\n            // Submit the file name to the server\r\n            const response2 = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, true);\r\n\r\n            if (response2.success) {\r\n                const {avatar} = response2.data as AvatarSuccessfulUpdatedDto;\r\n                dispatch(setAvatarSuccess(avatar));\r\n            } else fail();\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            fail();\r\n        }\r\n    } else fail();\r\n};\r\n","import {\r\n    LogOutAction,\r\n    LogInBeginAction,\r\n    LogInSuccessAction,\r\n    LogInFailureAction,\r\n    AppThunk,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    RegisterFailureAction,\r\n    ValidateAccountSuccessAction,\r\n    ValidateAccountFailureAction,\r\n    OnboardingState,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n    ForgotPasswordSuccessAction,\r\n    ForgotPasswordFailureAction,\r\n    ResetPasswordSuccessAction,\r\n} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport store from \"../store\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {readCachedCredentials} from \"../auth-storage-middleware\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {FailableAppThunk} from \"../../types\";\r\n\r\n// Register actions\r\n\r\nexport const registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): FailableAppThunk => async (dispatch) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = store.getState().settings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.success) {\r\n        dispatch(registerSuccess(response.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure(response.codes));\r\n        return {success: false, errors: response.codes};\r\n    }\r\n};\r\n\r\nexport const registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const registerFailure = (errors: string[]): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n    errors,\r\n});\r\n\r\n// Log in actions\r\n\r\nexport const loginBegin = (email: string, password: string): LogInBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\nexport const loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nexport const loginFailure = (errors: string[]): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n    errors,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<boolean>> => async (dispatch): Promise<boolean> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, true, false, token);\r\n\r\n        if (response.success) {\r\n            const user: User = convertDtoToUser(response.data as ResponseUserDto);\r\n            dispatch(loginSuccess(token, user, true));\r\n            return true;\r\n        } else dispatch(loginFailure([])); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return false;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string): FailableAppThunk => async (dispatch) => {\r\n    dispatch(loginBegin(email, password));\r\n\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password}, false, true);\r\n    if (response.success) {\r\n        const payload = response.data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, payload.user, false));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(loginFailure(response.codes));\r\n        return {success: false, errors: response.codes || [response.message]};\r\n    }\r\n};\r\n\r\nexport const logout = (): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.success) {\r\n        const {email} = response.data as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure(response.codes));\r\n    }\r\n};\r\n\r\nexport const validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nexport const validateAccountFailure = (errors: string[]): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n    errors,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email}, false, true);\r\n\r\n    if (response.success) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n    } else {\r\n        dispatch(forgotPasswordFailure(response.codes));\r\n    }\r\n};\r\n\r\nexport const forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nexport const forgotPasswordFailure = (errors: string[]): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n    errors,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): FailableAppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.success) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: response.codes};\r\n    }\r\n};\r\n\r\nexport const resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch) => {\r\n    const email = `test${Math.round(Math.random() * 1e6)}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = store.getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"student\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + Math.round(1e3 * Math.random()),\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"talk-a-bit\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [],\r\n                degree: \"m2\",\r\n            }),\r\n        );\r\n    }\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {attemptLoginFromCache} from \"../state/auth/actions\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\n\r\nlet loggedInFromCache = false;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // TODO Improve data loading\r\n                //  - show something if the backend couldn't be reached\r\n\r\n                // Load static data\r\n                await dispatch(loadProfileOffers());\r\n                await dispatch(loadProfileInterests());\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    //\"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n                });\r\n\r\n                // Attempt to authenticate using cached data\r\n                loggedInFromCache = await dispatch(attemptLoginFromCache());\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (loggedInFromCache) initialRoute = \"MainScreen\";\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst tintColorLight = \"#2f95dc\";\r\nconst tintColorDark = \"#fff\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fafafa\",\r\n        cardBackground: \"#ffffff\", //\"#f7f7f7\",\r\n        accent: \"#003da5\", // Pantone 293c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#009ace\", // Pantone 801c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorLight,\r\n        error: \"#ff4a6a\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorLight,\r\n        componentBorder: \"#eee\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#333\",\r\n        cardBackground: \"#3d3d3d\",\r\n        accent: \"#009ace\", // Pantone 801c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\", // Pantone 293c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorDark,\r\n        error: \"#f9819d\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorDark,\r\n        componentBorder: \"#555\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStyles<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"pageNotFound\")}</Text>\r\n                <Text style={styles.subtitle}>{i18n.t(\"pageDoesntExist\")}</Text>\r\n                <TouchableOpacity onPress={() => navigation.replace(\"LoginScreen\")} style={styles.link}>\r\n                    <Text style={styles.linkText}>{i18n.t(\"goHome\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 64,\r\n            fontWeight: \"100\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginTop: 50,\r\n        },\r\n        link: {\r\n            paddingVertical: 10,\r\n        },\r\n        linkText: {\r\n            fontSize: 14,\r\n            color: \"#2e78b7\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"TabSignin\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To validate your account, click the link in the email we just sent to\r\n                    </Text>\r\n                    <Text style={styles.email}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={{marginVertical: 30, textAlign: \"center\", fontSize: 16, color: \"blue\"}}>\r\n                                debug: click here\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        email: {\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginScreen: {\r\n                screens: {\r\n                    TabSignin: {\r\n                        screens: {\r\n                            LoginForm: \"login\",\r\n                            ForgotPassword: \"forgot-password\",\r\n                        },\r\n                    },\r\n                    TabSignup: \"signup\",\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MAtchFilteringScren: \"match/filters\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            ChatScreen: \"messaging/talk\",\r\n                            MessagingScreen: \"messaging\",\r\n                        },\r\n                    },\r\n                    TabProfile: {\r\n                        screens: {\r\n                            TabProfileScreen: \"profile\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ChangePassword: \"reset-password/:token\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingPersonalInfoScreen: \"onboarding/info\",\r\n                    OnboardingLanguageScreen: \"onboarding/language\",\r\n                    OnboardingInterestsScreen: \"onboarding/interests\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingTosScreen: \"onboarding/tos\",\r\n                    OnboardingPrivacyScreen: \"onboarding/privacy\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            MatchSuccessScreen: \"match/success\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport {MaterialTopTabBarProps} from \"@react-navigation/material-top-tabs\";\r\nimport {View, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\ntype LoginTabBarProps = ThemeProps & MaterialTopTabBarProps;\r\n\r\nclass TabBarComponent extends React.Component<LoginTabBarProps> {\r\n    onPress(route: {name: string; key: string}, index: number): void {\r\n        const {navigation} = this.props;\r\n        const isFocused = index == this.props.state.index;\r\n\r\n        const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n        });\r\n\r\n        if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n        }\r\n    }\r\n\r\n    onLongPress(route: {name: string; key: string}): void {\r\n        const {navigation} = this.props;\r\n        navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {state, descriptors, position, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        // <Image source={waveImage} resizeMode=\"contain\" style={styles.waveImageStyle} />\r\n        return (\r\n            <View style={styles.tabBarWrapper}>\r\n                {/*<Text style={styles.appTitle}>SEA-EU Around</Text>*/}\r\n                <View style={styles.tabBar}>\r\n                    {state.routes.map((route, index) => {\r\n                        const {options} = descriptors[route.key];\r\n                        const label = i18n.t(route.name.toLowerCase());\r\n                        const isFocused = state.index === index;\r\n\r\n                        const inputRange = state.routes.map((_, i) => i);\r\n                        const opacity = Animated.interpolate(position, {\r\n                            inputRange,\r\n                            outputRange: inputRange.map((i) => (i === index ? 0.15 : 0)),\r\n                        });\r\n\r\n                        return (\r\n                            <View key={index} style={styles.tabButton}>\r\n                                <Animated.View style={[styles.tabButtonBg, {opacity}]} />\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                                    testID={options.tabBarTestID}\r\n                                    onPress={() => this.onPress(route, index)}\r\n                                    onLongPress={() => this.onLongPress(route)}\r\n                                >\r\n                                    <Text style={[styles.tabButtonText, isFocused ? styles.tabButtonTextFocused : {}]}>\r\n                                        {label}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        tabBarWrapper: {\r\n            height: \"30%\",\r\n            backgroundColor: theme.accent,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 6,\r\n            },\r\n            shadowOpacity: 0.37,\r\n            shadowRadius: 7.49,\r\n            elevation: 12,\r\n        },\r\n        tabBar: {\r\n            width: \"100%\",\r\n            maxWidth: 400,\r\n            height: 40,\r\n            flexDirection: \"row\",\r\n        },\r\n        tabButton: {\r\n            flex: 1,\r\n        },\r\n        tabButtonBg: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        tabButtonText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            letterSpacing: 1,\r\n            textTransform: \"capitalize\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n        },\r\n        tabButtonTextFocused: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        waveImageStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            padding: 0,\r\n            margin: 0,\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        },\r\n        /*appTitle: {\r\n            fontSize: 16,\r\n            color: theme.textInverted,\r\n            letterSpacing: 2,\r\n            marginBottom: 70,\r\n            ...styleTextThin,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default withTheme(TabBarComponent);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? i18n.t(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {TextStyle, StyleProp, View, TextInputProps} from \"react-native\";\r\nimport {TextInput} from \"react-native-gesture-handler\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    style?: StyleProp<TextStyle>;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n} & Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nexport class ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            style,\r\n            wrapperStyle,\r\n            error,\r\n            value,\r\n            label,\r\n            untouched,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <View style={[wrapperStyle, {width: \"100%\", flexDirection: \"column\", position: \"relative\"}]}>\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <TextInput\r\n                    style={[\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                    onBlur={(e) => {\r\n                        if (onBlur) onBlur(e);\r\n                        this.setState({focused: false});\r\n                    }}\r\n                    onFocus={(e) => {\r\n                        if (onFocus) onFocus(e);\r\n                        this.setState({focused: true});\r\n                    }}\r\n                    value={value}\r\n                    {...otherProps}\r\n                />\r\n                {showErrorText && !untouched && error && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {ValidatedTextInput, ValidatedTextInputProps} from \"./ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n} & ValidatedTextInputProps;\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        handleChange: (): void => {},\r\n        handleBlur: (): void => {},\r\n        /* eslint-ensable @typescript-eslint/no-empty-function */\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {field, touched, handleChange, handleBlur, error, onBlur, onChangeText, ...otherProps} = this.props;\r\n        return (\r\n            <ValidatedTextInput\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(this.props.field)(e);\r\n                }}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, Platform, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormTextInputProps} from \"../components/FormTextInput\";\r\nimport {FormCheckBoxProps} from \"../components/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const formStyle = StyleSheet.create({\r\n    inputErrorText: {\r\n        fontSize: 12,\r\n        marginTop: 2,\r\n        marginBottom: -12, // prevents an offset from appearing when there is an error\r\n    },\r\n    inputRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n    },\r\n    actionRow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        marginTop: 25,\r\n    },\r\n    buttonMajor: {\r\n        justifyContent: \"center\",\r\n        height: 60,\r\n        borderRadius: 5,\r\n\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    buttonMajorText: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n        letterSpacing: 1,\r\n        textTransform: \"uppercase\",\r\n    },\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): Partial<FormTextInputProps> {\r\n    const focusedStyle = Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            paddingHorizontal: 20,\r\n            borderRadius: 5,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        placeholderTextColor: \"#222\",\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n\r\nexport function getLoginCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n\r\nexport const loginTabsStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"70%\",\r\n            maxWidth: 400,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"column\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight},\r\n        versionDisclaimerContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        versionDisclaimerIcon: {color: theme.error},\r\n        debugContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        debugTitle: {\r\n            fontWeight: \"bold\",\r\n            width: 75,\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            letterSpacing: 0.8,\r\n        },\r\n        debugButton: {\r\n            padding: 6,\r\n        },\r\n        debugButtonText: {\r\n            fontSize: 16,\r\n            color: theme.error,\r\n        },\r\n        toggleThemeContainer: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        toggleThemeButton: {\r\n            padding: 10,\r\n        },\r\n        toggleThemeIcon: {\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): Partial<FormTextInputProps> {\r\n    const focusedStyle =\r\n        Platform.OS === \"web\"\r\n            ? ({\r\n                  backgroundColor: \"transparent\",\r\n                  outline: \"none\",\r\n              } as TextStyle)\r\n            : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport {Text, View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error: string;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]} {...otherProps}>\r\n                <Text style={[styles.text]}>{error}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginVertical: 10,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FailableActionReturn, FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\n\r\ntype LoginFormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    connecting: state.auth.connecting,\r\n    validatedEmail: state.auth.validatedEmail,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<LoginFormState> & {navigation: StackNavigationProp<TabLoginSigninScreens, \"LoginForm\">};\r\n\r\ntype LoginFormComponentState = {\r\n    errors?: string[];\r\n};\r\n\r\nclass LoginFormComponent extends React.Component<LoginFormProps, LoginFormComponentState> {\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: LoginFormState) {\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: FailableActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                this.setState({...this.state, errors});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation, connecting} = this.props;\r\n        const remoteErrors = this.state.errors;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{email: \"\", password: \"\"} as LoginFormState}\r\n                validationSchema={LoginFormSchema}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: LoginFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<LoginFormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        setFieldValue,\r\n                    } = formikProps;\r\n                    const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                    this.setFieldValue = setFieldValue;\r\n\r\n                    return (\r\n                        <>\r\n                            <FormTextInput\r\n                                field=\"email\"\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                error={errors.email}\r\n                                value={values.email}\r\n                                touched={touched.email}\r\n                                keyboardType=\"email-address\"\r\n                                autoCompleteType=\"email\"\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                field=\"password\"\r\n                                placeholder={i18n.t(\"password\")}\r\n                                error={errors.password}\r\n                                value={values.password}\r\n                                touched={touched.password}\r\n                                secureTextEntry={true}\r\n                                autoCompleteType=\"password\"\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <View style={formStyle.actionRow}>\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={i18n.t(\"login\")}\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={[styles.loginButton]}\r\n                                    disabled={connecting}\r\n                                >\r\n                                    {!connecting && <Text style={formStyle.buttonMajorText}>{i18n.t(\"login\")}</Text>}\r\n                                    {connecting && <ActivityIndicator size=\"large\" color={theme.accentSecondary} />}\r\n                                </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <FormError error={remoteErrors && remoteErrors.length > 0 ? remoteErrors[0] : \"\"} />\r\n\r\n                            <TouchableOpacity\r\n                                accessibilityRole=\"link\"\r\n                                accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n                                style={styles.forgotPwdLink}\r\n                            >\r\n                                <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        loginButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        forgotPwdLink: {\r\n            marginTop: 40,\r\n            padding: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport const LoginForm = reduxConnector(withTheme(LoginFormComponent));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\n\r\ntype ForgotPasswordFormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"ForgotPassword\">;\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps> {\r\n    // Form submission handler\r\n    submitForm({email}: ForgotPasswordFormState) {\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as ForgotPasswordFormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={this.submitForm}\r\n                >\r\n                    {(formikCfg: FormikProps<ForgotPasswordFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    keyboardType=\"email-address\"\r\n                                    autoCompleteType=\"email\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => navigation.goBack()}\r\n                                        style={[formStyle.buttonMajor, styles.buttonCancel]}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"cancel\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"send\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[formStyle.buttonMajor, styles.buttonSend]}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"send\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        buttonCancel: {\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView, Text} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {LoginForm} from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {debugConnect} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport store from \"../state/store\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION, DEBUG_MODE} from \"../constants/config\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {toggleTheme} from \"../state/settings/actions\";\r\nimport {TabLoginSigninScreens} from \"../navigation/types\";\r\n\r\ntype TabLoginScreenProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"LoginForm\">;\r\n\r\nclass LoginTabComponent extends React.Component<TabLoginScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <LoginForm navigation={navigation}></LoginForm>\r\n                    {DEBUG_MODE && (\r\n                        <View style={styles.debugContainer}>\r\n                            <Text style={styles.debugTitle}>[DEBUG]</Text>\r\n                            <TouchableOpacity style={styles.debugButton} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                                <Text style={styles.debugButtonText}>access</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => {\r\n                                    (store.dispatch as MyThunkDispatch)(debugConnect());\r\n                                }}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>register</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => rootNavigate(\"OnboardingScreen\")}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>on-boarding</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                <View style={styles.versionInfoContainer}>\r\n                    <Text style={styles.versionText}>\r\n                        <Text style={{fontWeight: \"bold\"}}>Version:</Text>\r\n                        <Text> {APP_VERSION}</Text>\r\n                    </Text>\r\n                    <View style={styles.versionDisclaimerContainer}>\r\n                        <MaterialIcons style={styles.versionDisclaimerIcon} name=\"warning\" size={16}></MaterialIcons>\r\n                        <Text style={styles.versionText}> This is an alpha version</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.toggleThemeContainer}>\r\n                    <TouchableOpacity style={styles.toggleThemeButton} onPress={() => store.dispatch(toggleTheme())}>\r\n                        <MaterialCommunityIcons style={styles.toggleThemeIcon} name=\"theme-light-dark\" color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\ntype TabForgotPasswordProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"ForgotPassword\">;\r\n\r\nclass ForgotPasswordTabComponent extends React.Component<TabForgotPasswordProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ForgotPasswordForm navigation={navigation}></ForgotPasswordForm>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const SubTabLogin = withTheme(LoginTabComponent);\r\nexport const SubTabForgotPassword = withTheme(ForgotPasswordTabComponent);\r\n","import {SetLocaleAction, SetThemeAction, SETTINGS_ACTION_TYPES, ToggleThemeAction} from \"../types\";\r\nimport {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport const setTheme = (theme: ThemeKey): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_THEME, locale} as SetLocaleAction;\r\n};\r\n","import * as React from \"react\";\r\nimport {Alert, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FailableActionReturn, FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\n\r\nexport type SignupFormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): SignupFormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<SignupFormState> & ThemeProps;\r\n\r\n// Component state\r\ntype SignupFormComponentState = {failure: boolean; errors?: string[]};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormComponentState> {\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {failure: false};\r\n    }\r\n\r\n    submit(values: SignupFormState) {\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: FailableActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                this.setState({...this.state, failure: !success, errors});\r\n            },\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {failure, errors} = this.state;\r\n        if (failure) {\r\n            /*const errorTexts = this.props.registerErrors.map((err: string, i: number) => (\r\n                <Text key={i} style={[formStyle.errorText, {color: this.props.theme.error}]}>\r\n                    {err}\r\n                </Text>\r\n            ));*/\r\n\r\n            Alert.alert(\"Unable to register\", errors && errors.length > 0 ? errors[0] : \"\", [\r\n                {text: \"OK\", onPress: () => console.log(\"OK Pressed\")},\r\n            ]);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values: SignupFormState) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<SignupFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    keyboardType=\"email-address\"\r\n                                    autoCompleteType=\"email\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"createAccount\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={styles.createAccountButton}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"createAccount\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport {ScrollView} from \"react-native-gesture-handler\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\ntype SignupFormProps = ThemeProps;\r\n\r\nclass SignupTabComponent extends React.Component<SignupFormProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <ScrollView contentContainerStyle={{paddingVertical: 50, backgroundColor: theme.background}}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.formWrapper}>\r\n                        <SignupForm />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(SignupTabComponent);\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport LoginTabBar from \"../components/LoginTabBar\";\r\nimport {SubTabLogin, SubTabForgotPassword} from \"../screens/TabLoginScreen\";\r\nimport TabSignupFormScreen from \"../screens/TabSignupFormScreen\";\r\nimport {TabLoginRoot, TabLoginSigninScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst SigninStack = createStackNavigator<TabLoginSigninScreens>();\r\nconst Tab = createMaterialTopTabNavigator<TabLoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator tabBar={(props) => <LoginTabBar {...props} />}>\r\n        <Tab.Screen name=\"TabSignin\">\r\n            {() => (\r\n                <SigninStack.Navigator>\r\n                    <SigninStack.Screen\r\n                        name=\"LoginForm\"\r\n                        component={SubTabLogin}\r\n                        options={{headerShown: false, title: screenTitle(\"LoginForm\")}}\r\n                    />\r\n                    <SigninStack.Screen\r\n                        name=\"ForgotPassword\"\r\n                        component={SubTabForgotPassword}\r\n                        options={{headerShown: false, title: screenTitle(\"ForgotPassword\")}}\r\n                    />\r\n                </SigninStack.Navigator>\r\n            )}\r\n        </Tab.Screen>\r\n        <Tab.Screen name=\"TabSignup\" component={TabSignupFormScreen} options={{title: screenTitle(\"TabSignup\")}} />\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                <Text style={styles.title}>Under construction</Text>\r\n                <View style={styles.separator} />\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        dropdownWrapper: {\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 5,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: theme.textInverted,\r\n        },\r\n        openButton: {\r\n            width: \"100%\",\r\n            height: 30,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 20,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderRadius: 2,\r\n            backgroundColor: theme.background,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        openButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        selectedItemView: {\r\n            width: \"100%\",\r\n            height: 20,\r\n            marginTop: 5,\r\n            fontSize: 12,\r\n            overflow: \"hidden\",\r\n        },\r\n        selectedItemText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        if (apply && this.props.onChange) this.props.onChange(this.state.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                <View /*style={{height: 0, overflow: \"hidden\"}}*/>\r\n                    {this.state.items.get(locale) && (\r\n                        <SectionedMultiSelect\r\n                            ref={this.selectRef}\r\n                            items={this.state.items.get(locale)}\r\n                            onSelectedItemsChange={(items) =>\r\n                                this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                            }\r\n                            selectedItems={this.state.tempSelected}\r\n                            // Listeners\r\n                            onCancel={() => this.close(false)}\r\n                            onConfirm={() => this.close(true)}\r\n                            // Technical\r\n                            // Dirty work-around to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                            IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                            uniqueKey=\"id\"\r\n                            displayKey=\"label\"\r\n                            subKey=\"children\"\r\n                            // Customization\r\n                            showDropDowns={true}\r\n                            readOnlyHeadings={true}\r\n                            showChips={false}\r\n                            showCancelButton={true}\r\n                            selectedIconOnLeft={true}\r\n                            animateDropDowns={false}\r\n                            hideSelect={true}\r\n                            noResultsComponent={\r\n                                <Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>\r\n                            }\r\n                            searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                            // Localization\r\n                            confirmText={i18n.t(\"apply\")}\r\n                            searchPlaceholderText={searchablePlaceholder}\r\n                            // Styling\r\n                            colors={{\r\n                                primary: theme.accent,\r\n                                cancel: theme.error,\r\n                                success: theme.okay,\r\n                                text: theme.text,\r\n                                subText: theme.textLight,\r\n                                searchPlaceholderTextColor: theme.textLight,\r\n                                selectToggleTextColor: theme.error,\r\n                                itemBackground: theme.cardBackground,\r\n                                subItemBackground: theme.cardBackground,\r\n                            }}\r\n                            styles={multiSelectStyles}\r\n                        />\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {backgroundColor: theme.cardBackground},\r\n        scrollView: {paddingVertical: 10},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            fontFamily: \"sans-serif-light\",\r\n            fontWeight: \"normal\",\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {MultiPickerProps} from \"./MultiPicker\";\r\nimport SectionedMultiPicker from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"educationFieldsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"educationFieldsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, style} = this.props;\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                containerStyle={[{height: 35, marginLeft: 0, marginRight: 0}, style]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DegreeToggle;\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES} from \"../constants/profile-constants\";\r\nimport {Picker} from \"react-native\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRole: StaffRole | null;\r\n    onSelect?: (staffRole: StaffRole) => void;\r\n};\r\n\r\nexport default function StaffRoleToggle(props: StaffRoleToggleProps): JSX.Element {\r\n    const {staffRole} = props;\r\n\r\n    const onSelect = (value: string) => {\r\n        if (props.onSelect) props.onSelect(value as StaffRole);\r\n    };\r\n\r\n    const pickerItems = STAFF_ROLES.map((r) => <Picker.Item key={r} label={i18n.t(`staffRoles.${r}`)} value={r} />);\r\n\r\n    return (\r\n        <View style={{width: \"100%\"}}>\r\n            <Picker selectedValue={staffRole} onValueChange={onSelect}>\r\n                {pickerItems}\r\n            </Picker>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n};\r\n\r\nexport function GenderToggle(props: GenderToggleProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender} = props;\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            containerStyle={{height: 35, marginLeft: 0, marginRight: 0}}\r\n        />\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport {Platform} from \"react-native\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateTimePicker, {Event} from \"@react-native-community/datetimepicker\";\r\n\r\n// Component props\r\nexport type BirthDatePickerProps = {\r\n    date?: Date;\r\n    open: boolean;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type BirthDatePickerState = {\r\n    open: boolean;\r\n};\r\n\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nclass BirthDatePicker extends React.Component<BirthDatePickerProps, BirthDatePickerState> {\r\n    constructor(props: BirthDatePickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: BirthDatePickerProps): void {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    onChange(date: Date | undefined): void {\r\n        if (Platform.OS != \"ios\") this.hideModal();\r\n        if (date && this.props.onSelect) this.props.onSelect(date);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date} = this.props;\r\n        const {open} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {open && (\r\n                    <DateTimePicker\r\n                        minimumDate={new Date(1900, 0, 0)}\r\n                        maximumDate={maxDate}\r\n                        value={date || maxDate}\r\n                        onChange={(e: Event, date: Date | undefined) => this.onChange(date)}\r\n                        mode=\"date\"\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BirthDatePicker;\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_QUALITY} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect: [1, 1],\r\n                    quality: AVATAR_QUALITY,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return <MaterialIcons onPress={() => this.showPicker()} style={styles.buttonStyle} name=\"edit\" />;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        buttonStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n            fontSize: 20,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Modal, Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport {formStyle} from \"../../styles/forms\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Schema, ValidationError} from \"yup\";\r\nimport {Theme} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport themes from \"../../constants/themes\";\r\n\r\n// Map props from the store\r\nconst mapStateToProps = (state: AppState) => ({\r\n    theme: themes[state.settings.theme],\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype FormRowProps<T> = ConnectedProps<typeof reduxConnector> & {\r\n    label: string;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T) => void) => JSX.Element;\r\n    validator?: Schema<T>;\r\n    initialValue: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype FormRowState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T;\r\n};\r\n\r\nclass FormRowComponent<T> extends React.Component<FormRowProps<T>, FormRowState<T>> {\r\n    constructor(props: FormRowProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: this.props.initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T): void {\r\n        this.setState({...this.state, value}, () => {\r\n            this.validate();\r\n        });\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            this.setModal(false);\r\n            if (this.props.apply) this.props.apply(this.state.value);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (): JSX.Element => {\r\n        const {label, theme, renderInput} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity style={styles.modalTouchable} onPress={() => this.setModal(false)} activeOpacity={1}>\r\n                <TouchableOpacity activeOpacity={1} style={styles.modalWrapper}>\r\n                    <Text style={styles.modalLabel}>{label}</Text>\r\n                    {renderInput ? renderInput(value, error, (value: T) => this.onChange(value)) : <></>}\r\n                    <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                    <View style={styles.modalActions}>\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityLabel=\"CANCEL\"\r\n                            onPress={() => this.setModal(false)}\r\n                            style={styles.modalCancel}\r\n                        >\r\n                            <Text style={styles.modalActionText}>{i18n.t(\"cancel\")}</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityLabel=\"OK\"\r\n                            onPress={() => this.apply()}\r\n                            style={styles.modalOk}\r\n                        >\r\n                            <Text style={styles.modalActionText}>{i18n.t(\"apply\")}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme, label, display, overrideModal, noModal, style, locked, ...otherProps} = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <TouchableOpacity\r\n                    style={[styles.cardWrapper, style]}\r\n                    activeOpacity={0.9}\r\n                    disabled={noModal}\r\n                    onPress={() => {\r\n                        if (!locked) this.setModal(true);\r\n                    }}\r\n                    {...otherProps}\r\n                >\r\n                    <View style={styles.cardContent}>\r\n                        <Text style={styles.cardLabel}>{label}</Text>\r\n                        <View>\r\n                            {display !== undefined && display}\r\n                            {display === undefined && this.props.children}\r\n                        </View>\r\n                    </View>\r\n                    {!noModal && (\r\n                        <View style={styles.rightIconContainer}>\r\n                            <MaterialIcons\r\n                                name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                size={locked ? 30 : 40}\r\n                                style={styles.rightIcon}\r\n                            ></MaterialIcons>\r\n                        </View>\r\n                    )}\r\n                </TouchableOpacity>\r\n                {!noModal && (\r\n                    <React.Fragment>\r\n                        {overrideModal !== undefined && modalOpen && overrideModal(() => this.setModal(false))}\r\n                        {overrideModal === undefined && modalOpen && (\r\n                            <Modal transparent={true} visible={modalOpen} animationType=\"slide\">\r\n                                {this.renderModalContent()}\r\n                            </Modal>\r\n                        )}\r\n                    </React.Fragment>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalTouchable: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        modalWrapper: {\r\n            width: \"80%\",\r\n            maxWidth: 500,\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            borderColor: \"#ccc\",\r\n            borderWidth: 0.5,\r\n            borderStyle: \"solid\",\r\n        },\r\n        modalErrorText: {\r\n            fontSize: 12,\r\n            color: theme.error,\r\n        },\r\n        modalLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1.5,\r\n            fontSize: 13,\r\n            marginBottom: 12,\r\n        },\r\n        modalActions: {\r\n            ...formStyle.actionRow,\r\n            height: 50,\r\n            marginTop: 20,\r\n        },\r\n        modalCancel: {\r\n            ...formStyle.buttonMajor,\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n            height: 50,\r\n        },\r\n        modalOk: {\r\n            ...formStyle.buttonMajor,\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n            height: 50,\r\n        },\r\n        modalActionText: {\r\n            ...formStyle.buttonMajorText,\r\n            lineHeight: 50,\r\n        },\r\n        cardWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            elevation: 1,\r\n            justifyContent: \"space-evenly\",\r\n            paddingVertical: 15,\r\n            minHeight: 80,\r\n        },\r\n        cardContent: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            //justifyContent: \"space-evenly\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        cardLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            marginBottom: 10,\r\n        },\r\n        rightIconContainer: {justifyContent: \"center\"},\r\n        rightIcon: {color: theme.textLight},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(FormRowComponent);\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        const paddedDay = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const formattedDate = `${paddedDay} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {Country, CountryCode, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (this.props.onSelect) this.props.onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n            ></CountryPicker>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag countryCode={university.country} flagSize={18} withEmoji={false}></Flag>\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {Overlay, withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.tempSelected = this.props.selected || [];\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.tempSelected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                {this.state.open && (\r\n                    <Overlay\r\n                        overlayStyle={[styles.overlay, {height: 150 + items.length * 40}]}\r\n                        isVisible={this.state.open}\r\n                        onRequestClose={() => this.close()}\r\n                        onBackdropPress={() => this.close()}\r\n                    >\r\n                        <>\r\n                            <View\r\n                                style={styles.dropdownWrapper}\r\n                                onLayout={(e: LayoutChangeEvent) => {\r\n                                    this.setState({...this.state, dropdownWrapperHeight: e.nativeEvent.layout.height});\r\n                                }}\r\n                            >\r\n                                <DropDownPicker\r\n                                    items={items}\r\n                                    multiple={true}\r\n                                    searchable={true}\r\n                                    defaultValue={selected}\r\n                                    onChangeItem={(values: string[]) => {\r\n                                        this.tempSelected = values;\r\n                                    }}\r\n                                    placeholder={placeholder}\r\n                                    multipleText={multipleText}\r\n                                    searchablePlaceholder={searchablePlaceholder}\r\n                                    scrollViewProps={{keyboardShouldPersistTaps: \"always\"}} // ensures items are clickable even when the keyboard is open\r\n                                    isVisible={true}\r\n                                    showArrow={false}\r\n                                    dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                    // Style props\r\n                                    selectedLabelStyle={{display: \"none\"}}\r\n                                    style={styles.dropdownStyle}\r\n                                    itemStyle={styles.dropdownItemStyle}\r\n                                    activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                    activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                    labelStyle={styles.dropdownLabelStyle}\r\n                                />\r\n                            </View>\r\n                            <View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                    </Overlay>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n};\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n\r\n        console.log(\"Interests : \" + this.props.allInterests.length);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Degree, Gender, LanguageLevel, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {User} from \"../model/user\";\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: User;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: string[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\n\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRole: StaffRole;\r\n};\r\n\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDto = CreateProfileDto & {id: string; university: UniversityKey; avatar: string};\r\n\r\nexport type FetchProfilesResponseDto = {\r\n    data: ResponseProfileDto[];\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type FetchMyMatchesResponseDto = ResponseProfileDto[];\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type LikeProfileResponseDto = \"requested\" | \"matched\";\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    languageItems: state.settings.localizedLanguageItems,\r\n}));\r\n\r\n// Component props\r\nexport type LanguagePickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    languages: string[];\r\n    single: boolean;\r\n    onChange?: (languages: string[]) => void;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    static defaultProps = {\r\n        languages: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, languageItems, single, languages, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={languageItems}\r\n                    multiple={!single}\r\n                    searchable={true}\r\n                    placeholder={i18n.t(`languagePicker.placeholder${single ? \"Single\" : \"Multiple\"}`)}\r\n                    searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                    onChangeItem={(items: PickerItem | PickerItem[]) => {\r\n                        const languages = (Array.isArray(items) ? items : [items]).map((it: PickerItem) => it.value);\r\n                        if (onChange) onChange(languages);\r\n                    }}\r\n                    defaultValue={single ? languages[0] : languages}\r\n                    style={styles.picker}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    containerStyle={styles.containerStyle}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        containerStyle: {height: 50},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguagePicker));\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n} & ViewProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\ntype PickerItem = {\r\n    value: LanguageLevel;\r\n    label: string;\r\n};\r\n\r\nconst items: Map<SupportedLocale, PickerItem[]> = new Map();\r\n\r\nfunction updateItems(locale: SupportedLocale) {\r\n    if (!items.has(locale)) {\r\n        items.set(\r\n            locale,\r\n            LANGUAGE_LEVELS.map((code: LanguageLevel) => ({\r\n                label: i18n.t(`languageLevels.${code}`),\r\n                value: code,\r\n            })),\r\n        );\r\n    }\r\n}\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    constructor(props: LanguageLevelPickerProps) {\r\n        super(props);\r\n        updateItems(this.props.locale);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LanguageLevelPickerProps) {\r\n        const locale = this.props.locale;\r\n        if (oldProps.locale != locale) updateItems(locale);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, locale, level, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={items.get(locale) || []}\r\n                    defaultValue={level}\r\n                    multiple={false}\r\n                    searchable={false}\r\n                    placeholder={i18n.t(\"languageLevelPicker.placeholder\")}\r\n                    onChangeItem={(item: PickerItem) => {\r\n                        if (onChange) onChange(item.value);\r\n                    }}\r\n                    style={styles.picker}\r\n                    containerStyle={styles.pickerContainer}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        pickerContainer: {maxWidth: 120, height: 50, borderRadius: 0},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguageLevelPicker));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n    errors: (string | boolean)[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {\r\n            languages,\r\n            errors: languages.map(() => false),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.languages.length == 0) this.addRow();\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        const errors = this.computeErrors(languages);\r\n        this.setState({...this.state, languages, errors});\r\n\r\n        if (this.props.onChange) {\r\n            const hasErrors = errors.filter((e: string | boolean) => e !== false).length > 0;\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    computeErrors(languages: Partial<SpokenLanguageDto>[]): (string | boolean)[] {\r\n        return languages.map((sl: Partial<SpokenLanguageDto>) => {\r\n            const multipleOccurrences =\r\n                languages.filter((l: Partial<SpokenLanguageDto>) => l.code && l.code == sl.code).length > 1;\r\n            return multipleOccurrences ? \"validation.languages.multiple\" : !sl.code || !sl.level;\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        if (this.state.languages.length < MAX_SPOKEN_LANGUAGES) {\r\n            const languages = this.state.languages.concat([{code: \"\"}]);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length) {\r\n            const languages = this.state.languages.slice(); // copy\r\n            languages.splice(idx, 1);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    setLanguageCode(idx: number, code: string) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].code = code;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].level = level;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            const error = this.state.errors[i];\r\n            return (\r\n                <View key={i} style={styles.rowContainer}>\r\n                    <View style={styles.inputRowContainer}>\r\n                        <LanguagePicker\r\n                            single={true}\r\n                            languages={[sl.code]}\r\n                            style={styles.languagePicker}\r\n                            pickerStyle={styles.inputs}\r\n                            onChange={(languageCodes: string[]) => this.setLanguageCode(i, languageCodes[0])}\r\n                        />\r\n                        <LanguageLevelPicker\r\n                            level={sl.level}\r\n                            style={styles.levelPicker}\r\n                            onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                        ></LanguageLevelPicker>\r\n                        <MaterialIcons onPress={() => this.removeRow(i)} style={styles.deleteIcon} name=\"delete\" />\r\n                    </View>\r\n                    {typeof error === \"string\" && (\r\n                        <View style={styles.errorRowContainer}>\r\n                            <InputErrorText error={error} />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n            );\r\n        });\r\n\r\n        const canAddMore =\r\n            this.state.languages.length < MAX_SPOKEN_LANGUAGES &&\r\n            this.state.languages.filter((sl: Partial<SpokenLanguageDto>) => !sl.level || !sl.code).length == 0;\r\n\r\n        return (\r\n            <View style={style}>\r\n                {rows}\r\n                <View style={styles.plusButtonWrapper}>\r\n                    {canAddMore && <MaterialIcons onPress={() => this.addRow()} style={styles.plusButton} name=\"add\" />}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginBottom: 8,\r\n        },\r\n        inputRowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        errorRowContainer: {\r\n            marginBottom: 8,\r\n        },\r\n        plusButtonWrapper: {\r\n            alignItems: \"center\",\r\n            marginTop: 10,\r\n        },\r\n        plusButton: {\r\n            width: 36,\r\n            height: 36,\r\n            fontSize: 36,\r\n            borderRadius: 18,\r\n            color: theme.background,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 24,\r\n            color: theme.error,\r\n        },\r\n        inputs: {\r\n            borderRadius: 0,\r\n        },\r\n        languagePicker: {\r\n            flex: 1,\r\n            flexGrow: 3,\r\n        },\r\n        levelPicker: {\r\n            flex: 1,\r\n            flexGrow: 2,\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport {Avatar, AvatarProps, Overlay, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    toggleEnlarged() {\r\n        this.setState({...this.state, enlarged: !this.state.enlarged});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.toggleEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Avatar {...avatarProps} {...(avatarProps.source ? {onPress} : {})}>\r\n                    {children}\r\n                </Avatar>\r\n                <Overlay\r\n                    isVisible={enlarged}\r\n                    onBackdropPress={() => this.toggleEnlarged()}\r\n                    overlayStyle={styles.overlay}\r\n                    backdropStyle={styles.overlayBackdrop}\r\n                >\r\n                    <Avatar\r\n                        rounded\r\n                        containerStyle={styles.enlargedAvatarContainer}\r\n                        avatarStyle={styles.enlargedAvatar}\r\n                        source={avatarProps.source}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.toggleEnlarged()}\r\n                    />\r\n                </Overlay>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"100%\",\r\n            aspectRatio: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n        },\r\n        overlayBackdrop: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport {Theme} from \"../types\";\r\n\r\nexport function getToggleStyleProps(nobuttonBariant: boolean, theme: Theme): Partial<ButtonGroupProps> {\r\n    if (nobuttonBariant) {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, noButtonVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const tooltipStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            width: undefined, // override default width so it adjusts based on the content\r\n            maxWidth: 240,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n","import React from \"react\";\r\nimport {Text} from \"react-native\";\r\nimport {Tooltip, withTheme} from \"react-native-elements\";\r\nimport {tooltipStyles} from \"../styles/tooltips\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type CustomTooltipProps = {\r\n    text: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\nexport type CustomTooltipState = {\r\n    height: number | undefined;\r\n};\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps, CustomTooltipState> {\r\n    constructor(props: CustomTooltipProps) {\r\n        super(props);\r\n        this.state = {height: undefined};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {height} = this.state;\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <Tooltip\r\n                popover={\r\n                    <Text\r\n                        style={styles.text}\r\n                        onLayout={(e) => {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                height: e.nativeEvent.layout.height,\r\n                            });\r\n                        }}\r\n                    >\r\n                        {text}\r\n                    </Text>\r\n                }\r\n                backgroundColor={theme.accentSlight}\r\n                containerStyle={styles.container}\r\n                height={height}\r\n            >\r\n                {this.props.children}\r\n            </Tooltip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <CheckBox\r\n                        checked={isSomethingSelected}\r\n                        onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        containerStyle={styles.checkboxContainer}\r\n                    ></CheckBox>\r\n                    <TouchableOpacity onPress={() => this.setAllValues(!isSomethingSelected)}>\r\n                        <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                    </TouchableOpacity>\r\n                    <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                        <MaterialIcons style={styles.helpIcon} name=\"help\"></MaterialIcons>\r\n                    </CustomTooltip>\r\n                </View>\r\n                {isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                noButtonVariant={true}\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                noButtonVariant={true}\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        helpIcon: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.textLight,\r\n        },\r\n        buttonsWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            margin: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, KeyboardAvoidingView, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {ScrollView, StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRoleToggle from \"../StaffRoleToggle\";\r\nimport {GenderToggle} from \"../GenderToggle\";\r\nimport BirthDatePicker from \"../BirthDatePicker\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport FormRow from \"./FormRow\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport {getUniversityFromEmail} from \"../../model/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps & {\r\n    user: User | null;\r\n    onChange?: (fields: Partial<UserProfile>) => void;\r\n};\r\n\r\nfunction FormFieldSpacer(): JSX.Element {\r\n    return <View style={{height: 30}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const avatarTitle =\r\n            user && user.profile ? (user.profile.firstName[0] + user.profile.lastName[0]).toUpperCase() : \"\";\r\n        const avatarSource = user && user.profile && user.profile.avatarUrl ? {uri: user.profile.avatarUrl} : undefined;\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        /*const textInputStyleProps = {\r\n            placeholderTextColor: \"#222\",\r\n            style: {\r\n                width: \"100%\",\r\n                height: 50,\r\n                paddingHorizontal: 20,\r\n                borderRadius: 5,\r\n                borderWidth: 0,\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n            errorStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.error,\r\n            },\r\n            validStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.okay,\r\n            },\r\n            focusedStyle: Platform.OS === \"web\" ? ({outlineColor: \"transparent\"} as TextStyle) : null,\r\n        };*/\r\n\r\n        let profileFieldComponents = <></>;\r\n\r\n        if (user && user.profile) {\r\n            const profile = user.profile;\r\n\r\n            profileFieldComponents = (\r\n                <>\r\n                    <FormRow\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user.email}\r\n                        display={<Text style={styles.cardText}>{user.email}</Text>}\r\n                        /*\r\n                        validator={VALIDATOR_EMAIL}\r\n                        renderInput={(value: string, error: string | null, onChange: (value: string) => void) => (\r\n                            <ValidatedTextInput\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                value={value}\r\n                                error={error || undefined}\r\n                                onChangeText={(val) => onChange(val)}\r\n                                keyboardType=\"email-address\"\r\n                                autoCompleteType=\"email\"\r\n                                autoFocus\r\n                                {...textInputStyleProps}\r\n                            />\r\n                        )}\r\n                        apply={(email: string) => onFieldChanged({email})}\r\n                        */\r\n                        locked={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile.birthdate}\r\n                        display={<FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <BirthDatePicker\r\n                                date={profile.birthdate}\r\n                                open={true}\r\n                                onSelect={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile.nationality}\r\n                        display={<FormattedNationality style={styles.cardText} countryCode={profile.nationality} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <NationalityPicker\r\n                                nationality={profile.nationality}\r\n                                onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile.gender}\r\n                        display={\r\n                            <GenderToggle\r\n                                gender={profile.gender}\r\n                                onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile.type}\r\n                        display={\r\n                            <>\r\n                                <RoleToggle\r\n                                    role={profile.type}\r\n                                    /*onSelect={(role: Role) => onFieldChanged({role})}*/\r\n                                    disabled={true}\r\n                                />\r\n                                {profile.type == \"staff\" && (\r\n                                    <StaffRoleToggle\r\n                                        staffRole={profile.staffRole || null}\r\n                                        onSelect={(staffRole: StaffRole) => this.onFieldChanged({staffRole})}\r\n                                    />\r\n                                )}\r\n                                {profile.type == \"student\" && (\r\n                                    <DegreeToggle\r\n                                        degree={profile.degree}\r\n                                        onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                            ></EducationFieldPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile.interests}\r\n                        display={\r\n                            <InterestsPicker\r\n                                interests={profile.interests}\r\n                                onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                            ></InterestsPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            <>\r\n                                {profile.languages.map((l: SpokenLanguageDto, i: number) => (\r\n                                    <View key={i}>\r\n                                        <Text>\r\n                                            {i18n.t(`languageNames.${l.code}`)} ({i18n.t(`languageLevels.${l.level}`)})\r\n                                        </Text>\r\n                                    </View>\r\n                                ))}\r\n                            </>\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <>\r\n                                <SpokenLanguagesInput\r\n                                    languages={value}\r\n                                    onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                            </>\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={styles.screenWrapper}>\r\n                <View style={styles.topView}>\r\n                    <EnlargeableAvatar\r\n                        size={140}\r\n                        rounded\r\n                        title={avatarTitle}\r\n                        containerStyle={{backgroundColor: theme.accentSecondary}}\r\n                        avatarStyle={styles.avatar}\r\n                        source={avatarSource}\r\n                        activeOpacity={0.8}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {user && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={getUniversityFromEmail(user.email)}\r\n                        ></FormattedUniversity>\r\n                    )}\r\n                </View>\r\n                <ScrollView style={styles.scrollWrapper} keyboardShouldPersistTaps=\"always\">\r\n                    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={-100} style={styles.formWrapper}>\r\n                        <View style={styles.titleWrapper}>\r\n                            <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                        </View>\r\n                        {profileFieldComponents}\r\n                        {!user && <ActivityIndicator size=\"large\" color={theme.accent} />}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[];\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory}: OfferCategoryRowProps): JSX.Element => {\r\n        let display: JSX.Element | JSX.Element[] = profileOffers\r\n            .filter((o) => offerIdToCategory.get(o.offerId) == category)\r\n            .map((value: OfferValueDto) => (\r\n                <Text key={`profile-${value.offerId}-display`}>{i18n.t(`allOffers.${value.offerId}.name`)}</Text>\r\n            ));\r\n\r\n        if (display.length == 0) display = <Text>{i18n.t(\"profile.noOffersSelected\")}</Text>;\r\n\r\n        return (\r\n            <FormRow\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={<>{display}</>}\r\n                renderInput={(\r\n                    value: OfferValueDto[],\r\n                    error: string | null,\r\n                    onChange: (value: OfferValueDto[]) => void,\r\n                ) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        screenWrapper: {\r\n            backgroundColor: theme.background,\r\n            width: \"100%\",\r\n        },\r\n        topView: {\r\n            width: \"160%\",\r\n            height: 280,\r\n            borderBottomLeftRadius: 200,\r\n            borderBottomRightRadius: 200,\r\n            paddingVertical: 50,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        scrollWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 40,\r\n            marginBottom: 300,\r\n        },\r\n        name: {\r\n            fontSize: 30,\r\n            color: theme.textWhite,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatar: {\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditProfileForm);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {MainNavigatorTabs} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype TabProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<MainNavigatorTabs, \"TabProfile\">;\r\n\r\nclass TabProfileScreen extends React.Component<TabProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, user, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                ></EditProfileForm>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabProfileScreen));\r\n","import React from \"react\";\r\nimport {Modal, TouchableOpacity, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\nexport type CustomModalProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: ViewStyle;\r\n};\r\n\r\ntype CustomModalState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nclass CustomModal extends React.Component<CustomModalProps, CustomModalState> {\r\n    constructor(props: CustomModalProps) {\r\n        super(props);\r\n        this.state = {modalVisible: true};\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, modalViewStyle} = this.props;\r\n        const {modalVisible} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Modal animationType=\"fade\" transparent={true} visible={modalVisible}>\r\n                <TouchableOpacity\r\n                    style={styles.centeredView}\r\n                    activeOpacity={1.0}\r\n                    onPress={() => this.setModalVisible(false)}\r\n                >\r\n                    <View style={[styles.modalView, modalViewStyle]}>\r\n                        {this.props.renderContent(() => this.setModalVisible(false))}\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        centeredView: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.05)\",\r\n        },\r\n        modalView: {\r\n            width: \"80%\",\r\n            maxWidth: 300,\r\n            margin: 20,\r\n            borderRadius: 3,\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 30,\r\n            alignItems: \"center\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomModal);\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock: () => void; profile: UserProfile};\r\n\r\nclass BlockProfileModal extends React.Component<BlockProfileModalProps> {\r\n    render() {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    if (onBlock) onBlock();\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"block.action\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textWhite,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BlockProfileModal);\r\n","import {convertDtoToProfile} from \"../../api/converters\";\r\nimport {FetchMyMatchesResponseDto, FetchProfilesResponseDto, LikeProfileResponseDto} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport store from \"../store\";\r\nimport {\r\n    SetOfferFilterAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetMatchingFiltersAction,\r\n    MatchingFiltersState,\r\n    AppThunk,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    FetchProfilesFailureAction,\r\n    FetchProfilesSuccessAction,\r\n    FetchProfilesRefreshAction,\r\n    BeginFetchProfilesAction,\r\n    MatchingState,\r\n    LikeProfileSuccessAction,\r\n    FetchMyMatchesSuccessAction,\r\n    FetchMyMatchesFailureAction,\r\n    BeginFetchMyMatchesAction,\r\n} from \"../types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nexport const beginFetchProfiles = (): BeginFetchProfilesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch) => {\r\n    const state: MatchingState = store.getState().matching;\r\n    if (state.fetchingProfiles || !state.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    function nonEmptyOrUndef<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const filters = state.filters;\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n\r\n    const filterParams = {\r\n        universities: nonEmptyOrUndef(filters.universities),\r\n        spokenLanguages: nonEmptyOrUndef(filters.languages),\r\n        degrees: nonEmptyOrUndef(filters.degrees),\r\n        types: nonEmptyOrUndef(filters.types),\r\n        offers: nonEmptyOrUndef(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: state.fetchingPage,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        true,\r\n    );\r\n\r\n    if (response.success) {\r\n        const resp = (response as unknown) as FetchProfilesResponseDto;\r\n        const canFetchMore = resp.meta.currentPage < resp.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(resp.data.map(convertDtoToProfile), canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nexport const fetchProfilesFailure = (): FetchProfilesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nexport const fetchProfilesSuccess = (profiles: UserProfile[], canFetchMore: boolean): FetchProfilesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    profiles,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): FetchProfilesRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nexport const likeProfileSuccess = (\r\n    profileId: string,\r\n    matchStatus: LikeProfileResponseDto,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n    matchStatus,\r\n});\r\n\r\nexport const likeProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toUserId: profileId}, true);\r\n    if (response.success) {\r\n        const matchStatus = response.data as LikeProfileResponseDto;\r\n        dispatch(likeProfileSuccess(profileId, matchStatus));\r\n    }\r\n};\r\n\r\nexport const dislikeProfileSuccess = (profileId: string): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const dislikeProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toUserId: profileId}, true);\r\n    if (response.success) dispatch(dislikeProfileSuccess(profileId));\r\n};\r\n\r\nexport const blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, true);\r\n    if (response.success) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nexport const beginFetchMyMatches = (): BeginFetchMyMatchesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nexport const fetchMyMatchesFailure = (): FetchMyMatchesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nexport const fetchMyMatchesSuccess = (profiles: UserProfile[]): FetchMyMatchesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    profiles,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch) => {\r\n    const state: MatchingState = store.getState().matching;\r\n    if (state.fetchingMyMatches) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, true);\r\n\r\n    if (response.success) {\r\n        const resp = response.data as FetchMyMatchesResponseDto;\r\n        dispatch(fetchMyMatchesSuccess(resp.map(convertDtoToProfile)));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle = {\r\n    fontFamily: Platform.OS == \"web\" ? undefined : \"sans-serif-thin\",\r\n    fontWeight: Platform.OS == \"web\" ? \"100\" : undefined,\r\n};\r\n\r\nexport const styleTextLight: TextStyle = {\r\n    fontFamily: Platform.OS == \"web\" ? undefined : \"sans-serif-light\",\r\n    fontWeight: Platform.OS == \"web\" ? \"200\" : undefined,\r\n};\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Avatar, withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {blockProfile} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport {styleTextThin} from \"../styles/general\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n    blockModalOpen: boolean;\r\n};\r\n\r\nclass ProfilePreview extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            blockModalOpen: false,\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        this.setState({...this.state, animating: true});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n            duration,\r\n            easing: Easing.elastic(1.0),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n    }\r\n\r\n    collapse() {\r\n        const duration = 100;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n            duration,\r\n            easing: Easing.out(Easing.linear),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style} = this.props;\r\n        const {expanded, animating, height, blockModalOpen} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n        //const fullName = profile.firstName.length % 2 == 0 ? profile.firstName + \" \" + profile.lastName : \"Jimmy Jim McLongname\";\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                        this.hide();\r\n                    }}\r\n                    onSwipeableLeftWillOpen={() => {\r\n                        if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                        this.hide();\r\n                    }}\r\n                    leftThreshold={100}\r\n                    rightThreshold={100}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={[styles.swipeAction, styles.swipeActionRight]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentRight]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                    renderLeftActions={() => (\r\n                        <View style={[styles.swipeAction, styles.swipeActionLeft]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentLeft]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => this.toggleExpanded()}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.collapsedContent}>\r\n                            <View style={styles.avatarContainer}>\r\n                                <Avatar\r\n                                    size={120}\r\n                                    rounded\r\n                                    title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                    containerStyle={styles.avatar}\r\n                                    source={\r\n                                        profile.avatarUrl && profile.avatarUrl !== \"\"\r\n                                            ? {uri: profile.avatarUrl}\r\n                                            : undefined\r\n                                    }\r\n                                ></Avatar>\r\n                            </View>\r\n                            <View style={styles.infoContainer}>\r\n                                <Text style={styles.name}>{fullName}</Text>\r\n                                {university && <FormattedUniversity style={styles.infoText} university={university} />}\r\n                                <Text style={styles.infoText}>\r\n                                    {i18n.t(`genders.${profile.gender}`)}\r\n                                    {\", \"}\r\n                                    {i18n.t(`allRoles.${profile.type}`)} (\r\n                                    {profile.type == \"staff\"\r\n                                        ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n                                        : i18n.t(`degrees.${profile.degree}`)}\r\n                                    )\r\n                                </Text>\r\n                                {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                            </View>\r\n                        </View>\r\n                        {(expanded || animating) && (\r\n                            <View style={styles.expandedContent}>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.languages.map((l: SpokenLanguageDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${l.code}`}\r\n                                            text={`${i18n.t(`languageNames.${l.code}`)}${\r\n                                                l.level != \"native\" ? ` (${l.level.toUpperCase()})` : \"\"\r\n                                            }`}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.profileOffers.map((offer: OfferValueDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${offer.offerId}`}\r\n                                            text={i18n.t(`allOffers.${offer.offerId}.name`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                <TouchableOpacity\r\n                                    style={styles.blockButton}\r\n                                    onPress={() => this.setState({...this.state, blockModalOpen: true})}\r\n                                >\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                                {blockModalOpen && (\r\n                                    <BlockProfileModal\r\n                                        profile={profile}\r\n                                        onHide={() => this.setState({...this.state, blockModalOpen: false})}\r\n                                        onBlock={() => {\r\n                                            this.hide(() =>\r\n                                                (store.dispatch as MyThunkDispatch)(blockProfile(profile.id)),\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </View>\r\n                        )}\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst chipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        chip: {\r\n            backgroundColor: theme.accentSlight,\r\n            borderRadius: 6,\r\n            //paddingHorizontal: 7,\r\n            paddingHorizontal: 4,\r\n            paddingVertical: 2,\r\n            marginHorizontal: 2,\r\n            marginVertical: 2,\r\n            flexGrow: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n    });\r\n});\r\n\r\nconst ItemChip = withTheme(\r\n    ({text, theme}: {text: string} & ThemeProps): JSX.Element => {\r\n        const styles = chipStyles(theme);\r\n        return (\r\n            <View style={styles.chip}>\r\n                <Text style={styles.chipText}>{text}</Text>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 10;\r\nconst cardPadding = 10;\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 180;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 400;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n            padding: cardPadding,\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"column\",\r\n        },\r\n        swipeAction: {\r\n            width: \"100%\",\r\n            marginHorizontal: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionLeft: {\r\n            paddingRight: sideMargin * 2,\r\n        },\r\n        swipeActionRight: {\r\n            paddingLeft: sideMargin * 2,\r\n        },\r\n        swipeActionContent: {\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"flex-end\",\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        // Card content\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n            height: PROFILE_PREVIEW_COLLAPSED_HEIGHT - verticalSpacing * 2 - cardPadding * 2,\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chipsContainer: {\r\n            // TODO clean-up\r\n            /*flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            marginTop: 4,*/\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n            //maxHeight: 58,\r\n            overflow: \"hidden\",\r\n        },\r\n        expandedSectionTitle: {\r\n            fontFamily: \"sans-serif-light\",\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        actionContainer: {\r\n            flexDirection: \"column\",\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfilePreview);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport {StackNavigationProp, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    LayoutRectangle,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfilePreview from \"../components/ProfilePreview\";\r\nimport {TabMatchingParamList} from \"../navigation/types\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    profiles: state.matching.fetchedProfiles,\r\n    fetchingProfiles: state.matching.fetchingProfiles,\r\n    justRefreshed: state.matching.fetchingPage == 1,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingParamList, \"TabMatchingScreen\">;\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n\r\n    fetchMore() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchProfiles());\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.profiles.length == 0) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: TabMatchingScreenProps) {\r\n        if (this.props.profiles.length == 0) this.fetchMore();\r\n        // Reset the hidden profiles when the user purposedly refreshes\r\n        if (!oldProps.justRefreshed && this.props.justRefreshed) this.setState({...this.state, hiddenProfiles: {}});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profiles, theme, fetchingProfiles, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const previewComponents = profiles.map((profile: UserProfile) => (\r\n            <ProfilePreview\r\n                key={profile.id}\r\n                profile={profile}\r\n                onExpand={(layout: LayoutRectangle) => {\r\n                    const scroll = this.scrollViewRef.current;\r\n                    if (scroll) scroll.scrollTo({y: layout.y, animated: true});\r\n                }}\r\n                onSwipeRight={() => (dispatch as MyThunkDispatch)(likeProfile(profile.id))}\r\n                onSwipeLeft={() => (dispatch as MyThunkDispatch)(dislikeProfile(profile.id))}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView\r\n                    ref={this.scrollViewRef}\r\n                    style={styles.scroller}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingProfiles}\r\n                            onRefresh={() => store.dispatch(refreshFetchedProfiles())}\r\n                        />\r\n                    }\r\n                    onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                        const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                        if (!fetchingProfiles && distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                    }}\r\n                >\r\n                    <View style={styles.matchContainer}>\r\n                        {previewComponents}\r\n                        <View style={styles.loadingIndicatorContainer}>\r\n                            {fetchingProfiles && profiles.length > 0 && (\r\n                                <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                            )}\r\n                        </View>\r\n                        {!fetchingProfiles && previewComponents.length == 0 && (\r\n                            <View style={styles.noResultsContainer}>\r\n                                <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                                <Text style={styles.noResultsText2}>{i18n.t(\"matching.noResultsAdvice\")}</Text>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        matchContainer: {\r\n            flex: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderWidth: 0,\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginVertical: 10,\r\n            height: 50,\r\n        },\r\n        filtersIcon: {\r\n            paddingHorizontal: 5,\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\ntype MatchingHeaderRightProps = {\r\n    navigation: StackNavigationProp<TabMatchingParamList, \"TabMatchingScreen\">;\r\n} & ThemeProps;\r\n\r\nexport const MatchingHeaderRight = withTheme(\r\n    ({navigation, theme}: MatchingHeaderRightProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={styles.headerContainer}>\r\n                {/*<TouchableOpacity onPress={() => store.dispatch(refreshFetchedProfiles())}>\r\n                <MaterialIcons name=\"refresh\" size={32} />\r\n            </TouchableOpacity>*/}\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"MatchFilteringScreen\")}>\r\n                    <FontAwesome name=\"sliders\" style={styles.filtersIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    noButtonVariant?: boolean;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(noButtonVariant || false, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            buttonContainerStyle={[styleProps.buttonContainerStyle, {marginHorizontal: 2}]}\r\n            buttonStyle={[styleProps.buttonStyle, {paddingHorizontal: 0}]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type MultiLanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass MultiLanguagePicker extends React.Component<MultiLanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiLanguagePicker;\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {refreshFetchedProfiles, setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport MultiLanguagePicker from \"../components/MultiLanguagePicker\";\r\nimport {Degree, Role} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport store from \"../state/store\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {StackHeaderLeftButtonProps} from \"@react-navigation/stack\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator></Separator>\r\n                <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            ></Switch>\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                    <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.sectionContainer}>\r\n                    <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiUniversityPicker\r\n                                universities={filters.universities}\r\n                                showSelected={false}\r\n                                onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                            ></MultiUniversityPicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiLanguagePicker\r\n                                languages={filters.languages}\r\n                                showSelected={false}\r\n                                onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                            ></MultiLanguagePicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.twoLineEntryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                        <RoleToggleMulti\r\n                            roles={filters.types}\r\n                            onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                            noButtonVariant={true}\r\n                        ></RoleToggleMulti>\r\n                    </View>\r\n                    {filters.types.indexOf(\"student\") != -1 && (\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                            <DegreeToggleMulti\r\n                                degrees={filters.degrees}\r\n                                onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                style={{width: \"100%\"}}\r\n                                noButtonVariant={true}\r\n                            ></DegreeToggleMulti>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {offerSections}\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            backgroundColor: theme.background,\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            padding: 40,\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 20,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n        },\r\n    });\r\n});\r\n\r\nconst headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        headerButtonIcon: {\r\n            fontSize: 32,\r\n            paddingRight: 10,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport const FilteringHeaderLeft = withTheme(\r\n    (props: StackHeaderLeftButtonProps & ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(props.theme);\r\n        return (\r\n            <TouchableOpacity style={{padding: 10}} onPress={props.onPress}>\r\n                <MaterialIcons name=\"close\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const FilteringHeaderRight = withTheme(\r\n    ({theme}: ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(theme);\r\n        return (\r\n            <TouchableOpacity\r\n                style={{paddingVertical: 10}}\r\n                onPress={() => {\r\n                    if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                    rootNavigate(\"TabMatchingScreen\");\r\n                    store.dispatch(refreshFetchedProfiles());\r\n                }}\r\n            >\r\n                <MaterialIcons name=\"check\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\n//return <MaterialIcons name=\"refresh\" size={32} style={{paddingRight: 10}} />;\r\n/*\r\n<TouchableOpacity style={{marginRight: 16, padding: 10}} onPress={() => store.dispatch(resetMatchingFilters())}>\r\n    <Text>reset</Text>\r\n</TouchableOpacity>\r\n*/\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../../components/LogOutButton\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\nexport type ChatScreenProps = ThemeProps;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                <Text style={styles.title}>Under construction</Text>\r\n                <View style={styles.separator} />\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ChatScreen);\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Avatar, withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nclass ProfileMessagingCard extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            height: new ReAnimated.Value(CARD_HEIGHT),\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = 120;\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style, onPress} = this.props;\r\n        const {height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        // const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        //this.hide();\r\n                    }}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={styles.swipeAction}>\r\n                            <View style={styles.swipeActionContent}>\r\n                                <SwipeActionButton icon=\"notifications-off\" color={\"#ccc\"}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"report\" color={theme.warn}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"close\" color={theme.error}></SwipeActionButton>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            if (onPress) onPress();\r\n                        }}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.avatarContainer}>\r\n                            <Avatar\r\n                                size={CARD_HEIGHT - verticalSpacing * 2 - 20}\r\n                                rounded\r\n                                title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                containerStyle={styles.avatar}\r\n                                source={\r\n                                    profile.avatarUrl && profile.avatarUrl !== \"\" ? {uri: profile.avatarUrl} : undefined\r\n                                }\r\n                            ></Avatar>\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{profile.firstName + \" \" + profile.lastName}</Text>\r\n                            <Text style={styles.infoText}>\r\n                                {i18n.t(`allRoles.${profile.staffRole ? \"staff\" : \"student\"}`)} (\r\n                                {profile.staffRole\r\n                                    ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n                                    : i18n.t(`degrees.${profile.degree}`)}\r\n                                )\r\n                            </Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\ntype SwipeActionProps = {icon: string; color?: string; onPress?: () => void};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, color, onPress, theme} = props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor: color}]}>\r\n                <MaterialIcons style={styles.swipeActionButtonIcon} name={icon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 5;\r\nconst CARD_HEIGHT = 75;\r\nconst ACTION_BUTTON_WIDTH = CARD_HEIGHT - verticalSpacing * 2;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            //paddingHorizontal: 20,\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n            padding: 10,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        swipeAction: {\r\n            width: ACTION_BUTTON_WIDTH * 3,\r\n            //marginHorizontal: sideMargin,\r\n            marginLeft: -sideMargin - 2,\r\n            marginRight: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionContent: {\r\n            flexDirection: \"row\",\r\n            borderTopRightRadius: 4,\r\n            borderBottomRightRadius: 4,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n        swipeActionButton: {\r\n            width: ACTION_BUTTON_WIDTH,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 22,\r\n        },\r\n\r\n        // Card content\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 15,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfileMessagingCard);\r\n","import * as React from \"react\";\r\nimport {ScrollView, View, StyleSheet, Alert, Text, RefreshControl} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport ProfileMessagingCard from \"../../components/messaging/ProfileMessagingCard\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMyMatches} from \"../../state/matching/actions\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n    profiles: state.matching.myMatches,\r\n    fetchingMatches: state.matching.fetchingMyMatches,\r\n});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\n// TEMP fake profiles\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst testProfiles: UserProfile[] = [\r\n    {\r\n        id: \"SpGiGSsGDdGSpogjQgsfGhfSdDFPFhGdShD\",\r\n        type: \"student\",\r\n        firstName: \"John\",\r\n        lastName: \"Doe\",\r\n        university: \"univ-brest\",\r\n        degree: \"bsc3\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"fr\", level: \"native\"},\r\n            {code: \"en\", level: \"c2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"FQSFDPSfpgsdsdfPIUJIjGSfgpQgqujpgodREjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Matt\",\r\n        lastName: \"Brooks\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"en\", level: \"c1\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"FDPSfpgssdfPIUJIjfgpQujpgodREjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Jeff\",\r\n        lastName: \"Dale\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"en\", level: \"c1\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n    {\r\n        id: \"qdqsFDPSfpgssdfPIUJIjfgpQujpgodRdqEjPGS\",\r\n        type: \"student\",\r\n        firstName: \"Harry\",\r\n        lastName: \"Dodd\",\r\n        university: \"univ-cadiz\",\r\n        degree: \"m2\",\r\n        nationality: \"FR\",\r\n        birthdate: new Date(),\r\n        gender: \"male\",\r\n        interests: [\"netflix\"],\r\n        avatarUrl: \"\",\r\n        languages: [\r\n            {code: \"es\", level: \"native\"},\r\n            {code: \"fr\", level: \"b2\"},\r\n        ],\r\n        educationFields: [],\r\n        profileOffers: [],\r\n    },\r\n];\r\n\r\ntype IndividualMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass IndividualMessagingTab extends React.Component<IndividualMessagingTabProps> {\r\n    componentDidMount() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchMyMatches());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, profiles, fetchingMatches, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        //const profiles = testProfiles;\r\n        //const profiles: UserProfile[] = [];\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <ScrollView\r\n                    style={styles.matchesContainer}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingMatches}\r\n                            onRefresh={() => (dispatch as MyThunkDispatch)(fetchMyMatches())}\r\n                        />\r\n                    }\r\n                >\r\n                    {profiles.map((p: UserProfile) => (\r\n                        <ProfileMessagingCard\r\n                            key={p.id}\r\n                            profile={p}\r\n                            onPress={() => {\r\n                                Alert.alert(\"Chatting is not implemented yet\", \"\", [{text: \"OK\"}]);\r\n                            }}\r\n                        />\r\n                    ))}\r\n                    {!fetchingMatches && profiles.length == 0 && (\r\n                        <View style={styles.noMatchesContainer}>\r\n                            <Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>\r\n                        </View>\r\n                    )}\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 20,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n            //height: 250,\r\n        },\r\n        matchesContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        noMatchesContainer: {\r\n            width: \"80%\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 40,\r\n        },\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(IndividualMessagingTab));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nconst mapStateToProps = (state: AppState) => ({});\r\nconst reduxConnector = connect(mapStateToProps);\r\n\r\ntype GroupMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass GroupMessagingTab extends React.Component<GroupMessagingTabProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <Text>Not implemented</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 20,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMessagingTab));\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {useSafeAreaInsets} from \"react-native-safe-area-context\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport IndividualMessagingTab from \"../screens/messaging/IndividualMessagingTab\";\r\nimport GroupMessagingTab from \"../screens/messaging/GroupMessagingTab\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMessagingRoot, TabMessagingTabs} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst Stack = createStackNavigator<TabMessagingRoot>();\r\nconst Tab = createMaterialTopTabNavigator<TabMessagingTabs>();\r\n\r\nexport default function MessagingNavigator(): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <Stack.Navigator headerMode=\"none\">\r\n            <Stack.Screen name=\"ChatScreen\" component={ChatScreen} />\r\n            <Stack.Screen name=\"MessagingScreen\">\r\n                {() => (\r\n                    <Tab.Navigator tabBarOptions={{style: {paddingTop: insets.top}}}>\r\n                        <Tab.Screen\r\n                            name=\"IndividualMessagingTab\"\r\n                            options={{\r\n                                tabBarLabel: i18n.t(\"messaging.tabIndividual\"),\r\n                                title: screenTitle(\"IndividualMessagingTab\"),\r\n                            }}\r\n                            component={IndividualMessagingTab}\r\n                        />\r\n                        <Tab.Screen\r\n                            name=\"GroupMessagingTab\"\r\n                            options={{\r\n                                tabBarLabel: i18n.t(\"messaging.tabGroup\"),\r\n                                title: screenTitle(\"GroupMessagingTab\"),\r\n                            }}\r\n                            component={GroupMessagingTab}\r\n                        />\r\n                    </Tab.Navigator>\r\n                )}\r\n            </Stack.Screen>\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"heart\" />\r\n                <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                <View style={styles.separator} />\r\n                <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                    Found a bug or have some feedback for us or ideas for the app?\r\n                </Text>\r\n                <Text style={styles.alphaText}>\r\n                    Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                </Text>\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackHeaderLeftButtonProps, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport TabNotImplementedScreen from \"../screens/TabNotImplementedScreen\";\r\nimport {\r\n    MainNavigatorTabs,\r\n    RootNavigatorScreens,\r\n    TabHomeRoot,\r\n    TabMatchingRoot,\r\n    TabNotificationsRoot,\r\n    TabProfileRoot,\r\n} from \"../navigation/types\";\r\nimport TabProfileScreen from \"../screens/TabProfileScreen\";\r\nimport i18n from \"i18n-js\";\r\nimport TabMatchingScreen, {MatchingHeaderRight} from \"../screens/TabMatchingScreen\";\r\nimport MatchFilteringScreen, {FilteringHeaderLeft, FilteringHeaderRight} from \"../screens/MatchFilteringScreen\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {Text} from \"react-native\";\r\nimport {LabelPosition} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent({theme}: MainNavigatorProps): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabHome\"\r\n            tabBarOptions={{\r\n                activeTintColor: theme.tint,\r\n                style: {height: 55, paddingTop: 5, paddingBottom: 5},\r\n                tabStyle: {flexDirection: \"column\"},\r\n                iconStyle: {flex: 1},\r\n            }}\r\n        >\r\n            <TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.home\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.matching\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.messaging\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"message\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabProfile\"\r\n                component={TabProfileNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.profile\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"person\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.notifications\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\ntype TabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\ntype TabBarLabelProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    position: LabelPosition;\r\n};\r\n\r\n// TODO move\r\nfunction TabBarIcon({name, color}: {name: string} & TabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nfunction TabBarLabel({text, color}: {text: string} & TabBarLabelProps): JSX.Element {\r\n    return <Text style={{color, fontSize: 12}}>{text}</Text>;\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nconst TabMatchingNavigator = withTheme(\r\n    (): JSX.Element => (\r\n        <TabMatchingStack.Navigator>\r\n            <TabMatchingStack.Screen\r\n                name=\"TabMatchingScreen\"\r\n                component={TabMatchingScreen}\r\n                options={({navigation}) => ({\r\n                    headerShown: true,\r\n                    headerLeft: () => <></>,\r\n                    headerTitle: \"Matching\",\r\n                    headerTitleStyle: {\r\n                        letterSpacing: 0.5,\r\n                        paddingLeft: 10,\r\n                    },\r\n                    headerTitleAlign: \"left\",\r\n                    // eslint-disable-next-line react/display-name\r\n                    headerRight: () => <MatchingHeaderRight navigation={navigation} />,\r\n                    title: screenTitle(\"TabMatchingScreen\"),\r\n                })}\r\n            />\r\n            <TabMatchingStack.Screen\r\n                name=\"MatchFilteringScreen\"\r\n                component={MatchFilteringScreen}\r\n                options={{\r\n                    headerShown: true,\r\n                    headerTitle: \"Filters\",\r\n                    headerTitleAlign: \"center\",\r\n                    headerLeft: (props: StackHeaderLeftButtonProps) => <FilteringHeaderLeft {...props} />,\r\n                    headerRight: () => <FilteringHeaderRight />,\r\n                    title: screenTitle(\"MatchFilteringScreen\"),\r\n                }}\r\n            />\r\n        </TabMatchingStack.Navigator>\r\n    ),\r\n);\r\n\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n\r\nconst TabProfileStack = createStackNavigator<TabProfileRoot>();\r\n\r\nconst TabProfileNavigator = (): JSX.Element => (\r\n    <TabProfileStack.Navigator>\r\n        <TabProfileStack.Screen\r\n            name=\"TabProfileScreen\"\r\n            component={TabProfileScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabProfileScreen\")}}\r\n        />\r\n    </TabProfileStack.Navigator>\r\n);\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import {Dimensions, StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        slideWrapper: {\r\n            //justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"75%\",\r\n            height: Dimensions.get(\"window\").height - 50,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 20,\r\n        },\r\n        navButton: {\r\n            padding: 10,\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const tosSlideStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        actionButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        actionButtonTextDecline: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.error,\r\n        },\r\n        actionButtonTextAccept: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.okay,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginBottom: 40,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n): JSX.Element[] {\r\n    return offers\r\n        .filter((offer: OfferDto) => offer.category == category)\r\n        .map((offer: OfferDto, i: number) => (\r\n            <OfferControl\r\n                key={i}\r\n                offer={offer}\r\n                value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                style={{marginVertical: 20}}\r\n            />\r\n        ));\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.role!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds,\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.role == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.role == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRole: onboardingState.staffRole,\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {title, subtitle, index, hideNavNext, hasNext, handleSubmit, next, theme} = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        return (\r\n            <View style={styles.slideWrapper}>\r\n                <View style={styles.slideContentWrapper}>\r\n                    <View style={styles.header}>\r\n                        {title && <Text style={styles.title}>{title}</Text>}\r\n                        {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n                    </View>\r\n                    {this.props.children}\r\n                </View>\r\n                <View style={styles.slideNavWrapper}>\r\n                    {hasPrevious && (\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => this.props.previous()}>\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-left\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hideNavNext && hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            /*onPress={() => this.props.navigation.navigate(next)}*/ onPress={navigateRight}\r\n                        >\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-right\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            onPress={() => {\r\n                                finishOnboarding(store.getState().auth.onboarding);\r\n                            }}\r\n                        >\r\n                            <Text style={styles.finishButtonText}>{i18n.t(\"onboarding.submit\")}</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={200}>\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"firstname\")}\r\n                                    label={i18n.t(\"firstname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"lastname\")}\r\n                                    label={i18n.t(\"lastname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n                            </KeyboardAvoidingView>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet} from \"react-native\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport BirthDatePicker from \"./BirthDatePicker\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BirthDateControlProps = ThemeProps & {\r\n    date?: Date;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\nexport type BirthDateControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass BirthDateControl extends React.Component<BirthDateControlProps, BirthDateControlState> {\r\n    constructor(props: BirthDateControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, onSelect, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity style={[styles.button, date ? styles.buttonOk : {}]} onPress={() => this.showModal()}>\r\n                    {date && <FormattedDate style={styles.dateText} date={date} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <BirthDatePicker\r\n                    date={date}\r\n                    open={open}\r\n                    onSelect={(value: Date) => {\r\n                        if (onSelect) onSelect(value);\r\n                    }}\r\n                    onHide={() => this.hideModal()}\r\n                ></BirthDatePicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        dateText: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BirthDateControl);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, nationality ? styles.buttonOk : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                ></NationalityPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport BirthDateControl from \"../../components/BirthDateControl\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport {GenderToggle} from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingPersonalInfoScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingPersonalInfoFormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingPersonalInfoScreen extends React.Component<OnboardingPersonalInfoScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingPersonalInfoScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingPersonalInfoFormState) {\r\n        if (values.birthdate && values.gender && values.nationality) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingPersonalInfoFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingPersonalInfoFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingPersonalInfoFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.personalInfo.title\")}\r\n                            //subtitle={i18n.t(\"onboarding.personalInfo.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateControl\r\n                                date={values.birthdate || undefined}\r\n                                onSelect={(birthdate: Date) => setFieldValue(\"birthdate\", birthdate)}\r\n                            />\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showSelected={false}\r\n                            ></EducationFieldPicker>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingPersonalInfoScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n});\r\n\r\ntype OnboardingLanguageScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingLanguageScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingLanguageFormState = {\r\n    languages: SpokenLanguageDto[];\r\n};\r\n\r\nclass OnboardingLanguageScreen extends React.Component<OnboardingLanguageScreenProps, OnboardingLanguageScreenState> {\r\n    constructor(props: OnboardingLanguageScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingLanguageScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.languages != next.languages;\r\n    }\r\n\r\n    submit(values: OnboardingLanguageFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingLanguageFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingLanguageFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingLanguageFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.language.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></SpokenLanguagesInput>\r\n                            {touched.languages && <InputErrorText error={errors.languages}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingLanguageScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingInterestsScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingInterestsScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingInterestsFormState = {\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingInterestsScreen extends React.Component<\r\n    OnboardingInterestsScreenProps,\r\n    OnboardingInterestsScreenState\r\n> {\r\n    constructor(props: OnboardingInterestsScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingInterestsScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.interestIds != next.interestIds;\r\n    }\r\n\r\n    submit(values: OnboardingInterestsFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingInterestsFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingInterestsFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingInterestsFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.interests.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></InterestsPicker>\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingInterestsScreen);\r\n","import * as React from \"react\";\r\nimport {Text, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport store from \"../../state/store\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\ntype OnboardingRoleScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    role: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        store.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.role.title\")} hideNavNext={true} {...this.props}>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"student\"})}>\r\n                    <MaterialIcons name={\"school\"} style={styles.roleButtonIconStudent}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStudent}>{i18n.t(\"allRoles.student\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"staff\"})}>\r\n                    <MaterialIcons name={\"group\"} style={styles.roleButtonIconStaff}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStaff}>{i18n.t(\"allRoles.staff\")}</Text>\r\n                </TouchableOpacity>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    const studentColor = theme.accent;\r\n    const staffColor = theme.okay;\r\n\r\n    const common = StyleSheet.create({\r\n        roleButtonText: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n        },\r\n        roleButtonIcon: {\r\n            fontSize: 50,\r\n            marginRight: 15,\r\n        },\r\n    });\r\n\r\n    return StyleSheet.create({\r\n        roleButton: {\r\n            height: 100,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        } as ViewStyle,\r\n        roleButtonTextStaff: {\r\n            ...common.roleButtonText,\r\n            color: staffColor,\r\n        },\r\n        roleButtonTextStudent: {\r\n            ...common.roleButtonText,\r\n            color: studentColor,\r\n        },\r\n        roleButtonIconStaff: {\r\n            ...common.roleButtonIcon,\r\n            color: staffColor,\r\n        },\r\n        roleButtonIconStudent: {\r\n            ...common.roleButtonIcon,\r\n            color: studentColor,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingRoleScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersDiscover.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Discover, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen1);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersCollaborate.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Collaborate, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen2);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersMeet.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Meet, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen3);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n    staffRole: StaffRole | null;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n\r\n        const icons = [\"school\", \"library-books\", \"help\", \"account-balance\", \"build\", \"verified-user\"];\r\n\r\n        const buttons = STAFF_ROLES.map((sr: string, i: number) => (\r\n            <TouchableOpacity key={i} style={styles.button} onPress={() => this.submit({staffRole: sr as StaffRole})}>\r\n                <MaterialIcons name={icons[i]} style={styles.buttonIcon}></MaterialIcons>\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.roleSpecific1.staff.title\")} hideNavNext={true} {...this.props}>\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n    /*\r\n\r\n        <InputLabel style={{marginTop: spacing}}>{i18n.t(\"staffPosition\")}</InputLabel>\r\n        <StaffRoleToggle\r\n            staffRole={values.staffRole}\r\n            onSelect={(staffRole: StaffRole) => setFieldValue(\"staffRole\", staffRole)}\r\n        />\r\n        {touched.staffRole && <InputErrorText error={errors.staffRole}></InputErrorText>}\r\n    */\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const isStudent = onboardingState.role == \"student\";\r\n\r\n        return (\r\n            <>\r\n                {isStudent && this.studentRender()}\r\n                {!isStudent && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {theme, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"tos.modal.disclaimer1\")}\r\n                            {\"\\n\\n\"}\r\n                            {i18n.t(\"tos.modal.disclaimer2\")}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={[styles.actionText]}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    rootNavigate(\"LoginScreen\");\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"tos.decline\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textInverted,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {OnboardingScreenProps, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingTosScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingTosScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingTosScreen extends React.Component<OnboardingTosScreenProps, OnboardingTosScreenState> {\r\n    constructor(props: OnboardingTosScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.tos.title\")}\r\n                subtitle={i18n.t(\"onboarding.tos.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"tos.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"tos.readMore\")[1]} />\r\n                    {i18n.t(\"tos.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingTosScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingPrivacyScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingPrivacyScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingPrivacyScreen extends React.Component<OnboardingPrivacyScreenProps, OnboardingPrivacyScreenState> {\r\n    constructor(props: OnboardingPrivacyScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.privacy.title\")}\r\n                subtitle={i18n.t(\"onboarding.privacy.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"privacy.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"privacy.readMore\")[1]} />\r\n                    {i18n.t(\"privacy.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingPrivacyScreen);\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\nimport OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingPersonalInfoScreen from \"./OnboardingPersonalInfoScreen\";\r\nimport OnboardingLanguageScreen from \"./OnboardingLanguageScreen\";\r\nimport OnboardingInterestsScreen from \"./OnboardingInterestsScreen\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingTosScreen from \"./OnboardingTosScreen\";\r\nimport OnboardingPrivacyScreen from \"./OnboardingPrivacyScreen\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingPersonalInfoScreen,\r\n    OnboardingLanguageScreen,\r\n    OnboardingInterestsScreen,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingTosScreen,\r\n    OnboardingPrivacyScreen,\r\n};\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingTosScreen\",\r\n    \"OnboardingPrivacyScreen\",\r\n    \"OnboardingPersonalInfoScreen\",\r\n    \"OnboardingLanguageScreen\",\r\n    \"OnboardingInterestsScreen\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER, ONBOARDING_SCREENS} from \"../screens/onboarding\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const ComponentClass = ONBOARDING_SCREENS[name];\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => {\r\n        if (hasNext) rootNavigate(ONBOARDING_ORDER[i + 1]);\r\n    };\r\n    const previous = () => {\r\n        if (i > 0) rootNavigate(ONBOARDING_ORDER[i - 1]);\r\n    };\r\n\r\n    class temp extends React.Component {\r\n        render(): JSX.Element {\r\n            return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n        }\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={temp} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nexport default function OnboardingNavigator(): JSX.Element {\r\n    return (\r\n        <OnboardingStack.Navigator\r\n            initialRouteName={ONBOARDING_ORDER[0]}\r\n            tabBarOptions={{showLabel: false, showIcon: false}}\r\n            tabBar={() => <></>}\r\n            springConfig={{\r\n                stiffness: 500,\r\n                damping: 2000,\r\n                mass: 5,\r\n            }}\r\n            swipeEnabled={false}\r\n            lazy={true}\r\n            lazyPreloadDistance={0}\r\n        >\r\n            {screens}\r\n        </OnboardingStack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"home\"></FontAwesome>\r\n                <Text style={styles.title}>{i18n.t(\"onboarding.profileCreated\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity style={styles.button} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                    <Text style={styles.buttonText}>{i18n.t(\"onboarding.getStarted\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"85%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            color: theme.text,\r\n            fontSize: 40,\r\n            marginVertical: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        button: {\r\n            marginVertical: 20,\r\n            padding: 5,\r\n            borderBottomWidth: 0.75,\r\n            borderBottomColor: theme.textLight,\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 20,\r\n            letterSpacing: 1.5,\r\n            textTransform: \"uppercase\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMyMatches} from \"../state/matching/actions\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport store from \"../state/store\";\r\nimport {styleTextThin} from \"../styles/general\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass ReciprocalMatchScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity\r\n                    style={styles.actionButton}\r\n                    onPress={() => rootNavigate(\"TabMessaging\") /* TODO Redirect to chat tab directly instead */}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.chat\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    style={[styles.actionButton, {backgroundColor: theme.actionNeutral}]}\r\n                    onPress={() => {\r\n                        rootNavigate(\"TabMatchingScreen\");\r\n                        // Make sure the data is up to date\r\n                        // TODO this could be improved\r\n                        (store.dispatch as MyThunkDispatch)(fetchMyMatches());\r\n                    }}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.continue\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.okay,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 32,\r\n            color: theme.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n            opacity: 0.3,\r\n        },\r\n        actionButton: {\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 30,\r\n            paddingVertical: 10,\r\n            marginVertical: 20,\r\n            borderRadius: 20,\r\n        },\r\n        actionText: {\r\n            color: theme.textWhite,\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ReciprocalMatchScreen);\r\n","import * as React from \"react\";\r\nimport {Alert, StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyle, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FailableActionReturn, FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\n\r\nexport type ChangePasswordFormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): ChangePasswordFormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ChangePasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ChangePasswordFormProps = {token?: string} & FormProps<ChangePasswordFormState> & ThemeProps;\r\n\r\n// Component state\r\ntype ChangePasswordFormComponentState = {failure: boolean; errors?: string[]};\r\n\r\nclass ChangePasswordForm extends React.Component<ChangePasswordFormProps, ChangePasswordFormComponentState> {\r\n    constructor(props: ChangePasswordFormProps) {\r\n        super(props);\r\n        this.state = {failure: false};\r\n    }\r\n\r\n    submit(values: ChangePasswordFormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: FailableActionReturn) => {\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                    this.setState({...this.state, failure: !success, errors});\r\n\r\n                    if (!success) {\r\n                        Alert.alert(\"Unable to change password\", errors && errors.length > 0 ? errors[0] : \"\", [\r\n                            {text: \"OK\", onPress: () => console.log(\"OK Pressed\")},\r\n                        ]);\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ChangePasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values: ChangePasswordFormState) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<ChangePasswordFormState>) => {\r\n                        const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    secureTextEntry={true}\r\n                                    autoCompleteType=\"password\"\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <View style={formStyle.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"createAccount\")}\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={styles.createAccountButton}\r\n                                    >\r\n                                        <Text style={formStyle.buttonMajorText}>{i18n.t(\"resetPassword.button\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            ...formStyle.buttonMajor,\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ChangePasswordForm);\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView} from \"react-native\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ChangePasswordForm from \"../components/forms/ChangePasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\n\r\ntype ChangePasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ChangePasswordScreenState = {token?: string};\r\n\r\nclass ChangePasswordScreen extends React.Component<ChangePasswordScreenProps, ChangePasswordScreenState> {\r\n    constructor(props: ChangePasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {token} = this.state;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ChangePasswordForm token={token} />\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ChangePasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect(() => ({}));\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To choose a new password, click the link in the email we just sent you.\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ForgotPasswordEmailSentScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <Text style={styles.successText}>\r\n                        {i18n.t(\"resetPassword.success\")[0]}\r\n                        <Text onPress={() => rootNavigate(\"TabSignin\")} style={{color: theme.accent}}>\r\n                            {i18n.t(\"resetPassword.success\")[1]}\r\n                        </Text>\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import {NavigationContainer, DefaultTheme, DarkTheme} from \"@react-navigation/native\";\r\nimport {CardStyleInterpolators, createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport MatchSuccessScreen from \"../screens/MatchSuccessScreen\";\r\nimport {Platform} from \"react-native\";\r\nimport ChangePasswordScreen from \"../screens/ChangePasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nfunction Navigation({theme, initialRoute}: ThemeProps & {initialRoute?: keyof RootNavigatorScreens}): JSX.Element {\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            linking={LinkingConfiguration}\r\n            theme={theme.id === \"dark\" ? DarkTheme : DefaultTheme}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={/*initialRoute TODO */\"ResetPasswordSuccessScreen\"}>\r\n                <Stack.Screen name=\"LoginScreen\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ChangePasswordScreen\"\r\n                    component={ChangePasswordScreen}\r\n                    options={{title: screenTitle(\"ChangePasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"MatchSuccessScreen\"\r\n                    component={MatchSuccessScreen}\r\n                    options={{\r\n                        headerShown: false,\r\n                        cardStyleInterpolator:\r\n                            Platform.OS == \"ios\"\r\n                                ? CardStyleInterpolators.forVerticalIOS\r\n                                : CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                        title: screenTitle(\"MatchSuccessScreen\"),\r\n                    }}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    theme: state.settings.theme,\r\n}));\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ConnectedProps<typeof reduxConnector>;\r\n\r\nfunction ThemedStatusBar(props: ThemedStatusBarProps): JSX.Element {\r\n    const {theme} = props;\r\n    return <StatusBar style={theme == \"dark\" ? \"dark\" : \"light\"} />;\r\n}\r\n\r\nexport default reduxConnector(ThemedStatusBar);\r\n","import {registerRootComponent} from \"expo\";\r\nimport React from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\n\r\n// Example for disabling a warning :\r\n// YellowBox.ignoreWarnings([\"VirtualizedLists should never be nested\"]);\r\n\r\nfunction App() {\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <Navigation initialRoute={initialRoute} />\r\n                        <ThemedStatusBar />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n"],"sourceRoot":""}