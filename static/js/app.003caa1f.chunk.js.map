{"version":3,"sources":["web-build/register-service-worker.js","src/constants/config.ts","src/constants/http-status.ts","src/api/utils.ts","src/api/converters.ts","src/state/profile/actions.ts","src/state/persistent-storage/static.ts","src/api/errors.ts","src/state/auth/actions.ts","src/state/persistent-storage/auth.ts","src/constants/universities.ts","src/model/utils.ts","src/state/auth/reducer.ts","src/constants/profile-constants.ts","src/validators/index.ts","src/constants/translations.ts","src/localization.ts","src/model/languages.ts","src/state/settings/actions.ts","src/state/settings/reducer.ts","src/state/profile/reducer.ts","src/state/matching/actions.ts","src/state/matching/reducer.ts","src/state/messaging/actions.ts","src/state/types.ts","src/api/chat-socket.ts","src/state/messaging/reducer.ts","src/navigation/utils.ts","src/state/navigation-middleware.ts","src/state/store.ts","src/state/auth-storage-middleware.ts","src/state/static-storage-middleware.ts","src/hooks/useCachedResources.ts","src/constants/themes.ts","src/styles/utils.ts","src/screens/NotFoundScreen.tsx","src/screens/ValidateEmailScreen.tsx","src/screens/ValidationEmailSentScreen.tsx","src/navigation/linking-config.ts","src/components/LoginTabBar.tsx","src/components/InputLabel.tsx","src/components/InputErrorText.tsx","src/components/ValidatedTextInput.tsx","src/components/FormTextInput.tsx","src/styles/forms.ts","src/components/forms/FormError.tsx","src/components/forms/FormSubmitButton.tsx","src/components/forms/LoginForm.tsx","src/components/forms/ForgotPasswordForm.tsx","src/screens/TabLoginScreen.tsx","src/components/forms/SignupForm.tsx","src/screens/TabSignupFormScreen.tsx","src/navigation/LoginNavigator.tsx","src/components/LogOutButton.tsx","src/screens/TabNotImplementedScreen.tsx","src/styles/picker.ts","src/styles/general.ts","src/components/SectionedMultiPicker.tsx","src/model/education-fields.ts","src/components/EducationFieldPicker.tsx","src/components/DegreeToggle.tsx","src/components/RoleToggle.tsx","src/components/StaffRoleToggle.tsx","src/components/GenderToggle.tsx","src/components/BirthDatePicker.tsx","src/components/AvatarEditButton.tsx","src/components/forms/FormRow.tsx","src/components/FormattedDate.tsx","src/components/NationalityPicker.tsx","src/components/FormattedNationality.tsx","src/components/FormattedUniversity.tsx","src/components/MultiPicker.tsx","src/components/InterestsPicker.tsx","src/api/dto.ts","src/components/LanguagePicker.tsx","src/components/LanguageLevelPicker.tsx","src/components/SpokenLanguagesInput.tsx","src/components/EnlargeableAvatar.tsx","src/styles/toggles.ts","src/components/GenderToggleMulti.tsx","src/components/RoleToggleMulti.tsx","src/styles/tooltips.ts","src/components/CustomTooltip.tsx","src/components/OfferControl.tsx","src/components/forms/EditProfileForm.tsx","src/screens/TabProfileScreen.tsx","src/components/modals/CustomModal.tsx","src/components/modals/BlockProfileModal.tsx","src/components/ProfilePreview.tsx","src/screens/TabMatchingScreen.tsx","src/components/MultiUniversityPicker.tsx","src/components/DegreeToggleMulti.tsx","src/components/MultiLanguagePicker.tsx","src/screens/MatchFilteringScreen.tsx","src/components/messaging/ChatRoomCard.tsx","src/screens/messaging/IndividualMessagingTab.tsx","src/screens/messaging/GroupMessagingTab.tsx","src/navigation/MessagingNavigator.tsx","src/screens/TabHomeScreen.tsx","src/navigation/MainNavigator.tsx","src/styles/onboarding.ts","src/screens/onboarding/helpers.tsx","src/screens/onboarding/OnboardingSlide.tsx","src/screens/onboarding/OnboardingNameScreen.tsx","src/components/BirthDateControl.tsx","src/components/NationalityControl.tsx","src/screens/onboarding/OnboardingPersonalInfoScreen.tsx","src/screens/onboarding/OnboardingLanguageScreen.tsx","src/screens/onboarding/OnboardingInterestsScreen.tsx","src/screens/onboarding/OnboardingRoleScreen.tsx","src/screens/onboarding/OnboardingOffersScreen1.tsx","src/screens/onboarding/OnboardingOffersScreen2.tsx","src/screens/onboarding/OnboardingOffersScreen3.tsx","src/screens/onboarding/OnboardingRoleSpecificScreen.tsx","src/components/modals/TOSDeclinedModal.tsx","src/components/TextLink.tsx","src/screens/onboarding/OnboardingTosScreen.tsx","src/screens/onboarding/OnboardingPrivacyScreen.tsx","src/screens/onboarding/index.ts","src/navigation/OnboardingNavigator.tsx","src/screens/onboarding/OnboardingSuccessfulScreen.tsx","src/screens/MatchSuccessScreen.tsx","src/components/forms/ResetPasswordForm.tsx","src/screens/ResetPasswordScreen.tsx","src/screens/ForgotPasswordEmailSentScreen.tsx","src/screens/ResetPasswordSuccessScreen.tsx","src/screens/messaging/ChatScreen.tsx","src/components/ChatScreenHeader.tsx","src/navigation/index.tsx","src/components/providers/ConnectedThemeProvider.tsx","src/components/ThemedStatusBar.tsx","src/App.tsx"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","Environment","HttpStatusCode","extra","Constants","manifest","APP_VERSION","version","APP_SCHEME","scheme","ENVIRONMENT","TARGET","DEBUG_MODE","DEBUG","CLIENT_URL","BACKEND_URL","SERVER_HOST","SERVER_URL","encodeRequestParams","args","str","Object","keys","filter","key","undefined","map","encodeURIPrimitive","v","Array","isArray","join","encodeURIComponent","length","requestBackend","endpoint","a","async","method","params","body","authToken","verbose","headers","Accept","Alert","alert","errorType","description","status","Authorization","accessToken","formattedParams","response","log","JSON","stringify","fetch","json","stripSuperfluousOffers","offers","o","allowFemale","allowMale","allowOther","allowStaff","allowStudent","convertDtoToProfile","dto","avatarUrl","avatar","birthdate","Date","educationFields","id","profileOffers","interests","languages","convertPartialProfileToCreateDto","profile","toJSON","convertDtoToUser","convertDtoToRoom","users","profiles","p","_id","name","firstName","lastName","lastMessage","msg","sender","find","u","senderId","convertDtoToChatMessage","messages","user","createdAt","updatedAt","pending","PROFILE_ACTION_TYPES","storeStaticData","data","storageObject","AsyncStorage","setItem","readCachedStaticData","getItem","raw","parse","setProfileFieldsSuccess","fields","type","PROFILE_SET_FIELDS_SUCCESS","createProfile","dispatch","getState","token","auth","CREATED","PROFILE_CREATE_SUCCESS","loadProfileOffersSuccess","fromCache","LOAD_PROFILE_OFFERS_SUCCESS","loadProfileInterestsSuccess","LOAD_PROFILE_INTERESTS_SUCCESS","fetchUserSuccess","FETCH_USER_SUCCESS","localizeError","err","i18n","t","defaultValue","extractError","code","gatherValidationErrors","resp","OK","output","general","UNPROCESSABLE_ENTITY","errors","forEach","e","property","codes","generalError","AUTH_ACTION_TYPES","readCachedCredentials","SecureStore","registerBegin","email","password","REGISTER_BEGIN","requestRegister","locale","settings","registerSuccess","success","registerFailure","REGISTER_SUCCESS","REGISTER_FAILURE","loginSuccess","usingCachedCredentials","LOG_IN_SUCCESS","loginFailure","LOG_IN_FAILURE","requestLogin","payload","requestValidateAccount","validationToken","validateAccountSuccess","validateAccountFailure","VALIDATE_ACCOUNT_SUCCESS","VALIDATE_ACCOUNT_FAILURE","forgotPasswordSuccess","FORGOT_PASSWORD_SUCCESS","forgotPasswordFailure","FORGOT_PASSWORD_FAILURE","resetPasswordSuccess","RESET_PASSWORD_SUCCESS","setOnboardingValues","values","SET_ONBOARDING_VALUES","PARTNER_UNIVERSITIES","domain","country","extractNamesFromEmail","splitName","split","capitalize","toUpperCase","slice","firstname","lastname","getUniversityFromEmail","trim","uni","initialState","authenticated","validated","registerEmail","validatedEmail","onboarded","onboarding","gender","nationality","role","degree","staffRole","offerValues","interestIds","DEGREES","LANGUAGE_LEVELS","ROLES","STAFF_ROLES","GENDERS","VALIDATOR_EMAIL_SIGNUP","Yup","required","VALIDATOR_PASSWORD_SIGNUP","min","matches","VALIDATOR_PASSWORD_REPEAT","oneOf","VALIDATOR_EMAIL_LOGIN","VALIDATOR_PASSWORD_LOGIN","VALIDATOR_FIRSTNAME","VALIDATOR_LASTNAME","VALIDATOR_ONBOARDING_BIRTHDATE","nullable","VALIDATOR_ONBOARDING_GENDER","VALIDATOR_ONBOARDING_NATIONALITY","VALIDATOR_ONBOARDING_DEGREE","VALIDATOR_ONBOARDING_LANGUAGES","VALIDATOR_ONBOARDING_INTERESTS","en","welcome","picker","callToAction","login","tabsignin","tabsignup","emailAddress","passwordRepeat","send","forgotPassword","newPassword","forgotPasswordExplanation","cancel","signupWelcome","noResultsFound","tos","modal","disclaimer1","disclaimer2","decline","accept","readMore","privacy","emailNotificationsLabel","emailValidation","validating","createAccount","validation","atLeastOne","addAtLeastOne","invalid","invalidDomain","tooShort","noDigit","noUpperCase","noLowerCase","noSymbol","repeatWrong","multiple","error_user_not_verified","user_not_found","reset_password_no_token","unique","is_email","pageNotFound","pageDoesntExist","goHome","tabs","home","matching","messaging","notifications","myProfile","editProfile","educationFieldsPicker","placeholder","searchPlaceholder","educationFieldCategories","education","services","handicrafts","economics","psychology","law","biology","biochemistry","chemistry","physics","mathematics","statistics","materials","textiles","horticulture","forestry","fisheries","veterinary","medicine","pharmacy","sports","levelOfStudy","degrees","bsc1","bsc2","bsc3","m1","m2","phd","university","search","selectCountry","countryPickerLanguageCode","profileType","profileTypes","allRoles","student","staff","staffRoles","teaching","researcher","supporting","administrative","technical","ambassador","other","genders","male","female","dateOfBirth","months","0","1","2","3","4","5","6","7","8","9","10","11","fieldsOfEducation","apply","universities","universitiesPicker","logOut","title","subtitle","personalInfo","language","roleSpecific1","offersMeet","offersDiscover","offersCollaborate","submit","getStarted","profileCreated","spokenLanguages","languagePicker","placeholderSingle","placeholderMultiple","languageLevelPicker","languageLevels","a1","a2","b1","b2","c1","c2","native","languageNames","aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rc","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu","chooseInterests","interestsPicker","interestNames","tango","sneakers","baking","tarot","art","tea","picnicking","motorcycles","parties","shopping","couchsurfing","netflix","cooking","vegan","brunch","politics","bbq","surfing","spirituality","gardening","astrology","climbing","tennis","writer","comedy","wine","diy","coffee","sailing","music","cycling","activism","trivia","travel","instagram","museum","karaoke","fashion","disney","blogging","yoga","investing","petanque","theater","environmentalism","crossfit","dancing","hiking","running","golf","photography","vlogging","volunteering","tattoos","outdoors","esports","snowboarding","athlete","extrovert","podcasts","walking","vegetarian","reading","movies","foodie","soccer","skiing","sushi","introvert","skateboarder","festivals","fishing","swimming","expositions","gamer","piano","offerCategories","meet","discover","collaborate","allOffers","help","block","warning","action","resetPassword","instructions","button","tabIndividual","tabGroup","noMatches","noResults","noResultsAdvice","filtering","sectionGeneral","buttonReset","actionLike","actionHide","chat","continue","noOffersSelected","screenTitles","suffix","LoginForm","ForgotPassword","TabSignup","OnboardingNameScreen","OnboardingPersonalInfoScreen","OnboardingLanguageScreen","OnboardingInterestsScreen","OnboardingRoleScreen","OnboardingRoleSpecificScreen","OnboardingOffersScreen1","OnboardingOffersScreen2","OnboardingOffersScreen3","OnboardingTosScreen","OnboardingPrivacyScreen","IndividualMessagingTab","GroupMessagingTab","ChatScreen","TabHomeScreen","TabMatchingScreen","MatchFilteringScreen","TabNotificationsScreen","TabProfileScreen","ValidationEmailSentScreen","ValidateEmailScreen","ResetPasswordScreen","ResetPasswordSuccessScreen","OnboardingSuccessfulScreen","NotFoundScreen","MatchSuccessScreen","ForgotPasswordEmailSentScreen","signup","SUPPORTED_LOCALES","getDefaultLocale","l","Localization","SETTINGS_ACTION_TYPES","LANGUAGES_CODES","getLocalizedLanguageItems","translations","label","value","theme","localizedLanguageItems","MATCHING_ACTION_TYPES","offerIdToCategory","Map","fetchProfilesFailure","FETCH_PROFILES_FAILURE","fetchProfilesSuccess","canFetchMore","FETCH_PROFILES_SUCCESS","refreshFetchedProfiles","FETCH_PROFILES_REFRESH","likeProfileSuccess","profileId","matchStatus","LIKE_PROFILE_SUCCESS","dislikeProfileSuccess","DISLIKE_PROFILE_SUCCESS","blockProfileSuccess","BLOCK_PROFILE_SUCCESS","fetchMyMatchesSuccess","FETCH_MY_MATCHES_SUCCESS","MESSAGING_ACTION_TYPES","filters","types","fetchedProfiles","profilesPagination","page","fetching","myMatches","fetchingMyMatches","SOCKET_LOCATION","this","socket","connectCallbacks","listeners","on","f","m","onMessageReceived","callback","push","connect","query","authorization","registerListeners","emit","roomId","text","room","disconnect","fetchMatchRoomsSuccess","rooms","FETCH_MATCH_ROOMS_SUCCESS","joinChatRoomBegin","JOIN_CHAT_ROOM_BEGIN","joinChatRoomSuccess","JOIN_CHAT_ROOM_SUCCESS","sendChatMessageSuccess","message","SEND_MESSAGE_SUCCESS","receiveChatMessage","RECEIVE_MESSAGE","matchRooms","matchRoomsPagination","socketState","connected","connecting","activeRoom","localChatUser","toLocalChatUser","updateRoom","state","otherRooms","r","concat","rootNavigationRef","React","rootNavigate","route","current","navigate","screenTitle","rootReducer","combineReducers","verificationToken","names","LOG_OUT","SET_ONBOARDING_OFFER_VALUE","SET_THEME","TOGGLE_THEME","SET_LOCALE","category","sort","b","SET_AVATAR_SUCCESS","SET_OFFER_FILTER","offerId","SET_FILTERS","FETCH_PROFILES_BEGIN","pagination","FETCH_MY_MATCHES_BEGIN","FETCH_MY_MATCHES_FAILURE","FETCH_MATCH_ROOMS_BEGIN","FETCH_MATCH_ROOMS_FAILURE","FETCH_MATCH_ROOMS_REFRESH","CONNECT_TO_CHAT_BEGIN","CONNECT_TO_CHAT_FAILURE","CONNECT_TO_CHAT_SUCCESS","DISCONNECT_FROM_CHAT","LEAVE_ROOM","unshift","existingMessage","sent","combinedMiddleware","applyMiddleware","thunk","next","available","toStore","storeAuthInformation","createStore","loggedInFromCache","light","textWhite","textBlack","textLight","textInverted","background","cardBackground","accent","accentSlight","accentSecondary","accentTernary","tint","actionNeutral","okay","warn","tabIconDefault","tabIconSelected","componentBorder","dark","preTheme","generator","styles","themes","props","navigation","themedStyles","View","style","container","Text","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginTop","paddingVertical","color","withTheme","reduxConnector","store","Staging","wrapper","ActivityIndicator","size","successText","path","fallbackRoute","fallback","Platform","OS","location","setTimeout","attemptRedirectToApp","width","height","marginVertical","textAlign","lineHeight","FontAwesome","mailIcon","config","prefixes","Linking","screens","LoginScreen","TabSignin","MainScreen","TabHome","TabMatching","MAtchFilteringScren","TabMessaging","TabProfile","TabNotifications","ValidateEmailSentScreen","OnboardingScreen","TabBarComponent","index","isFocused","event","target","canPreventDefault","defaultPrevented","descriptors","position","tabBarWrapper","tabBar","routes","options","toLowerCase","inputRange","_","i","opacity","Animated","interpolate","outputRange","tabButton","tabButtonBg","accessibilityRole","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","onLongPress","tabButtonText","tabButtonTextFocused","Component","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","maxWidth","flexDirection","letterSpacing","textTransform","waveImageStyle","bottom","margin","InputLabel","otherProps","children","InputErrorText","errorStr","marginBottom","ValidatedTextInput","focused","showErrorText","wrapperStyle","untouched","errorStyle","validStyle","focusedStyle","errorTextStyle","labelStyle","onBlur","onFocus","showError","paddingBottom","setState","defaultProps","emailProps","keyboardType","autoCompleteType","textContentType","passwordProps","secureTextEntry","FormTextInput","field","touched","handleChange","handleBlur","onChangeText","isEmail","isPassword","formStyles","inputErrorText","inputRow","actionRow","buttonMajor","borderRadius","buttonMajorText","getLoginTextInputsStyleProps","wrapperVerticalMargin","outline","commonStyle","textInputWrapper","textInput","paddingHorizontal","borderWidth","textInputError","borderBottomWidth","borderBottomColor","textInputValid","placeholderTextColor","loginTabsStyles","formWrapper","versionInfoContainer","left","versionText","versionDisclaimerContainer","versionDisclaimerIcon","debugContainer","debugTitle","debugButton","debugButtonText","toggleThemeContainer","right","toggleThemeButton","toggleThemeIcon","FormError","FormSubmitButton","submitting","textStyle","loadingIndicatorStyle","LoginFormSchema","shape","setFieldValue","oldProps","onSuccessfulSubmit","setFieldError","remoteErrors","fstyles","initialValues","validationSchema","validateOnBlur","onSubmit","formikProps","handleSubmit","textInputProps","loginButton","forgotPwdLink","forgotPasswordText","ForgotPasswordFormSchema","ForgotPasswordForm","titleWrapper","formikCfg","goBack","buttonCancel","buttonSend","marginLeft","marginRight","LoginTabComponent","KeyboardAvoidingView","behavior","Math","round","random","level","MaterialIcons","MaterialCommunityIcons","ForgotPasswordTabComponent","SubTabLogin","SubTabForgotPassword","SignupFormSchema","SignupForm","validateOnChange","createAccountButton","inlineInputs","inlineInputLeft","inlineInputRight","SignupTabComponent","contentContainerStyle","SigninStack","createStackNavigator","Tab","createMaterialTopTabNavigator","LoginNavigator","Navigator","LoginTabBar","Screen","component","headerShown","TabSignupFormScreen","LogOutButton","onLogOut","TabNotImplementedScreen","FontAwesome5","constructionIcon","separator","logoutButton","pickerStyles","overlay","maxHeight","overflow","dropdownWrapper","dropdownStyle","dropdownItemStyle","dropdownActiveItemStyle","dropdownActiveLabelStyle","dropdownLabelStyle","okButton","okButtonText","openButton","borderStyle","borderColor","openButtonText","selectedItemView","selectedItemText","styleTextThin","fontFamily","styleTextLight","SectionedMultiPicker","selectRef","items","open","tempSelected","selected","has","get","set","section","genSectionLabel","genLabel","updateItems","_toggleSelector","onChange","searchablePlaceholder","showSelected","viewProps","multiSelectStyles","sectionedMultiSelectStyles","miscStyles","selectedItems","toString","val","numberOfLines","ref","onSelectedItemsChange","onCancel","close","onConfirm","IconRenderer","uniqueKey","displayKey","subKey","showDropDowns","readOnlyHeadings","showChips","showCancelButton","selectedIconOnLeft","animateDropDowns","hideSelect","noResultsComponent","noResultsText","searchIconComponent","searchIcon","confirmText","searchPlaceholderText","colors","primary","subText","searchPlaceholderTextColor","selectToggleTextColor","itemBackground","subItemBackground","EducationFieldCategory","marginHorizontal","scrollView","searchBar","searchTextInput","toggleIcon","subItem","selectedItem","itemText","EducationFieldSubCategory","EDUCATION_FIELD_CATEGORIES","EDUCATION_FIELDS","GPQ","subCategory","EDU","AH","SSJI","BAL","NSMS","ICT","EMC","AFFV","HW","SER","sectioned","EDUCATION_FIELDS_SECTIONED","EducationFieldPicker","multipleText","DegreeToggle","buttonLabels","d","idx","onUpdate","selectedIndex","indexOf","buttons","containerStyle","onSelect","StaffRoleToggle","pickerItems","Picker","Item","selectedValue","onValueChange","GenderToggle","maxDate","now","setFullYear","getFullYear","BirthDatePicker","showModal","hideModal","onHide","date","minimumDate","maximumDate","mode","AvatarEditButton","ensurePermission","Permissions","showPicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","result","cancelled","onPictureSelected","buttonStyle","FormRow","renderModalContent","renderInput","modalTouchable","setModal","activeOpacity","modalWrapper","modalLabel","modalErrorText","modalActions","modalCancel","modalActionText","modalOk","modalOpen","initialValue","validate","validator","validateSync","setError","display","overrideModal","noModal","locked","cardWrapper","disabled","cardContent","cardLabel","rightIconContainer","rightIcon","Modal","transparent","visible","animationType","minHeight","FormattedDate","localizedMonth","getMonth","formattedDate","getDate","NationalityPicker","countryCode","filterProps","withFlag","withFilter","withEmoji","cca2","onClose","translation","containerButtonStyle","pickerContainerButton","FormattedNationality","countryName","updateCountryName","getCountryInfoAsync","prevProps","flagSize","FormattedUniversity","MultiPicker","dropdownWrapperHeight","overlayStyle","isVisible","onRequestClose","onBackdropPress","onLayout","nativeEvent","layout","searchable","onChangeItem","scrollViewProps","keyboardShouldPersistTaps","showArrow","dropDownMaxHeight","selectedLabelStyle","itemStyle","activeItemStyle","activeLabelStyle","OfferCategory","allInterests","updateValues","interest","forceUpdate","interestId","initOfferValue","genderVal","allowChooseGender","typeVal","allowChooseProfileType","languageItems","LanguagePicker","single","pickerItem","pickerLabel","arrowSize","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","LanguageLevelPicker","item","pickerContainer","SpokenLanguagesInput","addRow","computeErrors","hasErrors","splice","rows","rowContainer","inputRowContainer","pickerStyle","inputs","languageCodes","setLanguageCode","levelPicker","setLanguageLevel","removeRow","deleteIcon","errorRowContainer","canAddMore","plusButtonWrapper","plusButton","flexGrow","EnlargeableAvatar","enlarged","avatarProps","source","toggleEnlarged","backdropStyle","overlayBackdrop","rounded","enlargedAvatarContainer","avatarStyle","enlargedAvatar","aspectRatio","getToggleStyleProps","nobuttonBariant","innerBorderStyle","buttonContainerStyle","flexShrink","selectedButtonStyle","selectedTextStyle","noButtonVariant","selectMultiple","selectedIndexes","roles","tooltipStyles","alignContent","CustomTooltip","popover","OfferControl","changed","offerValueChange","offer","isSomethingSelected","allowInterRole","checked","setAllValues","checkboxContainer","offerName","helpIcon","buttonsWrapper","FormFieldSpacer","EditProfileForm","avatarTitle","avatarSource","uri","fullName","profileFieldComponents","cardText","hide","onFieldChanged","cc","OfferCategoryRow","Discover","onApply","Collaborate","Meet","screenWrapper","topView","imageInfo","image","mimeType","fail","SET_AVATAR_FAILURE","fileName","s3Url","blob","imageBlob","response2","payload2","universityContainer","ScrollView","scrollWrapper","keyboardVerticalOffset","offerVal","updatedVal","alignSelf","paddingTop","avatarAccessory","textShadowRadius","addListener","setProfileFields","CustomModal","modalVisible","modalViewStyle","centeredView","setModalVisible","modalView","renderContent","BlockProfileModal","onBlock","actionButtonsWrapper","TouchableHighlight","actionButton","actionButtonCancel","actionText","actionButtonDecline","ProfilePreview","expanded","ReAnimated","Value","PROFILE_PREVIEW_COLLAPSED_HEIGHT","blockModalOpen","animating","x","y","timing","toValue","PROFILE_PREVIEW_EXPANDED_HEIGHT","duration","easing","Easing","elastic","start","out","linear","onFinish","onHidden","collapse","expand","onExpand","univ","Swipeable","swipeableContainer","childrenContainerStyle","swipeable","onSwipeableRightWillOpen","onSwipeLeft","onSwipeableLeftWillOpen","onSwipeRight","leftThreshold","rightThreshold","renderRightActions","swipeAction","swipeActionRight","swipeActionContent","swipeActionContentRight","swipeActionText","renderLeftActions","swipeActionLeft","swipeActionContentLeft","toggleExpanded","touchable","collapsedContent","avatarContainer","infoContainer","infoText","expandedContent","expandedSectionTitle","chipsContainer","ItemChip","blockButton","blockButtonIcon","toProfileId","chipStyles","chip","chipText","paddingRight","sideMargin","paddingLeft","verticalSpacing","cardPadding","flexWrap","actionContainer","fetchingProfiles","justRefreshed","scrollViewRef","hiddenIds","notEmpty","k","filterParams","limit","paginated","meta","currentPage","totalPages","fetchMore","previewComponents","scroll","scrollTo","animated","hideProfile","scroller","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","layoutMeasurement","contentOffset","contentSize","matchContainer","loadingIndicatorContainer","noResultsContainer","noResultsText1","noResultsText2","topBar","flexBasis","filtersIcon","headerContainer","MatchingHeaderRight","MultiUniversityPicker","univKey","styleProps","MultiLanguagePicker","languageId","Separator","filteringScreenRef","localFilters","haveFiltersChanged","updateLocalFilters","offerSections","sectionContainer","sectionTitle","entryContainer","entryLabel","Switch","updateLocalOfferFilters","scrollContainer","resetButton","resetLocalFilters","resetButtonText","entryControls","ClearFilterButton","twoLineEntryContainer","headerStyles","headerButtonIcon","FilteringHeaderLeft","FilteringHeaderRight","applyFilters","ChatRoomCard","CARD_HEIGHT","lastMessageComponent","time","pad","num","padStart","lastMessageText","lastMessageTime","getHours","getMinutes","overshootRight","SwipeActionButton","icon","JOIN_CHAT_ROOM_FAILURE","chatSocket","joinRoom","joinChatRoom","swipeActionButton","swipeActionButtonIcon","ACTION_BUTTON_WIDTH","fetchingRooms","matchesContainer","noMatchesContainer","noMatchesText","searchBarContainer","searchBarInputContainer","MessagingNavigator","insets","useSafeAreaInsets","tabBarOptions","top","initialRouteName","tabBarLabel","alphaText","TabNavigator","createBottomTabNavigator","TabBarIcon","TabBarLabel","TabHomeStack","TabHomeNavigator","TabMatchingStack","TabMatchingNavigator","headerLeftContainerStyle","headerTitle","headerTitleStyle","headerTitleAlign","headerRight","headerLeft","TabNotificationsStack","TabNotificationsNavigator","TabProfileStack","TabProfileNavigator","activeTintColor","tabStyle","iconStyle","tabBarIcon","onboardingStyle","slideWrapper","header","slideContentWrapper","Dimensions","slideNavWrapper","navButton","navButtonIcon","finishButtonText","tosSlideStyle","actionsWrapper","actionButtonTextDecline","actionButtonTextAccept","readMoreText","createOfferControls","onboardingState","setOnboardingOfferValue","finishOnboarding","createProfileDto","base","onboardingStateToDto","OnboardingSlide","hideNavNext","hasNext","hasPrevious","previous","VALIDATION_SCHEMA","nextProps","prev","Keyboard","dismiss","getOnboardingTextInputsStyleProps","BirthDateControl","buttonOk","dateText","NationalityControl","roleButton","roleButtonIconStudent","roleButtonTextStudent","roleButtonIconStaff","roleButtonTextStaff","studentColor","staffColor","common","roleButtonText","roleButtonIcon","studentThemedStyles","staffThemedStyles","icons","buttonIcon","buttonText","isStudent","studentRender","staffRender","TOSDeclinedModal","TextLink","textProps","declined","ONBOARDING_SCREENS","ONBOARDING_ORDER","OnboardingStack","ComponentClass","temp","OnboardingNavigator","showLabel","showIcon","springConfig","stiffness","damping","mass","swipeEnabled","lazy","lazyPreloadDistance","ReciprocalMatchScreen","ResetPasswordFormSchema","ResetPasswordForm","leaveRoom","chatComponent","renderSend","sendContainer","renderInputToolbar","inputToolbarContainer","primaryStyle","inputToolbarPrimary","timeFormat","onSend","sendMessage","SEND_MESSAGE_FAILURE","ChatScreenHeaderClass","nav","canGoBack","topInset","backButton","back","backButtonIcon","ChatScreenHeaderComp","ChatScreenHeader","Consumer","Stack","initialRoute","NavigationContainer","linking","LinkingConfiguration","DarkTheme","DefaultTheme","screenOptions","MainNavigator","cardStyleInterpolator","CardStyleInterpolators","forVerticalIOS","forFadeFromBottomAndroid","currentTheme","StatusBar","registerRootComponent","isLoadingComplete","setLoadingComplete","SplashScreen","cacheIsGood","Font","font","credentials","loadResourcesAndDataAsync","useCachedResources","fallbacks"],"mappings":"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","file":"static/js/app.003caa1f.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport Constants from \"expo-constants\";\r\n\r\nexport enum Environment {\r\n    Staging = \"STAGING\",\r\n    Production = \"PRODUCTION\",\r\n}\r\n\r\nconst extra = Constants.manifest.extra;\r\n\r\nexport const APP_VERSION: string = Constants.manifest.version!;\r\nexport const APP_SCHEME: string = Constants.manifest.scheme;\r\nexport const ENVIRONMENT: Environment = extra.TARGET;\r\nexport const DEBUG_MODE: boolean = extra.DEBUG;\r\nexport const CLIENT_URL: string = extra.CLIENT_URL;\r\nexport const SERVER_HOST: string = extra.SERVER_HOST;\r\nexport const BACKEND_URL: string = extra.SERVER_URL;\r\n\r\n/**\r\n * Specify the quality of compression, from 0 to 1.\r\n * 0 means compress for small size, 1 means compress for maximum quality.\r\n */\r\nexport const AVATAR_QUALITY = 0.75;\r\n\r\n/**\r\n * The number of resources fetched per request when scrolling in infinite scrolling containers.\r\n */\r\nexport const PROFILES_FETCH_LIMIT = 8; // Matching tab\r\nexport const ROOMS_FETCH_LIMIT = 10; // Messaging tab\r\n\r\n/**\r\n * The maximum number of spoken languages a user can select.\r\n * (limited for rendering reasons).\r\n */\r\nexport const MAX_SPOKEN_LANGUAGES = 8;\r\n","/**\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n * @see {@link https://gist.github.com/scokmen/f813c904ef79022e84ab2409574d1b45}\r\n */\r\nexport enum HttpStatusCode {\r\n    /**\r\n     * The server has received the request headers and the client should proceed to send the request body\r\n     * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n     * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n     * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n     * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n     */\r\n    CONTINUE = 100,\r\n\r\n    /**\r\n     * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n     */\r\n    SWITCHING_PROTOCOLS = 101,\r\n\r\n    /**\r\n     * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n     * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n     * This prevents the client from timing out and assuming the request was lost.\r\n     */\r\n    PROCESSING = 102,\r\n\r\n    /**\r\n     * Standard response for successful HTTP requests.\r\n     * The actual response will depend on the request method used.\r\n     * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n     * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n     */\r\n    OK = 200,\r\n\r\n    /**\r\n     * The request has been fulfilled, resulting in the creation of a new resource.\r\n     */\r\n    CREATED = 201,\r\n\r\n    /**\r\n     * The request has been accepted for processing, but the processing has not been completed.\r\n     * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n     */\r\n    ACCEPTED = 202,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The server is a transforming proxy that received a 200 OK from its origin,\r\n     * but is returning a modified version of the origin's response.\r\n     */\r\n    NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n    /**\r\n     * The server successfully processed the request and is not returning any content.\r\n     */\r\n    NO_CONTENT = 204,\r\n\r\n    /**\r\n     * The server successfully processed the request, but is not returning any content.\r\n     * Unlike a 204 response, this response requires that the requester reset the document view.\r\n     */\r\n    RESET_CONTENT = 205,\r\n\r\n    /**\r\n     * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n     * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n     * or split a download into multiple simultaneous streams.\r\n     */\r\n    PARTIAL_CONTENT = 206,\r\n\r\n    /**\r\n     * The message body that follows is an XML message and can contain a number of separate response codes,\r\n     * depending on how many sub-requests were made.\r\n     */\r\n    MULTI_STATUS = 207,\r\n\r\n    /**\r\n     * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n     * and are not being included again.\r\n     */\r\n    ALREADY_REPORTED = 208,\r\n\r\n    /**\r\n     * The server has fulfilled a request for the resource,\r\n     * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n     */\r\n    IM_USED = 226,\r\n\r\n    /**\r\n     * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n     * For example, this code could be used to present multiple video format options,\r\n     * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n     */\r\n    MULTIPLE_CHOICES = 300,\r\n\r\n    /**\r\n     * This and all future requests should be directed to the given URI.\r\n     */\r\n    MOVED_PERMANENTLY = 301,\r\n\r\n    /**\r\n     * This is an example of industry practice contradicting the standard.\r\n     * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n     * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n     * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n     * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n     * use the 302 status code as if it were the 303.\r\n     */\r\n    FOUND = 302,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The response to the request can be found under another URI using a GET method.\r\n     * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n     * the server has received the data and should issue a redirect with a separate GET message.\r\n     */\r\n    SEE_OTHER = 303,\r\n\r\n    /**\r\n     * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n     * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n     */\r\n    NOT_MODIFIED = 304,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n     * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n     */\r\n    USE_PROXY = 305,\r\n\r\n    /**\r\n     * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n     */\r\n    SWITCH_PROXY = 306,\r\n\r\n    /**\r\n     * SINCE HTTP/1.1\r\n     * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n     * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n     * For example, a POST request should be repeated using another POST request.\r\n     */\r\n    TEMPORARY_REDIRECT = 307,\r\n\r\n    /**\r\n     * The request and all future requests should be repeated using another URI.\r\n     * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n     * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n     */\r\n    PERMANENT_REDIRECT = 308,\r\n\r\n    /**\r\n     * The server cannot or will not process the request due to an apparent client error\r\n     * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n     */\r\n    BAD_REQUEST = 400,\r\n\r\n    /**\r\n     * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n     * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n     * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n     * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n     */\r\n    UNAUTHORIZED = 401,\r\n\r\n    /**\r\n     * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n     * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n     * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n     */\r\n    PAYMENT_REQUIRED = 402,\r\n\r\n    /**\r\n     * The request was valid, but the server is refusing action.\r\n     * The user might not have the necessary permissions for a resource.\r\n     */\r\n    FORBIDDEN = 403,\r\n\r\n    /**\r\n     * The requested resource could not be found but may be available in the future.\r\n     * Subsequent requests by the client are permissible.\r\n     */\r\n    NOT_FOUND = 404,\r\n\r\n    /**\r\n     * A request method is not supported for the requested resource;\r\n     * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n     */\r\n    METHOD_NOT_ALLOWED = 405,\r\n\r\n    /**\r\n     * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n     */\r\n    NOT_ACCEPTABLE = 406,\r\n\r\n    /**\r\n     * The client must first authenticate itself with the proxy.\r\n     */\r\n    PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n    /**\r\n     * The server timed out waiting for the request.\r\n     * According to HTTP specifications:\r\n     * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n     */\r\n    REQUEST_TIMEOUT = 408,\r\n\r\n    /**\r\n     * Indicates that the request could not be processed because of conflict in the request,\r\n     * such as an edit conflict between multiple simultaneous updates.\r\n     */\r\n    CONFLICT = 409,\r\n\r\n    /**\r\n     * Indicates that the resource requested is no longer available and will not be available again.\r\n     * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n     * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n     * Clients such as search engines should remove the resource from their indices.\r\n     * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n     */\r\n    GONE = 410,\r\n\r\n    /**\r\n     * The request did not specify the length of its content, which is required by the requested resource.\r\n     */\r\n    LENGTH_REQUIRED = 411,\r\n\r\n    /**\r\n     * The server does not meet one of the preconditions that the requester put on the request.\r\n     */\r\n    PRECONDITION_FAILED = 412,\r\n\r\n    /**\r\n     * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n     */\r\n    PAYLOAD_TOO_LARGE = 413,\r\n\r\n    /**\r\n     * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n     * in which case it should be converted to a POST request.\r\n     * Called \"Request-URI Too Long\" previously.\r\n     */\r\n    URI_TOO_LONG = 414,\r\n\r\n    /**\r\n     * The request entity has a media type which the server or resource does not support.\r\n     * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n     */\r\n    UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n    /**\r\n     * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n     * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n     * Called \"Requested Range Not Satisfiable\" previously.\r\n     */\r\n    RANGE_NOT_SATISFIABLE = 416,\r\n\r\n    /**\r\n     * The server cannot meet the requirements of the Expect request-header field.\r\n     */\r\n    EXPECTATION_FAILED = 417,\r\n\r\n    /**\r\n     * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n     * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n     * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n     */\r\n    I_AM_A_TEAPOT = 418,\r\n\r\n    /**\r\n     * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n     */\r\n    MISDIRECTED_REQUEST = 421,\r\n\r\n    /**\r\n     * The request was well-formed but was unable to be followed due to semantic errors.\r\n     */\r\n    UNPROCESSABLE_ENTITY = 422,\r\n\r\n    /**\r\n     * The resource that is being accessed is locked.\r\n     */\r\n    LOCKED = 423,\r\n\r\n    /**\r\n     * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n     */\r\n    FAILED_DEPENDENCY = 424,\r\n\r\n    /**\r\n     * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n     */\r\n    UPGRADE_REQUIRED = 426,\r\n\r\n    /**\r\n     * The origin server requires the request to be conditional.\r\n     * Intended to prevent \"the 'lost update' problem, where a client\r\n     * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n     * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n     */\r\n    PRECONDITION_REQUIRED = 428,\r\n\r\n    /**\r\n     * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n     */\r\n    TOO_MANY_REQUESTS = 429,\r\n\r\n    /**\r\n     * The server is unwilling to process the request because either an individual header field,\r\n     * or all the header fields collectively, are too large.\r\n     */\r\n    REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n    /**\r\n     * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n     * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n     */\r\n    UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n    /**\r\n     * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n     */\r\n    INTERNAL_SERVER_ERROR = 500,\r\n\r\n    /**\r\n     * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n     * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n     */\r\n    NOT_IMPLEMENTED = 501,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n     */\r\n    BAD_GATEWAY = 502,\r\n\r\n    /**\r\n     * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n     * Generally, this is a temporary state.\r\n     */\r\n    SERVICE_UNAVAILABLE = 503,\r\n\r\n    /**\r\n     * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n     */\r\n    GATEWAY_TIMEOUT = 504,\r\n\r\n    /**\r\n     * The server does not support the HTTP protocol version used in the request\r\n     */\r\n    HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n    /**\r\n     * Transparent content negotiation for the request results in a circular reference.\r\n     */\r\n    VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n    /**\r\n     * The server is unable to store the representation needed to complete the request.\r\n     */\r\n    INSUFFICIENT_STORAGE = 507,\r\n\r\n    /**\r\n     * The server detected an infinite loop while processing the request.\r\n     */\r\n    LOOP_DETECTED = 508,\r\n\r\n    /**\r\n     * Further extensions to the request are required for the server to fulfill it.\r\n     */\r\n    NOT_EXTENDED = 510,\r\n\r\n    /**\r\n     * The client needs to authenticate to gain network access.\r\n     * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n     * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n     */\r\n    NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import {Alert} from \"react-native\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport {RequestResponse, TokenDto} from \"./dto\";\r\n\r\n// Request-related types\r\ntype Primitive = string | number | boolean | Primitive[] | undefined;\r\ntype URLParams = {[key: string]: Primitive};\r\ntype URLBodyParams = {[key: string]: Primitive | Primitive[] | URLBodyParams | URLBodyParams[]};\r\n\r\nfunction encodeURIPrimitive(v: Primitive): string {\r\n    return Array.isArray(v)\r\n        ? v.map((v) => encodeURIPrimitive(v)).join(\",\")\r\n        : encodeURIComponent(v as string | number | boolean);\r\n}\r\n\r\n/**\r\n * Encode parameters for an HTTP request (e.g. param1=value1&param2=value2)\r\n * @param args - A map that contains argument keys and associated values.\r\n * @returns the given arguments, formatted into a HTTP request suffix.\r\n */\r\nexport function encodeRequestParams(args: URLParams): string {\r\n    const str = Object.keys(args)\r\n        .filter((key: string) => args[key] !== undefined)\r\n        .map((key: string) => `${key}=${encodeURIPrimitive(args[key])}`)\r\n        .join(\"&\");\r\n    return str.length == 0 ? str : \"?\" + str;\r\n}\r\n\r\n/**\r\n * Send a request to the backend.\r\n * @param endpoint - Which endpoint to hit (e.g. auth/login)\r\n * @param method - Which HTTP method to use (GET, PUT, POST, ...)\r\n * @param params - The URL parameters (?param1=value1&param2=value2 ...)\r\n * @param body - The body of the request.\r\n * @param auth - Whether or not this request should be authenticated.\r\n * @param verbose - Whether or not to print information about the request and response.\r\n * @param authToken - The authentication token. If not given, the token from the redux store will be used.\r\n */\r\nexport async function requestBackend(\r\n    endpoint: string,\r\n    method = \"GET\",\r\n    params: URLParams = {},\r\n    body: URLBodyParams = {},\r\n    authToken: TokenDto | null | undefined = undefined,\r\n    verbose = false,\r\n): Promise<RequestResponse> {\r\n    const headers: {[key: string]: string} = {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (authToken !== undefined) {\r\n        if (authToken === null) {\r\n            console.error(`Cannot authentify request to ${endpoint} : no auth token available.`);\r\n            Alert.alert(\"A request could not be authenticated.\");\r\n            return {errorType: \"error.no-auth\", description: \"Endpoint requires authentication\", status: 401};\r\n        } else headers.Authorization = `Bearer ${authToken.accessToken}`;\r\n    }\r\n\r\n    const formattedParams = encodeRequestParams(params);\r\n    let response: Response | null = null;\r\n\r\n    try {\r\n        if (verbose) {\r\n            console.log(`Sending request: ${method} /${endpoint}${formattedParams}`);\r\n            console.log(`  headers: ${JSON.stringify(headers)}`);\r\n            console.log(`  body   : ${JSON.stringify(body)}`);\r\n        }\r\n\r\n        response = await fetch(`${BACKEND_URL}/${endpoint}${formattedParams}`, {\r\n            method,\r\n            headers,\r\n            ...(method == \"GET\" ? {} : {body: JSON.stringify(body)}),\r\n        });\r\n\r\n        const json = {...(await response.json()), status: response.status};\r\n        if (verbose) {\r\n            console.log(`Response from endpoint ${endpoint}:`);\r\n            console.log(json);\r\n        }\r\n\r\n        return json;\r\n    } catch (error) {\r\n        console.error(\r\n            `An unexpected error occured with a request to ${endpoint}. ` +\r\n                `Method = ${method}, authToken = ${authToken}, params=${JSON.stringify(params)}, ` +\r\n                `body=${JSON.stringify(body)}`,\r\n        );\r\n        console.error(error);\r\n        console.error(\"Response received from server:\", response);\r\n        return {errorType: \"error.unknown\", description: \"A client-side exception was raised.\", status: 400};\r\n    }\r\n}\r\n","import {\r\n    ChatRoomProfileDto,\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    EducationFieldDto,\r\n    OfferValueDto,\r\n    ResponseChatMessageDto,\r\n    ResponseProfileDto,\r\n    ResponseRoomDto,\r\n    ResponseUserDto,\r\n} from \"./dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../model/chat-room\";\r\n\r\nexport function stripSuperfluousOffers(offers: OfferValueDto[]): OfferValueDto[] {\r\n    return offers\r\n        ? offers.filter((o) => o.allowFemale || o.allowMale || o.allowOther || o.allowStaff || o.allowStudent)\r\n        : [];\r\n}\r\n\r\nexport function convertDtoToProfile(dto: ResponseProfileDto): UserProfile {\r\n    return {\r\n        ...dto,\r\n        avatarUrl: dto.avatar,\r\n        birthdate: new Date(dto.birthdate),\r\n        educationFields: (dto.educationFields || []).map((dto: EducationFieldDto) => dto.id),\r\n        profileOffers: dto.profileOffers || [],\r\n        interests: dto.interests || [],\r\n        languages: dto.languages || [],\r\n    };\r\n}\r\n\r\nexport function convertProfileToCreateDto(profile: UserProfile): CreateProfileDto {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n    const common: CreateProfileDtoCommon = {\r\n        ...profile,\r\n        birthdate: profile.birthdate.toJSON(),\r\n        educationFields: profile.educationFields.map((id: string) => ({id})),\r\n        profileOffers: stripSuperfluousOffers(profile.profileOffers),\r\n    };\r\n\r\n    return {...common, ...(profile.type == \"staff\" ? {staffRole: profile.staffRole!} : {degree: profile.degree!})};\r\n}\r\n\r\nexport function convertPartialProfileToCreateDto(profile: Partial<UserProfile>): Partial<CreateProfileDto> {\r\n    return {\r\n        ...profile,\r\n        birthdate: profile.birthdate?.toJSON(),\r\n        educationFields: profile.educationFields?.map((id: string) => ({id})),\r\n        profileOffers: profile.profileOffers ? stripSuperfluousOffers(profile.profileOffers) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToUser(dto: ResponseUserDto): User {\r\n    return {\r\n        ...dto,\r\n        profile: dto.profile ? convertDtoToProfile(dto.profile) : undefined,\r\n    };\r\n}\r\n\r\nexport function convertDtoToRoom(dto: ResponseRoomDto): ChatRoom {\r\n    const users = dto.profiles.map((p: ChatRoomProfileDto) => ({\r\n        _id: p.id,\r\n        name: `${p.firstName} ${p.lastName}`,\r\n        avatar: p.avatar || \"\",\r\n    }));\r\n\r\n    // Try to find the sender of the last message in the list of users that are in the room\r\n    let lastMessage = null;\r\n    if (dto.lastMessage) {\r\n        const msg: ResponseChatMessageDto = dto.lastMessage;\r\n        const sender = users.find((u) => u._id == msg.senderId);\r\n        if (sender) lastMessage = convertDtoToChatMessage(sender, msg);\r\n    }\r\n\r\n    return {\r\n        ...dto,\r\n        users,\r\n        messages: [],\r\n        lastMessage,\r\n    };\r\n}\r\n\r\nexport function convertDtoToChatMessage(user: ChatRoomUser, dto: ResponseChatMessageDto): ChatRoomMessage {\r\n    return {\r\n        ...dto,\r\n        _id: dto.id,\r\n        createdAt: new Date(dto.updatedAt),\r\n        pending: false,\r\n        user,\r\n    };\r\n}\r\n","import {AppThunk} from \"../types\";\r\nimport {\r\n    AvatarSuccessfulUpdatedDto,\r\n    CreateProfileDto,\r\n    InterestDto,\r\n    OfferDto,\r\n    RequestResponse,\r\n    ResponseUserDto,\r\n    SignedUrlResponseDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {convertDtoToUser, convertPartialProfileToCreateDto} from \"../../api/converters\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {readCachedStaticData} from \"../persistent-storage/static\";\r\n\r\nexport enum PROFILE_ACTION_TYPES {\r\n    LOAD_USER_PROFILE = \"PROFILE/LOAD_USER_PROFILE\",\r\n    LOAD_PROFILE_OFFERS = \"LOAD_PROFILE_OFFERS\",\r\n    LOAD_PROFILE_OFFERS_SUCCESS = \"LOAD_PROFILE_OFFERS_SUCCESS\",\r\n    LOAD_PROFILE_INTERESTS = \"LOAD_PROFILE_INTERESTS\",\r\n    LOAD_PROFILE_INTERESTS_SUCCESS = \"LOAD_PROFILE_INTERESTS_SUCCESS\",\r\n    PROFILE_SET_FIELDS_SUCCESS = \"PROFILE/SET_FIELDS_SUCCESS\",\r\n    PROFILE_CREATE = \"PROFILE/CREATE\",\r\n    PROFILE_CREATE_SUCCESS = \"PROFILE/CREATE_SUCCESS\",\r\n    FETCH_USER_SUCCESS = \"PROFILE/FETCH_USER_SUCCESS\",\r\n    SET_AVATAR = \"PROFILE/SET_AVATAR\",\r\n    SET_AVATAR_SUCCESS = \"PROFILE/SET_AVATAR_SUCCESS\",\r\n    SET_AVATAR_FAILURE = \"PROFILE/SET_AVATAR_FAILURE\",\r\n}\r\n\r\nexport type LoadUserProfileAction = {\r\n    type: string;\r\n    id: string;\r\n};\r\n\r\nexport type SetProfileFieldsAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type SetProfileFieldsSuccessAction = {\r\n    type: string;\r\n    fields: Partial<UserProfile>;\r\n};\r\n\r\nexport type CreateProfileAction = {\r\n    type: string;\r\n    profile: CreateProfileDto;\r\n};\r\n\r\nexport type CreateProfileSuccessAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileOffersSuccessAction = {\r\n    type: string;\r\n    offers: OfferDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type LoadProfileInterestsAction = {\r\n    type: string;\r\n};\r\n\r\nexport type LoadProfileInterestsSuccessAction = {\r\n    type: string;\r\n    interests: InterestDto[];\r\n    fromCache: boolean;\r\n};\r\n\r\nexport type FetchUserSuccessAction = {\r\n    type: string;\r\n    user: User;\r\n};\r\n\r\nexport type SetAvatarSuccessAction = {\r\n    type: string;\r\n    avatarUrl: string;\r\n};\r\n\r\nexport type SetAvatarFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type ProfileAction =\r\n    | SetProfileFieldsAction\r\n    | CreateProfileAction\r\n    | CreateProfileSuccessAction\r\n    | LoadProfileOffersAction\r\n    | LoadProfileOffersSuccessAction\r\n    | LoadProfileInterestsAction\r\n    | LoadProfileInterestsSuccessAction\r\n    | FetchUserSuccessAction\r\n    | SetAvatarSuccessAction\r\n    | SetAvatarFailureAction;\r\n\r\nexport const setProfileFieldsSuccess = (fields: Partial<UserProfile>): SetProfileFieldsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS,\r\n    fields,\r\n});\r\n\r\nexport const setProfileFields = (fields: Partial<UserProfile>): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const dto: Partial<CreateProfileDto> = convertPartialProfileToCreateDto(fields);\r\n    const response = await requestBackend(\"profiles\", \"PATCH\", {}, dto, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        dispatch(setProfileFieldsSuccess(fields));\r\n    } else {\r\n        console.log(\"error in setProfileFields\");\r\n    }\r\n};\r\n\r\nexport const createProfileSuccess = (): CreateProfileSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS,\r\n});\r\n\r\nexport const createProfile = (profile: CreateProfileDto): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"profiles\", \"POST\", {}, profile, token);\r\n    if (response.status === HttpStatusCode.CREATED) dispatch(createProfileSuccess());\r\n};\r\n\r\nexport const loadProfileOffers = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<OfferDto[]>(\"offers\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"offers\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const offers = payload as OfferDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = offers.length == 0;\r\n                dispatch(loadProfileOffersSuccess(cacheIsGood ? fromCache.data : offers, cacheIsGood));\r\n            } else dispatch(loadProfileOffersSuccess(offers));\r\n        }\r\n    });\r\n};\r\n\r\nexport const loadProfileOffersSuccess = (offers: OfferDto[], fromCache = false): LoadProfileOffersSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS,\r\n    offers,\r\n    fromCache,\r\n});\r\n\r\nexport const loadProfileInterests = (): AppThunk => async (dispatch) => {\r\n    const fromCache = await readCachedStaticData<InterestDto[]>(\"interests\");\r\n    const params = fromCache ? {updatedAt: fromCache.updatedAt} : {};\r\n\r\n    requestBackend(\"interests\", \"GET\", params).then((response: RequestResponse) => {\r\n        if (response.status === HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data;\r\n            const interests = payload as InterestDto[];\r\n            if (fromCache) {\r\n                const cacheIsGood = interests.length == 0;\r\n                dispatch(loadProfileInterestsSuccess(cacheIsGood ? fromCache.data : interests, cacheIsGood));\r\n            } else dispatch(loadProfileInterestsSuccess(interests));\r\n        }\r\n    });\r\n};\r\n\r\nexport const loadProfileInterestsSuccess = (\r\n    interests: InterestDto[],\r\n    fromCache = false,\r\n): LoadProfileInterestsSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS,\r\n    interests,\r\n    fromCache,\r\n});\r\n\r\nexport const fetchUser = (): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const user = convertDtoToUser(payload as ResponseUserDto);\r\n        dispatch(fetchUserSuccess(user));\r\n    }\r\n};\r\n\r\nexport const fetchUserSuccess = (user: User): FetchUserSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const setAvatarSuccess = (avatarUrl: string): SetAvatarSuccessAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS,\r\n    avatarUrl,\r\n});\r\n\r\nexport const setAvatarFailure = (): SetAvatarFailureAction => ({\r\n    type: PROFILE_ACTION_TYPES.SET_AVATAR_FAILURE,\r\n});\r\n\r\nexport const setAvatar = (image: ImageInfo): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"common/signedUrl\", \"GET\", {mimeType: \"image/jpeg\"}, {}, token);\r\n\r\n    const fail = () => dispatch(setAvatarFailure());\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {fileName, s3Url} = payload as SignedUrlResponseDto;\r\n\r\n        try {\r\n            // Fetch the image from the device and convert it to a blob\r\n            const imageBlob = await (await fetch(image.uri)).blob();\r\n\r\n            // PUT the image in the aws bucket\r\n            await fetch(s3Url, {\r\n                method: \"PUT\",\r\n                body: imageBlob,\r\n            });\r\n\r\n            // Submit the file name to the server\r\n            const response2 = await requestBackend(\"profiles/avatar\", \"POST\", {}, {fileName}, token);\r\n\r\n            if (response2.status === HttpStatusCode.OK) {\r\n                const payload2 = (response2 as SuccessfulRequestResponse).data;\r\n                const {avatar} = payload2 as AvatarSuccessfulUpdatedDto;\r\n                dispatch(setAvatarSuccess(avatar));\r\n            } else fail();\r\n        } catch (error) {\r\n            console.error(error);\r\n            console.error(\"An unexpected error occured with a request to the avatar bucket.\");\r\n            fail();\r\n        }\r\n    } else fail();\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ntype StaticDataObject<T> = {\r\n    updatedAt: string;\r\n    data: T;\r\n};\r\n\r\n/**\r\n * Store the given data (with the current date) to unsecure persistent storage (unsuitable for sensitive info).\r\n * @param key - The name under which to store the given object.\r\n * @param data - An object to store.\r\n */\r\nexport function storeStaticData<T>(key: string, data: T): void {\r\n    console.log(`Updating cache entry for '${key}'.`);\r\n\r\n    // Store the data along with the date\r\n    const storageObject = {\r\n        updatedAt: new Date().toJSON(),\r\n        data,\r\n    };\r\n\r\n    AsyncStorage.setItem(key, JSON.stringify(storageObject));\r\n}\r\n\r\n/**\r\n * Read static data that was stored under a given key.\r\n * @param key - A key that identifies the resource we want to get (@see storeStaticData).\r\n * @return The object along with the date at which it was stored (in JSON format), or false if nothing was stored under this key.\r\n */\r\nexport async function readCachedStaticData<T>(key: string): Promise<false | StaticDataObject<T>> {\r\n    const raw = await AsyncStorage.getItem(key);\r\n    return raw ? JSON.parse(raw) : false;\r\n}\r\n","import i18n from \"i18n-js\";\r\nimport {HttpStatusCode} from \"../constants/http-status\";\r\nimport {ErrorRequestResponse, RemoteValidationErrors, RequestResponse, UnprocessableEntityRequestResponse} from \"./dto\";\r\n\r\nexport const localizeError = (err: string): string => i18n.t(err, {defaultValue: err});\r\n\r\nconst extractError = ({code, description}: {code: string; description: string}): string => {\r\n    const isMissingLocalization = i18n.t(code, {defaultValue: \"missing\"}) == \"missing\";\r\n    return isMissingLocalization ? description : code;\r\n};\r\n\r\nexport function gatherValidationErrors(resp: RequestResponse): RemoteValidationErrors | undefined {\r\n    if (resp.status == HttpStatusCode.OK) return undefined;\r\n    else {\r\n        const {errorType, description} = resp as ErrorRequestResponse;\r\n        const output: RemoteValidationErrors = {general: extractError({code: errorType, description}), fields: {}};\r\n        if (resp.status == HttpStatusCode.UNPROCESSABLE_ENTITY) {\r\n            const {errors} = resp as UnprocessableEntityRequestResponse;\r\n            //errors.forEach((e) => (output.fields[e.property] = e.codes.map(extractError)));\r\n            // Only keep the first error (makes displaying errors a lot easier)\r\n            errors.forEach((e) => (output.fields[e.property] = extractError(e.codes[0])));\r\n        }\r\n        return output;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the non-specific error field from remote errors. If field-specific errors are available, yields undefined instead.\r\n * @param errors - Remote validation errors.\r\n */\r\nexport function generalError(errors?: RemoteValidationErrors): string | undefined {\r\n    if (!errors) return undefined;\r\n    else if (Object.keys(errors.fields).length > 0) return undefined;\r\n    else return errors.general;\r\n}\r\n","import {AppThunk, OnboardingState, ValidatedThunkAction} from \"../types\";\r\nimport {LoginDto, OfferValueDto, ResponseUserDto, SuccessfulRequestResponse, TokenDto} from \"../../api/dto\";\r\nimport {User} from \"../../model/user\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {createProfile} from \"../profile/actions\";\r\nimport {convertDtoToUser} from \"../../api/converters\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {gatherValidationErrors} from \"../../api/errors\";\r\nimport {readCachedCredentials} from \"../persistent-storage/auth\";\r\n\r\nexport enum AUTH_ACTION_TYPES {\r\n    REGISTER_BEGIN = \"AUTH/REGISTER_BEGIN\",\r\n    REGISTER_SUCCESS = \"AUTH/REGISTER_SUCCESS\",\r\n    REGISTER_FAILURE = \"AUTH/REGISTER_FAILURE\",\r\n    LOG_IN_SUCCESS = \"AUTH/LOG_IN_SUCCESS\",\r\n    LOG_IN_FAILURE = \"AUTH/LOG_IN_FAILURE\",\r\n    LOG_OUT = \"AUTH/LOG_OUT\",\r\n    VALIDATE_ACCOUNT = \"AUTH/VALIDATE_ACCOUNT\",\r\n    VALIDATE_ACCOUNT_SUCCESS = \"AUTH/VALIDATE_ACCOUNT_SUCCESS\",\r\n    VALIDATE_ACCOUNT_FAILURE = \"AUTH/VALIDATE_ACCOUNT_FAILURE\",\r\n    SET_ONBOARDING_VALUES = \"AUTH/SET_ONBOARDING_VALUES\",\r\n    SET_ONBOARDING_OFFER_VALUE = \"AUTH/SET_ONBOARDING_OFFER_VALUE\",\r\n    FORGOT_PASSWORD_FAILURE = \"AUTH/FORGOT_PASSWORD_FAILURE\",\r\n    FORGOT_PASSWORD_SUCCESS = \"AUTH/FORGOT_PASSWORD_SUCCESS\",\r\n    RESET_PASSWORD_SUCCESS = \"AUTH/RESET_PASSWORD_SUCCESS\",\r\n}\r\n\r\nexport type RegisterBeginAction = {\r\n    type: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport type RegisterSuccessAction = {type: string; user: User};\r\n\r\nexport type RegisterFailureAction = {type: string};\r\n\r\nexport type LogInSuccessAction = {\r\n    type: string;\r\n    token: TokenDto;\r\n    user: User;\r\n    usingCachedCredentials: boolean;\r\n};\r\n\r\nexport type LogOutAction = {type: string};\r\n\r\nexport type LogInFailureAction = {type: string};\r\n\r\nexport type ValidateAccountSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ValidateAccountFailureAction = {type: string};\r\n\r\nexport type SetOnboardingValuesAction = {\r\n    type: string;\r\n    values: Partial<OnboardingState>;\r\n};\r\n\r\nexport type SetOnboardingOfferValueAction = {\r\n    type: string;\r\n    id: string;\r\n    value: OfferValueDto;\r\n};\r\n\r\nexport type ForgotPasswordFailureAction = {type: string};\r\n\r\nexport type ForgotPasswordSuccessAction = {\r\n    type: string;\r\n    email: string;\r\n};\r\n\r\nexport type ResetPasswordSuccessAction = {type: string};\r\n\r\nexport type AuthAction =\r\n    | RegisterBeginAction\r\n    | RegisterSuccessAction\r\n    | RegisterFailureAction\r\n    | LogInSuccessAction\r\n    | LogInFailureAction\r\n    | LogOutAction\r\n    | ValidateAccountSuccessAction\r\n    | ValidateAccountFailureAction\r\n    | SetOnboardingValuesAction\r\n    | SetOnboardingOfferValueAction\r\n    | ForgotPasswordFailureAction\r\n    | ForgotPasswordSuccessAction\r\n    | ResetPasswordSuccessAction;\r\n\r\n// Register actions\r\n\r\nexport const registerBegin = (email: string, password: string): RegisterBeginAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_BEGIN,\r\n    email,\r\n    password,\r\n});\r\n\r\n// Redux-thunk asynchronous action creator\r\nexport const requestRegister = (email: string, password: string): ValidatedThunkAction => async (\r\n    dispatch,\r\n    getState,\r\n) => {\r\n    dispatch(registerBegin(email, password));\r\n    const locale = getState().settings.locale;\r\n\r\n    const response = await requestBackend(\"auth/register\", \"POST\", {}, {email, password, locale});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const successResp = response as SuccessfulRequestResponse;\r\n        dispatch(registerSuccess(successResp.data as User));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(registerFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const registerSuccess = (user: User): RegisterSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_SUCCESS,\r\n    user,\r\n});\r\n\r\nexport const registerFailure = (): RegisterFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.REGISTER_FAILURE,\r\n});\r\n\r\n// Log in actions\r\n\r\nexport const loginSuccess = (token: TokenDto, user: User, usingCachedCredentials: boolean): LogInSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_SUCCESS,\r\n    token,\r\n    user,\r\n    usingCachedCredentials,\r\n});\r\n\r\nexport const loginFailure = (): LogInFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_IN_FAILURE,\r\n});\r\n\r\nexport const attemptLoginFromCache = (): AppThunk<Promise<boolean>> => async (dispatch): Promise<boolean> => {\r\n    const credentials = await readCachedCredentials();\r\n\r\n    if (credentials) {\r\n        const {token} = credentials;\r\n\r\n        // Get user information\r\n        const response = await requestBackend(\"auth/me\", \"GET\", {}, {}, token);\r\n\r\n        if (response.status == HttpStatusCode.OK) {\r\n            const payload = (response as SuccessfulRequestResponse).data as ResponseUserDto;\r\n            dispatch(loginSuccess(token, convertDtoToUser(payload), true));\r\n            return true;\r\n        } else dispatch(loginFailure()); // e.g. token is invalid\r\n    }\r\n    // If no credentials are available in cache, the action does nothing.\r\n    return false;\r\n};\r\n\r\nexport const requestLogin = (email: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/login\", \"POST\", {}, {email, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data as LoginDto;\r\n        dispatch(loginSuccess(payload.token, payload.user, false));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(loginFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const logout = (): LogOutAction => ({\r\n    type: AUTH_ACTION_TYPES.LOG_OUT,\r\n});\r\n\r\n// Account validation actions\r\n\r\nexport const requestValidateAccount = (validationToken: string): AppThunk => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/verify\", \"POST\", {}, {token: validationToken});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const {email} = payload as {email: string};\r\n        dispatch(validateAccountSuccess(email));\r\n    } else {\r\n        dispatch(validateAccountFailure());\r\n    }\r\n};\r\n\r\nexport const validateAccountSuccess = (email: string): ValidateAccountSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS,\r\n    email,\r\n});\r\n\r\nexport const validateAccountFailure = (): ValidateAccountFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE,\r\n});\r\n\r\n// Forgot password actions\r\n\r\nexport const forgotPassword = (email: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/forgot\", \"POST\", {}, {email});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(forgotPasswordSuccess(email));\r\n        return {success: true};\r\n    } else {\r\n        dispatch(forgotPasswordFailure());\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const forgotPasswordSuccess = (email: string): ForgotPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS,\r\n    email,\r\n});\r\n\r\nexport const forgotPasswordFailure = (): ForgotPasswordFailureAction => ({\r\n    type: AUTH_ACTION_TYPES.FORGOT_PASSWORD_FAILURE,\r\n});\r\n\r\nexport const resetPassword = (token: string, password: string): ValidatedThunkAction => async (dispatch) => {\r\n    const response = await requestBackend(\"auth/password/reset\", \"POST\", {}, {token, password});\r\n\r\n    if (response.status == HttpStatusCode.OK) {\r\n        dispatch(resetPasswordSuccess());\r\n        return {success: true};\r\n    } else {\r\n        return {success: false, errors: gatherValidationErrors(response)};\r\n    }\r\n};\r\n\r\nexport const resetPasswordSuccess = (): ResetPasswordSuccessAction => ({\r\n    type: AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS,\r\n});\r\n\r\n// Onboarding actions\r\n\r\nexport const setOnboardingValues = (values: Partial<OnboardingState>): SetOnboardingValuesAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES,\r\n    values,\r\n});\r\n\r\nexport const setOnboardingOfferValue = (id: string, value: OfferValueDto): SetOnboardingOfferValueAction => ({\r\n    type: AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE,\r\n    id,\r\n    value,\r\n});\r\n\r\nexport const debugConnect = (): AppThunk => async (dispatch, getState) => {\r\n    const email = `test${Math.round(Math.random() * 1e6)}.test@univ-brest.fr`;\r\n    const password = \"PASSword$1\";\r\n\r\n    await dispatch(requestRegister(email, password));\r\n    const {verificationToken} = getState().auth;\r\n\r\n    if (verificationToken) {\r\n        await dispatch(requestValidateAccount(verificationToken));\r\n        await dispatch(requestLogin(email, password));\r\n        await dispatch(\r\n            createProfile({\r\n                type: \"student\",\r\n                birthdate: \"2002-11-12T07:21:22.110Z\",\r\n                firstName: \"Kevin\" + Math.round(1e3 * Math.random()),\r\n                lastName: \"Test\",\r\n                gender: \"male\",\r\n                languages: [\r\n                    {code: \"fr\", level: \"native\"},\r\n                    {code: \"en\", level: \"c1\"},\r\n                ],\r\n                nationality: \"FR\",\r\n                interests: [],\r\n                profileOffers: [\r\n                    {\r\n                        offerId: \"provide-a-couch\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"grab-a-drink\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: false,\r\n                        allowStudent: true,\r\n                    },\r\n                    {\r\n                        offerId: \"talk-a-bit\",\r\n                        allowMale: true,\r\n                        allowFemale: true,\r\n                        allowOther: true,\r\n                        allowStaff: true,\r\n                        allowStudent: true,\r\n                    },\r\n                ],\r\n                educationFields: [],\r\n                degree: \"m2\",\r\n            }),\r\n        );\r\n    }\r\n};\r\n","import * as SecureStore from \"expo-secure-store\";\r\nimport {TokenDto} from \"../../api/dto\";\r\n\r\nexport type CredentialsStorageObject = {\r\n    email: string;\r\n    token: TokenDto;\r\n};\r\n\r\n/**\r\n * Override auth information in secure storage. Data will be stored if expo-secure-store is available on the device.\r\n * @param email - The user's email.\r\n * @param token - The user's authentication token.\r\n */\r\nexport function storeAuthInformation(email: string, token: TokenDto): void {\r\n    // Use expo-secure-store to securely store sensitive data\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) {\r\n            const toStore: CredentialsStorageObject = {email, token};\r\n            SecureStore.setItemAsync(\"auth\", JSON.stringify(toStore));\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Remove the user's auth information from the secure storage.\r\n */\r\nexport function discardAuthInformation(): void {\r\n    SecureStore.isAvailableAsync().then((available: boolean) => {\r\n        if (available) SecureStore.deleteItemAsync(\"auth\");\r\n    });\r\n}\r\n\r\n/**\r\n * Read auth information from secure storage, if available on the device.\r\n * @return an object containing the email and auth token, or false if SecureStore is unavailable or no data was stored.\r\n */\r\nexport async function readCachedCredentials(): Promise<false | CredentialsStorageObject> {\r\n    const available = await SecureStore.isAvailableAsync();\r\n    if (available) {\r\n        const raw = await SecureStore.getItemAsync(\"auth\");\r\n        return raw ? JSON.parse(raw) : false;\r\n    } else return false;\r\n}\r\n","import {CountryCode} from \"../model/country-codes\";\r\n\r\nexport type UniversityKey = \"univ-cadiz\" | \"univ-brest\" | \"univ-gdansk\" | \"univ-malta\" | \"univ-kiel\" | \"univ-split\";\r\n\r\nexport type University = {\r\n    key: UniversityKey;\r\n    domain: string;\r\n    country: CountryCode;\r\n};\r\n\r\n// List of partner universities\r\nexport const PARTNER_UNIVERSITIES: University[] = [\r\n    {\r\n        key: \"univ-cadiz\",\r\n        domain: \"uca.es\",\r\n        country: \"ES\",\r\n    },\r\n    {\r\n        key: \"univ-brest\",\r\n        domain: \"univ-brest.fr\",\r\n        country: \"FR\",\r\n    },\r\n    {\r\n        key: \"univ-gdansk\",\r\n        domain: \"ug.edu.pl\",\r\n        country: \"PL\",\r\n    },\r\n    {\r\n        key: \"univ-malta\",\r\n        domain: \"um.edu.mt\",\r\n        country: \"MT\",\r\n    },\r\n    {\r\n        key: \"univ-kiel\",\r\n        domain: \"kms.uni-kiel.de\",\r\n        country: \"DE\",\r\n    },\r\n    {\r\n        key: \"univ-split\",\r\n        domain: \"unist.hr\",\r\n        country: \"HR\",\r\n    },\r\n];\r\n","import {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\n/**\r\n * Attempts to extract names from a given email.\r\n * @param email A valid email address.\r\n * @returns the first and last name if they were successfuly extracted, null otherwise.\r\n */\r\nexport function extractNamesFromEmail(email: string): {firstname: string; lastname: string} | null {\r\n    const splitName = email.split(\"@\")[0].split(\".\");\r\n    const capitalize = (str: string) => (str.length == 0 ? str : str[0].toUpperCase() + str.slice(1));\r\n    return splitName.length >= 2\r\n        ? {\r\n              firstname: capitalize(splitName[0]),\r\n              lastname: capitalize(splitName[1]),\r\n          }\r\n        : null;\r\n}\r\n\r\n/**\r\n * Extracts a partner university from a given email.\r\n * @param email A valid email address.\r\n * @returns a University object if one matches the given email, null otherwise.\r\n */\r\nexport function getUniversityFromEmail(email: string): University | null {\r\n    const split = email.split(\"@\");\r\n    if (split.length > 0) {\r\n        const domain = split[1].trim();\r\n        return PARTNER_UNIVERSITIES.find((uni: University) => uni.domain == domain) || null;\r\n    }\r\n    return null;\r\n}\r\n","import {extractNamesFromEmail} from \"../../model/utils\";\r\nimport {PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {AuthState, OnboardingState} from \"../types\";\r\nimport {\r\n    AuthAction,\r\n    LogInSuccessAction,\r\n    RegisterBeginAction,\r\n    RegisterSuccessAction,\r\n    ValidateAccountSuccessAction,\r\n    SetOnboardingValuesAction,\r\n    AUTH_ACTION_TYPES,\r\n    SetOnboardingOfferValueAction,\r\n} from \"./actions\";\r\n\r\nconst initialOnboardingState = (): OnboardingState => ({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    birthdate: null,\r\n    gender: null,\r\n    nationality: null,\r\n    role: null,\r\n    degree: null,\r\n    staffRole: null,\r\n    languages: [],\r\n    offerValues: {},\r\n    interestIds: [],\r\n    educationFields: [],\r\n});\r\n\r\nexport const initialState: AuthState = {\r\n    authenticated: false,\r\n    token: null,\r\n    validated: false,\r\n    registerEmail: \"\",\r\n    validatedEmail: null,\r\n    onboarded: false,\r\n    onboarding: initialOnboardingState(),\r\n};\r\n\r\nexport const authReducer = (state: AuthState = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.REGISTER_BEGIN: {\r\n            const {email} = <RegisterBeginAction>action;\r\n            return {\r\n                ...state,\r\n                registerEmail: email,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            const {\r\n                user: {verificationToken, onboarded},\r\n            } = <RegisterSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                verificationToken,\r\n                onboarded,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            const {email} = <ValidateAccountSuccessAction>action;\r\n            return {...state, validated: true, validatedEmail: email};\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_FAILURE: {\r\n            return {...state, validated: false};\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {\r\n                token,\r\n                user: {onboarded, email},\r\n            } = <LogInSuccessAction>action;\r\n\r\n            // Pre-fill some of the on-boarding values\r\n            const onboarding = {...state.onboarding};\r\n            if (!onboarded) {\r\n                const names = extractNamesFromEmail(email);\r\n                if (names) {\r\n                    onboarding.firstname = names.firstname;\r\n                    onboarding.lastname = names.lastname;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                token,\r\n                onboarded,\r\n                onboarding,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false,\r\n                validated: false,\r\n                validatedEmail: null,\r\n                onboarded: false,\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_VALUES: {\r\n            const {values} = <SetOnboardingValuesAction>action;\r\n            return {...state, onboarding: {...state.onboarding, ...values}};\r\n        }\r\n        case AUTH_ACTION_TYPES.SET_ONBOARDING_OFFER_VALUE: {\r\n            const {id, value} = <SetOnboardingOfferValueAction>action;\r\n            return {\r\n                ...state,\r\n                onboarding: {\r\n                    ...state.onboarding,\r\n                    offerValues: {\r\n                        ...state.onboarding.offerValues,\r\n                        [id]: value,\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            return {...state, onboarded: true, onboarding: initialOnboardingState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export type Degree = \"bsc1\" | \"bsc2\" | \"bsc3\" | \"m1\" | \"m2\" | \"phd\";\r\nexport const DEGREES: Degree[] = [\"bsc1\", \"bsc2\", \"bsc3\", \"m1\", \"m2\", \"phd\"];\r\n\r\nexport type LanguageLevel = \"a1\" | \"a2\" | \"b1\" | \"b2\" | \"c1\" | \"c2\" | \"native\";\r\nexport const LANGUAGE_LEVELS: LanguageLevel[] = [\"a1\", \"a2\", \"b1\", \"b2\", \"c1\", \"c2\", \"native\"];\r\n\r\nexport type Role = \"student\" | \"staff\";\r\nexport const ROLES: Role[] = [\"student\", \"staff\"];\r\n\r\nexport type StaffRole =\r\n    | \"teaching\"\r\n    | \"researcher\"\r\n    | \"supporting\"\r\n    | \"administrative\"\r\n    | \"technical\"\r\n    | \"ambassador\"\r\n    | \"other\";\r\nexport const STAFF_ROLES: StaffRole[] = [\r\n    \"teaching\",\r\n    \"researcher\",\r\n    \"supporting\",\r\n    \"administrative\",\r\n    \"technical\",\r\n    \"ambassador\",\r\n    \"other\",\r\n];\r\n\r\nexport type Gender = \"male\" | \"female\" | \"other\";\r\nexport const GENDERS: Gender[] = [\"male\", \"female\", \"other\"];\r\n\r\nexport const MIN_AGE = 18;\r\n","import * as Yup from \"yup\";\r\nimport {DEGREES} from \"../constants/profile-constants\";\r\n\r\nexport const MIN_PASSWORD_LENGTH = 8;\r\n\r\n// Email domains are not verified to allow for server-side whitelisting of specific adresses.\r\n// const VALID_EMAIL_DOMAINS = PARTNER_UNIVERSITIES.map((uni: University) => uni.domain);\r\n\r\nexport const VALIDATOR_EMAIL_SIGNUP = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\n/*.test(\r\n    \"email-domain\",\r\n    \"validation.email.invalidDomain\",\r\n    (value: string | null | undefined) =>\r\n        value !== null && value !== undefined && VALID_EMAIL_DOMAINS.some((domain) => value.endsWith(domain)),\r\n);*/\r\n\r\nexport const VALIDATOR_PASSWORD_SIGNUP = Yup.string()\r\n    .required(\"validation.required\")\r\n    .min(MIN_PASSWORD_LENGTH, \"validation.password.tooShort\")\r\n    // At least one digit\r\n    .matches(/(?=.*\\d)/, \"validation.password.noDigit\")\r\n    // At least one lower-case character\r\n    .matches(/(?=.*[a-z])/, \"validation.password.noLowerCase\")\r\n    // At least one upper-case character\r\n    .matches(/(?=.*[A-Z])/, \"validation.password.noUpperCase\")\r\n    // At least one symbol\r\n    .matches(/(?=.*[#@$!%*?&])/, \"validation.password.noSymbol\");\r\n\r\nexport const VALIDATOR_PASSWORD_REPEAT = Yup.string()\r\n    .required(\"validation.required\")\r\n    .oneOf([Yup.ref(\"password\")], \"validation.password.repeatWrong\");\r\n\r\nexport const VALIDATOR_EMAIL_LOGIN = Yup.string().required(\"validation.required\").email(\"validation.email.invalid\");\r\nexport const VALIDATOR_PASSWORD_LOGIN = Yup.string().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_FIRSTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_LASTNAME = Yup.string().trim().required(\"validation.required\");\r\n\r\nexport const VALIDATOR_ONBOARDING_BIRTHDATE = Yup.date().nullable().required(\"validation.required\"); // make it nullable so we can use null to represent a non given value (will fail the 'required' test anyway)\r\nexport const VALIDATOR_ONBOARDING_GENDER = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_NATIONALITY = Yup.string().nullable().required(\"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_DEGREE = Yup.string().oneOf(DEGREES, \"validation.required\");\r\nexport const VALIDATOR_ONBOARDING_LANGUAGES = Yup.array().required(\"validation.addAtLeastOne\");\r\nexport const VALIDATOR_ONBOARDING_INTERESTS = Yup.array().required(\"validation.addAtLeastOne\");\r\n","import {MIN_PASSWORD_LENGTH} from \"../validators\";\r\n\r\nexport default {\r\n    en: {\r\n        welcome: \"Welcome\",\r\n        // Component-related\r\n        picker: {\r\n            callToAction: \"Select (%d selected)\",\r\n        },\r\n\r\n        login: \"Log in\",\r\n        tabsignin: \"Log in\",\r\n        tabsignup: \"Sign up\",\r\n        emailAddress: \"Email address\",\r\n        password: \"Password\",\r\n        passwordRepeat: \"Repeat password\",\r\n        send: \"Send\",\r\n        forgotPassword: \"Forgot Password\",\r\n        newPassword: \"New Password\",\r\n        forgotPasswordExplanation:\r\n            \"Enter the email address associated with your account below. Instructions for choosing a new password will be sent shortly.\",\r\n        cancel: \"Cancel\",\r\n        signupWelcome: \"We can't wait for you to join our community!\\n\\nJust one more step.\",\r\n        firstname: \"First name\",\r\n        lastname: \"Last name\",\r\n        noResultsFound: \"No results found\",\r\n        tos: {\r\n            modal: {\r\n                disclaimer1:\r\n                    \"Please understand that you will not be able to use our services if you decide to decline the terms of service.\",\r\n                disclaimer2: \"Declining will abort the profile creation process.\",\r\n            },\r\n            decline: \"Decline\",\r\n            accept: \"Accept\",\r\n            readMore: [\"Read more about our terms of service \", \"here\", \".\"],\r\n        },\r\n        privacy: {\r\n            readMore: [\"Read more about our privacy policy \", \"here\", \".\"],\r\n        },\r\n        emailNotificationsLabel: \"Send me useful notifications by email.\",\r\n        emailValidation: {\r\n            validating: \"Validating\",\r\n            success: [\"Your account has been validated! You may now \", \"log in\"],\r\n        },\r\n        createAccount: \"Create account\",\r\n        validation: {\r\n            required: \"Required field.\",\r\n            atLeastOne: \"Please select at least one.\",\r\n            addAtLeastOne: \"Please add at least one.\",\r\n            email: {\r\n                invalid: \"Please provide a valid email address.\",\r\n                invalidDomain: \"Your email address must match one of our partner universities.\",\r\n            },\r\n            password: {\r\n                tooShort: `Your password must have at least ${MIN_PASSWORD_LENGTH} characters.`,\r\n                noDigit: \"Your password must contain at least one digit.\",\r\n                noUpperCase: \"Your password must contain at least one upper case character.\",\r\n                noLowerCase: \"Your password must contain at least one lower case character.\",\r\n                noSymbol: \"Your password must contain at least one symbol (#@$!%*?&).\",\r\n                repeatWrong: \"These passwords don't match.\",\r\n            },\r\n            languages: {\r\n                multiple: \"You cannot add two entries for the same language.\",\r\n            },\r\n        },\r\n        error: {\r\n            error_user_not_verified: \"This account's email address has not been verified yet.\",\r\n            user_not_found: \"User not found.\",\r\n            reset_password_no_token: \"Could not fulfill this request.\",\r\n            unique: {\r\n                user: {\r\n                    email: \"This email address is already in use.\",\r\n                },\r\n            },\r\n            validation: {\r\n                email: {\r\n                    is_email: \"Please provide a valid email address.\",\r\n                },\r\n            },\r\n        },\r\n        pageNotFound: \"404: Page not found.\",\r\n        pageDoesntExist: \"This page doesn't exist.\",\r\n        goHome: \"Go to home screen\",\r\n        tabs: {\r\n            home: \"Home\",\r\n            matching: \"Matching\",\r\n            messaging: \"Messaging\",\r\n            profile: \"Profile\",\r\n            notifications: \"Notifications\",\r\n        },\r\n        myProfile: \"My Profile\",\r\n        editProfile: \"Edit profile\",\r\n        educationFieldsPicker: {\r\n            placeholder: \"Select fields\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        educationFieldCategories: {\r\n            \"generic-programmes-qualifications\": \"Generic programmes and qualifications\",\r\n            education: \"Education\",\r\n            \"arts-humanities\": \"Arts and humanities\",\r\n            \"social-sciences-journalism-information\": \"Social sciences, journalism and information\",\r\n            \"business-administration-law\": \"Business, administration and law\",\r\n            \"natural-sciences-mathematics-statistics\": \"Natural sciences, mathematics and statistics\",\r\n            \"information-communication-technologies\": \"Information and Communication Technologies (ICTs)\",\r\n            \"engineering-manufacturing-construction\": \"Engineering, manufacturing and construction\",\r\n            \"agriculture-forestry-fisheries-veterinary\": \"Agriculture, forestry, fisheries and veterinary\",\r\n            \"health-welfare\": \"Health and welfare\",\r\n            services: \"Services\",\r\n        },\r\n        educationFields: {\r\n            \"basic-programmes-qualifications\": \"Basic programmes and qualifications\",\r\n            \"literacy-numeracy\": \"Literacy and numeracy\",\r\n            \"personal-skills-development\": \"Personal skills and development\",\r\n            \"education-science\": \"Education science\",\r\n            \"training-for-pre-school-teachers\": \"Training for pre-school teachers\",\r\n            \"teacher-training-without-subject-specialisation\": \"Teacher training without subject specialisation\",\r\n            \"teacher-training-with-subject-specialisation\": \"Teacher training with subject specialisation\",\r\n            \"audio-visual-techniques-media-production\": \"Audio-visual techniques and media production\",\r\n            \"fashion-interior-industrial-design\": \"Fashion, interior and industrial design\",\r\n            \"fine-arts\": \"Fine arts\",\r\n            handicrafts: \"Handicrafts\",\r\n            \"music-performing-arts\": \"Music and performing arts\",\r\n            \"religion-theology\": \"Religion and theology\",\r\n            \"history-archaeology\": \"History and archaeology\",\r\n            \"philosophy-ethics\": \"Philosophy and ethics\",\r\n            \"language-acquisition\": \"Language acquisition\",\r\n            \"literature-linguistics\": \"Literature and linguistics\",\r\n            economics: \"Economics\",\r\n            \"political-sciences-civics\": \"Political sciences and civics\",\r\n            psychology: \"Psychology\",\r\n            \"sociology-cultural-studies\": \"Sociology and cultural studies\",\r\n            \"journalism-reporting\": \"Journalism and reporting\",\r\n            \"library-information-archival-studies\": \"Library, information and archival studies\",\r\n            \"accounting-taxation\": \"Accounting and taxation\",\r\n            \"finance-banking-insurance\": \"Finance, banking and insurance\",\r\n            \"management-administration\": \"Management and administration\",\r\n            \"marketing-advertising\": \"Marketing and advertising\",\r\n            \"secretarial-office-work\": \"Secretarial and office work\",\r\n            \"wholesale-retail-sales\": \"Wholesale and retail sales\",\r\n            \"work-skills\": \"Work skills\",\r\n            law: \"Law\",\r\n            biology: \"Biology\",\r\n            biochemistry: \"Biochemistry\",\r\n            \"environmental-sciences\": \"Environmental sciences\",\r\n            \"natural-environments-wildlife\": \"Natural environments and wildlife\",\r\n            chemistry: \"Chemistry\",\r\n            \"earth-sciences\": \"Earth sciences\",\r\n            physics: \"Physics\",\r\n            mathematics: \"Mathematics\",\r\n            statistics: \"Statistics\",\r\n            \"computer-use\": \"Computer use\",\r\n            \"database-network-design-administration\": \"Database and network design and administration\",\r\n            \"software-applications-development-analysis\": \"Software and applications development and analysis\",\r\n            \"chemical-engineering-processes\": \"Chemical engineering and processes\",\r\n            \"environmental-protection-technology\": \"Environmental protection technology\",\r\n            \"electricity-energy\": \"Electricity and energy\",\r\n            \"electronics-automation\": \"Electronics and automation\",\r\n            \"mechanics-metal-trades\": \"Mechanics and metal trades\",\r\n            \"motor-vehicles-ships-aircraft\": \"Motor vehicles, ships and aircraft\",\r\n            \"food-processing\": \"Food processing\",\r\n            materials: \"Materials (glass, paper, plastic and wood)\",\r\n            textiles: \"Textiles (clothes, footwear and leather)\",\r\n            \"mining-extraction\": \"Mining and extraction\",\r\n            \"architecture-town-planning\": \"Architecture and town planning\",\r\n            \"building-civil-engineering\": \"Building and civil engineering\",\r\n            \"crop-livestock-production\": \"Crop and livestock production\",\r\n            horticulture: \"Horticulture\",\r\n            forestry: \"Forestry\",\r\n            fisheries: \"Fisheries\",\r\n            veterinary: \"Veterinary\",\r\n            \"dental-studies\": \"Dental studies\",\r\n            medicine: \"Medicine\",\r\n            \"nursing-midwifery\": \"Nursing and midwifery\",\r\n            \"medical-diagnostic-treatment-technology\": \"Medical diagnostic and treatment technology\",\r\n            \"therapy-rehabilitation\": \"Therapy and rehabilitation\",\r\n            pharmacy: \"Pharmacy\",\r\n            \"traditional-complementary-medicine-therapy\": \"Traditional and complementary medicine and therapy\",\r\n            \"domestic-services\": \"Domestic services\",\r\n            \"hair-beauty-services\": \"Hair and beauty services\",\r\n            \"hotel-restaurants-catering\": \"Hotel, restaurants and catering\",\r\n            sports: \"Sports\",\r\n            \"travel-tourism-leisure\": \"Travel, tourism and leisure\",\r\n            \"community-sanitation\": \"Community sanitation\",\r\n            \"occupational-health-safety\": \"Occupational health and safety\",\r\n            \"military-defence\": \"Military and defence\",\r\n            \"protection-of-persons-property\": \"Protection of persons and property\",\r\n            \"transport-services\": \"Transport services\",\r\n        },\r\n        levelOfStudy: \"Level of study\",\r\n        degrees: {\r\n            bsc1: \"BSC1\",\r\n            bsc2: \"BSC2\",\r\n            bsc3: \"BSC3\",\r\n            m1: \"M1\",\r\n            m2: \"M2\",\r\n            phd: \"PhD\",\r\n        },\r\n        nationality: \"Nationality\",\r\n        university: \"University\",\r\n        search: \"Search\",\r\n        selectCountry: \"Select country\",\r\n        countryPickerLanguageCode: \"common\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n        profileType: \"Type\",\r\n        profileTypes: \"Types\",\r\n        allRoles: {\r\n            student: \"Student\",\r\n            staff: \"Staff\",\r\n        },\r\n        staffRoles: {\r\n            teaching: \"Teaching\",\r\n            researcher: \"Researcher\",\r\n            supporting: \"Supporting\",\r\n            administrative: \"Administrative\",\r\n            technical: \"Technical\",\r\n            ambassador: \"SEA-EU Ambassador\",\r\n            other: \"Other\",\r\n        },\r\n        gender: \"Gender\",\r\n        genders: {\r\n            male: \"Male\",\r\n            female: \"Female\",\r\n            other: \"Other\",\r\n        },\r\n        dateOfBirth: \"Date of birth\",\r\n        months: {\r\n            0: \"January\",\r\n            1: \"February\",\r\n            2: \"March\",\r\n            3: \"April\",\r\n            4: \"May\",\r\n            5: \"June\",\r\n            6: \"July\",\r\n            7: \"August\",\r\n            8: \"September\",\r\n            9: \"October\",\r\n            10: \"November\",\r\n            11: \"December\",\r\n        },\r\n        fieldsOfEducation: \"Fields of education\",\r\n        apply: \"Apply\",\r\n        universities: {\r\n            \"univ-cadiz\": \"University of Cádiz\",\r\n            \"univ-brest\": \"University of Western Brittany\",\r\n            \"univ-gdansk\": \"University of Gdańsk\",\r\n            \"univ-malta\": \"University of Malta\",\r\n            \"univ-kiel\": \"University of Kiel\",\r\n            \"univ-split\": \"University of Split\",\r\n        },\r\n        universitiesPicker: {\r\n            placeholder: \"Select universities\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        logOut: \"Log out\",\r\n        onboarding: {\r\n            name: {\r\n                title: \"Welcome\",\r\n                subtitle:\r\n                    \"Before we start, we need to know a little bit more about you to ensure the best possible recommendations.\",\r\n            },\r\n            personalInfo: {\r\n                title: \"Profile\",\r\n            },\r\n            language: {\r\n                title: \"Languages\",\r\n            },\r\n            interests: {\r\n                title: \"Interests\",\r\n            },\r\n            role: {\r\n                title: \"I am a...\",\r\n            },\r\n            roleSpecific1: {\r\n                student: {\r\n                    title: \"Student information\",\r\n                },\r\n                staff: {\r\n                    title: \"Staff position\",\r\n                },\r\n            },\r\n            offersMeet: {\r\n                title: \"Meet\",\r\n                subtitle: \"Meet up with new friends in real life.\",\r\n            },\r\n            offersDiscover: {\r\n                title: \"Discover\",\r\n                subtitle: \"Find out about other cultures.\",\r\n            },\r\n            offersCollaborate: {\r\n                title: \"Collaborate\",\r\n                subtitle: \"Find people to work on projects, academic or not.\",\r\n            },\r\n            tos: {\r\n                title: \"Terms of service\",\r\n                subtitle:\r\n                    \"I am aware that I am entering a space of intercultural exchange and I am committed to caring and respectful exchanges with other members. My name and surname will be visible by other users.\",\r\n            },\r\n            privacy: {\r\n                title: \"Privacy policy\",\r\n                subtitle:\r\n                    \"I am entering a university community. I agree to provide some personal data, that will not be shared with anyone but the SEA-EU Around community.\",\r\n            },\r\n            submit: \"Submit\",\r\n            getStarted: \"Get Started\",\r\n            profileCreated: \"Welcome! Your profile is now created.\",\r\n        },\r\n        spokenLanguages: \"Spoken languages\",\r\n        languagePicker: {\r\n            placeholderSingle: \"Language\",\r\n            placeholderMultiple: \"Select languages\",\r\n            searchPlaceholder: \"Search for languages\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        languageLevelPicker: {\r\n            placeholder: \"Level\",\r\n        },\r\n        languageLevels: {\r\n            a1: \"A1\",\r\n            a2: \"A2\",\r\n            b1: \"B1\",\r\n            b2: \"B2\",\r\n            c1: \"C1\",\r\n            c2: \"C2\",\r\n            native: \"native\",\r\n        },\r\n        languageNames: {\r\n            aa: \"Afar\",\r\n            ab: \"Abkhazian\",\r\n            ae: \"Avestan\",\r\n            af: \"Afrikaans\",\r\n            ak: \"Akan\",\r\n            am: \"Amharic\",\r\n            an: \"Aragonese\",\r\n            ar: \"Arabic\",\r\n            as: \"Assamese\",\r\n            av: \"Avaric\",\r\n            ay: \"Aymara\",\r\n            az: \"Azerbaijani\",\r\n            ba: \"Bashkir\",\r\n            be: \"Belarusian\",\r\n            bg: \"Bulgarian\",\r\n            bh: \"Bihari languages\",\r\n            bi: \"Bislama\",\r\n            bm: \"Bambara\",\r\n            bn: \"Bengali\",\r\n            bo: \"Tibetan\",\r\n            br: \"Breton\",\r\n            bs: \"Bosnian\",\r\n            ca: \"Catalan / Valencian\",\r\n            ce: \"Chechen\",\r\n            ch: \"Chamorro\",\r\n            co: \"Corsican\",\r\n            cr: \"Cree\",\r\n            cs: \"Czech\",\r\n            cu: \"Old Bulgarian / Church Slavic / Slavonic\",\r\n            cv: \"Chuvash\",\r\n            cy: \"Welsh\",\r\n            da: \"Danish\",\r\n            de: \"German\",\r\n            dv: \"Divehi / Dhivehi / Maldivian\",\r\n            dz: \"Dzongkha\",\r\n            ee: \"Ewe\",\r\n            el: \"Greek\",\r\n            en: \"English\",\r\n            eo: \"Esperanto\",\r\n            es: \"Spanish\",\r\n            et: \"Estonian\",\r\n            eu: \"Basque\",\r\n            fa: \"Persian\",\r\n            ff: \"Fulah\",\r\n            fi: \"Finnish\",\r\n            fj: \"Fijian\",\r\n            fo: \"Faroese\",\r\n            fr: \"French\",\r\n            fy: \"Western Frisian\",\r\n            ga: \"Irish\",\r\n            gd: \"Scottish Gaelic\",\r\n            gl: \"Galician\",\r\n            gn: \"Guarani\",\r\n            gu: \"Gujarati\",\r\n            gv: \"Manx\",\r\n            ha: \"Hausa\",\r\n            he: \"Hebrew\",\r\n            hi: \"Hindi\",\r\n            ho: \"Hiri Motu\",\r\n            hr: \"Croatian\",\r\n            ht: \"Haitian Creole\",\r\n            hu: \"Hungarian\",\r\n            hy: \"Armenian\",\r\n            hz: \"Herero\",\r\n            ia: \"Interlingua\",\r\n            id: \"Indonesian\",\r\n            ie: \"Interlingue / Occidental\",\r\n            ig: \"Igbo\",\r\n            ii: \"Sichuan Yi / Nuosu\",\r\n            ik: \"Inupiaq\",\r\n            io: \"Ido\",\r\n            is: \"Icelandic\",\r\n            it: \"Italian\",\r\n            iu: \"Inuktitut\",\r\n            ja: \"Japanese\",\r\n            jv: \"Javanese\",\r\n            ka: \"Georgian\",\r\n            kg: \"Kongo\",\r\n            ki: \"Kikuyu / Gikuyu\",\r\n            kj: \"Kuanyama / Kwanyama\",\r\n            kk: \"Kazakh\",\r\n            kl: \"Kalaallisut / Greenlandic\",\r\n            km: \"Central Khmer\",\r\n            kn: \"Kannada\",\r\n            ko: \"Korean\",\r\n            kr: \"Kanuri\",\r\n            ks: \"Kashmiri\",\r\n            ku: \"Kurdish\",\r\n            kv: \"Komi\",\r\n            kw: \"Cornish\",\r\n            ky: \"Kirghiz / Kyrgyz\",\r\n            la: \"Latin\",\r\n            lb: \"Luxembourgish / Letzeburgesch\",\r\n            lg: \"Ganda\",\r\n            li: \"Limburgan / Limburger / Limburgish\",\r\n            ln: \"Lingala\",\r\n            lo: \"Lao\",\r\n            lt: \"Lithuanian\",\r\n            lu: \"Luba-Katanga\",\r\n            lv: \"Latvian\",\r\n            mg: \"Malagasy\",\r\n            mh: \"Marshallese\",\r\n            mi: \"Maori\",\r\n            mk: \"Macedonian\",\r\n            ml: \"Malayalam\",\r\n            mn: \"Mongolian\",\r\n            mr: \"Marathi\",\r\n            ms: \"Malay\",\r\n            mt: \"Maltese\",\r\n            my: \"Burmese\",\r\n            na: \"Nauru\",\r\n            nb: \"Norwegian Bokmål\",\r\n            nd: \"North Ndebele\",\r\n            ne: \"Nepali\",\r\n            ng: \"Ndonga\",\r\n            nl: \"Dutch / Flemish\",\r\n            nn: \"Norwegian Nynorsk\",\r\n            no: \"Norwegian\",\r\n            nr: \"South Ndebele\",\r\n            nv: \"Navajo / Navaho\",\r\n            ny: \"Chichewa / Chewa / Nyanja\",\r\n            oc: \"Occitan\",\r\n            oj: \"Ojibwa\",\r\n            om: \"Oromo\",\r\n            or: \"Oriya\",\r\n            os: \"Ossetian / Ossetic\",\r\n            pa: \"Punjabi / Panjabi\",\r\n            pi: \"Pali\",\r\n            pl: \"Polish\",\r\n            ps: \"Pashto / Pushto\",\r\n            pt: \"Portuguese\",\r\n            qu: \"Quechua\",\r\n            rc: \"Reunionese\",\r\n            rm: \"Romansh\",\r\n            rn: \"Rundi\",\r\n            ro: \"Romanian / Moldavian\",\r\n            ru: \"Russian\",\r\n            rw: \"Kinyarwanda\",\r\n            sa: \"Sanskrit\",\r\n            sc: \"Sardinian\",\r\n            sd: \"Sindhi\",\r\n            se: \"Northern Sami\",\r\n            sg: \"Sango\",\r\n            sh: \"Serbo-Croatian\",\r\n            si: \"Sinhala / Sinhalese\",\r\n            sk: \"Slovak\",\r\n            sl: \"Slovenian\",\r\n            sm: \"Samoan\",\r\n            sn: \"Shona\",\r\n            so: \"Somali\",\r\n            sq: \"Albanian\",\r\n            sr: \"Serbian\",\r\n            ss: \"Swati\",\r\n            st: \"Southern Sotho\",\r\n            su: \"Sundanese\",\r\n            sv: \"Swedish\",\r\n            sw: \"Swahili\",\r\n            ta: \"Tamil\",\r\n            te: \"Telugu\",\r\n            tg: \"Tajik\",\r\n            th: \"Thai\",\r\n            ti: \"Tigrinya\",\r\n            tk: \"Turkmen\",\r\n            tl: \"Tagalog\",\r\n            tn: \"Tswana\",\r\n            to: \"Tonga (Tonga Islands)\",\r\n            tr: \"Turkish\",\r\n            ts: \"Tsonga\",\r\n            tt: \"Tatar\",\r\n            tw: \"Twi\",\r\n            ty: \"Tahitian\",\r\n            ug: \"Uighur / Uyghur\",\r\n            uk: \"Ukrainian\",\r\n            ur: \"Urdu\",\r\n            uz: \"Uzbek\",\r\n            ve: \"Venda\",\r\n            vi: \"Vietnamese\",\r\n            vo: \"Volapük\",\r\n            wa: \"Walloon\",\r\n            wo: \"Wolof\",\r\n            xh: \"Xhosa\",\r\n            yi: \"Yiddish\",\r\n            yo: \"Yoruba\",\r\n            za: \"Zhuang / Chuang\",\r\n            zh: \"Chinese\",\r\n            zu: \"Zulu\",\r\n        },\r\n        interests: \"Interests\",\r\n        chooseInterests: \"Choose interests\",\r\n        interestsPicker: {\r\n            placeholder: \"Select interests\",\r\n            searchPlaceholder: \"Search\",\r\n            multiple: \"%d selected\",\r\n        },\r\n        interestNames: {\r\n            \"language-exchange\": \"Language exchange\",\r\n            \"second-hand-apparel\": \"Second hand apparel\",\r\n            \"board-games\": \"Board games\",\r\n            \"road-trips\": \"Road trips\",\r\n            tango: \"Tango\",\r\n            sneakers: \"Sneakers\",\r\n            sports: \"Sports\",\r\n            baking: \"Baking\",\r\n            tarot: \"Tarot\",\r\n            art: \"Art\",\r\n            tea: \"Tea\",\r\n            picnicking: \"Picnicking\",\r\n            motorcycles: \"Motorcycles\",\r\n            parties: \"Parties\",\r\n            shopping: \"Shopping\",\r\n            couchsurfing: \"Couch-surfing\",\r\n            netflix: \"Netflix\",\r\n            cooking: \"Cooking\",\r\n            vegan: \"Vegan\",\r\n            brunch: \"Brunch\",\r\n            \"motor-sports\": \"Motor sports\",\r\n            \"grab-a-drink\": \"Grab a drink\",\r\n            \"working-out\": \"Working out\",\r\n            \"start-ups\": \"Start ups\",\r\n            \"street-food\": \"Street food\",\r\n            \"craft-beer\": \"Craft beer\",\r\n            \"amateur-cook\": \"Amateur cook\",\r\n            \"happy-hour\": \"Happy hour\",\r\n            \"vintage-fashion\": \"Vintage fashion\",\r\n            \"walking-my-dog\": \"Walking my dog\",\r\n            \"second-hand-shopping\": \"Second hand shopping\",\r\n            politics: \"Politics\",\r\n            bbq: \"BBQ\",\r\n            surfing: \"Surfing\",\r\n            spirituality: \"Spirituality\",\r\n            gardening: \"Gardening\",\r\n            astrology: \"Astrology\",\r\n            climbing: \"Climbing\",\r\n            tennis: \"Tennis\",\r\n            writer: \"Writer\",\r\n            comedy: \"Comedy\",\r\n            wine: \"Wine\",\r\n            diy: \"Diy\",\r\n            coffee: \"Coffee\",\r\n            sailing: \"Sailing\",\r\n            music: \"Music\",\r\n            cycling: \"Cycling\",\r\n            activism: \"Activism\",\r\n            trivia: \"Trivia\",\r\n            travel: \"Travel\",\r\n            instagram: \"Instagram\",\r\n            museum: \"Museum\",\r\n            karaoke: \"Karaoke\",\r\n            fashion: \"Fashion\",\r\n            disney: \"Disney\",\r\n            blogging: \"Blogging\",\r\n            yoga: \"Yoga\",\r\n            investing: \"Investing\",\r\n            petanque: \"Petanque\",\r\n            theater: \"Theater\",\r\n            environmentalism: \"Environmentalism\",\r\n            crossfit: \"Crossfit\",\r\n            dancing: \"Dancing\",\r\n            hiking: \"Hiking\",\r\n            running: \"Running\",\r\n            golf: \"Golf\",\r\n            photography: \"Photography\",\r\n            vlogging: \"Vlogging\",\r\n            volunteering: \"Volunteering\",\r\n            tattoos: \"Tattoos\",\r\n            outdoors: \"Outdoors\",\r\n            esports: \"Esports\",\r\n            snowboarding: \"Snowboarding\",\r\n            athlete: \"Athlete\",\r\n            extrovert: \"Extrovert\",\r\n            podcasts: \"Podcasts\",\r\n            walking: \"Walking\",\r\n            vegetarian: \"Vegetarian\",\r\n            reading: \"Reading\",\r\n            movies: \"Movies\",\r\n            foodie: \"Foodie\",\r\n            soccer: \"Soccer\",\r\n            skiing: \"Skiing\",\r\n            sushi: \"Sushi\",\r\n            introvert: \"Introvert\",\r\n            skateboarder: \"Skateboarder\",\r\n            festivals: \"Festivals\",\r\n            fishing: \"Fishing\",\r\n            swimming: \"Swimming\",\r\n            expositions: \"Expositions\",\r\n            gamer: \"Gamer\",\r\n            piano: \"Piano\",\r\n            \"foodie-tour\": \"Foodie Tour\",\r\n            \"dog-lover\": \"Dog Lover\",\r\n            \"cat-lover\": \"Cat Lover\",\r\n        },\r\n        offerCategories: {\r\n            meet: \"Meet\",\r\n            discover: \"Discover\",\r\n            collaborate: \"Collaborate\",\r\n        },\r\n        offers: \"Offers\",\r\n        allOffers: {\r\n            \"grab-a-drink\": {\r\n                name: \"Grab a drink\",\r\n                help: \"I am open to having a drink with the people I meet on this platform.\",\r\n            },\r\n            \"provide-a-couch\": {\r\n                name: \"Provide a couch\",\r\n                help: \"I am open to letting someone sleep on my couch.\",\r\n            },\r\n            \"do-a-campus-tour\": {\r\n                name: \"Do a campus tour\",\r\n                help: \"I am open to helping someone visit my campus.\",\r\n            },\r\n            \"help-on-a-project\": {\r\n                name: \"Help on a project\",\r\n                help: \"I am open to helping someone work on a project.\",\r\n            },\r\n            \"look-for-collaborators\": {\r\n                name: \"Look for collaborators\",\r\n                help: \"I am looking for collaborators for a project.\",\r\n            },\r\n            \"answer-questions\": {\r\n                name: \"Answer questions\",\r\n                help: \"I can give information about my university or answer to general questions.\",\r\n            },\r\n            \"talk-a-bit\": {\r\n                name: \"Talk a bit\",\r\n                help: \"I would like to get to know new people.\",\r\n            },\r\n            \"chat-to-practice\": {\r\n                name: \"Chat to practice\",\r\n                help: \"I would not mind chatting with other users who would like to improve their language skills\",\r\n            },\r\n            \"language-tandem\": {\r\n                name: \"Language tandem\",\r\n                help: \"I am willing to join a language tandem to help others learn one of my languages.\",\r\n            },\r\n        },\r\n        block: {\r\n            warning:\r\n                \"Are you sure you want to block this user? You and {{firstname}} will not be able to find each other anymore.\",\r\n            action: \"Block\",\r\n        },\r\n        // Reset password\r\n        resetPassword: {\r\n            instructions: \"To choose a new password, click the link in the email we just sent you.\",\r\n            title: \"Please choose a new password\",\r\n            button: \"Send\",\r\n            success: [\"Your password has been updated! You may now \", \"log in\"],\r\n        },\r\n        // Messaging tab\r\n        messaging: {\r\n            tabIndividual: \"Matches\",\r\n            tabGroup: \"Groups\",\r\n            noMatches: \"It appears that you haven't matched with anyone yet. :(\",\r\n        },\r\n        // Matching tab\r\n        matching: {\r\n            noResults: \"No results found\",\r\n            noResultsAdvice: \"Perhaps try removing some filters\",\r\n            filtering: {\r\n                sectionGeneral: \"General\",\r\n                buttonReset: \"Reset\",\r\n            },\r\n            actionLike: \"Like\",\r\n            actionHide: \"Hide\",\r\n            success: {\r\n                title: \"It's a match !\",\r\n                chat: \"Start chatting\",\r\n                continue: \"Keep scrolling\",\r\n            },\r\n        },\r\n        // Profile tab\r\n        profile: {\r\n            noOffersSelected: \"No offers selected.\",\r\n        },\r\n        screenTitles: {\r\n            suffix: \" - SEA-EU Around\",\r\n            LoginForm: \"Login\",\r\n            ForgotPassword: \"Forgot Password\",\r\n            TabSignup: \"Sign up\",\r\n            OnboardingNameScreen: \"Welcome\",\r\n            OnboardingPersonalInfoScreen: \"Profile\",\r\n            OnboardingLanguageScreen: \"Profile\",\r\n            OnboardingInterestsScreen: \"Profile\",\r\n            OnboardingRoleScreen: \"Profile\",\r\n            OnboardingRoleSpecificScreen: \"Profile\",\r\n            OnboardingOffersScreen1: \"Discover\",\r\n            OnboardingOffersScreen2: \"Collaborate\",\r\n            OnboardingOffersScreen3: \"Meet\",\r\n            OnboardingTosScreen: \"Terms of Service\",\r\n            OnboardingPrivacyScreen: \"Privacy Policy\",\r\n            IndividualMessagingTab: \"Messages\",\r\n            GroupMessagingTab: \"Groups\",\r\n            ChatScreen: \"Chat\",\r\n            TabHomeScreen: \"Home\",\r\n            TabMatchingScreen: \"Browse\",\r\n            MatchFilteringScreen: \"Filters\",\r\n            TabNotificationsScreen: \"Notifications\",\r\n            TabProfileScreen: \"Profile\",\r\n            ValidationEmailSentScreen: \"Validate your account\",\r\n            ValidateEmailScreen: \"Validate your account\",\r\n            ResetPasswordScreen: \"Reset your password\",\r\n            ResetPasswordSuccessScreen: \"Password reset\",\r\n            OnboardingSuccessfulScreen: \"Successful registration\",\r\n            NotFoundScreen: \"Not Found\",\r\n            MatchSuccessScreen: \"Match!\",\r\n            ForgotPasswordEmailSentScreen: \"Forgot password\",\r\n        },\r\n    },\r\n    fr: {\r\n        welcome: \"Bienvenue\",\r\n        login: \"Connexion\",\r\n        signup: \"Inscription\",\r\n        emailAddress: \"Adresse email\",\r\n        password: \"Mot de passe\",\r\n        forgotPassword: \"Mot de passe oublié\",\r\n        countryPickerLanguageCode: \"fra\", // see TranslationLanguageCode from react-native-country-picker-modal\r\n    },\r\n};\r\n","import * as Localization from \"expo-localization\";\r\nimport i18n from \"i18n-js\";\r\nimport translations from \"./constants/translations\";\r\n\r\nexport type SupportedLocale = \"en\" | \"fr\";\r\nexport const SUPPORTED_LOCALES: SupportedLocale[] = [\"en\", \"fr\"];\r\n\r\nexport function getDefaultLocale(): SupportedLocale {\r\n    return SUPPORTED_LOCALES.find((l: SupportedLocale) => l == Localization.locale) || \"en\";\r\n}\r\n\r\nexport default function configureLocalization(): void {\r\n    // Set the key-value pairs for the supported languages.\r\n    i18n.translations = translations;\r\n\r\n    // Set the locale on startup\r\n    i18n.locale = getDefaultLocale();\r\n\r\n    // When a value is missing from a language, fallback to another language with the key present.\r\n    i18n.fallbacks = true;\r\n}\r\n","// ISO 639-1 Language codes\r\nexport const LANGUAGES_CODES: string[] = [\r\n    \"de\",\r\n    \"en\",\r\n    \"hr\",\r\n    \"es\",\r\n    \"fr\",\r\n    \"mt\",\r\n    \"pl\",\r\n    \"aa\",\r\n    \"ab\",\r\n    \"ae\",\r\n    \"af\",\r\n    \"ak\",\r\n    \"am\",\r\n    \"an\",\r\n    \"ar\",\r\n    \"as\",\r\n    \"av\",\r\n    \"ay\",\r\n    \"az\",\r\n    \"ba\",\r\n    \"be\",\r\n    \"bg\",\r\n    \"bh\",\r\n    \"bi\",\r\n    \"bm\",\r\n    \"bn\",\r\n    \"bo\",\r\n    \"br\",\r\n    \"bs\",\r\n    \"ca\",\r\n    \"ce\",\r\n    \"ch\",\r\n    \"co\",\r\n    \"cr\",\r\n    \"cs\",\r\n    \"cu\",\r\n    \"cv\",\r\n    \"cy\",\r\n    \"da\",\r\n    \"dv\",\r\n    \"dz\",\r\n    \"ee\",\r\n    \"el\",\r\n    \"eo\",\r\n    \"et\",\r\n    \"eu\",\r\n    \"fa\",\r\n    \"ff\",\r\n    \"fi\",\r\n    \"fj\",\r\n    \"fo\",\r\n    \"fy\",\r\n    \"ga\",\r\n    \"gd\",\r\n    \"gl\",\r\n    \"gn\",\r\n    \"gu\",\r\n    \"gv\",\r\n    \"ha\",\r\n    \"he\",\r\n    \"hi\",\r\n    \"ho\",\r\n    \"ht\",\r\n    \"hu\",\r\n    \"hy\",\r\n    \"hz\",\r\n    \"ia\",\r\n    \"id\",\r\n    \"ie\",\r\n    \"ig\",\r\n    \"ii\",\r\n    \"ik\",\r\n    \"io\",\r\n    \"is\",\r\n    \"it\",\r\n    \"iu\",\r\n    \"ja\",\r\n    \"jv\",\r\n    \"ka\",\r\n    \"kg\",\r\n    \"ki\",\r\n    \"kj\",\r\n    \"kk\",\r\n    \"kl\",\r\n    \"km\",\r\n    \"kn\",\r\n    \"ko\",\r\n    \"kr\",\r\n    \"ks\",\r\n    \"ku\",\r\n    \"kv\",\r\n    \"kw\",\r\n    \"ky\",\r\n    \"la\",\r\n    \"lb\",\r\n    \"lg\",\r\n    \"li\",\r\n    \"ln\",\r\n    \"lo\",\r\n    \"lt\",\r\n    \"lu\",\r\n    \"lv\",\r\n    \"mg\",\r\n    \"mh\",\r\n    \"mi\",\r\n    \"mk\",\r\n    \"ml\",\r\n    \"mn\",\r\n    \"mr\",\r\n    \"ms\",\r\n    \"my\",\r\n    \"na\",\r\n    \"nb\",\r\n    \"nd\",\r\n    \"ne\",\r\n    \"ng\",\r\n    \"nl\",\r\n    \"nn\",\r\n    \"no\",\r\n    \"nr\",\r\n    \"nv\",\r\n    \"ny\",\r\n    \"oc\",\r\n    \"oj\",\r\n    \"om\",\r\n    \"or\",\r\n    \"os\",\r\n    \"pa\",\r\n    \"pi\",\r\n    \"ps\",\r\n    \"pt\",\r\n    \"qu\",\r\n    \"rc\",\r\n    \"rm\",\r\n    \"rn\",\r\n    \"ro\",\r\n    \"ru\",\r\n    \"rw\",\r\n    \"sa\",\r\n    \"sc\",\r\n    \"sd\",\r\n    \"se\",\r\n    \"sg\",\r\n    \"sh\",\r\n    \"si\",\r\n    \"sk\",\r\n    \"sl\",\r\n    \"sm\",\r\n    \"sn\",\r\n    \"so\",\r\n    \"sq\",\r\n    \"sr\",\r\n    \"ss\",\r\n    \"st\",\r\n    \"su\",\r\n    \"sv\",\r\n    \"sw\",\r\n    \"ta\",\r\n    \"te\",\r\n    \"tg\",\r\n    \"th\",\r\n    \"ti\",\r\n    \"tk\",\r\n    \"tl\",\r\n    \"tn\",\r\n    \"to\",\r\n    \"tr\",\r\n    \"ts\",\r\n    \"tt\",\r\n    \"tw\",\r\n    \"ty\",\r\n    \"ug\",\r\n    \"uk\",\r\n    \"ur\",\r\n    \"uz\",\r\n    \"ve\",\r\n    \"vi\",\r\n    \"vo\",\r\n    \"wa\",\r\n    \"wo\",\r\n    \"xh\",\r\n    \"yi\",\r\n    \"yo\",\r\n    \"za\",\r\n    \"zh\",\r\n    \"zu\",\r\n];\r\n\r\n/* Mining translations from https://www.loc.gov/standards/iso639-2/php/code_list.php */\r\n/*\r\nlet entries = {};\r\nlet items = $(\"body > table > tbody > tr > td > table:nth-child(6) tbody\").children;\r\nfor(const tr of items) {\r\n    const code = tr.children[1].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        const french = tr.children[3].innerText.trim();\r\n        const german = tr.children[4].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n}\r\nconsole.log(entries);\r\n*/\r\n\r\n/* Mining translations from https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\r\n/*\r\nlet entries = {};\r\n$(\"#Table > tbody\").children().each((i,tr) => {\r\n    const code = tr.children[4].innerText.trim();\r\n    if(code.length == 2) {\r\n        const english = tr.children[2].innerText.trim();\r\n        entries[code] = english;\r\n    }\r\n});\r\nconsole.log(entries);\r\n*/\r\n","import {ThemeKey} from \"../../types\";\r\nimport {SupportedLocale} from \"../../localization\";\r\nimport i18n from \"i18n-js\";\r\n\r\nexport enum SETTINGS_ACTION_TYPES {\r\n    SET_THEME = \"SETTINGS/SET_THEME\",\r\n    TOGGLE_THEME = \"SETTINGS/TOGGLE_THEME\",\r\n    SET_LOCALE = \"SETTINGS/SET_LOCALE\",\r\n}\r\n\r\nexport type SetThemeAction = {\r\n    type: string;\r\n    theme: ThemeKey;\r\n};\r\n\r\nexport type ToggleThemeAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetLocaleAction = {\r\n    type: string;\r\n    locale: SupportedLocale;\r\n};\r\n\r\nexport type SettingsAction = SetThemeAction | SetLocaleAction;\r\n\r\nexport const setTheme = (theme: ThemeKey): SetThemeAction =>\r\n    ({type: SETTINGS_ACTION_TYPES.SET_THEME, theme} as SetThemeAction);\r\n\r\nexport const toggleTheme = (): ToggleThemeAction => ({type: SETTINGS_ACTION_TYPES.TOGGLE_THEME} as ToggleThemeAction);\r\n\r\nexport const setLocale = (locale: SupportedLocale): SetLocaleAction => {\r\n    i18n.locale = locale;\r\n    return {type: SETTINGS_ACTION_TYPES.SET_THEME, locale} as SetLocaleAction;\r\n};\r\n","import {getDefaultLocale, SupportedLocale} from \"../../localization\";\r\nimport {LANGUAGES_CODES} from \"../../model/languages\";\r\nimport translations from \"../../constants/translations\";\r\nimport {SetLocaleAction, SetThemeAction, SettingsAction, SETTINGS_ACTION_TYPES} from \"./actions\";\r\nimport {SettingsState} from \"../types\";\r\n\r\nfunction getLocalizedLanguageItems(locale: SupportedLocale) {\r\n    const trans = (translations as {[key: string]: {[key: string]: unknown}})[locale];\r\n    const languageNames = trans.languageNames as {[key: string]: string};\r\n    return LANGUAGES_CODES.map((code: string) => ({\r\n        label: languageNames[code] || `Missing translation (${code})`, //i18n.t(`languageNameM${code}`${code})s, // Cannot rely on i18n as it is not initialized yet\r\n        value: code,\r\n    }));\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    theme: \"light\",\r\n    locale: getDefaultLocale(),\r\n    localizedLanguageItems: getLocalizedLanguageItems(getDefaultLocale()),\r\n};\r\n\r\nexport const settingsReducer = (state: SettingsState = initialState, action: SettingsAction): SettingsState => {\r\n    switch (action.type) {\r\n        case SETTINGS_ACTION_TYPES.SET_THEME: {\r\n            const {theme} = <SetThemeAction>action;\r\n            return {...state, theme};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.TOGGLE_THEME: {\r\n            return {...state, theme: state.theme == \"light\" ? \"dark\" : \"light\"};\r\n        }\r\n        case SETTINGS_ACTION_TYPES.SET_LOCALE: {\r\n            const {locale} = <SetLocaleAction>action;\r\n            return {...state, locale, localizedLanguageItems: getLocalizedLanguageItems(locale)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {stripSuperfluousOffers} from \"../../api/converters\";\r\nimport {OfferDto} from \"../../api/dto\";\r\nimport {AuthAction, AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {ProfileState} from \"../types\";\r\nimport {\r\n    FetchUserSuccessAction,\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    ProfileAction,\r\n    PROFILE_ACTION_TYPES,\r\n    SetAvatarSuccessAction,\r\n    SetProfileFieldsSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: ProfileState = {\r\n    user: null,\r\n    offers: [],\r\n    offerIdToCategory: new Map(),\r\n    interests: [],\r\n};\r\n\r\nexport const profileReducer = (\r\n    state: ProfileState = initialState,\r\n    action: ProfileAction | AuthAction,\r\n): ProfileState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.PROFILE_SET_FIELDS_SUCCESS: {\r\n            if (state.user) {\r\n                const {fields} = <SetProfileFieldsSuccessAction>action;\r\n                if (fields.profileOffers) fields.profileOffers = stripSuperfluousOffers(fields.profileOffers);\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, ...fields} : undefined},\r\n                };\r\n            } else return {...state};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers} = <LoadProfileOffersSuccessAction>action;\r\n            const offerIdToCategory = new Map(offers.map((o: OfferDto) => [o.id, o.category]));\r\n            return {...state, offers, offerIdToCategory};\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests} = <LoadProfileInterestsSuccessAction>action;\r\n            // Sort alphabetically\r\n            interests.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n            return {...state, interests};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = <FetchUserSuccessAction>action;\r\n            return {...state, user};\r\n        }\r\n        case PROFILE_ACTION_TYPES.SET_AVATAR_SUCCESS: {\r\n            const {avatarUrl} = <SetAvatarSuccessAction>action;\r\n            if (state.user === null) return {...state};\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    user: {...state.user, profile: state.user.profile ? {...state.user.profile, avatarUrl} : undefined},\r\n                };\r\n            }\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {...state, user: null};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {convertDtoToProfile} from \"../../api/converters\";\r\nimport {\r\n    LikeProfileResponseDto,\r\n    PaginatedRequestResponse,\r\n    ResponseProfileDto,\r\n    SuccessfulRequestResponse,\r\n} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {MatchingFiltersState, AppThunk} from \"../types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\n\r\nexport enum MATCHING_ACTION_TYPES {\r\n    SET_FILTERS = \"MATCHING/SET_FILTERS\",\r\n    SET_OFFER_FILTER = \"MATCHING/SET_OFFER_FILTER\",\r\n    FETCH_PROFILES_BEGIN = \"MATCHING/FETCH_PROFILES_BEGIN\",\r\n    FETCH_PROFILES_SUCCESS = \"MATCHING/FETCH_PROFILES_SUCCESS\",\r\n    FETCH_PROFILES_FAILURE = \"MATCHING/FETCH_PROFILES_FAILURE\",\r\n    FETCH_PROFILES_REFRESH = \"MATCHING/FETCH_PROFILES_REFRESH\",\r\n    LIKE_PROFILE_SUCCESS = \"MATCHING/LIKE_PROFILE_SUCCESS\",\r\n    DISLIKE_PROFILE_SUCCESS = \"MATCHING/DISLIKE_PROFILE_SUCCESS\",\r\n    BLOCK_PROFILE_SUCCESS = \"MATCHING/BLOCK_PROFILE_SUCCESS\",\r\n    FETCH_MY_MATCHES_BEGIN = \"MATCHING/FETCH_MY_MATCHES_BEGIN\",\r\n    FETCH_MY_MATCHES_FAILURE = \"MATCHING/FETCH_MY_MATCHES_FAILURE\",\r\n    FETCH_MY_MATCHES_SUCCESS = \"MATCHING/FETCH_MY_MATCHES_SUCCESS\",\r\n}\r\n\r\nexport type SetOfferFilterAction = {\r\n    type: string;\r\n    offerId: string;\r\n    value: boolean;\r\n};\r\n\r\nexport type ResetMatchingFiltersAction = {\r\n    type: string;\r\n};\r\n\r\nexport type SetMatchingFiltersAction = {\r\n    type: string;\r\n    filters: Partial<MatchingFiltersState>;\r\n};\r\n\r\nexport type LikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n    matchStatus: LikeProfileResponseDto;\r\n};\r\n\r\nexport type DislikeProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type BlockProfileSuccessAction = {\r\n    type: string;\r\n    profileId: string;\r\n};\r\n\r\nexport type FetchProfilesRefreshAction = {\r\n    type: string;\r\n};\r\n\r\nexport type BeginFetchProfilesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchProfilesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n    canFetchMore: boolean;\r\n};\r\n\r\nexport type BeginFetchMyMatchesAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesFailureAction = {\r\n    type: string;\r\n};\r\n\r\nexport type FetchMyMatchesSuccessAction = {\r\n    type: string;\r\n    profiles: UserProfile[];\r\n};\r\n\r\nexport type MatchingAction =\r\n    | SetOfferFilterAction\r\n    | SetMatchingFiltersAction\r\n    | ResetMatchingFiltersAction\r\n    | BeginFetchProfilesAction\r\n    | FetchProfilesSuccessAction\r\n    | FetchProfilesFailureAction\r\n    | FetchProfilesRefreshAction\r\n    | LikeProfileSuccessAction\r\n    | DislikeProfileSuccessAction\r\n    | BlockProfileSuccessAction\r\n    | BeginFetchMyMatchesAction\r\n    | FetchMyMatchesFailureAction\r\n    | FetchMyMatchesSuccessAction;\r\n\r\nexport const setOfferFilter = (offerId: string, value: boolean): SetOfferFilterAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_OFFER_FILTER,\r\n    offerId,\r\n    value,\r\n});\r\n\r\nexport const setMatchingFilters = (filters: Partial<MatchingFiltersState>): SetMatchingFiltersAction => ({\r\n    type: MATCHING_ACTION_TYPES.SET_FILTERS,\r\n    filters,\r\n});\r\n\r\nexport const beginFetchProfiles = (): BeginFetchProfilesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN,\r\n});\r\n\r\nexport const fetchProfiles = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching: {filters, profilesPagination},\r\n    } = getState();\r\n\r\n    if (profilesPagination.fetching || !profilesPagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchProfiles());\r\n\r\n    // Replaces empty arrays with \"undefined\"\r\n    function notEmpty<T>(t: Array<T>) {\r\n        return t.length == 0 ? undefined : t;\r\n    }\r\n\r\n    const offers = Object.keys(filters.offers).filter((k) => filters.offers[k] === true);\r\n\r\n    const filterParams = {\r\n        universities: notEmpty(filters.universities),\r\n        spokenLanguages: notEmpty(filters.languages),\r\n        degrees: notEmpty(filters.degrees),\r\n        types: notEmpty(filters.types),\r\n        offers: notEmpty(offers),\r\n    };\r\n\r\n    const response = await requestBackend(\r\n        \"profiles\",\r\n        \"GET\",\r\n        {\r\n            page: profilesPagination.page,\r\n            limit: PROFILES_FETCH_LIMIT,\r\n            ...filterParams,\r\n        },\r\n        {},\r\n        token,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const profiles = (paginated.data as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchProfilesSuccess(profiles, canFetchMore));\r\n    } else dispatch(fetchProfilesFailure());\r\n};\r\n\r\nexport const fetchProfilesFailure = (): FetchProfilesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE,\r\n});\r\n\r\nexport const fetchProfilesSuccess = (profiles: UserProfile[], canFetchMore: boolean): FetchProfilesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS,\r\n    profiles,\r\n    canFetchMore,\r\n});\r\n\r\nexport const refreshFetchedProfiles = (): FetchProfilesRefreshAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH,\r\n});\r\n\r\nexport const likeProfileSuccess = (\r\n    profileId: string,\r\n    matchStatus: LikeProfileResponseDto,\r\n): LikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n    matchStatus,\r\n});\r\n\r\nexport const likeProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/like\", \"POST\", {}, {toProfileId: profileId}, token);\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const matchStatus = payload as LikeProfileResponseDto;\r\n        dispatch(likeProfileSuccess(profileId, matchStatus));\r\n    }\r\n};\r\n\r\nexport const dislikeProfileSuccess = (profileId: string): DislikeProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const dislikeProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/decline\", \"POST\", {}, {toProfileId: profileId}, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(dislikeProfileSuccess(profileId));\r\n};\r\n\r\nexport const blockProfileSuccess = (profileId: string): BlockProfileSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS,\r\n    profileId,\r\n});\r\n\r\nexport const blockProfile = (profileId: string): AppThunk => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const response = await requestBackend(\"matching/block\", \"POST\", {}, {toProfileId: profileId}, token);\r\n    if (response.status === HttpStatusCode.OK) dispatch(blockProfileSuccess(profileId));\r\n};\r\n\r\nexport const beginFetchMyMatches = (): BeginFetchMyMatchesAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN,\r\n});\r\n\r\nexport const fetchMyMatchesFailure = (): FetchMyMatchesFailureAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE,\r\n});\r\n\r\nexport const fetchMyMatchesSuccess = (profiles: UserProfile[]): FetchMyMatchesSuccessAction => ({\r\n    type: MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS,\r\n    profiles,\r\n});\r\n\r\nexport const fetchMyMatches = (): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        auth: {token},\r\n        matching,\r\n    } = getState();\r\n    if (matching.fetchingMyMatches) return;\r\n\r\n    dispatch(beginFetchMyMatches());\r\n\r\n    const response = await requestBackend(\"matching\", \"GET\", {}, {}, token);\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const payload = (response as SuccessfulRequestResponse).data;\r\n        const profiles = (payload as ResponseProfileDto[]).map(convertDtoToProfile);\r\n        dispatch(fetchMyMatchesSuccess(profiles));\r\n    } else dispatch(fetchMyMatchesFailure());\r\n};\r\n","import {UserProfile} from \"../../model/user-profile\";\r\nimport {AUTH_ACTION_TYPES} from \"../auth/actions\";\r\nimport {initialPaginatedState, MatchingFiltersState, MatchingState} from \"../types\";\r\nimport {\r\n    MatchingAction,\r\n    MATCHING_ACTION_TYPES,\r\n    SetOfferFilterAction,\r\n    SetMatchingFiltersAction,\r\n    FetchProfilesSuccessAction,\r\n    DislikeProfileSuccessAction,\r\n    BlockProfileSuccessAction,\r\n    LikeProfileSuccessAction,\r\n    FetchMyMatchesSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const defaultMatchingFilters = (): MatchingFiltersState => ({\r\n    offers: {},\r\n    universities: [],\r\n    degrees: [],\r\n    languages: [],\r\n    types: [],\r\n});\r\n\r\nexport const initialState: MatchingState = {\r\n    filters: defaultMatchingFilters(),\r\n    fetchedProfiles: [],\r\n    profilesPagination: initialPaginatedState(),\r\n    myMatches: [],\r\n    fetchingMyMatches: false,\r\n};\r\n\r\nexport const matchingReducer = (state: MatchingState = initialState, action: MatchingAction): MatchingState => {\r\n    switch (action.type) {\r\n        case MATCHING_ACTION_TYPES.SET_OFFER_FILTER: {\r\n            const {offerId, value} = <SetOfferFilterAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    offers: {...state.filters.offers, [offerId]: value},\r\n                },\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.SET_FILTERS: {\r\n            const {filters} = <SetMatchingFiltersAction>action;\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_BEGIN: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: true}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_FAILURE: {\r\n            return {...state, profilesPagination: {...state.profilesPagination, fetching: false, canFetchMore: false}};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_SUCCESS: {\r\n            const {profiles, canFetchMore} = <FetchProfilesSuccessAction>action;\r\n            const pagination = state.profilesPagination;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.concat(profiles),\r\n                profilesPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_PROFILES_REFRESH: {\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_BEGIN: {\r\n            return {...state, fetchingMyMatches: true};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_FAILURE: {\r\n            return {...state, fetchingMyMatches: false};\r\n        }\r\n        case MATCHING_ACTION_TYPES.FETCH_MY_MATCHES_SUCCESS: {\r\n            const {profiles} = <FetchMyMatchesSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                myMatches: profiles,\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <LikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.DISLIKE_PROFILE_SUCCESS: {\r\n            const {profileId} = <DislikeProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case MATCHING_ACTION_TYPES.BLOCK_PROFILE_SUCCESS: {\r\n            const {profileId} = <BlockProfileSuccessAction>action;\r\n            return {\r\n                ...state,\r\n                fetchedProfiles: state.fetchedProfiles.filter((p: UserProfile) => p.id != profileId),\r\n            };\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                filters: defaultMatchingFilters(),\r\n                fetchedProfiles: [],\r\n                profilesPagination: initialPaginatedState(),\r\n                myMatches: [],\r\n                fetchingMyMatches: false,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import chatSocket from \"../../api/chat-socket\";\r\nimport {convertDtoToRoom} from \"../../api/converters\";\r\nimport {PaginatedRequestResponse, ResponseChatMessageDto, ResponseRoomDto} from \"../../api/dto\";\r\nimport {requestBackend} from \"../../api/utils\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\nimport {HttpStatusCode} from \"../../constants/http-status\";\r\nimport {ChatRoom, ChatRoomMessage} from \"../../model/chat-room\";\r\nimport {AppThunk} from \"../types\";\r\n\r\nexport enum MESSAGING_ACTION_TYPES {\r\n    FETCH_MATCH_ROOMS_BEGIN = \"MESSAGING/FETCH_MATCH_ROOMS_BEGIN\",\r\n    FETCH_MATCH_ROOMS_FAILURE = \"MESSAGING/FETCH_MATCH_ROOMS_FAILURE\",\r\n    FETCH_MATCH_ROOMS_SUCCESS = \"MESSAGING/FETCH_MATCH_ROOMS_SUCCESS\",\r\n    FETCH_MATCH_ROOMS_REFRESH = \"MESSAGING/FETCH_MATCH_ROOMS_REFRESH\",\r\n    CONNECT_TO_CHAT_BEGIN = \"MESSAGING/CONNECT_TO_CHAT_BEGIN\",\r\n    CONNECT_TO_CHAT_FAILURE = \"MESSAGING/CONNECT_TO_CHAT_FAILURE\",\r\n    CONNECT_TO_CHAT_SUCCESS = \"MESSAGING/CONNECT_TO_CHAT_SUCCESS\",\r\n    DISCONNECT_FROM_CHAT = \"MESSAGING/DISCONNECT_FROM_CHAT\",\r\n    JOIN_CHAT_ROOM_BEGIN = \"MESSAGING/JOIN_CHAT_ROOM_BEGIN\",\r\n    JOIN_CHAT_ROOM_FAILURE = \"MESSAGING/JOIN_CHAT_ROOM_FAILURE\",\r\n    JOIN_CHAT_ROOM_SUCCESS = \"MESSAGING/JOIN_CHAT_ROOM_SUCCESS\",\r\n    LEAVE_ROOM = \"MESSAGING/LEAVE_ROOM\",\r\n    SEND_MESSAGE_FAILURE = \"MESSAGING/SEND_MESSAGE_FAILURE\",\r\n    SEND_MESSAGE_SUCCESS = \"MESSAGING/SEND_MESSAGE_SUCCESS\",\r\n    RECEIVE_MESSAGE = \"MESSAGING/RECEIVE_MESSAGE\",\r\n}\r\n\r\nexport type FetchMatchRoomsBeginAction = {type: string};\r\nexport type FetchMatchRoomsFailureAction = {type: string};\r\nexport type FetchMatchRoomsSuccessAction = {\r\n    type: string;\r\n    rooms: ChatRoom[];\r\n    canFetchMore: boolean;\r\n};\r\nexport type FetchMatchRoomsRefreshAction = {type: string};\r\n\r\nexport type ConnectToChatBeginAction = {type: string};\r\nexport type ConnectToChatFailureAction = {type: string};\r\nexport type ConnectToChatSuccessAction = {type: string};\r\n\r\nexport type JoinChatRoomBeginAction = {type: string; room: ChatRoom};\r\nexport type JoinChatRoomFailureAction = {type: string};\r\nexport type JoinChatRoomSuccessAction = {type: string; room: ChatRoom};\r\nexport type LeaveChatRoomAction = {type: string};\r\n\r\nexport type DisconnectFromChatAction = {type: string};\r\n\r\nexport type SendMessageFailureAction = {type: string};\r\nexport type SendMessageSuccessAction = {type: string; message: ChatRoomMessage};\r\nexport type ReceiveChatMessageAction = {type: string; message: ResponseChatMessageDto};\r\n\r\nexport type MessagingAction =\r\n    | FetchMatchRoomsFailureAction\r\n    | FetchMatchRoomsSuccessAction\r\n    | FetchMatchRoomsRefreshAction\r\n    | ConnectToChatBeginAction\r\n    | ConnectToChatFailureAction\r\n    | ConnectToChatSuccessAction\r\n    | JoinChatRoomBeginAction\r\n    | JoinChatRoomFailureAction\r\n    | JoinChatRoomSuccessAction\r\n    | LeaveChatRoomAction\r\n    | DisconnectFromChatAction\r\n    | SendMessageFailureAction\r\n    | SendMessageSuccessAction\r\n    | ReceiveChatMessageAction;\r\n\r\nexport const beginFetchMatchRooms = (): FetchMatchRoomsBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN,\r\n});\r\n\r\nexport const fetchMatchRoomsFailure = (): FetchMatchRoomsFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE,\r\n});\r\n\r\nexport const fetchMatchRoomsSuccess = (rooms: ChatRoom[], canFetchMore: boolean): FetchMatchRoomsSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS,\r\n    rooms,\r\n    canFetchMore,\r\n});\r\n\r\nexport const fetchMatchRooms = (search?: string): AppThunk => async (dispatch, getState) => {\r\n    const state = getState();\r\n    const token = state.auth.token;\r\n    const pagination = state.messaging.matchRoomsPagination;\r\n\r\n    if (pagination.fetching || !pagination.canFetchMore) return;\r\n\r\n    dispatch(beginFetchMatchRooms());\r\n\r\n    const response = await requestBackend(\r\n        \"rooms\",\r\n        \"GET\",\r\n        {page: pagination.page, limit: ROOMS_FETCH_LIMIT, search},\r\n        {},\r\n        token,\r\n        true,\r\n    );\r\n\r\n    if (response.status === HttpStatusCode.OK) {\r\n        const paginated = response as PaginatedRequestResponse;\r\n        const rooms = (paginated.data as ResponseRoomDto[]).map(convertDtoToRoom);\r\n        const canFetchMore = paginated.meta.currentPage < paginated.meta.totalPages;\r\n        dispatch(fetchMatchRoomsSuccess(rooms, canFetchMore));\r\n    } else dispatch(fetchMatchRoomsFailure());\r\n};\r\n\r\nexport const refreshMatchRooms = (): FetchMatchRoomsRefreshAction => ({\r\n    type: MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH,\r\n});\r\n\r\nconst connectToChatBegin = (): ConnectToChatBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN,\r\n});\r\n\r\nconst connectToChatFailure = (): ConnectToChatFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE,\r\n});\r\n\r\nconst connectToChatSuccess = (): ConnectToChatSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS,\r\n});\r\n\r\nexport const connectToChat = (): AppThunk => async (dispatch, getState) => {\r\n    const {connected, connecting} = getState().messaging.socketState;\r\n    const authToken = getState().auth.token;\r\n\r\n    if (!connected && !connecting) {\r\n        if (authToken) {\r\n            dispatch(connectToChatBegin());\r\n            chatSocket.connect(\r\n                authToken,\r\n                {\r\n                    onMessageReceived: (m) => dispatch(receiveChatMessage(m)),\r\n                },\r\n                () => {\r\n                    dispatch(connectToChatSuccess());\r\n                },\r\n            );\r\n        } else dispatch(connectToChatFailure());\r\n    }\r\n};\r\n\r\nexport const disconnectFromChat = (): DisconnectFromChatAction => {\r\n    chatSocket.disconnect();\r\n    return {type: MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT};\r\n};\r\n\r\nconst joinChatRoomBegin = (room: ChatRoom): JoinChatRoomBeginAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN,\r\n    room,\r\n});\r\n\r\nconst joinChatRoomFailure = (): JoinChatRoomFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_FAILURE,\r\n});\r\n\r\nconst joinChatRoomSuccess = (room: ChatRoom): JoinChatRoomSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_SUCCESS,\r\n    room,\r\n});\r\n\r\nexport const joinChatRoom = (room: ChatRoom): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        socketState: {connected},\r\n        activeRoom,\r\n    } = getState().messaging;\r\n\r\n    if ((activeRoom && activeRoom.id != room.id) || !connected) dispatch(joinChatRoomFailure());\r\n    else {\r\n        dispatch(joinChatRoomBegin(room));\r\n        chatSocket.joinRoom(room);\r\n        // TODO Careful if we're already in a room\r\n        dispatch(joinChatRoomSuccess(room));\r\n    }\r\n};\r\n\r\nexport const leaveChatRoom = (room: ChatRoom): LeaveChatRoomAction => {\r\n    chatSocket.leaveRoom(room);\r\n    return {type: MESSAGING_ACTION_TYPES.LEAVE_ROOM};\r\n};\r\n\r\nconst sendChatMessageFailure = (): SendMessageFailureAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_FAILURE,\r\n});\r\n\r\nconst sendChatMessageSuccess = (message: ChatRoomMessage): SendMessageSuccessAction => ({\r\n    type: MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS,\r\n    message,\r\n});\r\n\r\nexport const sendChatMessage = (id: string, text: string, createdAt: Date): AppThunk => async (dispatch, getState) => {\r\n    const {\r\n        socketState: {connected},\r\n        activeRoom,\r\n        localChatUser,\r\n    } = getState().messaging;\r\n\r\n    if (connected && activeRoom && localChatUser) {\r\n        const message: ChatRoomMessage = {\r\n            _id: id,\r\n            createdAt,\r\n            user: localChatUser,\r\n            text,\r\n            sent: false,\r\n            pending: true,\r\n        };\r\n        dispatch(sendChatMessageSuccess(message));\r\n        chatSocket.sendMessage(activeRoom.id, id, text);\r\n    } else dispatch(sendChatMessageFailure());\r\n};\r\n\r\nexport const receiveChatMessage = (message: ResponseChatMessageDto): ReceiveChatMessageAction => ({\r\n    type: MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE,\r\n    message,\r\n});\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {Action, AnyAction} from \"redux\";\r\nimport {ThemeKey} from \"../types\";\r\nimport {\r\n    InterestDto,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n    RemoteValidationErrors,\r\n    SpokenLanguageDto,\r\n    TokenDto,\r\n} from \"../api/dto\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport {User} from \"../model/user\";\r\nimport {Degree, Gender, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport {ChatRoom, ChatRoomUser} from \"../model/chat-room\";\r\n\r\nexport type FailableActionReturn = {success: boolean; errors?: string[]};\r\nexport type FailableThunkAction = AppThunk<Promise<FailableActionReturn>>;\r\nexport type ValidatedActionReturn = {success: boolean; errors?: RemoteValidationErrors};\r\nexport type ValidatedThunkAction = AppThunk<Promise<ValidatedActionReturn>>;\r\n\r\nexport type PaginatedState = {page: number; canFetchMore: boolean; fetching: boolean};\r\nexport const initialPaginatedState = (): PaginatedState => ({page: 1, canFetchMore: true, fetching: false});\r\n\r\nexport type OnboardingState = {\r\n    firstname: string;\r\n    lastname: string;\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    role: Role | null;\r\n    degree: Degree | null;\r\n    staffRole: StaffRole | null;\r\n    languages: SpokenLanguageDto[];\r\n    interestIds: string[];\r\n    offerValues: {[key: string]: OfferValueDto};\r\n    educationFields: string[];\r\n};\r\n\r\nexport type AuthState = {\r\n    authenticated: boolean;\r\n    validated: boolean;\r\n    token: null | TokenDto;\r\n    registerEmail: string;\r\n    validatedEmail: string | null;\r\n    // This is available only in DEBUG_MODE on the staging server\r\n    verificationToken?: string;\r\n    onboarded: boolean;\r\n    onboarding: OnboardingState;\r\n};\r\n\r\nexport type SettingsState = {\r\n    theme: ThemeKey;\r\n    locale: SupportedLocale;\r\n    localizedLanguageItems: {value: string; label: string}[];\r\n};\r\n\r\nexport type ProfileState = {\r\n    user: User | null;\r\n    offers: OfferDto[];\r\n    offerIdToCategory: Map<string, OfferCategory>;\r\n    interests: InterestDto[];\r\n};\r\n\r\nexport type MatchingFiltersState = {\r\n    offers: {[key: string]: boolean};\r\n    universities: string[];\r\n    degrees: Degree[];\r\n    languages: string[];\r\n    types: Role[];\r\n};\r\n\r\nexport type MatchingState = {\r\n    filters: MatchingFiltersState;\r\n    fetchedProfiles: UserProfile[];\r\n    profilesPagination: PaginatedState;\r\n    myMatches: UserProfile[];\r\n    fetchingMyMatches: boolean;\r\n};\r\n\r\nexport type MessagingState = {\r\n    socketState: {connecting: boolean; connected: boolean};\r\n    matchRooms: ChatRoom[];\r\n    matchRoomsPagination: PaginatedState;\r\n    activeRoom: ChatRoom | null;\r\n    localChatUser: ChatRoomUser | null;\r\n};\r\n\r\nexport type AppState = {\r\n    auth: AuthState;\r\n    settings: SettingsState;\r\n    profile: ProfileState;\r\n    matching: MatchingState;\r\n    messaging: MessagingState;\r\n};\r\n\r\n// Shortcut type for redux-thunk actions (async actions)\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppState, unknown, Action<string>>;\r\n\r\n// Shortcut type for redux-thunk dispatch (cast dispatch function to this for async actions)\r\nexport type MyThunkDispatch = ThunkDispatch<AppState, void, AnyAction>;\r\n","import io from \"socket.io-client\";\r\nimport {BACKEND_URL} from \"../constants/config\";\r\nimport {ChatRoom} from \"../model/chat-room\";\r\nimport {ResponseChatMessageDto, TokenDto} from \"./dto\";\r\n\r\nconst SOCKET_LOCATION = `${BACKEND_URL}/chat`;\r\n\r\nexport type ChatSocketEventListeners = {\r\n    onMessageReceived: (m: ResponseChatMessageDto) => void;\r\n};\r\n\r\nclass ChatSocket {\r\n    private socket: SocketIOClient.Socket | null;\r\n    private connectCallbacks: (() => void)[];\r\n\r\n    constructor() {\r\n        this.socket = null;\r\n        this.connectCallbacks = [];\r\n    }\r\n\r\n    private registerListeners(listeners: ChatSocketEventListeners) {\r\n        if (!this.socket) return;\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            console.log(\"[ChatSocket] connected\");\r\n            this.connectCallbacks.forEach((f) => f());\r\n            this.connectCallbacks = [];\r\n        });\r\n\r\n        this.socket.on(\"connect_error\", () => {\r\n            console.log(\"[ChatSocket]\", \"Connect error\");\r\n        });\r\n\r\n        this.socket.on(\"connect_timeout\", () => {\r\n            console.log(\"[ChatSocket]\", \"Connect timeout\");\r\n        });\r\n\r\n        this.socket.on(\"close\", () => {\r\n            console.log(\"[ChatSocket] close\");\r\n        });\r\n\r\n        this.socket.on(\"connection\", () => {\r\n            console.log(\"[ChatSocket] connection\");\r\n        });\r\n\r\n        this.socket.on(\"reconnect_attempt\", () => {\r\n            console.log(\"[ChatSocket] Reconnect attempt\");\r\n        });\r\n\r\n        this.socket.on(\"reconnect_error\", () => {\r\n            console.log(\"[ChatSocket] Reconnect error\");\r\n        });\r\n\r\n        this.socket.on(\"error\", () => {\r\n            console.log(\"[ChatSocket]\", \"Error.\");\r\n        });\r\n\r\n        this.socket.on(\"exception\", (e: unknown) => {\r\n            console.log(\"[ChatSocket] <----\", \"Exception\", JSON.stringify(e));\r\n        });\r\n\r\n        this.socket.on(\"disconnect\", () => {\r\n            console.log(\"[ChatSocket] disconnected\");\r\n        });\r\n\r\n        this.socket.on(\"receiveMessage\", (m: ResponseChatMessageDto) => listeners.onMessageReceived(m));\r\n    }\r\n\r\n    connect(authToken: TokenDto, listeners: ChatSocketEventListeners, callback?: () => void) {\r\n        console.log(\"Connecting to\", SOCKET_LOCATION);\r\n\r\n        if (callback) this.connectCallbacks.push(callback);\r\n        if (this.socket) this.socket.connect();\r\n        else {\r\n            console.log(\"[ChatSocket] ----> Authenticating - token =\", authToken.accessToken);\r\n            this.socket = io(SOCKET_LOCATION, {query: {authorization: authToken.accessToken}});\r\n            this.registerListeners(listeners);\r\n        }\r\n    }\r\n\r\n    private emit(msg: string, payload: unknown) {\r\n        console.log(`[ChatSocket] ----> '${msg}' - payload: ${JSON.stringify(payload)}`);\r\n        this.socket?.emit(msg, payload);\r\n    }\r\n\r\n    sendMessage(roomId: string, id: string, text: string) {\r\n        this.emit(\"sendMessage\", {roomId, id, text});\r\n    }\r\n\r\n    joinRoom(room: ChatRoom) {\r\n        this.emit(\"joinRoom\", {roomId: room.id});\r\n    }\r\n\r\n    leaveRoom(room: ChatRoom) {\r\n        this.emit(\"leaveRoom\", {roomId: room.id});\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.socket) this.socket.disconnect();\r\n    }\r\n}\r\n\r\nexport default new ChatSocket();\r\n","import {convertDtoToChatMessage} from \"../../api/converters\";\r\nimport {ChatRoom, ChatRoomMessage, ChatRoomUser} from \"../../model/chat-room\";\r\nimport {User} from \"../../model/user\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"../auth/actions\";\r\nimport {FetchUserSuccessAction, PROFILE_ACTION_TYPES} from \"../profile/actions\";\r\nimport {MessagingState, initialPaginatedState} from \"../types\";\r\nimport {\r\n    FetchMatchRoomsSuccessAction,\r\n    JoinChatRoomBeginAction,\r\n    MessagingAction,\r\n    MESSAGING_ACTION_TYPES,\r\n    ReceiveChatMessageAction,\r\n    SendMessageSuccessAction,\r\n} from \"./actions\";\r\n\r\nexport const initialState: MessagingState = {\r\n    matchRooms: [],\r\n    matchRoomsPagination: initialPaginatedState(),\r\n    socketState: {connected: false, connecting: false},\r\n    activeRoom: null,\r\n    localChatUser: null,\r\n};\r\n\r\nfunction toLocalChatUser(user: User): ChatRoomUser | null {\r\n    if (user.profile) {\r\n        return {\r\n            _id: user.id,\r\n            name: `${user.profile.firstName} ${user.profile.lastName}`,\r\n            avatar: user.profile.avatarUrl || \"\",\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const messagingReducer = (state: MessagingState = initialState, action: MessagingAction): MessagingState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(user)};\r\n        }\r\n        case PROFILE_ACTION_TYPES.FETCH_USER_SUCCESS: {\r\n            const {user} = action as FetchUserSuccessAction;\r\n            return {...state, localChatUser: toLocalChatUser(user)};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_BEGIN: {\r\n            return {...state, matchRoomsPagination: {...state.matchRoomsPagination, fetching: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                matchRoomsPagination: {...state.matchRoomsPagination, fetching: false, canFetchMore: false},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_SUCCESS: {\r\n            const {rooms, canFetchMore} = <FetchMatchRoomsSuccessAction>action;\r\n            const pagination = state.matchRoomsPagination;\r\n            return {\r\n                ...state,\r\n                matchRooms: state.matchRooms.concat(rooms),\r\n                matchRoomsPagination: {...pagination, fetching: false, page: pagination.page + 1, canFetchMore},\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.FETCH_MATCH_ROOMS_REFRESH: {\r\n            return {\r\n                ...state,\r\n                matchRooms: [],\r\n                matchRoomsPagination: initialPaginatedState(),\r\n            };\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_BEGIN: {\r\n            return {...state, socketState: {connected: false, connecting: true}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_FAILURE: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.CONNECT_TO_CHAT_SUCCESS: {\r\n            return {...state, socketState: {connected: true, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.DISCONNECT_FROM_CHAT: {\r\n            return {...state, socketState: {connected: false, connecting: false}};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN: {\r\n            const {room} = action as JoinChatRoomBeginAction;\r\n            return {...state, activeRoom: room};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.LEAVE_ROOM: {\r\n            return {...state, activeRoom: null};\r\n        }\r\n        case MESSAGING_ACTION_TYPES.SEND_MESSAGE_SUCCESS: {\r\n            const {message} = action as SendMessageSuccessAction;\r\n            if (state.activeRoom) {\r\n                //return updateRoom(state, {...state.activeRoom, messages: [message].concat(state.activeRoom.messages)});\r\n                state.activeRoom.messages.unshift(message);\r\n                return updateRoom(state, {...state.activeRoom});\r\n            }\r\n            return state;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.RECEIVE_MESSAGE: {\r\n            const {message} = action as ReceiveChatMessageAction;\r\n\r\n            let room = state.matchRooms.find((r: ChatRoom) => r.id === message.roomId);\r\n            if (room) {\r\n                room = {...room};\r\n                // Start by checking if this is an existing message (e.g. our own message)\r\n                const existingMessage = room.messages.find((m: ChatRoomMessage) => m._id === message.id);\r\n                if (existingMessage) {\r\n                    existingMessage.sent = true;\r\n                    existingMessage.text = message.text;\r\n                    room.lastMessage = existingMessage;\r\n                } else {\r\n                    const user = room.users.find((u: ChatRoomUser) => u._id == message.senderId);\r\n                    if (user) {\r\n                        const msg = convertDtoToChatMessage(user, message);\r\n                        room.messages = [msg].concat(room.messages);\r\n                        room.lastMessage = msg;\r\n                    }\r\n                }\r\n                return updateRoom(state, room);\r\n            }\r\n            return state;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT: {\r\n            // TODO disconnect from chat\r\n            return {...state, activeRoom: null, matchRooms: [], matchRoomsPagination: initialPaginatedState()};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction updateRoom(state: MessagingState, room: ChatRoom): MessagingState {\r\n    const otherRooms = state.matchRooms.filter((r: ChatRoom) => r.id !== room.id);\r\n    return {\r\n        ...state,\r\n        matchRooms: [room].concat(otherRooms),\r\n        activeRoom: state.activeRoom && state.activeRoom.id == room.id ? room : state.activeRoom,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {NavigationContainerRef} from \"@react-navigation/native\";\r\nimport {NavigatorRoute} from \"./types\";\r\nimport {Platform} from \"react-native\";\r\nimport {APP_SCHEME} from \"../constants/config\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Store a ref to the root navigator\r\nexport const rootNavigationRef = React.createRef<NavigationContainerRef>();\r\n\r\nexport function rootNavigate(route: NavigatorRoute): void {\r\n    rootNavigationRef.current?.navigate(route as string);\r\n}\r\n\r\nexport function attemptRedirectToApp(path: string, fallbackRoute: NavigatorRoute): void {\r\n    const fallback = () => rootNavigate(fallbackRoute);\r\n\r\n    if (Platform.OS == \"web\") {\r\n        const link = `${APP_SCHEME}://${path}`;\r\n        window.location.replace(link);\r\n\r\n        console.log(`window.location.replace(${link})`);\r\n        // TODO fallback after a timeout ?\r\n        setTimeout(fallback, 5000);\r\n    } else fallback();\r\n}\r\n\r\nexport function screenTitle(route: NavigatorRoute): string {\r\n    return i18n.t(`screenTitles.${route}`) + i18n.t(\"screenTitles.suffix\");\r\n}\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {LikeProfileSuccessAction, MATCHING_ACTION_TYPES} from \"./matching/actions\";\r\nimport {MESSAGING_ACTION_TYPES} from \"./messaging/actions\";\r\nimport {PROFILE_ACTION_TYPES} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const navigationMiddleware: Middleware<unknown, AppState> = (/*store: MiddlewareAPI<Dispatch, AppState>*/) => (\r\n    next: Dispatch<AnyAction>,\r\n) => (action: AnyAction) => {\r\n    // TEMP action printing\r\n    console.log(action.type);\r\n\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.PROFILE_CREATE_SUCCESS: {\r\n            rootNavigate(\"OnboardingSuccessfulScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {user} = action as LogInSuccessAction;\r\n            rootNavigate(user.onboarded ? \"MainScreen\" : \"OnboardingScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.REGISTER_SUCCESS: {\r\n            rootNavigate(\"ValidationEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.VALIDATE_ACCOUNT_SUCCESS: {\r\n            // Let the user click\r\n            // attemptRedirectToApp(\"login\", \"TabSignin\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.FORGOT_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ForgotPasswordEmailSentScreen\");\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.RESET_PASSWORD_SUCCESS: {\r\n            rootNavigate(\"ResetPasswordSuccessScreen\");\r\n            return;\r\n        }\r\n        case MATCHING_ACTION_TYPES.LIKE_PROFILE_SUCCESS: {\r\n            const {matchStatus} = action as LikeProfileSuccessAction;\r\n            if (matchStatus == \"matched\") rootNavigate(\"MatchSuccessScreen\");\r\n            break;\r\n        }\r\n        case MESSAGING_ACTION_TYPES.JOIN_CHAT_ROOM_BEGIN: {\r\n            rootNavigate(\"ChatScreen\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth/reducer\";\r\nimport {settingsReducer} from \"./settings/reducer\";\r\nimport {profileReducer} from \"./profile/reducer\";\r\nimport {matchingReducer} from \"./matching/reducer\";\r\nimport {messagingReducer} from \"./messaging/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {navigationMiddleware} from \"./navigation-middleware\";\r\nimport {authStorageMiddleware} from \"./auth-storage-middleware\";\r\nimport {staticStorageMiddleware} from \"./static-storage-middleware\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    settings: settingsReducer,\r\n    profile: profileReducer,\r\n    matching: matchingReducer,\r\n    messaging: messagingReducer,\r\n});\r\n\r\nconst combinedMiddleware = applyMiddleware(thunk, authStorageMiddleware, staticStorageMiddleware, navigationMiddleware);\r\n\r\nexport default createStore(rootReducer, combinedMiddleware);\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {AppState} from \"./types\";\r\nimport {AUTH_ACTION_TYPES, LogInSuccessAction} from \"./auth/actions\";\r\nimport {discardAuthInformation, storeAuthInformation} from \"./persistent-storage/auth\";\r\n\r\nexport const authStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case AUTH_ACTION_TYPES.LOG_IN_SUCCESS: {\r\n            const {token, user, usingCachedCredentials} = action as LogInSuccessAction;\r\n            // Store the authentication info only if we didn't use it already to login (in that case it is already stored)\r\n            if (!usingCachedCredentials) storeAuthInformation(user.email, token);\r\n            break;\r\n        }\r\n        case AUTH_ACTION_TYPES.LOG_OUT:\r\n        case AUTH_ACTION_TYPES.LOG_IN_FAILURE: {\r\n            discardAuthInformation();\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {AnyAction, Middleware, Dispatch} from \"redux\";\r\nimport {storeStaticData} from \"./persistent-storage/static\";\r\nimport {\r\n    LoadProfileInterestsSuccessAction,\r\n    LoadProfileOffersSuccessAction,\r\n    PROFILE_ACTION_TYPES,\r\n} from \"./profile/actions\";\r\nimport {AppState} from \"./types\";\r\n\r\nexport const staticStorageMiddleware: Middleware<unknown, AppState> = () => (next: Dispatch<AnyAction>) => (\r\n    action: AnyAction,\r\n) => {\r\n    switch (action.type) {\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_INTERESTS_SUCCESS: {\r\n            const {interests, fromCache} = action as LoadProfileInterestsSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the interests cache.\");\r\n                storeStaticData(\"interests\", interests);\r\n            }\r\n            break;\r\n        }\r\n        case PROFILE_ACTION_TYPES.LOAD_PROFILE_OFFERS_SUCCESS: {\r\n            const {offers, fromCache} = action as LoadProfileOffersSuccessAction;\r\n            if (!fromCache) {\r\n                console.log(\"Updating the offers cache.\");\r\n                storeStaticData(\"offers\", offers);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    next(action);\r\n};\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport * as React from \"react\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {attemptLoginFromCache} from \"../state/auth/actions\";\r\nimport {loadProfileInterests, loadProfileOffers} from \"../state/profile/actions\";\r\nimport store from \"../state/store\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\n\r\nlet loggedInFromCache = false;\r\n\r\nexport default function useCachedResources(): {isLoadingComplete: boolean; initialRoute?: keyof RootNavigatorScreens} {\r\n    const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n    // Load any resources or data that we need prior to rendering the app\r\n    React.useEffect(() => {\r\n        async function loadResourcesAndDataAsync() {\r\n            try {\r\n                SplashScreen.preventAutoHideAsync();\r\n\r\n                const dispatch = store.dispatch as MyThunkDispatch;\r\n\r\n                // TODO Improve data loading\r\n                //  - show something if the backend couldn't be reached\r\n\r\n                // Load static data\r\n                await dispatch(loadProfileOffers());\r\n                await dispatch(loadProfileInterests());\r\n\r\n                // Load fonts\r\n                await Font.loadAsync({\r\n                    ...FontAwesome.font,\r\n                    //\"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n                });\r\n\r\n                // Attempt to authenticate using cached data\r\n                loggedInFromCache = await dispatch(attemptLoginFromCache());\r\n            } catch (e) {\r\n                // We might want to provide this error information to an error reporting service\r\n                console.warn(e);\r\n            } finally {\r\n                setLoadingComplete(true);\r\n                SplashScreen.hideAsync();\r\n            }\r\n        }\r\n\r\n        loadResourcesAndDataAsync();\r\n    }, []);\r\n\r\n    let initialRoute: undefined | keyof RootNavigatorScreens = undefined;\r\n    if (loggedInFromCache) initialRoute = \"MainScreen\";\r\n\r\n    return {isLoadingComplete, initialRoute};\r\n}\r\n","import {ThemeKey} from \"../types\";\r\n\r\nconst tintColorLight = \"#2f95dc\";\r\nconst tintColorDark = \"#fff\";\r\n\r\nconst lightThemeText = \"#000\";\r\nconst darkThemeText = \"#fff\";\r\n\r\nexport default {\r\n    light: {\r\n        id: \"light\" as ThemeKey,\r\n        text: lightThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#666\",\r\n        textInverted: \"#fff\",\r\n        background: \"#fafafa\",\r\n        cardBackground: \"#ffffff\", //\"#f7f7f7\",\r\n        accent: \"#003da5\", // Pantone 293c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#009ace\", // Pantone 801c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorLight,\r\n        error: \"#ff4a6a\",\r\n        actionNeutral: \"#555555\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorLight,\r\n        componentBorder: \"#eee\",\r\n    },\r\n    dark: {\r\n        id: \"dark\" as ThemeKey,\r\n        text: darkThemeText,\r\n        textWhite: darkThemeText,\r\n        textBlack: lightThemeText,\r\n        textLight: \"#ccc\",\r\n        textInverted: \"#111\",\r\n        background: \"#333\",\r\n        cardBackground: \"#3d3d3d\",\r\n        accent: \"#009ace\", // Pantone 801c\r\n        accentSlight: \"#ccd8ea\",\r\n        accentSecondary: \"#003da5\", // Pantone 293c\r\n        accentTernary: \"#fbe122\", // Pantone 207c\r\n        tint: tintColorDark,\r\n        error: \"#f9819d\",\r\n        actionNeutral: \"#777\",\r\n        okay: \"#00b16a\",\r\n        warn: \"#eecc00\",\r\n        tabIconDefault: \"#ccc\",\r\n        tabIconSelected: tintColorDark,\r\n        componentBorder: \"#555\",\r\n    },\r\n};\r\n","import {ImageStyle, TextStyle, ViewStyle} from \"react-native\";\r\nimport themes from \"../constants/themes\";\r\nimport {Theme} from \"../types\";\r\n\r\ntype NamedStyles<T> = {[P in keyof T]: ViewStyle | TextStyle | ImageStyle};\r\ntype ThemedStyles<T extends NamedStyles<T>> = (theme: Theme) => T;\r\n\r\n/** Tool to pre-generate stylesheet variations for each theme.  */\r\nexport function preTheme<T extends NamedStyles<T>>(generator: ThemedStyles<T>): ThemedStyles<T> {\r\n    // Pre-generate the styles in a key:value map\r\n    const styles: {[key: string]: T} = {};\r\n    Object.values(themes).forEach((theme: Theme) => (styles[theme.id] = generator(theme)));\r\n    // Wrap the map as a function\r\n    return (theme: Theme) => styles[theme.id];\r\n}\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\nexport type NotFoundScreenProps = StackScreenProps<RootNavigatorScreens, \"NotFoundScreen\"> & ThemeProps;\r\n\r\nclass NotFoundScreen extends React.Component<NotFoundScreenProps> {\r\n    render(): JSX.Element {\r\n        const {navigation, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"pageNotFound\")}</Text>\r\n                <Text style={styles.subtitle}>{i18n.t(\"pageDoesntExist\")}</Text>\r\n                <TouchableOpacity onPress={() => navigation.replace(\"LoginScreen\")} style={styles.link}>\r\n                    <Text style={styles.linkText}>{i18n.t(\"goHome\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 64,\r\n            fontWeight: \"100\",\r\n        },\r\n        subtitle: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginTop: 50,\r\n        },\r\n        link: {\r\n            paddingVertical: 10,\r\n        },\r\n        linkText: {\r\n            fontSize: 14,\r\n            color: \"#2e78b7\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NotFoundScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, ActivityIndicator} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {requestValidateAccount} from \"../state/auth/actions\";\r\nimport {attemptRedirectToApp} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {DEBUG_MODE, Environment, ENVIRONMENT} from \"../constants/config\";\r\nimport store from \"../state/store\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validated: state.auth.validated,\r\n}));\r\n\r\ntype ValidateEmailScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ValidateEmailScreen extends React.Component<ValidateEmailScreenProps> {\r\n    componentDidMount() {\r\n        const dispatch = this.props.dispatch as MyThunkDispatch;\r\n\r\n        // In DEBUG_MODE / staging environment, attempt to use a verification token sent by the server\r\n        const verificationToken = store.getState().auth.verificationToken;\r\n        if (DEBUG_MODE && ENVIRONMENT == Environment.Staging && verificationToken) {\r\n            dispatch(requestValidateAccount(verificationToken));\r\n        } else if (this.props.route.params) {\r\n            // Attempt to extract a validation token out of the URL\r\n            const params = this.props.route.params as {[key: string]: string};\r\n            const {token} = params;\r\n            if (token) dispatch(requestValidateAccount(token));\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, validated} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    {!validated && (\r\n                        <>\r\n                            <Text style={styles.title}>{i18n.t(\"emailValidation.validating\")}</Text>\r\n                            <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                        </>\r\n                    )}\r\n                    {validated && (\r\n                        <>\r\n                            <Text style={styles.successText}>\r\n                                {i18n.t(\"emailValidation.success\")[0]}\r\n                                <Text\r\n                                    onPress={() => attemptRedirectToApp(\"login\", \"TabSignin\")}\r\n                                    style={{color: theme.accent}}\r\n                                >\r\n                                    {i18n.t(\"emailValidation.success\")[1]}\r\n                                </Text>\r\n                            </Text>\r\n                        </>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidateEmailScreen));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet, TouchableOpacity} from \"react-native\";\r\nimport {AppState} from \"../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport {DEBUG_MODE} from \"../constants/config\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    registerEmail: state.auth.registerEmail,\r\n}));\r\n\r\ntype ValidationEmailSentScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass ValidationEmailSentScreen extends React.Component<ValidationEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {registerEmail, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>\r\n                        To validate your account, click the link in the email we just sent to\r\n                    </Text>\r\n                    <Text style={styles.email}>{registerEmail}</Text>\r\n\r\n                    {DEBUG_MODE && (\r\n                        <TouchableOpacity onPress={() => rootNavigate(\"ValidateEmailScreen\")}>\r\n                            <Text style={{marginVertical: 30, textAlign: \"center\", fontSize: 16, color: \"blue\"}}>\r\n                                debug: click here\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n        email: {\r\n            fontSize: 16,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ValidationEmailSentScreen));\r\n","import {LinkingOptions} from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\nimport {APP_SCHEME, CLIENT_URL} from \"../constants/config\";\r\n\r\nconst config: LinkingOptions = {\r\n    prefixes: [Linking.makeUrl(\"/\"), CLIENT_URL, `${APP_SCHEME}://`],\r\n    config: {\r\n        screens: {\r\n            LoginScreen: {\r\n                screens: {\r\n                    TabSignin: {\r\n                        screens: {\r\n                            LoginForm: \"login\",\r\n                            ForgotPassword: \"forgot-password\",\r\n                        },\r\n                    },\r\n                    TabSignup: \"signup\",\r\n                },\r\n            },\r\n            ForgotPasswordEmailSentScreen: \"password-email-sent\",\r\n            ValidationEmailSentScreen: \"validation-sent\",\r\n            MainScreen: {\r\n                screens: {\r\n                    TabHome: {\r\n                        screens: {\r\n                            TabHomeScreen: \"home\",\r\n                        },\r\n                    },\r\n                    TabMatching: {\r\n                        screens: {\r\n                            TabMatchingScreen: \"match\",\r\n                            MAtchFilteringScren: \"match/filters\",\r\n                        },\r\n                    },\r\n                    TabMessaging: {\r\n                        screens: {\r\n                            IndividualMessagingTab: \"messaging\",\r\n                            GroupMessagingTab: \"messaging/group\",\r\n                        },\r\n                    },\r\n                    TabProfile: {\r\n                        screens: {\r\n                            TabProfileScreen: \"profile\",\r\n                        },\r\n                    },\r\n                    TabNotifications: {\r\n                        screens: {\r\n                            TabNotificationsScreen: \"notifications\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            ValidateEmailSentScreen: \"validate/success\",\r\n            ValidateEmailScreen: \"validate/:token\",\r\n            ResetPasswordScreen: \"reset-password/:token\",\r\n            ResetPasswordSuccessScreen: \"password-reset\",\r\n            ChatScreen: \"chat\",\r\n            OnboardingScreen: {\r\n                screens: {\r\n                    OnboardingNameScreen: \"onboarding/name\",\r\n                    OnboardingPersonalInfoScreen: \"onboarding/info\",\r\n                    OnboardingLanguageScreen: \"onboarding/language\",\r\n                    OnboardingInterestsScreen: \"onboarding/interests\",\r\n                    OnboardingRoleScreen: \"onboarding/role/1\",\r\n                    OnboardingRoleSpecificScreen: \"onboarding/role/2\",\r\n                    OnboardingOffersScreen1: \"onboarding/offers/1\",\r\n                    OnboardingOffersScreen2: \"onboarding/offers/2\",\r\n                    OnboardingOffersScreen3: \"onboarding/offers/3\",\r\n                    OnboardingTosScreen: \"onboarding/tos\",\r\n                    OnboardingPrivacyScreen: \"onboarding/privacy\",\r\n                },\r\n            },\r\n            OnboardingSuccessfulScreen: \"onboarding/success\",\r\n            MatchSuccessScreen: \"match/success\",\r\n            NotFoundScreen: \"*\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport {MaterialTopTabBarProps} from \"@react-navigation/material-top-tabs\";\r\nimport {View, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\ntype LoginTabBarProps = ThemeProps & MaterialTopTabBarProps;\r\n\r\nclass TabBarComponent extends React.Component<LoginTabBarProps> {\r\n    onPress(route: {name: string; key: string}, index: number): void {\r\n        const {navigation} = this.props;\r\n        const isFocused = index == this.props.state.index;\r\n\r\n        const event = navigation.emit({\r\n            type: \"tabPress\",\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n        });\r\n\r\n        if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n        }\r\n    }\r\n\r\n    onLongPress(route: {name: string; key: string}): void {\r\n        const {navigation} = this.props;\r\n        navigation.emit({\r\n            type: \"tabLongPress\",\r\n            target: route.key,\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {state, descriptors, position, theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        // <Image source={waveImage} resizeMode=\"contain\" style={styles.waveImageStyle} />\r\n        return (\r\n            <View style={styles.tabBarWrapper}>\r\n                {/*<Text style={styles.appTitle}>SEA-EU Around</Text>*/}\r\n                <View style={styles.tabBar}>\r\n                    {state.routes.map((route, index) => {\r\n                        const {options} = descriptors[route.key];\r\n                        const label = i18n.t(route.name.toLowerCase());\r\n                        const isFocused = state.index === index;\r\n\r\n                        const inputRange = state.routes.map((_, i) => i);\r\n                        const opacity = Animated.interpolate(position, {\r\n                            inputRange,\r\n                            outputRange: inputRange.map((i) => (i === index ? 0.15 : 0)),\r\n                        });\r\n\r\n                        return (\r\n                            <View key={index} style={styles.tabButton}>\r\n                                <Animated.View style={[styles.tabButtonBg, {opacity}]} />\r\n                                <TouchableOpacity\r\n                                    accessibilityRole=\"button\"\r\n                                    accessibilityLabel={options.tabBarAccessibilityLabel}\r\n                                    testID={options.tabBarTestID}\r\n                                    onPress={() => this.onPress(route, index)}\r\n                                    onLongPress={() => this.onLongPress(route)}\r\n                                >\r\n                                    <Text style={[styles.tabButtonText, isFocused ? styles.tabButtonTextFocused : {}]}>\r\n                                        {label}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        tabBarWrapper: {\r\n            height: \"30%\",\r\n            backgroundColor: theme.accent,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 6,\r\n            },\r\n            shadowOpacity: 0.37,\r\n            shadowRadius: 7.49,\r\n            elevation: 12,\r\n        },\r\n        tabBar: {\r\n            width: \"100%\",\r\n            maxWidth: 420,\r\n            height: 48,\r\n            flexDirection: \"row\",\r\n        },\r\n        tabButton: {\r\n            flex: 1,\r\n        },\r\n        tabButtonBg: {\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        tabButtonText: {\r\n            fontSize: 18,\r\n            lineHeight: 48,\r\n            letterSpacing: 1,\r\n            textTransform: \"capitalize\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n        },\r\n        tabButtonTextFocused: {\r\n            fontWeight: \"bold\",\r\n        },\r\n        waveImageStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            padding: 0,\r\n            margin: 0,\r\n            maxWidth: \"100%\",\r\n            width: \"100%\",\r\n            height: 200,\r\n        },\r\n        /*appTitle: {\r\n            fontSize: 16,\r\n            color: theme.textInverted,\r\n            letterSpacing: 2,\r\n            marginBottom: 70,\r\n            ...styleTextThin,\r\n        },*/\r\n    });\r\n});\r\n\r\nexport default withTheme(TabBarComponent);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type InputLabelProps = ThemeProps & TextProps;\r\n\r\nclass InputLabel extends React.Component<InputLabelProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {this.props.children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputLabel);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {localizeError} from \"../api/errors\";\r\n\r\n// Component props\r\nexport type InputErrorTextProps = ThemeProps & TextProps & {error: string | string[] | null | undefined};\r\n\r\nclass InputErrorText extends React.Component<InputErrorTextProps> {\r\n    render(): JSX.Element {\r\n        const {theme, style, error, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const errorStr: string | null = error ? (typeof error === \"string\" ? error : error[0]) : null;\r\n\r\n        return (\r\n            <Text {...otherProps} style={[styles.text, style]}>\r\n                {errorStr ? localizeError(errorStr) : \"\"}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(InputErrorText);\r\n","import React from \"react\";\r\nimport {TextStyle, StyleProp, View, TextInputProps} from \"react-native\";\r\nimport {TextInput} from \"react-native-gesture-handler\";\r\nimport InputLabel from \"./InputLabel\";\r\nimport InputErrorText from \"./InputErrorText\";\r\n\r\nexport type ValidatedTextInputProps = {\r\n    value: string;\r\n    showErrorText?: boolean;\r\n    error?: string;\r\n    untouched?: boolean;\r\n    label?: string;\r\n    style?: StyleProp<TextStyle>;\r\n    wrapperStyle?: StyleProp<TextStyle>;\r\n    errorStyle?: StyleProp<TextStyle>;\r\n    validStyle?: StyleProp<TextStyle>;\r\n    focusedStyle?: StyleProp<TextStyle>;\r\n    errorTextStyle?: StyleProp<TextStyle>;\r\n    labelStyle?: StyleProp<TextStyle>;\r\n} & Partial<TextInputProps>;\r\n\r\ntype ValidatedTextInputState = {\r\n    focused: boolean;\r\n};\r\n\r\n/**\r\n * An improved TextInput that supports better styling (including specific focused style) and displays validation errors.\r\n */\r\nexport class ValidatedTextInput extends React.Component<ValidatedTextInputProps, ValidatedTextInputState> {\r\n    static defaultProps = {\r\n        untouched: false,\r\n        style: [],\r\n        wrapperStyle: [],\r\n        errorStyle: [],\r\n        validStyle: [],\r\n        focusedStyle: [],\r\n        errorTextStyle: [],\r\n        labelStyle: [],\r\n    };\r\n\r\n    constructor(props: ValidatedTextInputProps) {\r\n        super(props);\r\n        this.state = {focused: false} as ValidatedTextInputState;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            showErrorText,\r\n            style,\r\n            wrapperStyle,\r\n            error,\r\n            value,\r\n            label,\r\n            untouched,\r\n            errorStyle,\r\n            validStyle,\r\n            focusedStyle,\r\n            errorTextStyle,\r\n            labelStyle,\r\n            onBlur,\r\n            onFocus,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        const showError = showErrorText && !untouched && error;\r\n\r\n        return (\r\n            <View\r\n                style={[\r\n                    wrapperStyle,\r\n                    {width: \"100%\", flexDirection: \"column\", position: \"relative\", paddingBottom: showError ? 0 : 6},\r\n                ]}\r\n            >\r\n                {label && <InputLabel style={labelStyle}>{label}</InputLabel>}\r\n                <TextInput\r\n                    style={[\r\n                        style,\r\n                        this.state.focused ? focusedStyle : {},\r\n                        untouched ? {} : error ? errorStyle : value.length > 0 ? validStyle : {},\r\n                    ]}\r\n                    onBlur={(e) => {\r\n                        if (onBlur) onBlur(e);\r\n                        this.setState({focused: false});\r\n                    }}\r\n                    onFocus={(e) => {\r\n                        if (onFocus) onFocus(e);\r\n                        this.setState({focused: true});\r\n                    }}\r\n                    value={value}\r\n                    {...otherProps}\r\n                />\r\n                {showError && <InputErrorText style={errorTextStyle} error={error} />}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {TextInputProps} from \"react-native\";\r\nimport {ValidatedTextInput, ValidatedTextInputProps} from \"./ValidatedTextInput\";\r\n\r\n// Component props\r\nexport type FormTextInputProps = {\r\n    field: string;\r\n    touched: boolean | undefined;\r\n    showErrorText?: boolean;\r\n    handleChange<T = string | React.ChangeEvent<unknown>>(\r\n        field: T,\r\n    ): T extends React.ChangeEvent<unknown> ? void : (e: string | React.ChangeEvent<unknown>) => void;\r\n    handleBlur<T = string | unknown>(fieldOrEvent: T): T extends string ? (e: unknown) => void : void;\r\n    isEmail?: boolean;\r\n    isPassword?: boolean;\r\n} & ValidatedTextInputProps;\r\n\r\nconst emailProps: Partial<TextInputProps> = {\r\n    keyboardType: \"email-address\",\r\n    autoCompleteType: \"email\",\r\n    textContentType: \"emailAddress\",\r\n};\r\nconst passwordProps: Partial<TextInputProps> = {\r\n    secureTextEntry: true,\r\n    autoCompleteType: \"password\",\r\n    textContentType: \"password\",\r\n};\r\n\r\n/**\r\n * An improved TextInput for less verbose Formik usage.\r\n */\r\nexport class FormTextInput extends React.Component<FormTextInputProps> {\r\n    static defaultProps = {\r\n        showErrorText: true,\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        handleChange: (): void => {},\r\n        handleBlur: (): void => {},\r\n        /* eslint-ensable @typescript-eslint/no-empty-function */\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            field,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            error,\r\n            onBlur,\r\n            onChangeText,\r\n            isEmail,\r\n            isPassword,\r\n            ...otherProps\r\n        } = this.props;\r\n\r\n        return (\r\n            <ValidatedTextInput\r\n                error={touched ? error : undefined}\r\n                untouched={!touched}\r\n                onChangeText={(value: string) => {\r\n                    if (onChangeText) onChangeText(value);\r\n                    handleChange(field)(value);\r\n                }}\r\n                onBlur={(e) => {\r\n                    if (onBlur) onBlur(e);\r\n                    handleBlur(this.props.field)(e);\r\n                }}\r\n                {...(isEmail ? emailProps : {})}\r\n                {...(isPassword ? passwordProps : {})}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {StyleSheet, Platform, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {FormTextInputProps} from \"../components/FormTextInput\";\r\nimport {FormCheckBoxProps} from \"../components/FormCheckBox\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const formStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        inputErrorText: {\r\n            fontSize: 12,\r\n            marginTop: 2,\r\n            marginBottom: -12, // prevents an offset from appearing when there is an error\r\n        },\r\n        inputRow: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n        },\r\n        actionRow: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            marginTop: 25,\r\n        },\r\n        buttonMajor: {\r\n            justifyContent: \"center\",\r\n            height: 55,\r\n            borderRadius: 5,\r\n\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n        },\r\n        buttonMajorText: {\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n            fontSize: 16,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport function getLoginTextInputsStyleProps(theme: Theme, wrapperVerticalMargin = 0): Partial<FormTextInputProps> {\r\n    const focusedStyle = Platform.OS === \"web\" ? ({outline: \"none\"} as TextStyle) : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: wrapperVerticalMargin,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            paddingHorizontal: 20,\r\n            borderRadius: 5,\r\n            borderWidth: 0,\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        placeholderTextColor: \"#222\",\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n\r\nexport function getLoginCheckBoxStyleProps(theme: Theme): Partial<FormCheckBoxProps> {\r\n    const commonStyle = StyleSheet.create({\r\n        checkboxWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 5,\r\n        },\r\n        checkboxLabel: {\r\n            fontSize: 14,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.checkboxWrapper,\r\n        labelStyle: [commonStyle.checkboxLabel, {color: theme.text}],\r\n    };\r\n}\r\n\r\nexport const loginTabsStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            padding: 0,\r\n            backgroundColor: theme.background,\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"70%\",\r\n            maxWidth: 400,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n        },\r\n        versionInfoContainer: {\r\n            position: \"absolute\",\r\n            flexDirection: \"column\",\r\n            bottom: 5,\r\n            left: 5,\r\n        },\r\n        versionText: {color: theme.textLight},\r\n        versionDisclaimerContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        versionDisclaimerIcon: {color: theme.error},\r\n        debugContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        debugTitle: {\r\n            fontWeight: \"bold\",\r\n            width: 75,\r\n            fontSize: 16,\r\n            color: theme.textLight,\r\n            letterSpacing: 0.8,\r\n        },\r\n        debugButton: {\r\n            padding: 6,\r\n        },\r\n        debugButtonText: {\r\n            fontSize: 16,\r\n            color: theme.error,\r\n        },\r\n        toggleThemeContainer: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        toggleThemeButton: {\r\n            width: 48,\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        toggleThemeIcon: {\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport function getOnboardingTextInputsStyleProps(theme: Theme): Partial<FormTextInputProps> {\r\n    const focusedStyle =\r\n        Platform.OS === \"web\"\r\n            ? ({\r\n                  backgroundColor: \"transparent\",\r\n                  outline: \"none\",\r\n              } as TextStyle)\r\n            : null;\r\n\r\n    const commonStyle = StyleSheet.create({\r\n        textInputWrapper: {\r\n            width: \"100%\",\r\n            marginVertical: 10,\r\n        },\r\n        textInput: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n        textInputError: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.error,\r\n        },\r\n        textInputValid: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n    });\r\n\r\n    return {\r\n        wrapperStyle: commonStyle.textInputWrapper,\r\n        style: commonStyle.textInput,\r\n        errorStyle: commonStyle.textInputError,\r\n        validStyle: commonStyle.textInputValid,\r\n        focusedStyle: focusedStyle,\r\n    };\r\n}\r\n","import * as React from \"react\";\r\nimport {Text, View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {localizeError} from \"../../api/errors\";\r\n\r\n// Component props\r\nexport type FormErrorProps = ThemeProps & {\r\n    error?: string;\r\n} & ViewProps;\r\n\r\nclass FormError extends React.Component<FormErrorProps> {\r\n    render(): JSX.Element {\r\n        const {error, theme, style, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                {error && error.length > 0 && (\r\n                    <View style={[styles.wrapper, style]} {...otherProps}>\r\n                        <Text style={styles.text}>{error ? localizeError(error) : \"\"}</Text>\r\n                    </View>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            marginTop: 5,\r\n        },\r\n        text: {\r\n            fontSize: 14,\r\n            color: theme.error,\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(FormError);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, StyleProp, Text, TextStyle, TouchableOpacity, ViewStyle} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../../types\";\r\n\r\n// Component props\r\ntype FormSubmitButtonProps = {\r\n    onPress: () => void;\r\n    submitting: boolean;\r\n    style?: StyleProp<ViewStyle>;\r\n    textStyle?: StyleProp<TextStyle>;\r\n    loadingIndicatorStyle?: StyleProp<ViewStyle>;\r\n    text: string;\r\n} & ThemeProps;\r\n\r\nclass FormSubmitButton extends React.Component<FormSubmitButtonProps> {\r\n    render(): JSX.Element {\r\n        const {submitting, onPress, text, style, textStyle, loadingIndicatorStyle, theme} = this.props;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel={text}\r\n                {...{onPress: submitting ? undefined : onPress}}\r\n                style={style}\r\n            >\r\n                {submitting && <ActivityIndicator color={theme.accentTernary} style={loadingIndicatorStyle} />}\r\n                {!submitting && <Text style={textStyle}>{text}</Text>}\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(FormSubmitButton);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_LOGIN, VALIDATOR_PASSWORD_LOGIN} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {requestLogin} from \"../../state/auth/actions\";\r\nimport FormError from \"./FormError\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n    password: VALIDATOR_PASSWORD_LOGIN,\r\n});\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    validatedEmail: state.auth.validatedEmail,\r\n}));\r\n\r\n// Component props\r\ntype LoginFormProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    FormProps<FormState> & {navigation: StackNavigationProp<TabLoginSigninScreens, \"LoginForm\">};\r\n\r\ntype LoginFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass LoginForm extends React.Component<LoginFormProps, LoginFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n    setFieldValue: null | ((field: string, value: string, shouldValidate?: boolean | undefined) => void) = null;\r\n\r\n    constructor(props: LoginFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LoginFormProps) {\r\n        const {validatedEmail} = this.props;\r\n        if (this.setFieldValue && validatedEmail && oldProps.validatedEmail != validatedEmail)\r\n            this.setFieldValue(\"email\", validatedEmail);\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (this.props.dispatch as MyThunkDispatch)(requestLogin(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{email: \"\", password: \"\"} as FormState}\r\n                validationSchema={LoginFormSchema}\r\n                validateOnBlur={false}\r\n                onSubmit={(values) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<FormState>) => {\r\n                    const {\r\n                        handleSubmit,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        setFieldValue,\r\n                        setFieldError,\r\n                    } = formikProps;\r\n                    const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                    this.setFieldValue = setFieldValue;\r\n                    this.setFieldError = setFieldError;\r\n\r\n                    return (\r\n                        <>\r\n                            <FormTextInput\r\n                                field=\"email\"\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                error={errors.email}\r\n                                value={values.email}\r\n                                touched={touched.email}\r\n                                isEmail={true}\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormTextInput\r\n                                field=\"password\"\r\n                                placeholder={i18n.t(\"password\")}\r\n                                accessibilityLabel={i18n.t(\"password\")}\r\n                                error={errors.password}\r\n                                value={values.password}\r\n                                touched={touched.password}\r\n                                isPassword={true}\r\n                                {...textInputProps}\r\n                            />\r\n\r\n                            <FormError error={generalError(remoteErrors)} />\r\n\r\n                            <View style={fstyles.actionRow}>\r\n                                <FormSubmitButton\r\n                                    onPress={() => handleSubmit()}\r\n                                    style={[fstyles.buttonMajor, styles.loginButton]}\r\n                                    textStyle={fstyles.buttonMajorText}\r\n                                    text={i18n.t(\"login\")}\r\n                                    submitting={submitting}\r\n                                />\r\n                            </View>\r\n\r\n                            <TouchableOpacity\r\n                                accessibilityRole=\"link\"\r\n                                accessibilityLabel={i18n.t(\"forgotPassword\")}\r\n                                onPress={() => navigation.navigate(\"ForgotPassword\")}\r\n                                style={styles.forgotPwdLink}\r\n                            >\r\n                                <Text style={styles.forgotPasswordText}>{i18n.t(\"forgotPassword\")}</Text>\r\n                            </TouchableOpacity>\r\n                        </>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        loginButton: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        forgotPwdLink: {\r\n            height: 48,\r\n            justifyContent: \"center\",\r\n            marginTop: 20,\r\n            padding: 8, // make the button larger to click on\r\n        },\r\n        forgotPasswordText: {\r\n            fontSize: 14,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LoginForm));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {StackNavigationProp} from \"@react-navigation/stack\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {VALIDATOR_EMAIL_LOGIN} from \"../../validators\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {forgotPassword} from \"../../state/auth/actions\";\r\nimport {TabLoginSigninScreens} from \"../../navigation/types\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormError from \"./FormError\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n};\r\n\r\n// Use Yup to create the validation schema\r\nconst ForgotPasswordFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_LOGIN,\r\n});\r\n\r\n// Component props\r\nexport type ForgotPasswordFormProps = ThemeProps & {\r\n    navigation: StackNavigationProp<TabLoginSigninScreens, \"ForgotPassword\">;\r\n};\r\n\r\n// Component state\r\nexport type ForgotPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ForgotPasswordForm extends React.Component<ForgotPasswordFormProps, ForgotPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ForgotPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit({email}: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(forgotPassword(email)).then(({errors}: ValidatedActionReturn) => {\r\n            if (errors && errors.fields) {\r\n                const f = errors.fields;\r\n                Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n            }\r\n            this.setState({remoteErrors: errors, submitting: false});\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"newPassword\")}</Text>\r\n                    <Text style={styles.description}>{i18n.t(\"forgotPasswordExplanation\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={{email: \"\"} as FormState}\r\n                    validationSchema={ForgotPasswordFormSchema}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikCfg: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikCfg;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => navigation.goBack()}\r\n                                        style={[fstyles.buttonMajor, styles.buttonCancel]}\r\n                                    >\r\n                                        <Text style={fstyles.buttonMajorText}>{i18n.t(\"cancel\")}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.buttonSend]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"send\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        description: {\r\n            textAlign: \"justify\",\r\n            fontSize: 16,\r\n            marginTop: 10,\r\n            color: theme.textLight,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        buttonCancel: {\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordForm);\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView, Text} from \"react-native\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport LoginForm from \"../components/forms/LoginForm\";\r\nimport ForgotPasswordForm from \"../components/forms/ForgotPasswordForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {debugConnect} from \"../state/auth/actions\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport store from \"../state/store\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {APP_VERSION, DEBUG_MODE} from \"../constants/config\";\r\nimport {MaterialCommunityIcons, MaterialIcons} from \"@expo/vector-icons\";\r\nimport {toggleTheme} from \"../state/settings/actions\";\r\nimport {TabLoginSigninScreens} from \"../navigation/types\";\r\n\r\ntype TabLoginScreenProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"LoginForm\">;\r\n\r\nclass LoginTabComponent extends React.Component<TabLoginScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <LoginForm navigation={navigation}></LoginForm>\r\n                    {DEBUG_MODE && (\r\n                        <View style={styles.debugContainer}>\r\n                            <Text style={styles.debugTitle}>[DEBUG]</Text>\r\n                            <TouchableOpacity style={styles.debugButton} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                                <Text style={styles.debugButtonText}>access</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => {\r\n                                    (store.dispatch as MyThunkDispatch)(debugConnect());\r\n                                }}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>register</Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={styles.debugButtonText}> | </Text>\r\n                            <TouchableOpacity\r\n                                style={styles.debugButton}\r\n                                onPress={() => rootNavigate(\"OnboardingScreen\")}\r\n                            >\r\n                                <Text style={styles.debugButtonText}>on-boarding</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                <View style={styles.versionInfoContainer}>\r\n                    <Text style={styles.versionText}>\r\n                        <Text style={{fontWeight: \"bold\"}}>Version:</Text>\r\n                        <Text> {APP_VERSION}</Text>\r\n                    </Text>\r\n                    <View style={styles.versionDisclaimerContainer}>\r\n                        <MaterialIcons style={styles.versionDisclaimerIcon} name=\"warning\" size={16}></MaterialIcons>\r\n                        <Text style={styles.versionText}> This is an alpha version</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.toggleThemeContainer}>\r\n                    <TouchableOpacity style={styles.toggleThemeButton} onPress={() => store.dispatch(toggleTheme())}>\r\n                        <MaterialCommunityIcons style={styles.toggleThemeIcon} name=\"theme-light-dark\" color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\ntype TabForgotPasswordProps = ThemeProps & StackScreenProps<TabLoginSigninScreens, \"ForgotPassword\">;\r\n\r\nclass ForgotPasswordTabComponent extends React.Component<TabForgotPasswordProps> {\r\n    render(): JSX.Element {\r\n        const {theme, navigation} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ForgotPasswordForm navigation={navigation}></ForgotPasswordForm>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const SubTabLogin = withTheme(LoginTabComponent);\r\nexport const SubTabForgotPassword = withTheme(ForgotPasswordTabComponent);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {VALIDATOR_EMAIL_SIGNUP, VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {requestRegister} from \"../../state/auth/actions\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    email: string;\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst SignupFormSchema = Yup.object().shape({\r\n    email: VALIDATOR_EMAIL_SIGNUP,\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype SignupFormProps = FormProps<FormState> & ThemeProps;\r\n\r\n// Component state\r\ntype SignupFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass SignupForm extends React.Component<SignupFormProps, SignupFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: SignupFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        this.setState({...this.state, submitting: true});\r\n        (store.dispatch as MyThunkDispatch)(requestRegister(values.email, values.password)).then(\r\n            ({success, errors}: ValidatedActionReturn) => {\r\n                if (success && this.props.onSuccessfulSubmit) this.props.onSuccessfulSubmit(values);\r\n                if (errors && errors.fields) {\r\n                    const f = errors.fields;\r\n                    Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                }\r\n                this.setState({remoteErrors: errors, submitting: false});\r\n            },\r\n        );\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"signupWelcome\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={SignupFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"email\"\r\n                                    placeholder={i18n.t(\"emailAddress\")}\r\n                                    accessibilityLabel={i18n.t(\"emailAddress\")}\r\n                                    error={errors.email}\r\n                                    value={values.email}\r\n                                    touched={touched.email}\r\n                                    isEmail={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    accessibilityLabel={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    accessibilityLabel={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.createAccountButton]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"createAccount\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        inlineInputs: {\r\n            flex: 1,\r\n        },\r\n        inlineInputLeft: {\r\n            marginRight: 5,\r\n        },\r\n        inlineInputRight: {\r\n            marginLeft: 5,\r\n        },\r\n        createAccountButton: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SignupForm);\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport {ScrollView} from \"react-native-gesture-handler\";\r\nimport SignupForm from \"../components/forms/SignupForm\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\ntype SignupFormProps = ThemeProps;\r\n\r\nclass SignupTabComponent extends React.Component<SignupFormProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <ScrollView contentContainerStyle={{paddingVertical: 50, backgroundColor: theme.background}}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.formWrapper}>\r\n                        <SignupForm />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(SignupTabComponent);\r\n","import {createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport LoginTabBar from \"../components/LoginTabBar\";\r\nimport {SubTabLogin, SubTabForgotPassword} from \"../screens/TabLoginScreen\";\r\nimport TabSignupFormScreen from \"../screens/TabSignupFormScreen\";\r\nimport {TabLoginRoot, TabLoginSigninScreens} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst SigninStack = createStackNavigator<TabLoginSigninScreens>();\r\nconst Tab = createMaterialTopTabNavigator<TabLoginRoot>();\r\n\r\nconst LoginNavigator = (): JSX.Element => (\r\n    <Tab.Navigator tabBar={(props) => <LoginTabBar {...props} />}>\r\n        <Tab.Screen name=\"TabSignin\">\r\n            {() => (\r\n                <SigninStack.Navigator>\r\n                    <SigninStack.Screen\r\n                        name=\"LoginForm\"\r\n                        component={SubTabLogin}\r\n                        options={{headerShown: false, title: screenTitle(\"LoginForm\")}}\r\n                    />\r\n                    <SigninStack.Screen\r\n                        name=\"ForgotPassword\"\r\n                        component={SubTabForgotPassword}\r\n                        options={{headerShown: false, title: screenTitle(\"ForgotPassword\")}}\r\n                    />\r\n                </SigninStack.Navigator>\r\n            )}\r\n        </Tab.Screen>\r\n        <Tab.Screen name=\"TabSignup\" component={TabSignupFormScreen} options={{title: screenTitle(\"TabSignup\")}} />\r\n    </Tab.Navigator>\r\n);\r\n\r\nexport default LoginNavigator;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Text, TextStyle, TouchableOpacity, StyleSheet} from \"react-native\";\r\nimport {logout} from \"../state/auth/actions\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect();\r\n\r\n// Component props\r\nexport type LogOutButtonProps = {\r\n    onLogOut: () => void;\r\n    style: TextStyle;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\nclass LogOutButton extends React.Component<LogOutButtonProps> {\r\n    render(): JSX.Element {\r\n        const {dispatch, theme, onLogOut, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    dispatch(logout());\r\n                    if (onLogOut) onLogOut();\r\n                }}\r\n            >\r\n                <Text style={[styles.text, style]}>{i18n.t(\"logOut\")}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            fontSize: 20,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LogOutButton));\r\n","import {FontAwesome5} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome5 style={styles.constructionIcon} name=\"hard-hat\"></FontAwesome5>\r\n                <Text style={styles.title}>Under construction</Text>\r\n                <View style={styles.separator} />\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            color: theme.text,\r\n        },\r\n        constructionIcon: {\r\n            color: \"#eecc00\",\r\n            fontSize: 40,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        logoutButton: {\r\n            marginVertical: 20,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","import {Theme} from \"../types\";\r\nimport {StyleSheet, ViewStyle} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const pickerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"90%\",\r\n            maxHeight: \"70%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        dropdownWrapper: {\r\n            flex: 1,\r\n        },\r\n        dropdownStyle: {backgroundColor: \"#fafafa\"},\r\n        dropdownItemStyle: {justifyContent: \"flex-start\"} as ViewStyle,\r\n        dropdownActiveItemStyle: {},\r\n        dropdownActiveLabelStyle: {color: theme.accentSecondary},\r\n        dropdownLabelStyle: {fontSize: 16},\r\n        okButton: {\r\n            width: \"100%\",\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginVertical: 5,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        okButtonText: {\r\n            fontSize: 20,\r\n            color: theme.textInverted,\r\n        },\r\n        openButton: {\r\n            width: \"100%\",\r\n            height: 30,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 20,\r\n            borderWidth: 1,\r\n            borderStyle: \"solid\",\r\n            borderRadius: 2,\r\n            backgroundColor: theme.background,\r\n            borderColor: theme.componentBorder,\r\n        },\r\n        openButtonText: {\r\n            fontSize: 14,\r\n            color: theme.text,\r\n        },\r\n        selectedItemView: {\r\n            width: \"100%\",\r\n            height: 20,\r\n            marginTop: 5,\r\n            fontSize: 12,\r\n            overflow: \"hidden\",\r\n        },\r\n        selectedItemText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n","import {Platform, TextStyle} from \"react-native\";\r\n\r\nexport const styleTextThin: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-thin\"} : {fontWeight: \"100\"};\r\n\r\nexport const styleTextLight: TextStyle =\r\n    Platform.OS == \"android\" ? {fontFamily: \"sans-serif-light\"} : {fontWeight: \"200\"};\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\nimport SectionedMultiSelect from \"react-native-sectioned-multi-select\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextLight} from \"../styles/general\";\r\n\r\ntype PickerItem = {\r\n    id: string;\r\n    label: string;\r\n};\r\n\r\ntype PickerItemSection = {\r\n    id: string;\r\n    label: string;\r\n    children: PickerItem[];\r\n};\r\n\r\ntype SectionDescriptor = {id: string; items: string[]};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type SectionedMultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: SectionDescriptor[];\r\n    genLabel?: (value: string) => string;\r\n    genSectionLabel?: (id: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type SectionedMultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItemSection[]>;\r\n    open: boolean;\r\n    tempSelected: string[];\r\n};\r\n\r\nclass SectionedMultiPicker extends React.Component<SectionedMultiPickerProps, SectionedMultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    selectRef: React.RefObject<SectionedMultiSelect<PickerItem>>;\r\n\r\n    constructor(props: SectionedMultiPickerProps) {\r\n        super(props);\r\n        this.selectRef = React.createRef<SectionedMultiSelect<PickerItem>>();\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            tempSelected: props.selected || [],\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((section: SectionDescriptor) => ({\r\n                    id: section.id,\r\n                    label: this.props.genSectionLabel ? i18n.t(this.props.genSectionLabel(section.id)) : section.id,\r\n                    children: section.items.map((value: string) => ({\r\n                        id: value,\r\n                        label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                    })),\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: SectionedMultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        this.setState({...this.state, open: true, tempSelected: this.props.selected || this.state.tempSelected});\r\n    }\r\n\r\n    close(apply: boolean) {\r\n        this.setState({\r\n            ...this.state,\r\n            open: false,\r\n            tempSelected: apply ? this.state.tempSelected : this.props.selected || [],\r\n        });\r\n        if (this.selectRef.current) this.selectRef.current._toggleSelector();\r\n        if (apply && this.props.onChange) this.props.onChange(this.state.tempSelected);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            genLabel,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n        const multiSelectStyles = sectionedMultiSelectStyles(theme);\r\n        const miscStyles = themedStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                <View /*style={{height: 0, overflow: \"hidden\"}}*/>\r\n                    {this.state.items.get(locale) && (\r\n                        <SectionedMultiSelect\r\n                            ref={this.selectRef}\r\n                            items={this.state.items.get(locale)}\r\n                            onSelectedItemsChange={(items) =>\r\n                                this.setState({...this.state, tempSelected: (items as unknown) as string[]})\r\n                            }\r\n                            selectedItems={this.state.tempSelected}\r\n                            // Listeners\r\n                            onCancel={() => this.close(false)}\r\n                            onConfirm={() => this.close(true)}\r\n                            // Technical\r\n                            // Dirty work-around to get the typing to work. This is due to a mistake in react-native-sectioned-multi-select\r\n                            IconRenderer={(MaterialIcons as unknown) as JSX.Element}\r\n                            uniqueKey=\"id\"\r\n                            displayKey=\"label\"\r\n                            subKey=\"children\"\r\n                            // Customization\r\n                            showDropDowns={true}\r\n                            readOnlyHeadings={true}\r\n                            showChips={false}\r\n                            showCancelButton={true}\r\n                            selectedIconOnLeft={true}\r\n                            animateDropDowns={false}\r\n                            hideSelect={true}\r\n                            noResultsComponent={\r\n                                <Text style={miscStyles.noResultsText}>{i18n.t(\"noResultsFound\")}</Text>\r\n                            }\r\n                            searchIconComponent={<MaterialIcons name=\"search\" style={miscStyles.searchIcon} />}\r\n                            // Localization\r\n                            confirmText={i18n.t(\"apply\")}\r\n                            searchPlaceholderText={searchablePlaceholder}\r\n                            // Styling\r\n                            colors={{\r\n                                primary: theme.accent,\r\n                                cancel: theme.error,\r\n                                success: theme.okay,\r\n                                text: theme.text,\r\n                                subText: theme.textLight,\r\n                                searchPlaceholderTextColor: theme.textLight,\r\n                                selectToggleTextColor: theme.error,\r\n                                itemBackground: theme.cardBackground,\r\n                                subItemBackground: theme.cardBackground,\r\n                            }}\r\n                            styles={multiSelectStyles}\r\n                        />\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        noResultsText: {\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n            fontSize: 16,\r\n            marginVertical: 20,\r\n        },\r\n        searchIcon: {\r\n            fontSize: 26,\r\n            marginHorizontal: 10,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n\r\nconst sectionedMultiSelectStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {backgroundColor: theme.cardBackground},\r\n        scrollView: {paddingVertical: 10},\r\n        searchBar: {backgroundColor: theme.background},\r\n        searchTextInput: {color: theme.text},\r\n        toggleIcon: {backgroundColor: theme.cardBackground},\r\n        subItem: {\r\n            borderRadius: 4,\r\n            marginVertical: 2,\r\n        },\r\n        selectedItem: {backgroundColor: theme.background},\r\n        itemText: {\r\n            ...styleTextLight,\r\n            letterSpacing: 1.5,\r\n            fontSize: 14,\r\n            lineHeight: 18,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {marginVertical: 8},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(SectionedMultiPicker));\r\n","/**\r\n * University education fields as specified by the International Standard Classification of Education (ISCED), 2013.\r\n * @see {@link https://ec.europa.eu/eurostat/statistics-explained/index.php/International_Standard_Classification_of_Education_(ISCED)}\r\n * See translations for the actual display name of each field.\r\n */\r\n\r\nexport enum EducationFieldCategory {\r\n    GPQ = \"generic-programmes-qualifications\",\r\n    EDU = \"education\",\r\n    AH = \"arts-humanities\",\r\n    SSJI = \"social-sciences-journalism-information\",\r\n    BAL = \"business-administration-law\",\r\n    NSMS = \"natural-sciences-mathematics-statistics\",\r\n    ICT = \"information-communication-technologies\",\r\n    EMC = \"engineering-manufacturing-construction\",\r\n    AFFV = \"agriculture-forestry-fisheries-veterinary\",\r\n    HW = \"health-welfare\",\r\n    SER = \"services\",\r\n}\r\n\r\nexport const EDUCATION_FIELD_CATEGORIES = Object.values(EducationFieldCategory) as EducationFieldCategory[];\r\n\r\nexport enum EducationFieldSubCategory {\r\n    \"basic-programmes-qualifications\",\r\n    \"literacy-numeracy\",\r\n    \"personal-skills-development\",\r\n    \"education\",\r\n    \"arts\",\r\n    \"humanities\",\r\n    \"languages\",\r\n    \"social-behavioural-sciences\",\r\n    \"journalism-information\",\r\n    \"business-administration\",\r\n    \"law\",\r\n    \"biological-related-sciences\",\r\n    \"environment\",\r\n    \"physical-sciences\",\r\n    \"mathematics-statistics\",\r\n    \"information-communication-technologies\",\r\n    \"engineering-engineering-trades\",\r\n    \"manufacturing-processing\",\r\n    \"architecture-construction\",\r\n    \"agriculture\",\r\n    \"forestry\",\r\n    \"fisheries\",\r\n    \"veterinary\",\r\n    \"health\",\r\n    \"personal-services\",\r\n    \"hygiene-occupational-health-services\",\r\n    \"security-services\",\r\n    \"transport-services\",\r\n}\r\n\r\nexport type EducationField = {\r\n    id: string;\r\n    category: EducationFieldCategory;\r\n    subCategory: EducationFieldSubCategory;\r\n};\r\n\r\nexport const EDUCATION_FIELDS: EducationField[] = [\r\n    {\r\n        id: \"basic-programmes-qualifications\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"basic-programmes-qualifications\"],\r\n    },\r\n    {\r\n        id: \"literacy-numeracy\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"literacy-numeracy\"],\r\n    },\r\n    {\r\n        id: \"personal-skills-development\",\r\n        category: EducationFieldCategory.GPQ,\r\n        subCategory: EducationFieldSubCategory[\"personal-skills-development\"],\r\n    },\r\n    {\r\n        id: \"education-science\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"training-for-pre-school-teachers\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-without-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"teacher-training-with-subject-specialisation\",\r\n        category: EducationFieldCategory.EDU,\r\n        subCategory: EducationFieldSubCategory[\"education\"],\r\n    },\r\n    {\r\n        id: \"audio-visual-techniques-media-production\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fashion-interior-industrial-design\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"fine-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"handicrafts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"music-performing-arts\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"arts\"],\r\n    },\r\n    {\r\n        id: \"religion-theology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"history-archaeology\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"philosophy-ethics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"humanities\"],\r\n    },\r\n    {\r\n        id: \"language-acquisition\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"literature-linguistics\",\r\n        category: EducationFieldCategory.AH,\r\n        subCategory: EducationFieldSubCategory[\"languages\"],\r\n    },\r\n    {\r\n        id: \"economics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"political-sciences-civics\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"psychology\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"sociology-cultural-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"social-behavioural-sciences\"],\r\n    },\r\n    {\r\n        id: \"journalism-reporting\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"library-information-archival-studies\",\r\n        category: EducationFieldCategory.SSJI,\r\n        subCategory: EducationFieldSubCategory[\"journalism-information\"],\r\n    },\r\n    {\r\n        id: \"accounting-taxation\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"finance-banking-insurance\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"management-administration\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"marketing-advertising\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"secretarial-office-work\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"wholesale-retail-sales\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"work-skills\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"business-administration\"],\r\n    },\r\n    {\r\n        id: \"law\",\r\n        category: EducationFieldCategory.BAL,\r\n        subCategory: EducationFieldSubCategory[\"law\"],\r\n    },\r\n    {\r\n        id: \"biology\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"biochemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"biological-related-sciences\"],\r\n    },\r\n    {\r\n        id: \"environmental-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"natural-environments-wildlife\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"environment\"],\r\n    },\r\n    {\r\n        id: \"chemistry\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"earth-sciences\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"physics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"physical-sciences\"],\r\n    },\r\n    {\r\n        id: \"mathematics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"statistics\",\r\n        category: EducationFieldCategory.NSMS,\r\n        subCategory: EducationFieldSubCategory[\"mathematics-statistics\"],\r\n    },\r\n    {\r\n        id: \"computer-use\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"database-network-design-administration\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"software-applications-development-analysis\",\r\n        category: EducationFieldCategory.ICT,\r\n        subCategory: EducationFieldSubCategory[\"information-communication-technologies\"],\r\n    },\r\n    {\r\n        id: \"chemical-engineering-processes\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"environmental-protection-technology\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electricity-energy\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"electronics-automation\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"mechanics-metal-trades\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"motor-vehicles-ships-aircraft\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"engineering-engineering-trades\"],\r\n    },\r\n    {\r\n        id: \"food-processing\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"materials\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"textiles\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"mining-extraction\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"manufacturing-processing\"],\r\n    },\r\n    {\r\n        id: \"architecture-town-planning\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"building-civil-engineering\",\r\n        category: EducationFieldCategory.EMC,\r\n        subCategory: EducationFieldSubCategory[\"architecture-construction\"],\r\n    },\r\n    {\r\n        id: \"crop-livestock-production\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"horticulture\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"agriculture\"],\r\n    },\r\n    {\r\n        id: \"forestry\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"forestry\"],\r\n    },\r\n    {\r\n        id: \"fisheries\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"fisheries\"],\r\n    },\r\n    {\r\n        id: \"veterinary\",\r\n        category: EducationFieldCategory.AFFV,\r\n        subCategory: EducationFieldSubCategory[\"veterinary\"],\r\n    },\r\n    {\r\n        id: \"dental-studies\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medicine\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"nursing-midwifery\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"medical-diagnostic-treatment-technology\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"therapy-rehabilitation\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"pharmacy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"traditional-complementary-medicine-therapy\",\r\n        category: EducationFieldCategory.HW,\r\n        subCategory: EducationFieldSubCategory[\"health\"],\r\n    },\r\n    {\r\n        id: \"domestic-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hair-beauty-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"hotel-restaurants-catering\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"sports\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"travel-tourism-leisure\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"personal-services\"],\r\n    },\r\n    {\r\n        id: \"community-sanitation\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"occupational-health-safety\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"hygiene-occupational-health-services\"],\r\n    },\r\n    {\r\n        id: \"military-defence\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"protection-of-persons-property\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"security-services\"],\r\n    },\r\n    {\r\n        id: \"transport-services\",\r\n        category: EducationFieldCategory.SER,\r\n        subCategory: EducationFieldSubCategory[\"transport-services\"],\r\n    },\r\n];\r\n\r\n/*const organized: Map<EducationFieldCategory, string[]> = new Map();\r\nEDUCATION_FIELD_CATEGORIES.forEach((cat: EducationFieldCategory) => organized.set(cat, []));\r\nEDUCATION_FIELDS.forEach((f) => organized.get(f.category)?.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_ORGANIZED = organized;*/\r\n\r\n// Pre-process the education fields to pass as the \"items\" prop of dropdowns\r\nconst sectioned: {[key: string]: {id: string; items: string[]}} = {};\r\nEDUCATION_FIELD_CATEGORIES.forEach((id: EducationFieldCategory) => (sectioned[id] = {id, items: []}));\r\nEDUCATION_FIELDS.forEach((f) => sectioned[f.category].items.push(f.id));\r\n\r\nexport const EDUCATION_FIELDS_SECTIONED = Object.values(sectioned);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {MultiPickerProps} from \"./MultiPicker\";\r\nimport SectionedMultiPicker from \"./SectionedMultiPicker\";\r\nimport {EDUCATION_FIELDS_SECTIONED} from \"../model/education-fields\";\r\n\r\n// Component props\r\nexport type EducationFieldPickerProps = {\r\n    fields?: string[];\r\n    onChange?: (fields: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass EducationFieldPicker extends React.Component<EducationFieldPickerProps> {\r\n    render(): JSX.Element {\r\n        const {fields, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <SectionedMultiPicker\r\n                values={EDUCATION_FIELDS_SECTIONED}\r\n                genLabel={(field: string) => `educationFields.${field}`}\r\n                genSectionLabel={(section: string) => `educationFieldCategories.${section}`}\r\n                selected={fields}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"educationFieldsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"educationFieldsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"educationFieldsPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EducationFieldPicker;\r\n","import * as React from \"react\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type DegreeToggleProps = {\r\n    degree?: Degree;\r\n    onUpdate?: (degree?: Degree) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\nclass DegreeToggle extends React.Component<DegreeToggleProps> {\r\n    render(): JSX.Element {\r\n        const buttonLabels = DEGREES.map((d: string) => i18n.t(`degrees.${d}`));\r\n        const {degree, style} = this.props;\r\n\r\n        return (\r\n            <ButtonGroup\r\n                onPress={(idx: number) => {\r\n                    if (this.props.onUpdate) this.props.onUpdate(idx == -1 ? undefined : DEGREES[idx]);\r\n                }}\r\n                selectedIndex={degree ? DEGREES.indexOf(degree) : -1}\r\n                buttons={buttonLabels}\r\n                containerStyle={[{height: 35, marginLeft: 0, marginRight: 0}, style]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default DegreeToggle;\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleProps = {\r\n    role: Role;\r\n    onSelect?: (role: Role) => void;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggle(props: RoleToggleProps): JSX.Element {\r\n    const {role, onSelect, theme, ...otherProps} = props;\r\n    const styles = themedStyles(theme);\r\n\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) onSelect(ROLES[idx]);\r\n            }}\r\n            selectedIndex={ROLES.indexOf(role)}\r\n            buttons={buttonLabels}\r\n            containerStyle={styles.container}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            height: 35,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(RoleToggle);\r\n","import * as React from \"react\";\r\nimport {View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {StaffRole, STAFF_ROLES} from \"../constants/profile-constants\";\r\nimport {Picker} from \"react-native\";\r\n\r\n// Component props\r\nexport type StaffRoleToggleProps = {\r\n    staffRole: StaffRole | null;\r\n    onSelect?: (staffRole: StaffRole) => void;\r\n};\r\n\r\nexport default function StaffRoleToggle(props: StaffRoleToggleProps): JSX.Element {\r\n    const {staffRole} = props;\r\n\r\n    const onSelect = (value: string) => {\r\n        if (props.onSelect) props.onSelect(value as StaffRole);\r\n    };\r\n\r\n    const pickerItems = STAFF_ROLES.map((r) => <Picker.Item key={r} label={i18n.t(`staffRoles.${r}`)} value={r} />);\r\n\r\n    return (\r\n        <View style={{width: \"100%\"}}>\r\n            <Picker selectedValue={staffRole} onValueChange={onSelect}>\r\n                {pickerItems}\r\n            </Picker>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type GenderToggleProps = {\r\n    gender?: Gender | null;\r\n    onSelect?: (gender: Gender) => void;\r\n};\r\n\r\nexport function GenderToggle(props: GenderToggleProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {gender} = props;\r\n\r\n    const onUpdate = (idx: number) => {\r\n        if (props.onSelect) props.onSelect(GENDERS[idx]);\r\n    };\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={onUpdate}\r\n            selectedIndex={gender !== undefined && gender !== null ? GENDERS.indexOf(gender) : -1}\r\n            buttons={buttonLabels}\r\n            containerStyle={{height: 35, marginLeft: 0, marginRight: 0}}\r\n        />\r\n    );\r\n}\r\n","import * as React from \"react\";\r\nimport {Platform} from \"react-native\";\r\nimport {MIN_AGE} from \"../constants/profile-constants\";\r\nimport DateTimePicker, {Event} from \"@react-native-community/datetimepicker\";\r\n\r\n// Component props\r\nexport type BirthDatePickerProps = {\r\n    date?: Date;\r\n    open: boolean;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type BirthDatePickerState = {\r\n    open: boolean;\r\n};\r\n\r\nconst maxDate = new Date(Date.now());\r\nmaxDate.setFullYear(maxDate.getFullYear() - MIN_AGE);\r\n\r\nclass BirthDatePicker extends React.Component<BirthDatePickerProps, BirthDatePickerState> {\r\n    constructor(props: BirthDatePickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: BirthDatePickerProps): void {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    onChange(date: Date | undefined): void {\r\n        if (Platform.OS != \"ios\") this.hideModal();\r\n        if (date && this.props.onSelect) this.props.onSelect(date);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date} = this.props;\r\n        const {open} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {open && (\r\n                    <DateTimePicker\r\n                        minimumDate={new Date(1900, 0, 0)}\r\n                        maximumDate={maxDate}\r\n                        value={date || maxDate}\r\n                        onChange={(e: Event, date: Date | undefined) => this.onChange(date)}\r\n                        mode=\"date\"\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BirthDatePicker;\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport {Platform, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport {AVATAR_QUALITY} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type AvatarEditButtonProps = ThemeProps & {\r\n    onPictureSelected?: (imageInfo: ImageInfo) => void;\r\n};\r\n\r\nclass AvatarEditButton extends React.Component<AvatarEditButtonProps> {\r\n    ensurePermission = async () => {\r\n        if (Platform.OS !== \"web\") {\r\n            let {status} = await Permissions.getAsync(Permissions.CAMERA_ROLL);\r\n            if (status !== \"granted\") {\r\n                status = await (await Permissions.askAsync(Permissions.CAMERA_ROLL)).status;\r\n                /*if (status !== \"granted\") {\r\n                    alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n                }*/\r\n                return status === \"granted\";\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    showPicker = async () => {\r\n        const authorized = this.ensurePermission();\r\n\r\n        if (authorized) {\r\n            try {\r\n                const result = await ImagePicker.launchImageLibraryAsync({\r\n                    mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                    allowsEditing: true,\r\n                    aspect: [1, 1],\r\n                    quality: AVATAR_QUALITY,\r\n                });\r\n                if (!result.cancelled) {\r\n                    const info: ImageInfo = result;\r\n                    if (this.props.onPictureSelected) this.props.onPictureSelected(info);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Could not get image. Check console for error.\");\r\n                console.log(e);\r\n            }\r\n        }\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return <MaterialIcons onPress={() => this.showPicker()} style={styles.buttonStyle} name=\"edit\" />;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        buttonStyle: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n            borderRadius: 20,\r\n            padding: 4,\r\n            backgroundColor: theme.cardBackground,\r\n            color: theme.text,\r\n            fontSize: 20,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(AvatarEditButton);\r\n","import * as React from \"react\";\r\nimport {Modal, Text, TouchableOpacity, TouchableOpacityProps, View, StyleSheet} from \"react-native\";\r\nimport {formStyles} from \"../../styles/forms\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {ArraySchema, Schema, ValidationError} from \"yup\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ThemeConsumer} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype FormRowProps<T> = {\r\n    label: string;\r\n    display?: JSX.Element;\r\n    noModal?: boolean;\r\n    overrideModal?: (hide: () => void) => JSX.Element;\r\n    renderInput?: (value: T, error: string | null, onChange: (value: T) => void) => JSX.Element;\r\n    validator?: Schema<unknown> | ArraySchema<unknown>;\r\n    initialValue: T;\r\n    apply?: (value: T) => void;\r\n    locked?: boolean;\r\n} & TouchableOpacityProps;\r\n\r\n// Component state\r\ntype FormRowState<T> = {\r\n    modalOpen: boolean;\r\n    error: string | null;\r\n    value: T;\r\n};\r\n\r\nclass FormRow<T> extends React.Component<FormRowProps<T>, FormRowState<T>> {\r\n    constructor(props: FormRowProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            modalOpen: false,\r\n            error: null,\r\n            value: props.initialValue,\r\n        };\r\n    }\r\n\r\n    setModal(modalOpen: boolean): void {\r\n        // Reset to initial value when opening the modal\r\n        this.setState({...this.state, modalOpen, value: this.props.initialValue, error: null});\r\n    }\r\n\r\n    setError(error: string | null): void {\r\n        this.setState({...this.state, error});\r\n    }\r\n\r\n    onChange(value: T): void {\r\n        this.setState({...this.state, value}, () => {\r\n            this.validate();\r\n        });\r\n    }\r\n\r\n    validate(): boolean {\r\n        const {validator} = this.props;\r\n        if (!validator) return true;\r\n        try {\r\n            validator.validateSync(this.state.value);\r\n            this.setError(null);\r\n            return true;\r\n        } catch (err) {\r\n            this.setError((err as ValidationError).errors[0]);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    apply(): void {\r\n        if (this.validate()) {\r\n            this.setModal(false);\r\n            if (this.props.apply) this.props.apply(this.state.value);\r\n        }\r\n    }\r\n\r\n    renderModalContent = (): JSX.Element => {\r\n        const {label, renderInput} = this.props;\r\n        const {value, error} = this.state;\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    const fstyles = formStyles(theme);\r\n                    return (\r\n                        <TouchableOpacity\r\n                            style={styles.modalTouchable}\r\n                            onPress={() => this.setModal(false)}\r\n                            activeOpacity={1}\r\n                        >\r\n                            <TouchableOpacity activeOpacity={1} style={styles.modalWrapper}>\r\n                                <Text style={styles.modalLabel}>{label}</Text>\r\n                                {renderInput ? renderInput(value, error, (value: T) => this.onChange(value)) : <></>}\r\n                                <Text style={styles.modalErrorText}>{/*touched && */ error ? i18n.t(error) : \"\"}</Text>\r\n                                <View style={[fstyles.actionRow, styles.modalActions]}>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"cancel\")}\r\n                                        onPress={() => this.setModal(false)}\r\n                                        style={[fstyles.buttonMajor, styles.modalCancel]}\r\n                                    >\r\n                                        <Text style={[fstyles.buttonMajorText, styles.modalActionText]}>\r\n                                            {i18n.t(\"cancel\")}\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        accessibilityRole=\"button\"\r\n                                        accessibilityLabel={i18n.t(\"apply\")}\r\n                                        onPress={() => this.apply()}\r\n                                        style={[fstyles.buttonMajor, styles.modalOk]}\r\n                                    >\r\n                                        <Text style={[fstyles.buttonMajorText, styles.modalActionText]}>\r\n                                            {i18n.t(\"apply\")}\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </TouchableOpacity>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {label, display, overrideModal, noModal, style, locked, ...otherProps} = this.props;\r\n        const {modalOpen} = this.state;\r\n\r\n        return (\r\n            // We have to use a ThemeConsumer here instead of the standard withTheme(...) pattern so our generic typing doesn't break.\r\n            <ThemeConsumer>\r\n                {({theme}: ThemeProps) => {\r\n                    const styles = themedStyles(theme);\r\n                    return (\r\n                        <>\r\n                            <TouchableOpacity\r\n                                style={[styles.cardWrapper, style]}\r\n                                activeOpacity={0.9}\r\n                                disabled={noModal}\r\n                                onPress={() => {\r\n                                    if (!locked) this.setModal(true);\r\n                                }}\r\n                                {...otherProps}\r\n                            >\r\n                                <View style={styles.cardContent}>\r\n                                    <Text style={styles.cardLabel}>{label}</Text>\r\n                                    <View>\r\n                                        {display !== undefined && display}\r\n                                        {display === undefined && this.props.children}\r\n                                    </View>\r\n                                </View>\r\n                                {!noModal && (\r\n                                    <View style={styles.rightIconContainer}>\r\n                                        <MaterialIcons\r\n                                            name={locked ? \"lock\" : \"keyboard-arrow-right\"}\r\n                                            size={locked ? 30 : 40}\r\n                                            style={styles.rightIcon}\r\n                                        ></MaterialIcons>\r\n                                    </View>\r\n                                )}\r\n                            </TouchableOpacity>\r\n                            {!noModal && (\r\n                                <>\r\n                                    {overrideModal !== undefined &&\r\n                                        modalOpen &&\r\n                                        overrideModal(() => this.setModal(false))}\r\n                                    {overrideModal === undefined && modalOpen && (\r\n                                        <Modal transparent={true} visible={modalOpen} animationType=\"slide\">\r\n                                            {this.renderModalContent()}\r\n                                        </Modal>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    );\r\n                }}\r\n            </ThemeConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        modalTouchable: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        modalWrapper: {\r\n            width: \"80%\",\r\n            maxWidth: 500,\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 20,\r\n            borderRadius: 4,\r\n            borderColor: \"#ccc\",\r\n            borderWidth: 0.5,\r\n            borderStyle: \"solid\",\r\n        },\r\n        modalErrorText: {\r\n            fontSize: 12,\r\n            color: theme.error,\r\n        },\r\n        modalLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1.5,\r\n            fontSize: 13,\r\n            marginBottom: 12,\r\n        },\r\n        modalActions: {\r\n            height: 50,\r\n            marginTop: 20,\r\n        },\r\n        modalCancel: {\r\n            flex: 1,\r\n            backgroundColor: theme.actionNeutral,\r\n            marginRight: 6,\r\n            height: 50,\r\n        },\r\n        modalOk: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n            height: 50,\r\n        },\r\n        modalActionText: {\r\n            lineHeight: 50,\r\n        },\r\n        cardWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            backgroundColor: theme.cardBackground,\r\n            paddingHorizontal: 10,\r\n            elevation: 1,\r\n            justifyContent: \"space-evenly\",\r\n            paddingVertical: 15,\r\n            minHeight: 80,\r\n        },\r\n        cardContent: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            //justifyContent: \"space-evenly\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n        cardLabel: {\r\n            color: theme.textLight,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            fontSize: 11,\r\n            marginBottom: 10,\r\n        },\r\n        rightIconContainer: {justifyContent: \"center\"},\r\n        rightIcon: {color: theme.textLight},\r\n    });\r\n});\r\n\r\nexport default FormRow;\r\n","import * as React from \"react\";\r\n\r\nimport {Text, TextProps} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedDateProps = {\r\n    date?: Date;\r\n} & TextProps;\r\n\r\nexport function FormattedDate(props: FormattedDateProps): JSX.Element {\r\n    const {date, ...otherProps} = props;\r\n\r\n    if (date) {\r\n        const localizedMonth = i18n.t(`months.${date.getMonth()}`);\r\n        const paddedDay = ((date.getDate() + \"\").length == 1 ? \"0\" : \"\") + date.getDate();\r\n        const formattedDate = `${paddedDay} ${localizedMonth} ${date.getFullYear()}`;\r\n\r\n        return <Text {...otherProps}>{formattedDate}</Text>;\r\n    } else return <></>;\r\n}\r\n","import * as React from \"react\";\r\nimport {StyleSheet} from \"react-native\";\r\nimport CountryPicker, {Country, CountryCode, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\n// Component props\r\nexport type NationalityPickerProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    open?: boolean;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityPickerState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityPicker extends React.Component<NationalityPickerProps, NationalityPickerState> {\r\n    constructor(props: NationalityPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: props.open === undefined ? true : props.open,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(oldProps: NationalityPickerProps) {\r\n        if (!oldProps.open && this.props.open) this.showModal();\r\n        if (oldProps.open && !this.props.open) this.hideModal();\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide !== undefined) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CountryPicker\r\n                countryCode={this.props.nationality || \"FR\"}\r\n                filterProps={{placeholder: i18n.t(\"search\")}}\r\n                withFlag={true}\r\n                withFilter={true}\r\n                withEmoji={false}\r\n                onSelect={(country: Country) => {\r\n                    if (this.props.onSelect) this.props.onSelect(country.cca2);\r\n                }}\r\n                onClose={() => this.hideModal()}\r\n                translation={i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode}\r\n                visible={open}\r\n                containerButtonStyle={styles.pickerContainerButton}\r\n            ></CountryPicker>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        pickerContainerButton: {\r\n            display: \"none\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityPicker);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View} from \"react-native\";\r\nimport {CountryCode, Flag, TranslationLanguageCode} from \"react-native-country-picker-modal\";\r\nimport {CountryInfo, getCountryInfoAsync} from \"react-native-country-picker-modal/lib/CountryService\";\r\nimport i18n from \"i18n-js\";\r\n\r\n// Component props\r\nexport type FormattedNationalityProps = {\r\n    countryCode: CountryCode;\r\n    flagSize?: number;\r\n} & TextProps;\r\n\r\n// Component state\r\nexport type FormattedNationalityState = {\r\n    countryName: string;\r\n};\r\n\r\nclass FormattedNationality extends React.Component<FormattedNationalityProps, FormattedNationalityState> {\r\n    constructor(props: FormattedNationalityProps) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: \"\",\r\n        };\r\n        this.updateCountryName();\r\n    }\r\n\r\n    updateCountryName(): void {\r\n        const {countryCode} = this.props;\r\n        const translation = i18n.t(\"countryPickerLanguageCode\") as TranslationLanguageCode;\r\n        getCountryInfoAsync({countryCode, translation}).then((info: CountryInfo) => {\r\n            this.setState({countryName: info.countryName});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps: FormattedNationalityProps): void {\r\n        if (this.props.countryCode != prevProps.countryCode) {\r\n            this.updateCountryName();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {countryCode, ...otherProps} = this.props;\r\n        const {countryName} = this.state;\r\n\r\n        const flagSize = this.props.flagSize || 20;\r\n\r\n        return (\r\n            <View style={{flexDirection: \"row\"}}>\r\n                <Flag countryCode={countryCode} flagSize={flagSize} withEmoji={false}></Flag>\r\n                <Text {...otherProps}>{countryName}</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormattedNationality;\r\n","import * as React from \"react\";\r\nimport {Text, TextProps, View, ViewStyle} from \"react-native\";\r\nimport {Flag} from \"react-native-country-picker-modal\";\r\nimport i18n from \"i18n-js\";\r\nimport {University} from \"../constants/universities\";\r\n\r\n// Component props\r\nexport type FormattedUniversityProps = {\r\n    university: University | null;\r\n    containerStyle?: ViewStyle;\r\n} & TextProps;\r\n\r\nexport default class FormattedUniversity extends React.Component<FormattedUniversityProps> {\r\n    render(): JSX.Element {\r\n        const {university, containerStyle, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <View style={[{flexDirection: \"row\"}, containerStyle]}>\r\n                {university && (\r\n                    <>\r\n                        <Flag countryCode={university.country} flagSize={18} withEmoji={false}></Flag>\r\n                        <Text {...otherProps} style={[{marginLeft: -5}, otherProps.style]}>\r\n                            {i18n.t(`universities.${university.key}`)}\r\n                        </Text>\r\n                    </>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {View, ViewProps, LayoutChangeEvent, TouchableOpacity, Text} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {Overlay, withTheme} from \"react-native-elements\";\r\nimport {pickerStyles} from \"../styles/picker\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type MultiPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    values: string[];\r\n    genLabel?: (value: string) => string;\r\n    onChange?: (values: string[]) => void;\r\n    selected?: string[];\r\n    placeholder?: string;\r\n    multipleText?: string;\r\n    searchablePlaceholder?: string;\r\n    showSelected?: boolean;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type MultiPickerState = {\r\n    items: Map<SupportedLocale, PickerItem[]>;\r\n    open: boolean;\r\n    dropdownWrapperHeight: number;\r\n};\r\n\r\nclass MultiPicker extends React.Component<MultiPickerProps, MultiPickerState> {\r\n    static defaultProps = {\r\n        items: [],\r\n        showSelected: true,\r\n        selected: [],\r\n    };\r\n\r\n    tempSelected: string[] = [];\r\n\r\n    constructor(props: MultiPickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            items: new Map(),\r\n            open: false,\r\n            dropdownWrapperHeight: 0,\r\n        };\r\n    }\r\n\r\n    updateItems() {\r\n        const locale = this.props.locale;\r\n        if (!this.state.items.has(locale) || this.state.items.get(locale)?.length != this.props.values.length) {\r\n            const items = new Map(this.state.items);\r\n            items.set(\r\n                locale,\r\n                this.props.values.map((value: string) => ({\r\n                    value,\r\n                    label: this.props.genLabel ? i18n.t(this.props.genLabel(value)) : value,\r\n                })),\r\n            );\r\n            this.setState({...this.state, items});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItems();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: MultiPickerProps) {\r\n        if (oldProps.locale != this.props.locale || oldProps.values.length != this.props.values.length) {\r\n            this.updateItems();\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.tempSelected = this.props.selected || [];\r\n        this.setState({...this.state, open: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({...this.state, open: false});\r\n        if (this.props.onChange) {\r\n            this.props.onChange(this.tempSelected);\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {\r\n            theme,\r\n            locale,\r\n            selected,\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            onChange,\r\n            genLabel,\r\n            placeholder,\r\n            multipleText,\r\n            searchablePlaceholder,\r\n            showSelected,\r\n            ...viewProps\r\n        } = this.props;\r\n        const styles = pickerStyles(theme);\r\n\r\n        const selectedItems = selected || [];\r\n        const items = this.state.items.get(locale) || [];\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <View>\r\n                    <TouchableOpacity onPress={() => this.open()} style={styles.openButton}>\r\n                        <Text style={styles.openButtonText}>\r\n                            {i18n.t(\"picker.callToAction\").replace(\"%d\", selectedItems.length.toString())}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    <View>\r\n                        {showSelected &&\r\n                            selectedItems.map((val: string, i: number) => (\r\n                                <View key={i} style={styles.selectedItemView}>\r\n                                    <Text style={styles.selectedItemText} numberOfLines={1}>\r\n                                        {genLabel ? i18n.t(genLabel(val)) : val}\r\n                                    </Text>\r\n                                </View>\r\n                            ))}\r\n                    </View>\r\n                </View>\r\n                {this.state.open && (\r\n                    <Overlay\r\n                        overlayStyle={[styles.overlay, {height: 150 + items.length * 40}]}\r\n                        isVisible={this.state.open}\r\n                        onRequestClose={() => this.close()}\r\n                        onBackdropPress={() => this.close()}\r\n                    >\r\n                        <>\r\n                            <View\r\n                                style={styles.dropdownWrapper}\r\n                                onLayout={(e: LayoutChangeEvent) => {\r\n                                    this.setState({...this.state, dropdownWrapperHeight: e.nativeEvent.layout.height});\r\n                                }}\r\n                            >\r\n                                <DropDownPicker\r\n                                    items={items}\r\n                                    multiple={true}\r\n                                    searchable={true}\r\n                                    defaultValue={selected}\r\n                                    onChangeItem={(values: string[]) => {\r\n                                        this.tempSelected = values;\r\n                                    }}\r\n                                    placeholder={placeholder}\r\n                                    multipleText={multipleText}\r\n                                    searchablePlaceholder={searchablePlaceholder}\r\n                                    scrollViewProps={{keyboardShouldPersistTaps: \"always\"}} // ensures items are clickable even when the keyboard is open\r\n                                    isVisible={true}\r\n                                    showArrow={false}\r\n                                    dropDownMaxHeight={this.state.dropdownWrapperHeight - 10}\r\n                                    // Style props\r\n                                    selectedLabelStyle={{display: \"none\"}}\r\n                                    style={styles.dropdownStyle}\r\n                                    itemStyle={styles.dropdownItemStyle}\r\n                                    activeItemStyle={styles.dropdownActiveItemStyle}\r\n                                    activeLabelStyle={styles.dropdownActiveLabelStyle}\r\n                                    labelStyle={styles.dropdownLabelStyle}\r\n                                />\r\n                            </View>\r\n                            <View>\r\n                                <TouchableOpacity onPress={() => this.close()} style={styles.okButton}>\r\n                                    <Text style={styles.okButtonText}>OK</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </>\r\n                    </Overlay>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(MultiPicker));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {InterestDto} from \"../api/dto\";\r\nimport MultiPicker from \"./MultiPicker\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    allInterests: state.profile.interests,\r\n}));\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type InterestsPickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    interests: string[];\r\n    onChange?: (interests: string[]) => void;\r\n};\r\n\r\nclass InterestsPicker extends React.Component<InterestsPickerProps> {\r\n    componentDidMount() {\r\n        if (values.length == 0) this.updateValues();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: InterestsPickerProps) {\r\n        if (oldProps.allInterests.length != this.props.allInterests.length) this.updateValues();\r\n    }\r\n\r\n    updateValues() {\r\n        values = this.props.allInterests.map((interest: InterestDto) => interest.id);\r\n\r\n        console.log(\"Interests : \" + this.props.allInterests.length);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {interests, onChange} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(interestId: string) => `interestNames.${interestId}`}\r\n                selected={interests}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"interestsPicker.placeholder\")}\r\n                multipleText={i18n.t(\"interestsPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"interestsPicker.searchPlaceholder\")}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(InterestsPicker);\r\n","import {Degree, Gender, LanguageLevel, Role, StaffRole} from \"../constants/profile-constants\";\r\nimport {UniversityKey} from \"../constants/universities\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {User} from \"../model/user\";\r\n\r\n/* General response-related types */\r\n\r\n// Any response from the server should follow this structure\r\nexport type RequestResponse = SuccessfulRequestResponse | UnprocessableEntityRequestResponse | ErrorRequestResponse;\r\nexport type SuccessfulRequestResponse = {status: number; data: unknown} & {[key: string]: unknown};\r\nexport type PaginatedRequestResponse = SuccessfulRequestResponse & {\r\n    meta: {\r\n        currentPage: number;\r\n        itemCount: number;\r\n        itemsPerPage: number;\r\n        totalItems: number;\r\n        totalPages: number;\r\n    };\r\n    links: {\r\n        first: string;\r\n        last: string;\r\n        next: string;\r\n        previous: string;\r\n    };\r\n};\r\n\r\nexport type ErrorRequestResponse = {status: number; errorType: string; description: string};\r\n\r\n// Only on 422 status\r\nexport type UnprocessableEntityRequestResponse = ErrorRequestResponse & {\r\n    errors: {property: string; codes: {description: string; code: string}[]}[];\r\n};\r\n\r\nexport type RemoteValidationErrors = {general: string; fields: {[key: string]: string}};\r\n\r\n/* Specific DTOs */\r\n\r\nexport type SpokenLanguageDto = {\r\n    code: string;\r\n    level: LanguageLevel;\r\n};\r\n\r\nexport type UserRole = \"user\" | \"admin\";\r\n\r\nexport type ResponseUserDto = {\r\n    id: string;\r\n    role: UserRole;\r\n    email: string;\r\n    isVerified: boolean;\r\n    onboarded: boolean;\r\n    profile: ResponseProfileDto;\r\n};\r\n\r\nexport type TokenDto = {\r\n    expiresIn: number;\r\n    accessToken: string;\r\n};\r\n\r\nexport type LoginDto = {\r\n    user: User;\r\n    token: TokenDto;\r\n};\r\n\r\nexport type CreateProfileDtoCommon = {\r\n    type: Role;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: Gender;\r\n    birthdate: string;\r\n    nationality: CountryCode;\r\n    languages: SpokenLanguageDto[];\r\n    interests: string[];\r\n    profileOffers: OfferValueDto[];\r\n    educationFields: EducationFieldDto[];\r\n};\r\n\r\nexport type CreateProfileDtoStudent = CreateProfileDtoCommon & {\r\n    degree: Degree;\r\n};\r\n\r\nexport type CreateProfileDtoStaff = CreateProfileDtoCommon & {\r\n    staffRole: StaffRole;\r\n};\r\n\r\nexport type CreateProfileDto = CreateProfileDtoStudent | CreateProfileDtoStaff;\r\n\r\nexport type ResponseProfileDto = CreateProfileDto & {id: string; university: UniversityKey; avatar: string};\r\n\r\nexport enum OfferCategory {\r\n    Discover = \"discover\",\r\n    Collaborate = \"collaborate\",\r\n    Meet = \"meet\",\r\n}\r\n\r\nexport type EducationFieldDto = {\r\n    id: string;\r\n};\r\n\r\nexport type OfferDto = {\r\n    id: string;\r\n    category: OfferCategory;\r\n    allowChooseProfileType: boolean;\r\n    allowChooseGender: boolean;\r\n    allowInterRole: boolean;\r\n};\r\n\r\nexport type OfferValueDto = {\r\n    offerId: string;\r\n    allowStaff: boolean;\r\n    allowStudent: boolean;\r\n    allowMale: boolean;\r\n    allowFemale: boolean;\r\n    allowOther: boolean;\r\n};\r\n\r\nexport const initOfferValue = (o: OfferDto, val = false): OfferValueDto => {\r\n    const genderVal = val && o.allowChooseGender;\r\n    const typeVal = val && o.allowChooseProfileType;\r\n    return {\r\n        offerId: o.id,\r\n        allowFemale: genderVal,\r\n        allowMale: genderVal,\r\n        allowOther: genderVal,\r\n        allowStudent: typeVal,\r\n        allowStaff: typeVal,\r\n    };\r\n};\r\n\r\nexport type InterestDto = {\r\n    id: string;\r\n};\r\n\r\nexport type SignedUrlResponseDto = {\r\n    fileName: string;\r\n    s3Url: string;\r\n};\r\n\r\nexport type AvatarSuccessfulUpdatedDto = {\r\n    avatar: string;\r\n};\r\n\r\nexport type LikeProfileResponseDto = \"requested\" | \"matched\";\r\n\r\nexport type ChatRoomProfileDto = {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    avatar: string | null;\r\n    lastMessageSeenId: string | null;\r\n};\r\n\r\nexport type ResponseRoomDto = {\r\n    id: string;\r\n    profiles: ChatRoomProfileDto[];\r\n    lastMessage: ResponseChatMessageDto | null;\r\n};\r\n\r\nexport type ResponseChatMessageDto = {\r\n    roomId: string;\r\n    id: string;\r\n    senderId: string;\r\n    sent: boolean;\r\n    text: string;\r\n    updatedAt: string;\r\n};\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    languageItems: state.settings.localizedLanguageItems,\r\n}));\r\n\r\n// Component props\r\nexport type LanguagePickerProps = ConnectedProps<typeof reduxConnector> & {\r\n    languages: string[];\r\n    single: boolean;\r\n    onChange?: (languages: string[]) => void;\r\n} & ViewProps &\r\n    ThemeProps;\r\n\r\ntype PickerItem = {\r\n    value: string;\r\n    label: string;\r\n};\r\n\r\nclass LanguagePicker extends React.Component<LanguagePickerProps> {\r\n    static defaultProps = {\r\n        languages: [],\r\n    };\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, languageItems, single, languages, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={languageItems}\r\n                    multiple={!single}\r\n                    searchable={true}\r\n                    placeholder={i18n.t(`languagePicker.placeholder${single ? \"Single\" : \"Multiple\"}`)}\r\n                    searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                    onChangeItem={(items: PickerItem | PickerItem[]) => {\r\n                        const languages = (Array.isArray(items) ? items : [items]).map((it: PickerItem) => it.value);\r\n                        if (onChange) onChange(languages);\r\n                    }}\r\n                    defaultValue={single ? languages[0] : languages}\r\n                    style={styles.picker}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    containerStyle={styles.containerStyle}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        containerStyle: {height: 50},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguagePicker));\r\n","import * as React from \"react\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport i18n from \"i18n-js\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {View, ViewProps, StyleSheet} from \"react-native\";\r\nimport {LanguageLevel, LANGUAGE_LEVELS} from \"../constants/profile-constants\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {SupportedLocale} from \"../localization\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    locale: state.settings.locale,\r\n}));\r\n\r\n// Component props\r\nexport type LanguageLevelPickerProps = {\r\n    level: LanguageLevel;\r\n    onChange?: (level: LanguageLevel) => void;\r\n} & ViewProps &\r\n    ThemeProps &\r\n    ConnectedProps<typeof reduxConnector>;\r\n\r\ntype PickerItem = {\r\n    value: LanguageLevel;\r\n    label: string;\r\n};\r\n\r\nconst items: Map<SupportedLocale, PickerItem[]> = new Map();\r\n\r\nfunction updateItems(locale: SupportedLocale) {\r\n    if (!items.has(locale)) {\r\n        items.set(\r\n            locale,\r\n            LANGUAGE_LEVELS.map((code: LanguageLevel) => ({\r\n                label: i18n.t(`languageLevels.${code}`),\r\n                value: code,\r\n            })),\r\n        );\r\n    }\r\n}\r\n\r\nclass LanguageLevelPicker extends React.Component<LanguageLevelPickerProps> {\r\n    constructor(props: LanguageLevelPickerProps) {\r\n        super(props);\r\n        updateItems(this.props.locale);\r\n    }\r\n\r\n    componentDidUpdate(oldProps: LanguageLevelPickerProps) {\r\n        const locale = this.props.locale;\r\n        if (oldProps.locale != locale) updateItems(locale);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onChange, locale, level, theme, ...viewProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View {...viewProps}>\r\n                <DropDownPicker\r\n                    items={items.get(locale) || []}\r\n                    defaultValue={level}\r\n                    multiple={false}\r\n                    searchable={false}\r\n                    placeholder={i18n.t(\"languageLevelPicker.placeholder\")}\r\n                    onChangeItem={(item: PickerItem) => {\r\n                        if (onChange) onChange(item.value);\r\n                    }}\r\n                    style={styles.picker}\r\n                    containerStyle={styles.pickerContainer}\r\n                    itemStyle={styles.pickerItem}\r\n                    labelStyle={styles.pickerLabel}\r\n                    dropDownMaxHeight={300}\r\n                    arrowSize={20}\r\n                ></DropDownPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        picker: {\r\n            backgroundColor: \"#fafafa\",\r\n            // just setting borderRadius won't work.\r\n            // See https://github.com/hossein-zare/react-native-dropdown-picker#borderradius\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            borderBottomLeftRadius: 0,\r\n            borderBottomRightRadius: 0,\r\n        },\r\n        pickerContainer: {maxWidth: 120, height: 50, borderRadius: 0},\r\n        pickerItem: {justifyContent: \"flex-start\"},\r\n        pickerLabel: {fontSize: 16},\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(LanguageLevelPicker));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet, ViewStyle} from \"react-native\";\r\nimport LanguagePicker from \"./LanguagePicker\";\r\nimport LanguageLevelPicker from \"./LanguageLevelPicker\";\r\nimport InputErrorText from \"./InputErrorText\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {LanguageLevel} from \"../constants/profile-constants\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {SpokenLanguageDto} from \"../api/dto\";\r\nimport {MAX_SPOKEN_LANGUAGES} from \"../constants/config\";\r\n\r\n// Component props\r\nexport type SpokenLanguagesInputProps = ThemeProps & {\r\n    languages: SpokenLanguageDto[];\r\n    onChange?: (languages: SpokenLanguageDto[], hasErrors: boolean) => void;\r\n    style?: ViewStyle;\r\n};\r\n\r\n// Component state\r\nexport type SpokenLanguagesInputState = {\r\n    languages: Partial<SpokenLanguageDto>[];\r\n    errors: (string | boolean)[];\r\n};\r\n\r\nclass SpokenLanguagesInput extends React.Component<SpokenLanguagesInputProps, SpokenLanguagesInputState> {\r\n    constructor(props: SpokenLanguagesInputProps) {\r\n        super(props);\r\n        const languages = props.languages || [];\r\n        this.state = {\r\n            languages,\r\n            errors: languages.map(() => false),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.languages.length == 0) this.addRow();\r\n    }\r\n\r\n    onChange(languages: Partial<SpokenLanguageDto>[]) {\r\n        const errors = this.computeErrors(languages);\r\n        this.setState({...this.state, languages, errors});\r\n\r\n        if (this.props.onChange) {\r\n            const hasErrors = errors.filter((e: string | boolean) => e !== false).length > 0;\r\n            this.props.onChange(\r\n                languages\r\n                    .filter((l: Partial<SpokenLanguageDto>) => l.code && l.level)\r\n                    .map((l: Partial<SpokenLanguageDto>) => l as SpokenLanguageDto),\r\n                hasErrors,\r\n            );\r\n        }\r\n    }\r\n\r\n    computeErrors(languages: Partial<SpokenLanguageDto>[]): (string | boolean)[] {\r\n        return languages.map((sl: Partial<SpokenLanguageDto>) => {\r\n            const multipleOccurrences =\r\n                languages.filter((l: Partial<SpokenLanguageDto>) => l.code && l.code == sl.code).length > 1;\r\n            return multipleOccurrences ? \"validation.languages.multiple\" : !sl.code || !sl.level;\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        if (this.state.languages.length < MAX_SPOKEN_LANGUAGES) {\r\n            const languages = this.state.languages.concat([{code: \"\"}]);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    removeRow(idx: number) {\r\n        if (idx >= 0 && idx < this.state.languages.length) {\r\n            const languages = this.state.languages.slice(); // copy\r\n            languages.splice(idx, 1);\r\n            this.onChange(languages);\r\n        }\r\n    }\r\n\r\n    setLanguageCode(idx: number, code: string) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].code = code;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    setLanguageLevel(idx: number, level: LanguageLevel) {\r\n        const languages = this.state.languages.slice(); // copy\r\n        languages[idx].level = level;\r\n        this.onChange(languages);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, style} = this.props;\r\n        const {languages} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const rows = languages.map((sl: Partial<SpokenLanguageDto>, i: number) => {\r\n            const error = this.state.errors[i];\r\n            return (\r\n                <View key={i} style={styles.rowContainer}>\r\n                    <View style={styles.inputRowContainer}>\r\n                        <LanguagePicker\r\n                            single={true}\r\n                            languages={[sl.code]}\r\n                            style={styles.languagePicker}\r\n                            pickerStyle={styles.inputs}\r\n                            onChange={(languageCodes: string[]) => this.setLanguageCode(i, languageCodes[0])}\r\n                        />\r\n                        <LanguageLevelPicker\r\n                            level={sl.level}\r\n                            style={styles.levelPicker}\r\n                            onChange={(level: LanguageLevel) => this.setLanguageLevel(i, level)}\r\n                        ></LanguageLevelPicker>\r\n                        <MaterialIcons onPress={() => this.removeRow(i)} style={styles.deleteIcon} name=\"delete\" />\r\n                    </View>\r\n                    {typeof error === \"string\" && (\r\n                        <View style={styles.errorRowContainer}>\r\n                            <InputErrorText error={error} />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n            );\r\n        });\r\n\r\n        const canAddMore =\r\n            this.state.languages.length < MAX_SPOKEN_LANGUAGES &&\r\n            this.state.languages.filter((sl: Partial<SpokenLanguageDto>) => !sl.level || !sl.code).length == 0;\r\n\r\n        return (\r\n            <View style={style}>\r\n                {rows}\r\n                <View style={styles.plusButtonWrapper}>\r\n                    {canAddMore && <MaterialIcons onPress={() => this.addRow()} style={styles.plusButton} name=\"add\" />}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        rowContainer: {\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            marginBottom: 8,\r\n        },\r\n        inputRowContainer: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        errorRowContainer: {\r\n            marginBottom: 8,\r\n        },\r\n        plusButtonWrapper: {\r\n            alignItems: \"center\",\r\n            marginTop: 10,\r\n        },\r\n        plusButton: {\r\n            width: 36,\r\n            height: 36,\r\n            fontSize: 36,\r\n            borderRadius: 18,\r\n            color: theme.background,\r\n            backgroundColor: theme.accent,\r\n        },\r\n        deleteIcon: {\r\n            fontSize: 24,\r\n            color: theme.error,\r\n        },\r\n        inputs: {\r\n            borderRadius: 0,\r\n        },\r\n        languagePicker: {\r\n            flex: 1,\r\n            flexGrow: 3,\r\n        },\r\n        levelPicker: {\r\n            flex: 1,\r\n            flexGrow: 2,\r\n            marginHorizontal: 5,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(SpokenLanguagesInput);\r\n","import * as React from \"react\";\r\nimport {Avatar, AvatarProps, Overlay, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {StyleSheet} from \"react-native\";\r\n\r\n// Component props\r\nexport type EnlargeableAvatarProps = AvatarProps & ThemeProps;\r\n\r\n// Component state\r\nexport type EnlargeableAvatarState = {\r\n    enlarged: boolean;\r\n};\r\n\r\nclass EnlargeableAvatar extends React.Component<EnlargeableAvatarProps, EnlargeableAvatarState> {\r\n    constructor(props: EnlargeableAvatarProps) {\r\n        super(props);\r\n        this.state = {enlarged: false};\r\n    }\r\n\r\n    toggleEnlarged() {\r\n        this.setState({...this.state, enlarged: !this.state.enlarged});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, children, ...avatarProps} = this.props;\r\n        const {enlarged} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const onPress = () => {\r\n            if (avatarProps.onPress) avatarProps.onPress();\r\n            this.toggleEnlarged();\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Avatar {...avatarProps} {...(avatarProps.source ? {onPress} : {})}>\r\n                    {children}\r\n                </Avatar>\r\n                <Overlay\r\n                    isVisible={enlarged}\r\n                    onBackdropPress={() => this.toggleEnlarged()}\r\n                    overlayStyle={styles.overlay}\r\n                    backdropStyle={styles.overlayBackdrop}\r\n                >\r\n                    <Avatar\r\n                        rounded\r\n                        containerStyle={styles.enlargedAvatarContainer}\r\n                        avatarStyle={styles.enlargedAvatar}\r\n                        source={avatarProps.source}\r\n                        activeOpacity={0.8}\r\n                        onPress={() => this.toggleEnlarged()}\r\n                    />\r\n                </Overlay>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        overlay: {\r\n            width: \"100%\",\r\n            aspectRatio: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n        },\r\n        overlayBackdrop: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        },\r\n        enlargedAvatar: {\r\n            borderRadius: 300,\r\n        },\r\n        enlargedAvatarContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n            flex: 1,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EnlargeableAvatar);\r\n","import {ButtonGroupProps} from \"react-native-elements\";\r\nimport {Theme} from \"../types\";\r\n\r\nexport function getToggleStyleProps(nobuttonBariant: boolean, theme: Theme): Partial<ButtonGroupProps> {\r\n    if (nobuttonBariant) {\r\n        return {\r\n            containerStyle: {\r\n                backgroundColor: \"transparent\",\r\n                height: 28,\r\n                borderWidth: 0,\r\n                marginHorizontal: 0,\r\n                marginBottom: 5,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-evenly\",\r\n            },\r\n            innerBorderStyle: {\r\n                width: 0,\r\n            },\r\n            buttonContainerStyle: {\r\n                marginHorizontal: 5,\r\n                flex: 0,\r\n            },\r\n            buttonStyle: {\r\n                paddingHorizontal: 10,\r\n            },\r\n            textStyle: {\r\n                color: theme.textLight,\r\n                opacity: 0.5,\r\n                fontSize: 15,\r\n                flexShrink: 1,\r\n            },\r\n            selectedButtonStyle: {\r\n                backgroundColor: \"transparent\",\r\n                borderColor: theme.accent,\r\n                borderBottomWidth: 0.5,\r\n            },\r\n            selectedTextStyle: {\r\n                color: theme.text,\r\n                opacity: 1,\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            containerStyle: {\r\n                height: 35,\r\n                marginLeft: 0,\r\n                marginRight: 0,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Gender, GENDERS} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    genders: Gender[];\r\n    onSelect?: (genders: Gender[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction GenderToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = GENDERS.map((r: string) => i18n.t(`genders.${r}`));\r\n    const {theme, genders, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => GENDERS[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={genders.map((gender: Gender) => GENDERS.indexOf(gender))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(GenderToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Role, ROLES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\nexport type RoleToggleMultiProps = {\r\n    roles: Role[];\r\n    onSelect?: (roles: Role[]) => void;\r\n    noButtonVariant?: boolean;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction RoleToggleMulti(props: RoleToggleMultiProps): JSX.Element {\r\n    const {theme, roles, noButtonVariant, onSelect, ...otherProps} = props;\r\n    const buttonLabels = ROLES.map((r: string) => i18n.t(`allRoles.${r}`));\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => ROLES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={roles.map((role: Role) => ROLES.indexOf(role))}\r\n            buttons={buttonLabels}\r\n            {...getToggleStyleProps(noButtonVariant || false, theme)}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(RoleToggleMulti);\r\n","import {StyleSheet} from \"react-native\";\r\nimport {preTheme} from \"./utils\";\r\n\r\nexport const tooltipStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        text: {\r\n            textAlign: \"justify\",\r\n            paddingVertical: 10,\r\n        },\r\n        container: {\r\n            alignContent: \"center\",\r\n            borderRadius: 4,\r\n            width: undefined, // override default width so it adjusts based on the content\r\n            maxWidth: 240,\r\n            paddingHorizontal: 10,\r\n        },\r\n    });\r\n});\r\n","import React from \"react\";\r\nimport {Text} from \"react-native\";\r\nimport {Tooltip, withTheme} from \"react-native-elements\";\r\nimport {tooltipStyles} from \"../styles/tooltips\";\r\nimport {ThemeProps} from \"../types\";\r\n\r\n// Component props\r\nexport type CustomTooltipProps = {\r\n    text: string;\r\n} & ThemeProps;\r\n\r\n// Component state\r\nexport type CustomTooltipState = {\r\n    height: number | undefined;\r\n};\r\n\r\nclass CustomTooltip extends React.Component<CustomTooltipProps, CustomTooltipState> {\r\n    constructor(props: CustomTooltipProps) {\r\n        super(props);\r\n        this.state = {height: undefined};\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {height} = this.state;\r\n        const {theme, text} = this.props;\r\n        const styles = tooltipStyles(theme);\r\n\r\n        return (\r\n            <Tooltip\r\n                popover={\r\n                    <Text\r\n                        style={styles.text}\r\n                        onLayout={(e) => {\r\n                            this.setState({\r\n                                ...this.state,\r\n                                height: e.nativeEvent.layout.height,\r\n                            });\r\n                        }}\r\n                    >\r\n                        {text}\r\n                    </Text>\r\n                }\r\n                backgroundColor={theme.accentSlight}\r\n                containerStyle={styles.container}\r\n                height={height}\r\n            >\r\n                {this.props.children}\r\n            </Tooltip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(CustomTooltip);\r\n","import React from \"react\";\r\nimport {Text, View, StyleSheet, ViewStyle, TouchableOpacity} from \"react-native\";\r\nimport {initOfferValue, OfferDto, OfferValueDto} from \"../api/dto\";\r\nimport {Gender, Role} from \"../constants/profile-constants\";\r\nimport GenderToggleMulti from \"./GenderToggleMulti\";\r\nimport RoleToggleMulti from \"./RoleToggleMulti\";\r\nimport i18n from \"i18n-js\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {CheckBox, withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../styles/utils\";\r\n\r\nexport type OfferControlProps = {\r\n    offer: OfferDto;\r\n    value: OfferValueDto;\r\n    onChange?: (value: OfferValueDto) => void;\r\n    style?: ViewStyle;\r\n} & ThemeProps;\r\n\r\nclass OfferControl extends React.Component<OfferControlProps> {\r\n    offerValueChange(changed: Partial<OfferValueDto>): void {\r\n        const {onChange} = this.props;\r\n        if (onChange) onChange({...this.props.value, ...changed});\r\n    }\r\n\r\n    setAllValues(b: boolean) {\r\n        this.offerValueChange(initOfferValue(this.props.offer, b));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offer, value, style} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const genders: Gender[] = [];\r\n        if (offer.allowChooseGender) {\r\n            if (value.allowFemale) genders.push(\"female\");\r\n            if (value.allowMale) genders.push(\"male\");\r\n            if (value.allowOther) genders.push(\"other\");\r\n        }\r\n\r\n        const roles: Role[] = [];\r\n        if (offer.allowChooseProfileType) {\r\n            if (value.allowStaff) roles.push(\"staff\");\r\n            if (value.allowStudent) roles.push(\"student\");\r\n        }\r\n\r\n        const isSomethingSelected =\r\n            (!offer.allowChooseGender || genders.length > 0) && (!offer.allowInterRole || roles.length > 0);\r\n\r\n        return (\r\n            <View style={[styles.wrapper, style]}>\r\n                <View style={styles.titleWrapper}>\r\n                    <CheckBox\r\n                        checked={isSomethingSelected}\r\n                        onPress={() => this.setAllValues(!isSomethingSelected)}\r\n                        containerStyle={styles.checkboxContainer}\r\n                    ></CheckBox>\r\n                    <TouchableOpacity onPress={() => this.setAllValues(!isSomethingSelected)}>\r\n                        <Text style={styles.offerName}>{i18n.t(`allOffers.${offer.id}.name`)}</Text>\r\n                    </TouchableOpacity>\r\n                    <CustomTooltip text={i18n.t(`allOffers.${offer.id}.help`)}>\r\n                        <MaterialIcons style={styles.helpIcon} name=\"help\"></MaterialIcons>\r\n                    </CustomTooltip>\r\n                </View>\r\n                {isSomethingSelected && (\r\n                    <View style={styles.buttonsWrapper}>\r\n                        {offer.allowChooseGender && (\r\n                            <GenderToggleMulti\r\n                                noButtonVariant={true}\r\n                                genders={genders}\r\n                                onSelect={(selected: Gender[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowFemale: selected.indexOf(\"female\") != -1,\r\n                                        allowMale: selected.indexOf(\"male\") != -1,\r\n                                        allowOther: selected.indexOf(\"other\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                        {offer.allowChooseProfileType && (\r\n                            <RoleToggleMulti\r\n                                noButtonVariant={true}\r\n                                roles={roles}\r\n                                onSelect={(selected: Role[]) =>\r\n                                    this.offerValueChange({\r\n                                        allowStaff: selected.indexOf(\"staff\") != -1,\r\n                                        allowStudent: selected.indexOf(\"student\") != -1,\r\n                                    })\r\n                                }\r\n                            />\r\n                        )}\r\n                    </View>\r\n                )}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n        },\r\n        titleWrapper: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        offerName: {\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.text,\r\n        },\r\n        helpIcon: {\r\n            fontSize: 20,\r\n            marginLeft: 5,\r\n            color: theme.textLight,\r\n        },\r\n        buttonsWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        checkboxContainer: {\r\n            padding: 0,\r\n            margin: 0,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OfferControl);\r\n","import * as React from \"react\";\r\nimport {ActivityIndicator, KeyboardAvoidingView, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport EducationFieldPicker from \"../EducationFieldPicker\";\r\nimport {ScrollView, StyleSheet} from \"react-native\";\r\nimport DegreeToggle from \"../DegreeToggle\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport RoleToggle from \"../RoleToggle\";\r\nimport {Degree, Gender, StaffRole} from \"../../constants/profile-constants\";\r\nimport StaffRoleToggle from \"../StaffRoleToggle\";\r\nimport {GenderToggle} from \"../GenderToggle\";\r\nimport BirthDatePicker from \"../BirthDatePicker\";\r\nimport AvatarEditButton from \"../AvatarEditButton\";\r\nimport FormRow from \"./FormRow\";\r\nimport {FormattedDate} from \"../FormattedDate\";\r\nimport NationalityPicker from \"../NationalityPicker\";\r\nimport FormattedNationality from \"../FormattedNationality\";\r\nimport {getUniversityFromEmail} from \"../../model/utils\";\r\nimport FormattedUniversity from \"../FormattedUniversity\";\r\nimport InterestsPicker from \"../InterestsPicker\";\r\nimport {initOfferValue, OfferCategory, OfferDto, OfferValueDto, SpokenLanguageDto} from \"../../api/dto\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\nimport {User} from \"../../model/user\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport SpokenLanguagesInput from \"../SpokenLanguagesInput\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {ImageInfo} from \"expo-image-picker/build/ImagePicker.types\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {setAvatar} from \"../../state/profile/actions\";\r\nimport EnlargeableAvatar from \"../EnlargeableAvatar\";\r\nimport OfferControl from \"../OfferControl\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\n\r\n// Component props\r\nexport type EditProfileFormProps = ThemeProps & {\r\n    user: User | null;\r\n    onChange?: (fields: Partial<UserProfile>) => void;\r\n};\r\n\r\nfunction FormFieldSpacer(): JSX.Element {\r\n    return <View style={{height: 30}}></View>;\r\n}\r\n\r\nclass EditProfileForm extends React.Component<EditProfileFormProps> {\r\n    onFieldChanged(fields: Partial<UserProfile>): void {\r\n        if (this.props.onChange !== undefined) this.props.onChange(fields);\r\n    }\r\n\r\n    render() {\r\n        const {theme, user} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        const avatarTitle =\r\n            user && user.profile ? (user.profile.firstName[0] + user.profile.lastName[0]).toUpperCase() : \"\";\r\n        const avatarSource = user && user.profile && user.profile.avatarUrl ? {uri: user.profile.avatarUrl} : undefined;\r\n        const fullName = user && user.profile ? user.profile.firstName + \" \" + user.profile.lastName : \"\";\r\n\r\n        /*const textInputStyleProps = {\r\n            placeholderTextColor: \"#222\",\r\n            style: {\r\n                width: \"100%\",\r\n                height: 50,\r\n                paddingHorizontal: 20,\r\n                borderRadius: 5,\r\n                borderWidth: 0,\r\n                backgroundColor: theme.accentSlight,\r\n            },\r\n            errorStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.error,\r\n            },\r\n            validStyle: {\r\n                borderBottomWidth: 2,\r\n                borderBottomColor: theme.okay,\r\n            },\r\n            focusedStyle: Platform.OS === \"web\" ? ({outlineColor: \"transparent\"} as TextStyle) : null,\r\n        };*/\r\n\r\n        let profileFieldComponents = <></>;\r\n\r\n        if (user && user.profile) {\r\n            const profile = user.profile;\r\n\r\n            profileFieldComponents = (\r\n                <>\r\n                    <FormRow\r\n                        label={i18n.t(\"emailAddress\")}\r\n                        initialValue={user.email}\r\n                        display={<Text style={styles.cardText}>{user.email}</Text>}\r\n                        /*\r\n                        validator={VALIDATOR_EMAIL}\r\n                        renderInput={(value: string, error: string | null, onChange: (value: string) => void) => (\r\n                            <ValidatedTextInput\r\n                                placeholder={i18n.t(\"emailAddress\")}\r\n                                value={value}\r\n                                error={error || undefined}\r\n                                onChangeText={(val) => onChange(val)}\r\n                                keyboardType=\"email-address\"\r\n                                autoCompleteType=\"email\"\r\n                                autoFocus\r\n                                {...textInputStyleProps}\r\n                            />\r\n                        )}\r\n                        apply={(email: string) => onFieldChanged({email})}\r\n                        */\r\n                        locked={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"dateOfBirth\")}\r\n                        initialValue={profile.birthdate}\r\n                        display={<FormattedDate style={styles.cardText} date={profile.birthdate} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <BirthDatePicker\r\n                                date={profile.birthdate}\r\n                                open={true}\r\n                                onSelect={(birthdate: Date) => this.onFieldChanged({birthdate})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"nationality\")}\r\n                        initialValue={profile.nationality}\r\n                        display={<FormattedNationality style={styles.cardText} countryCode={profile.nationality} />}\r\n                        overrideModal={(hide: () => void) => (\r\n                            <NationalityPicker\r\n                                nationality={profile.nationality}\r\n                                onSelect={(cc: CountryCode) => this.onFieldChanged({nationality: cc})}\r\n                                onHide={hide}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"gender\")}\r\n                        initialValue={profile.gender}\r\n                        display={\r\n                            <GenderToggle\r\n                                gender={profile.gender}\r\n                                onSelect={(gender: Gender) => this.onFieldChanged({gender})}\r\n                            />\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"profileType\")}\r\n                        initialValue={profile.type}\r\n                        display={\r\n                            <>\r\n                                <RoleToggle\r\n                                    role={profile.type}\r\n                                    /*onSelect={(role: Role) => onFieldChanged({role})}*/\r\n                                    disabled={true}\r\n                                />\r\n                                {profile.type == \"staff\" && (\r\n                                    <StaffRoleToggle\r\n                                        staffRole={profile.staffRole || null}\r\n                                        onSelect={(staffRole: StaffRole) => this.onFieldChanged({staffRole})}\r\n                                    />\r\n                                )}\r\n                                {profile.type == \"student\" && (\r\n                                    <DegreeToggle\r\n                                        degree={profile.degree}\r\n                                        onUpdate={(degree?: Degree) => this.onFieldChanged({degree})}\r\n                                    />\r\n                                )}\r\n                            </>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"fieldsOfEducation\")}\r\n                        initialValue={profile.educationFields}\r\n                        display={\r\n                            <EducationFieldPicker\r\n                                fields={profile.educationFields}\r\n                                onChange={(educationFields: string[]) => this.onFieldChanged({educationFields})}\r\n                            ></EducationFieldPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"interests\")}\r\n                        initialValue={profile.interests}\r\n                        display={\r\n                            <InterestsPicker\r\n                                interests={profile.interests}\r\n                                onChange={(interests: string[]) => this.onFieldChanged({interests})}\r\n                            ></InterestsPicker>\r\n                        }\r\n                        noModal={true}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <FormRow\r\n                        label={i18n.t(\"spokenLanguages\")}\r\n                        initialValue={profile.languages}\r\n                        validator={VALIDATOR_ONBOARDING_LANGUAGES}\r\n                        display={\r\n                            <>\r\n                                {profile.languages.map((l: SpokenLanguageDto, i: number) => (\r\n                                    <View key={i}>\r\n                                        <Text>\r\n                                            {i18n.t(`languageNames.${l.code}`)} ({i18n.t(`languageLevels.${l.level}`)})\r\n                                        </Text>\r\n                                    </View>\r\n                                ))}\r\n                            </>\r\n                        }\r\n                        renderInput={(\r\n                            value: SpokenLanguageDto[],\r\n                            error: string | null,\r\n                            onChange: (value: SpokenLanguageDto[]) => void,\r\n                        ) => (\r\n                            <>\r\n                                <SpokenLanguagesInput\r\n                                    languages={value}\r\n                                    onChange={(languages: SpokenLanguageDto[]) => onChange(languages)}\r\n                                />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                                <FormFieldSpacer />\r\n                            </>\r\n                        )}\r\n                        apply={(languages: SpokenLanguageDto[]) => this.onFieldChanged({languages})}\r\n                    />\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Discover}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Collaborate}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                    <FormFieldSpacer />\r\n                    <OfferCategoryRow\r\n                        category={OfferCategory.Meet}\r\n                        profileOffers={profile.profileOffers}\r\n                        onApply={(profileOffers: OfferValueDto[]) => this.onFieldChanged({profileOffers})}\r\n                    ></OfferCategoryRow>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={styles.screenWrapper}>\r\n                <View style={styles.topView}>\r\n                    <EnlargeableAvatar\r\n                        size={140}\r\n                        rounded\r\n                        title={avatarTitle}\r\n                        containerStyle={{backgroundColor: theme.accentSecondary}}\r\n                        avatarStyle={styles.avatar}\r\n                        source={avatarSource}\r\n                        activeOpacity={0.8}\r\n                    >\r\n                        {user && (\r\n                            <AvatarEditButton\r\n                                onPictureSelected={(imageInfo: ImageInfo) => {\r\n                                    (store.dispatch as MyThunkDispatch)(setAvatar(imageInfo));\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </EnlargeableAvatar>\r\n                    <Text style={styles.name}>{fullName}</Text>\r\n                    {user && (\r\n                        <FormattedUniversity\r\n                            containerStyle={styles.universityContainer}\r\n                            style={styles.university}\r\n                            university={getUniversityFromEmail(user.email)}\r\n                        ></FormattedUniversity>\r\n                    )}\r\n                </View>\r\n                <ScrollView style={styles.scrollWrapper} keyboardShouldPersistTaps=\"always\">\r\n                    <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={-100} style={styles.formWrapper}>\r\n                        <View style={styles.titleWrapper}>\r\n                            <Text style={styles.title}>{i18n.t(\"myProfile\")}</Text>\r\n                        </View>\r\n                        {profileFieldComponents}\r\n                        {!user && <ActivityIndicator size=\"large\" color={theme.accent} />}\r\n                    </KeyboardAvoidingView>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// Map props from the store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    offerIdToCategory: state.profile.offerIdToCategory,\r\n}));\r\n\r\ntype OfferCategoryRowProps = {\r\n    category: OfferCategory;\r\n    profileOffers: OfferValueDto[];\r\n    onApply: (offerValues: OfferValueDto[]) => void;\r\n} & ConnectedProps<typeof reduxConnector>;\r\n\r\nconst OfferCategoryRow = reduxConnector(\r\n    ({category, profileOffers, onApply, offers, offerIdToCategory}: OfferCategoryRowProps): JSX.Element => {\r\n        let display: JSX.Element | JSX.Element[] = profileOffers\r\n            .filter((o) => offerIdToCategory.get(o.offerId) == category)\r\n            .map((value: OfferValueDto) => (\r\n                <Text key={`profile-${value.offerId}-display`}>{i18n.t(`allOffers.${value.offerId}.name`)}</Text>\r\n            ));\r\n\r\n        if (display.length == 0) display = <Text>{i18n.t(\"profile.noOffersSelected\")}</Text>;\r\n\r\n        return (\r\n            <FormRow\r\n                label={i18n.t(`offerCategories.${category}`)}\r\n                initialValue={profileOffers}\r\n                display={<>{display}</>}\r\n                renderInput={(\r\n                    value: OfferValueDto[],\r\n                    error: string | null,\r\n                    onChange: (value: OfferValueDto[]) => void,\r\n                ) => (\r\n                    <>\r\n                        {offers\r\n                            .filter((o) => o.category == category)\r\n                            .map((offer: OfferDto) => (\r\n                                <OfferControl\r\n                                    key={`profile-${offer.id}`}\r\n                                    offer={offer}\r\n                                    value={value.find((o) => o.offerId == offer.id) || initOfferValue(offer)}\r\n                                    onChange={(offerVal: OfferValueDto) => {\r\n                                        const updatedVal = value\r\n                                            .filter((o) => o.offerId != offer.id)\r\n                                            .concat([offerVal]);\r\n                                        onChange(updatedVal);\r\n                                    }}\r\n                                    style={{marginVertical: 10}}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n                apply={(profileOffers: OfferValueDto[]) => onApply(profileOffers)}\r\n            />\r\n        );\r\n    },\r\n);\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        buttonSend: {\r\n            flex: 1,\r\n            backgroundColor: theme.accent,\r\n            marginLeft: 6,\r\n        },\r\n        screenWrapper: {\r\n            backgroundColor: theme.background,\r\n            width: \"100%\",\r\n        },\r\n        topView: {\r\n            width: \"160%\",\r\n            height: 280,\r\n            borderBottomLeftRadius: 200,\r\n            borderBottomRightRadius: 200,\r\n            paddingVertical: 50,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n        scrollWrapper: {\r\n            width: \"100%\",\r\n        },\r\n        formWrapper: {\r\n            flex: 1,\r\n            width: \"90%\",\r\n            maxWidth: 600,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            paddingTop: 40,\r\n            marginBottom: 300,\r\n        },\r\n        name: {\r\n            fontSize: 30,\r\n            color: theme.textWhite,\r\n            marginTop: 10,\r\n        },\r\n        university: {\r\n            fontSize: 14,\r\n            color: theme.textWhite,\r\n        },\r\n        universityContainer: {\r\n            marginVertical: 5,\r\n        },\r\n        avatar: {\r\n            borderColor: theme.cardBackground,\r\n            borderWidth: 2,\r\n        },\r\n        avatarAccessory: {\r\n            width: 40,\r\n            height: 40,\r\n            borderRadius: 20,\r\n            borderWidth: 0,\r\n            borderColor: \"transparent\",\r\n            shadowRadius: 0,\r\n            textShadowRadius: 0,\r\n            color: \"#444\",\r\n        },\r\n        cardText: {\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(EditProfileForm);\r\n","import {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {MainNavigatorTabs} from \"../navigation/types\";\r\nimport EditProfileForm from \"../components/forms/EditProfileForm\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {fetchUser, setProfileFields} from \"../state/profile/actions\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    user: state.profile.user,\r\n}));\r\n\r\ntype TabProfileScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<MainNavigatorTabs, \"TabProfile\">;\r\n\r\nclass TabProfileScreen extends React.Component<TabProfileScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(fetchUser());\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, user, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <EditProfileForm\r\n                    user={user}\r\n                    onChange={(fields) => (dispatch as MyThunkDispatch)(setProfileFields(fields))}\r\n                ></EditProfileForm>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-start\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(TabProfileScreen));\r\n","import React from \"react\";\r\nimport {Modal, TouchableOpacity, View, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\nexport type CustomModalProps = ThemeProps & {\r\n    onHide?: () => void;\r\n    renderContent: (hide: () => void) => JSX.Element;\r\n    modalViewStyle?: ViewStyle;\r\n};\r\n\r\ntype CustomModalState = {\r\n    modalVisible: boolean;\r\n};\r\n\r\nclass CustomModal extends React.Component<CustomModalProps, CustomModalState> {\r\n    constructor(props: CustomModalProps) {\r\n        super(props);\r\n        this.state = {modalVisible: true};\r\n    }\r\n\r\n    setModalVisible(b: boolean): void {\r\n        this.setState({...this.state, modalVisible: b});\r\n        if (!b && this.props.onHide) this.props.onHide();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, modalViewStyle} = this.props;\r\n        const {modalVisible} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <Modal animationType=\"fade\" transparent={true} visible={modalVisible}>\r\n                <TouchableOpacity\r\n                    style={styles.centeredView}\r\n                    activeOpacity={1.0}\r\n                    onPress={() => this.setModalVisible(false)}\r\n                >\r\n                    <View style={[styles.modalView, modalViewStyle]}>\r\n                        {this.props.renderContent(() => this.setModalVisible(false))}\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        centeredView: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.05)\",\r\n        },\r\n        modalView: {\r\n            width: \"80%\",\r\n            maxWidth: 300,\r\n            margin: 20,\r\n            borderRadius: 3,\r\n            paddingVertical: 20,\r\n            paddingHorizontal: 30,\r\n            alignItems: \"center\",\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 2,\r\n            },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 5,\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(CustomModal);\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {UserProfile} from \"../../model/user-profile\";\r\n\r\nexport type BlockProfileModalProps = ThemeProps &\r\n    Partial<CustomModalProps> & {onBlock: () => void; profile: UserProfile};\r\n\r\nclass BlockProfileModal extends React.Component<BlockProfileModalProps> {\r\n    render() {\r\n        const {theme, profile, onBlock, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"block.warning\", {firstname: profile.firstName, lastname: profile.lastName})}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    if (onBlock) onBlock();\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"block.action\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textWhite,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BlockProfileModal);\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport {Avatar, withTheme} from \"react-native-elements\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport BlockProfileModal from \"./modals/BlockProfileModal\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport {blockProfile} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport FormattedUniversity from \"./FormattedUniversity\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\nimport {OfferValueDto, SpokenLanguageDto} from \"../api/dto\";\r\nimport {styleTextLight, styleTextThin} from \"../styles/general\";\r\n\r\n// Component props\r\nexport type ProfilePreviewProps = ThemeProps & {\r\n    profile: UserProfile;\r\n    style?: ViewStyle;\r\n    onExpand?: (layout: LayoutRectangle) => void;\r\n    onSwipeLeft?: () => void;\r\n    onSwipeRight?: () => void;\r\n    onHidden?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    expanded: boolean;\r\n    animating: boolean;\r\n    height: ReAnimated.Value<number>;\r\n    blockModalOpen: boolean;\r\n};\r\n\r\nclass ProfilePreview extends React.Component<ProfilePreviewProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ProfilePreviewProps) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            height: new ReAnimated.Value(PROFILE_PREVIEW_COLLAPSED_HEIGHT),\r\n            blockModalOpen: false,\r\n            animating: false,\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    expand() {\r\n        const duration = 200;\r\n        this.setState({...this.state, animating: true});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_EXPANDED_HEIGHT,\r\n            duration,\r\n            easing: Easing.elastic(1.0),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false, expanded: true}), duration);\r\n    }\r\n\r\n    collapse() {\r\n        const duration = 100;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: PROFILE_PREVIEW_COLLAPSED_HEIGHT,\r\n            duration,\r\n            easing: Easing.out(Easing.linear),\r\n        }).start();\r\n        setTimeout(() => this.setState({...this.state, animating: false}), duration);\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = this.state.expanded ? 160 : 120;\r\n        this.setState({...this.state, animating: true, expanded: false});\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    toggleExpanded() {\r\n        if (!this.state.expanded) {\r\n            this.expand();\r\n            if (this.props.onExpand) this.props.onExpand(this.layout);\r\n        } else this.collapse();\r\n    }\r\n\r\n    render() {\r\n        const {theme, profile, style} = this.props;\r\n        const {expanded, animating, height, blockModalOpen} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const university = PARTNER_UNIVERSITIES.find((univ: University) => univ.key == profile.university);\r\n        const fullName = profile.firstName + \" \" + profile.lastName;\r\n        //const fullName = profile.firstName.length % 2 == 0 ? profile.firstName + \" \" + profile.lastName : \"Jimmy Jim McLongname\";\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        // if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                        // TODO decide\r\n                        this.hide(() => {\r\n                            if (this.props.onSwipeLeft) this.props.onSwipeLeft();\r\n                        });\r\n                    }}\r\n                    onSwipeableLeftWillOpen={() => {\r\n                        // if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                        this.hide(() => {\r\n                            if (this.props.onSwipeRight) this.props.onSwipeRight();\r\n                        });\r\n                    }}\r\n                    leftThreshold={100}\r\n                    rightThreshold={100}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={[styles.swipeAction, styles.swipeActionRight]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentRight]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionHide\")}</Text>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                    renderLeftActions={() => (\r\n                        <View style={[styles.swipeAction, styles.swipeActionLeft]}>\r\n                            <View style={[styles.swipeActionContent, styles.swipeActionContentLeft]}>\r\n                                <Text style={styles.swipeActionText}>{i18n.t(\"matching.actionLike\")}</Text>\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => this.toggleExpanded()}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.collapsedContent}>\r\n                            <View style={styles.avatarContainer}>\r\n                                <Avatar\r\n                                    size={120}\r\n                                    rounded\r\n                                    title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                    containerStyle={styles.avatar}\r\n                                    source={\r\n                                        profile.avatarUrl && profile.avatarUrl !== \"\"\r\n                                            ? {uri: profile.avatarUrl}\r\n                                            : undefined\r\n                                    }\r\n                                ></Avatar>\r\n                            </View>\r\n                            <View style={styles.infoContainer}>\r\n                                <Text style={styles.name}>{fullName}</Text>\r\n                                {university && <FormattedUniversity style={styles.infoText} university={university} />}\r\n                                <Text style={styles.infoText}>\r\n                                    {i18n.t(`genders.${profile.gender}`)}\r\n                                    {\", \"}\r\n                                    {i18n.t(`allRoles.${profile.type}`)} (\r\n                                    {profile.type == \"staff\"\r\n                                        ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n                                        : i18n.t(`degrees.${profile.degree}`)}\r\n                                    )\r\n                                </Text>\r\n                                {/*<Text style={styles.infoText}>{i18n.t(`genders.${profile.gender}`)}</Text>*/}\r\n                            </View>\r\n                        </View>\r\n                        {(expanded || animating) && (\r\n                            <View style={styles.expandedContent}>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.languages.map((l: SpokenLanguageDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${l.code}`}\r\n                                            text={`${i18n.t(`languageNames.${l.code}`)}${\r\n                                                l.level != \"native\" ? ` (${l.level.toUpperCase()})` : \"\"\r\n                                            }`}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"offers\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.profileOffers.map((offer: OfferValueDto) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${offer.offerId}`}\r\n                                            text={i18n.t(`allOffers.${offer.offerId}.name`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                {/*<Text style={styles.expandedSectionTitle}>{i18n.t(\"fieldsOfEducation\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.educationFields.map((fieldId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${fieldId}`}\r\n                                            text={i18n.t(`educationFields.${fieldId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                {/*\r\n                                <Text style={styles.expandedSectionTitle}>{i18n.t(\"interests\")}</Text>\r\n                                <View style={styles.chipsContainer}>\r\n                                    {profile.interests.map((interestId: string) => (\r\n                                        <ItemChip\r\n                                            key={`${profile.id}-${interestId}`}\r\n                                            text={i18n.t(`interests.${interestId}`)}\r\n                                        />\r\n                                    ))}\r\n                                </View>\r\n                                */}\r\n                                <TouchableOpacity\r\n                                    style={styles.blockButton}\r\n                                    onPress={() => this.setState({...this.state, blockModalOpen: true})}\r\n                                >\r\n                                    <MaterialIcons style={styles.blockButtonIcon} name=\"block\" />\r\n                                </TouchableOpacity>\r\n                                {blockModalOpen && (\r\n                                    <BlockProfileModal\r\n                                        profile={profile}\r\n                                        onHide={() => this.setState({...this.state, blockModalOpen: false})}\r\n                                        onBlock={() => {\r\n                                            this.hide(() =>\r\n                                                (store.dispatch as MyThunkDispatch)(blockProfile(profile.id)),\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            </View>\r\n                        )}\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\nconst chipStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        chip: {\r\n            backgroundColor: theme.accentSlight,\r\n            borderRadius: 6,\r\n            //paddingHorizontal: 7,\r\n            paddingHorizontal: 4,\r\n            paddingVertical: 2,\r\n            marginHorizontal: 2,\r\n            marginVertical: 2,\r\n            flexGrow: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        chipText: {\r\n            fontSize: 14,\r\n            color: theme.textBlack,\r\n        },\r\n    });\r\n});\r\n\r\nconst ItemChip = withTheme(\r\n    ({text, theme}: {text: string} & ThemeProps): JSX.Element => {\r\n        const styles = chipStyles(theme);\r\n        return (\r\n            <View style={styles.chip}>\r\n                <Text style={styles.chipText}>{text}</Text>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 10;\r\nconst cardPadding = 10;\r\nconst PROFILE_PREVIEW_COLLAPSED_HEIGHT = 180;\r\nconst PROFILE_PREVIEW_EXPANDED_HEIGHT = 400;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 10,\r\n            elevation: 1,\r\n            padding: cardPadding,\r\n            overflow: \"hidden\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"column\",\r\n        },\r\n        swipeAction: {\r\n            width: \"100%\",\r\n            marginHorizontal: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionLeft: {\r\n            paddingRight: sideMargin * 2,\r\n        },\r\n        swipeActionRight: {\r\n            paddingLeft: sideMargin * 2,\r\n        },\r\n        swipeActionContent: {\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n        },\r\n        swipeActionContentRight: {\r\n            backgroundColor: theme.accentTernary,\r\n            alignItems: \"flex-end\",\r\n        },\r\n        swipeActionContentLeft: {\r\n            backgroundColor: theme.accentSlight,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            textTransform: \"uppercase\",\r\n            ...styleTextThin,\r\n        },\r\n\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"#000\",\r\n            opacity: 0.1,\r\n            alignSelf: \"center\",\r\n            marginBottom: 5,\r\n        },\r\n\r\n        // Card content\r\n\r\n        collapsedContent: {\r\n            flexDirection: \"row\",\r\n            height: PROFILE_PREVIEW_COLLAPSED_HEIGHT - verticalSpacing * 2 - cardPadding * 2,\r\n        },\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 22,\r\n            letterSpacing: 0.8,\r\n            marginBottom: 5,\r\n            flexShrink: 1, // Ensures text wrapping\r\n            color: theme.text,\r\n        },\r\n        infoText: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.textLight,\r\n            flexShrink: 1, // Ensures text wrapping\r\n        },\r\n\r\n        expandedContent: {\r\n            flex: 1,\r\n        },\r\n\r\n        chipsContainer: {\r\n            // TODO clean-up\r\n            /*flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            marginTop: 4,*/\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n            //maxHeight: 58,\r\n            overflow: \"hidden\",\r\n        },\r\n        expandedSectionTitle: {\r\n            ...styleTextLight,\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            marginTop: 5,\r\n            color: theme.text,\r\n        },\r\n        actionContainer: {\r\n            flexDirection: \"column\",\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        blockButton: {\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            right: 0,\r\n        },\r\n        blockButtonIcon: {\r\n            fontSize: 30,\r\n            color: theme.error,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ProfilePreview);\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport {StackNavigationProp, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {\r\n    ActivityIndicator,\r\n    LayoutRectangle,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n    RefreshControl,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {UserProfile} from \"../model/user-profile\";\r\nimport ProfilePreview from \"../components/ProfilePreview\";\r\nimport {dislikeProfile, fetchProfiles, likeProfile, refreshFetchedProfiles} from \"../state/matching/actions\";\r\nimport store from \"../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMatchingRoot} from \"../navigation/types\";\r\nimport {PROFILES_FETCH_LIMIT} from \"../constants/config\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profiles: state.matching.fetchedProfiles,\r\n    fetchingProfiles: state.matching.profilesPagination.fetching,\r\n    justRefreshed: state.matching.profilesPagination.page == 1,\r\n}));\r\n\r\n// Component props\r\ntype TabMatchingScreenProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackScreenProps<TabMatchingRoot, \"TabMatchingScreen\">;\r\n\r\n// Component state\r\ntype TabMatchingScreenState = {\r\n    hiddenIds: {[key: string]: boolean};\r\n};\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass TabMatchingScreen extends React.Component<TabMatchingScreenProps, TabMatchingScreenState> {\r\n    scrollViewRef: React.RefObject<ScrollView> = React.createRef<ScrollView>();\r\n\r\n    constructor(props: TabMatchingScreenProps) {\r\n        super(props);\r\n        this.state = {hiddenIds: {}};\r\n    }\r\n\r\n    fetchMore() {\r\n        const {fetchingProfiles, dispatch} = this.props;\r\n        if (!fetchingProfiles) (dispatch as MyThunkDispatch)(fetchProfiles());\r\n    }\r\n\r\n    hideProfile(p: UserProfile) {\r\n        this.setState({...this.state, hiddenIds: {...this.state.hiddenIds, [p.id]: true}});\r\n    }\r\n\r\n    componentDidMount() {\r\n        const shownProfiles = this.props.profiles.length - Object.keys(this.state.hiddenIds).length;\r\n        if (shownProfiles == 0) this.fetchMore();\r\n    }\r\n\r\n    componentDidUpdate(oldProps: TabMatchingScreenProps) {\r\n        if (this.props.navigation.isFocused()) {\r\n            const shownProfiles = this.props.profiles.filter((p) => !this.state.hiddenIds[p.id]).length;\r\n            if (shownProfiles < PROFILES_FETCH_LIMIT) this.fetchMore();\r\n            // Reset the hidden profiles when the user purposedly refreshes\r\n            if (!oldProps.justRefreshed && this.props.justRefreshed) this.setState({...this.state, hiddenIds: {}});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {profiles, theme, fetchingProfiles, dispatch} = this.props;\r\n        const {hiddenIds} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const previewComponents = profiles\r\n            .filter((p) => !hiddenIds[p.id])\r\n            .map((profile: UserProfile) => (\r\n                <ProfilePreview\r\n                    key={profile.id}\r\n                    profile={profile}\r\n                    onExpand={(layout: LayoutRectangle) => {\r\n                        const scroll = this.scrollViewRef.current;\r\n                        if (scroll) scroll.scrollTo({y: layout.y, animated: true});\r\n                    }}\r\n                    onSwipeRight={() => (dispatch as MyThunkDispatch)(likeProfile(profile.id))}\r\n                    onSwipeLeft={() => (dispatch as MyThunkDispatch)(dislikeProfile(profile.id))}\r\n                    onHidden={() => this.hideProfile(profile)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView\r\n                    ref={this.scrollViewRef}\r\n                    style={styles.scroller}\r\n                    refreshControl={\r\n                        <RefreshControl\r\n                            refreshing={fetchingProfiles}\r\n                            onRefresh={() => store.dispatch(refreshFetchedProfiles())}\r\n                        />\r\n                    }\r\n                    onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                        const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                        const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                        if (distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                    }}\r\n                >\r\n                    <View style={styles.matchContainer}>\r\n                        {previewComponents}\r\n                        <View style={styles.loadingIndicatorContainer}>\r\n                            {fetchingProfiles && profiles.length > 0 && (\r\n                                <ActivityIndicator size=\"large\" color={theme.accentSecondary} />\r\n                            )}\r\n                        </View>\r\n                        {!fetchingProfiles && previewComponents.length == 0 && (\r\n                            <View style={styles.noResultsContainer}>\r\n                                <Text style={styles.noResultsText1}>{i18n.t(\"matching.noResults\")}</Text>\r\n                                <Text style={styles.noResultsText2}>{i18n.t(\"matching.noResultsAdvice\")}</Text>\r\n                            </View>\r\n                        )}\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        topBar: {\r\n            flexBasis: 90,\r\n            paddingTop: 40,\r\n            paddingHorizontal: 20,\r\n            width: \"100%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n        },\r\n        separator: {\r\n            marginVertical: 20,\r\n            height: 1,\r\n            width: \"100%\",\r\n        },\r\n        scroller: {\r\n            width: \"100%\",\r\n        },\r\n        matchContainer: {\r\n            flex: 1,\r\n            borderStyle: \"solid\",\r\n            borderColor: \"red\",\r\n            borderWidth: 0,\r\n        },\r\n        loadingIndicatorContainer: {\r\n            marginVertical: 10,\r\n            height: 50,\r\n        },\r\n        filtersIcon: {\r\n            paddingHorizontal: 5,\r\n            fontSize: 26,\r\n            color: theme.textLight,\r\n        },\r\n        headerContainer: {\r\n            flexDirection: \"row\",\r\n            paddingRight: 10,\r\n        },\r\n        noResultsContainer: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n        },\r\n        noResultsText1: {\r\n            fontSize: 20,\r\n            letterSpacing: 0.75,\r\n            color: theme.text,\r\n            marginVertical: 5,\r\n        },\r\n        noResultsText2: {\r\n            fontSize: 16,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\ntype MatchingHeaderRightProps = {\r\n    navigation: StackNavigationProp<TabMatchingRoot, \"TabMatchingScreen\">;\r\n} & ThemeProps;\r\n\r\nexport const MatchingHeaderRight = withTheme(\r\n    ({navigation, theme}: MatchingHeaderRightProps): JSX.Element => {\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <View style={styles.headerContainer}>\r\n                {/*<TouchableOpacity onPress={() => store.dispatch(refreshFetchedProfiles())}>\r\n                <MaterialIcons name=\"refresh\" size={32} />\r\n            </TouchableOpacity>*/}\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"MatchFilteringScreen\")}>\r\n                    <FontAwesome name=\"sliders\" style={styles.filtersIcon} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    },\r\n);\r\n\r\nexport default reduxConnector(withTheme(TabMatchingScreen));\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {PARTNER_UNIVERSITIES, University} from \"../constants/universities\";\r\n\r\nlet values: string[] = [];\r\n\r\n// Component props\r\nexport type MultiUniversityPickerProps = {\r\n    universities: string[];\r\n    onChange?: (unis: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nclass MultiUniversityPicker extends React.Component<MultiUniversityPickerProps> {\r\n    componentDidMount(): void {\r\n        if (values.length == 0) values = PARTNER_UNIVERSITIES.map((uni: University) => uni.key);\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {universities, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(univKey: string) => `universities.${univKey}`}\r\n                selected={universities}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"universitiesPicker.placeholder\")}\r\n                multipleText={i18n.t(\"universitiesPicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"universitiesPicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiUniversityPicker;\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport {Degree, DEGREES} from \"../constants/profile-constants\";\r\nimport {ButtonGroup, ButtonGroupProps, withTheme} from \"react-native-elements\";\r\nimport {getToggleStyleProps} from \"../styles/toggles\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {ViewStyle} from \"react-native\";\r\n\r\nexport type GenderToggleMultiProps = {\r\n    degrees: Degree[];\r\n    onSelect?: (degrees: Degree[]) => void;\r\n    noButtonVariant?: boolean;\r\n    style?: ViewStyle;\r\n} & Partial<ButtonGroupProps> &\r\n    ThemeProps;\r\n\r\nfunction DegreeToggleMulti(props: GenderToggleMultiProps): JSX.Element {\r\n    const buttonLabels = DEGREES.map((r: string) => i18n.t(`degrees.${r}`));\r\n    const {theme, style, degrees, noButtonVariant, onSelect, ...otherProps} = props;\r\n\r\n    const styleProps = getToggleStyleProps(noButtonVariant || false, theme);\r\n\r\n    return (\r\n        <ButtonGroup\r\n            onPress={(idx: number) => {\r\n                if (onSelect) {\r\n                    const indices: number[] = typeof idx == \"object\" ? (idx as number[]) : [idx];\r\n                    onSelect(indices.map((i: number) => DEGREES[i]));\r\n                }\r\n            }}\r\n            selectMultiple={true}\r\n            selectedIndexes={degrees.map((degree: Degree) => DEGREES.indexOf(degree))}\r\n            buttons={buttonLabels}\r\n            {...styleProps}\r\n            containerStyle={[styleProps.containerStyle, style]}\r\n            buttonContainerStyle={[styleProps.buttonContainerStyle, {marginHorizontal: 2}]}\r\n            buttonStyle={[styleProps.buttonStyle, {paddingHorizontal: 0}]}\r\n            {...otherProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default withTheme(DegreeToggleMulti);\r\n","import * as React from \"react\";\r\nimport i18n from \"i18n-js\";\r\nimport MultiPicker, {MultiPickerProps} from \"./MultiPicker\";\r\nimport {LANGUAGES_CODES} from \"../model/languages\";\r\n\r\n// Component props\r\nexport type MultiLanguagePickerProps = {\r\n    languages?: string[];\r\n    onChange?: (languages: string[]) => void;\r\n} & Partial<MultiPickerProps>;\r\n\r\nconst values = LANGUAGES_CODES;\r\n\r\nclass MultiLanguagePicker extends React.Component<MultiLanguagePickerProps> {\r\n    render(): JSX.Element {\r\n        const {languages, onChange, ...otherProps} = this.props;\r\n\r\n        return (\r\n            <MultiPicker\r\n                values={values}\r\n                genLabel={(languageId: string) => `languageNames.${languageId}`}\r\n                selected={languages}\r\n                onChange={(values: string[]) => {\r\n                    if (onChange) onChange(values);\r\n                }}\r\n                placeholder={i18n.t(\"languagePicker.placeholderMultiple\")}\r\n                multipleText={i18n.t(\"languagePicker.multiple\")}\r\n                searchablePlaceholder={i18n.t(\"languagePicker.searchPlaceholder\")}\r\n                {...otherProps}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiLanguagePicker;\r\n","import * as React from \"react\";\r\nimport {ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {OfferCategory, OfferDto} from \"../api/dto\";\r\nimport MultiUniversityPicker from \"../components/MultiUniversityPicker\";\r\nimport {refreshFetchedProfiles, setMatchingFilters} from \"../state/matching/actions\";\r\nimport {AppState, MatchingFiltersState} from \"../state/types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport DegreeToggleMulti from \"../components/DegreeToggleMulti\";\r\nimport MultiLanguagePicker from \"../components/MultiLanguagePicker\";\r\nimport {Degree, Role} from \"../constants/profile-constants\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport store from \"../state/store\";\r\nimport RoleToggleMulti from \"../components/RoleToggleMulti\";\r\nimport {StackHeaderLeftButtonProps} from \"@react-navigation/stack\";\r\nimport {defaultMatchingFilters} from \"../state/matching/reducer\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\n\r\n// Map props from state\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    offers: state.profile.offers,\r\n    filters: state.matching.filters,\r\n}));\r\n\r\n// Component props\r\ntype MatchFilteringScreenProps = ThemeProps & ConnectedProps<typeof reduxConnector>;\r\n\r\n// Component state\r\ntype MatchFilteringScreenState = {\r\n    localFilters: MatchingFiltersState;\r\n};\r\n\r\nexport const Separator = withTheme(({theme}: ThemeProps) => {\r\n    return <View style={themedStyles(theme).separator}></View>;\r\n});\r\n\r\nconst filteringScreenRef = React.createRef<MatchFilteringScreen>();\r\n\r\nclass MatchFilteringScreen extends React.Component<MatchFilteringScreenProps, MatchFilteringScreenState> {\r\n    haveFiltersChanged: boolean;\r\n\r\n    constructor(props: MatchFilteringScreenProps) {\r\n        super(props);\r\n        this.state = {\r\n            localFilters: defaultMatchingFilters(),\r\n        };\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    updateLocalOfferFilters(id: string, value: boolean) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({\r\n            ...this.state,\r\n            localFilters: {...this.state.localFilters, offers: {...this.state.localFilters.offers, [id]: value}},\r\n        });\r\n    }\r\n\r\n    updateLocalFilters(filters: Partial<MatchingFiltersState>) {\r\n        this.haveFiltersChanged = true;\r\n        this.setState({...this.state, localFilters: {...this.state.localFilters, ...filters}});\r\n    }\r\n\r\n    resetLocalFilters() {\r\n        this.updateLocalFilters(defaultMatchingFilters());\r\n    }\r\n\r\n    applyFilters() {\r\n        if (this.haveFiltersChanged) this.props.dispatch(setMatchingFilters(this.state.localFilters));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Set filters from the store when mounting\r\n        this.updateLocalFilters(this.props.filters);\r\n        this.haveFiltersChanged = false;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, offers} = this.props;\r\n        const filters = this.state.localFilters;\r\n        const styles = themedStyles(theme);\r\n\r\n        const categories = Object.values(OfferCategory);\r\n\r\n        const offerSections = categories.map((category: OfferCategory) => (\r\n            <View key={category} style={styles.sectionContainer}>\r\n                <Separator></Separator>\r\n                <Text style={styles.sectionTitle}>{i18n.t(`offerCategories.${category}`)}</Text>\r\n                {offers\r\n                    .filter((o: OfferDto) => o.category == category)\r\n                    .map((o: OfferDto) => (\r\n                        <View key={o.id} style={styles.entryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(`allOffers.${o.id}.name`)}</Text>\r\n                            <Switch\r\n                                value={filters.offers[o.id] || false}\r\n                                onValueChange={(value: boolean) => this.updateLocalOfferFilters(o.id, value)}\r\n                            ></Switch>\r\n                        </View>\r\n                    ))}\r\n            </View>\r\n        ));\r\n\r\n        return (\r\n            <ScrollView style={styles.scroll} contentContainerStyle={styles.scrollContainer}>\r\n                <TouchableOpacity style={styles.resetButton} onPress={() => this.resetLocalFilters()}>\r\n                    <Text style={styles.resetButtonText}>{i18n.t(\"matching.filtering.buttonReset\")}</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.sectionContainer}>\r\n                    <Text style={styles.sectionTitle}>{i18n.t(\"matching.filtering.sectionGeneral\")}</Text>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"university\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiUniversityPicker\r\n                                universities={filters.universities}\r\n                                showSelected={false}\r\n                                onChange={(universities: string[]) => this.updateLocalFilters({universities})}\r\n                            ></MultiUniversityPicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({universities: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.entryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"spokenLanguages\")}</Text>\r\n                        <View style={styles.entryControls}>\r\n                            <MultiLanguagePicker\r\n                                languages={filters.languages}\r\n                                showSelected={false}\r\n                                onChange={(languages: string[]) => this.updateLocalFilters({languages})}\r\n                            ></MultiLanguagePicker>\r\n                            <ClearFilterButton onPress={() => this.updateLocalFilters({languages: []})} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.twoLineEntryContainer}>\r\n                        <Text style={styles.entryLabel}>{i18n.t(\"profileTypes\")}</Text>\r\n                        <RoleToggleMulti\r\n                            roles={filters.types}\r\n                            onSelect={(types: Role[]) => this.updateLocalFilters({types})}\r\n                            noButtonVariant={true}\r\n                        ></RoleToggleMulti>\r\n                    </View>\r\n                    {filters.types.indexOf(\"student\") != -1 && (\r\n                        <View style={styles.twoLineEntryContainer}>\r\n                            <Text style={styles.entryLabel}>{i18n.t(\"levelOfStudy\")}</Text>\r\n                            <DegreeToggleMulti\r\n                                degrees={filters.degrees}\r\n                                onSelect={(degrees: Degree[]) => this.updateLocalFilters({degrees})}\r\n                                style={{width: \"100%\"}}\r\n                                noButtonVariant={true}\r\n                            ></DegreeToggleMulti>\r\n                        </View>\r\n                    )}\r\n                </View>\r\n                {offerSections}\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        scroll: {\r\n            flex: 1,\r\n            backgroundColor: theme.background,\r\n        },\r\n        scrollContainer: {\r\n            flexDirection: \"column\",\r\n            padding: 40,\r\n        },\r\n        sectionContainer: {\r\n            width: \"100%\",\r\n        },\r\n        sectionTitle: {\r\n            fontSize: 20,\r\n            letterSpacing: 1,\r\n            marginBottom: 5,\r\n            color: theme.text,\r\n        },\r\n        entryContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n        },\r\n        twoLineEntryContainer: {\r\n            flexDirection: \"column\",\r\n        },\r\n        entryLabel: {\r\n            fontSize: 16,\r\n            marginVertical: 7,\r\n            marginRight: 10,\r\n            color: theme.textLight,\r\n        },\r\n        entryControls: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginVertical: 2,\r\n        },\r\n        separator: {\r\n            height: 1,\r\n            width: \"100%\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 20,\r\n        },\r\n        resetButton: {\r\n            width: \"100%\",\r\n            maxWidth: 200,\r\n            paddingVertical: 7,\r\n            marginBottom: 20,\r\n            backgroundColor: theme.accentSlight,\r\n            alignItems: \"center\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n        },\r\n        resetButtonText: {\r\n            fontSize: 14,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n        },\r\n    });\r\n});\r\n\r\nconst headerStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        headerButtonIcon: {\r\n            fontSize: 32,\r\n            paddingRight: 10,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport const FilteringHeaderLeft = withTheme(\r\n    (props: StackHeaderLeftButtonProps & ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(props.theme);\r\n        return (\r\n            <TouchableOpacity style={{padding: 10}} onPress={props.onPress}>\r\n                <MaterialIcons name=\"close\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const FilteringHeaderRight = withTheme(\r\n    ({theme}: ThemeProps): JSX.Element => {\r\n        const styles = headerStyles(theme);\r\n        return (\r\n            <TouchableOpacity\r\n                style={{paddingVertical: 10}}\r\n                onPress={() => {\r\n                    if (filteringScreenRef.current) filteringScreenRef.current.applyFilters();\r\n                    rootNavigate(\"TabMatchingScreen\");\r\n                    store.dispatch(refreshFetchedProfiles());\r\n                }}\r\n            >\r\n                <MaterialIcons name=\"check\" style={styles.headerButtonIcon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nexport const ClearFilterButton = withTheme(\r\n    ({theme, onPress}: ThemeProps & {onPress: () => void}): JSX.Element => (\r\n        <TouchableOpacity onPress={onPress}>\r\n            <MaterialIcons name=\"close\" style={{fontSize: 28, color: theme.text}} />\r\n        </TouchableOpacity>\r\n    ),\r\n);\r\n\r\n//return <MaterialIcons name=\"refresh\" size={32} style={{paddingRight: 10}} />;\r\n/*\r\n<TouchableOpacity style={{marginRight: 16, padding: 10}} onPress={() => store.dispatch(resetMatchingFilters())}>\r\n    <Text>reset</Text>\r\n</TouchableOpacity>\r\n*/\r\n\r\nconst wrapper = (props: MatchFilteringScreenProps) => <MatchFilteringScreen ref={filteringScreenRef} {...props} />;\r\nexport default reduxConnector(withTheme(wrapper));\r\n","import * as React from \"react\";\r\nimport {\r\n    LayoutChangeEvent,\r\n    LayoutRectangle,\r\n    Text,\r\n    TouchableOpacity,\r\n    View,\r\n    ViewStyle,\r\n    Animated,\r\n    StyleSheet,\r\n} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ReAnimated, {Easing} from \"react-native-reanimated\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\nimport {ChatRoom, ChatRoomUser} from \"../../model/chat-room\";\r\nimport store from \"../../state/store\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {joinChatRoom} from \"../../state/messaging/actions\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatRoomCardProps = {\r\n    room: ChatRoom;\r\n    style?: ViewStyle;\r\n    onPress?: () => void;\r\n    onHidden?: () => void;\r\n} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps;\r\n\r\n// Component state\r\nexport type ProfilePreviewState = {\r\n    height: ReAnimated.Value<number>;\r\n};\r\n\r\nclass ChatRoomCard extends React.Component<ChatRoomCardProps, ProfilePreviewState> {\r\n    layout: LayoutRectangle;\r\n\r\n    constructor(props: ChatRoomCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            height: new ReAnimated.Value(CARD_HEIGHT),\r\n        };\r\n        this.layout = {x: 0, y: 0, width: 0, height: 0};\r\n    }\r\n\r\n    hide(onFinish?: () => void) {\r\n        const duration = 120;\r\n        ReAnimated.timing(this.state.height, {\r\n            toValue: 0,\r\n            duration,\r\n            easing: Easing.linear,\r\n        }).start();\r\n        setTimeout(() => {\r\n            if (onFinish) onFinish();\r\n            if (this.props.onHidden) this.props.onHidden();\r\n        }, duration);\r\n    }\r\n\r\n    render() {\r\n        const {theme, room, style, onPress, profileId} = this.props;\r\n        const {height} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        const user = room.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n\r\n        let lastMessageComponent = <></>;\r\n\r\n        if (room.lastMessage) {\r\n            const time = room.lastMessage.createdAt;\r\n            const pad = (num: number) => (num + \"\").padStart(2, \"0\");\r\n            lastMessageComponent = (\r\n                <>\r\n                    <Text style={styles.lastMessageText} numberOfLines={1}>\r\n                        {room.lastMessage.user.name.split(\" \")[0]}: {room.lastMessage.text}\r\n                    </Text>\r\n                    <Text style={styles.lastMessageTime}>\r\n                        {pad(time.getHours())}:{pad(time.getMinutes())}\r\n                    </Text>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <ReAnimated.View\r\n                style={[styles.wrapper, style, {height}]}\r\n                onLayout={(e: LayoutChangeEvent) => {\r\n                    this.layout = e.nativeEvent.layout;\r\n                }}\r\n            >\r\n                <Swipeable\r\n                    containerStyle={styles.swipeableContainer}\r\n                    childrenContainerStyle={styles.swipeable}\r\n                    onSwipeableRightWillOpen={() => {\r\n                        //this.hide();\r\n                    }}\r\n                    rightThreshold={100}\r\n                    overshootRight={false}\r\n                    renderRightActions={() => (\r\n                        <Animated.View style={styles.swipeAction}>\r\n                            <View style={styles.swipeActionContent}>\r\n                                <SwipeActionButton icon=\"notifications-off\" color={\"#ccc\"}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"report\" color={theme.warn}></SwipeActionButton>\r\n                                <SwipeActionButton icon=\"close\" color={theme.error}></SwipeActionButton>\r\n                            </View>\r\n                        </Animated.View>\r\n                    )}\r\n                >\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            if (onPress) onPress();\r\n                            (store.dispatch as MyThunkDispatch)(joinChatRoom(room));\r\n                        }}\r\n                        activeOpacity={0.75}\r\n                        style={styles.touchable}\r\n                    >\r\n                        <View style={styles.avatarContainer}>\r\n                            <GiftedAvatar avatarStyle={styles.avatar} user={user}></GiftedAvatar>\r\n                        </View>\r\n                        <View style={styles.infoContainer}>\r\n                            <Text style={styles.name}>{user.name}</Text>\r\n                            <View style={styles.lastMessage}>{lastMessageComponent}</View>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </Swipeable>\r\n            </ReAnimated.View>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n                            <Avatar\r\n                                size={CARD_HEIGHT - verticalSpacing * 2 - 20}\r\n                                rounded\r\n                                title={(profile.firstName[0] + profile.lastName[0]).toUpperCase()}\r\n                                containerStyle={styles.avatar}\r\n                                source={profile.avatar && profile.avatar !== \"\" ? {uri: profile.avatar} : undefined}\r\n                            ></Avatar>\r\n                            *\r\n/*\r\n<Text style={styles.infoText}>\r\n    {i18n.t(`allRoles.${profile.staffRole ? \"staff\" : \"student\"}`)} (\r\n    {profile.staffRole\r\n        ? i18n.t(`staffRoles.${profile.staffRole}`)\r\n        : i18n.t(`degrees.${profile.degree}`)}\r\n    )\r\n</Text>\r\n*/\r\ntype SwipeActionProps = {icon: string; color?: string; onPress?: () => void};\r\n\r\nconst SwipeActionButton = withTheme(\r\n    (props: SwipeActionProps & ThemeProps): JSX.Element => {\r\n        const {icon, color, onPress, theme} = props;\r\n        const styles = themedStyles(theme);\r\n        return (\r\n            <TouchableOpacity onPress={onPress} style={[styles.swipeActionButton, {backgroundColor: color}]}>\r\n                <MaterialIcons style={styles.swipeActionButtonIcon} name={icon} />\r\n            </TouchableOpacity>\r\n        );\r\n    },\r\n);\r\n\r\nconst sideMargin = 15;\r\nconst verticalSpacing = 5;\r\nconst CARD_HEIGHT = 75;\r\nconst ACTION_BUTTON_WIDTH = CARD_HEIGHT - verticalSpacing * 2;\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            //paddingHorizontal: 20,\r\n        },\r\n        swipeableContainer: {\r\n            width: \"100%\",\r\n            paddingHorizontal: sideMargin,\r\n            paddingVertical: verticalSpacing,\r\n        },\r\n        swipeable: {\r\n            width: \"100%\",\r\n            borderRadius: 4,\r\n            elevation: 1,\r\n            padding: 10,\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        touchable: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            flexDirection: \"row\",\r\n        },\r\n        swipeAction: {\r\n            width: ACTION_BUTTON_WIDTH * 3,\r\n            //marginHorizontal: sideMargin,\r\n            marginLeft: -sideMargin - 2,\r\n            marginRight: sideMargin,\r\n            marginVertical: verticalSpacing,\r\n        },\r\n        swipeActionContent: {\r\n            flexDirection: \"row\",\r\n            borderTopRightRadius: 4,\r\n            borderBottomRightRadius: 4,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        swipeActionText: {\r\n            fontSize: 24,\r\n            letterSpacing: 2,\r\n            ...styleTextThin,\r\n        },\r\n        swipeActionButton: {\r\n            width: ACTION_BUTTON_WIDTH,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flex: 1,\r\n        },\r\n        swipeActionButtonIcon: {\r\n            color: theme.textWhite,\r\n            fontSize: 22,\r\n        },\r\n\r\n        // Card content\r\n\r\n        avatarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.accentSecondary,\r\n            width: 45,\r\n            height: 45,\r\n            borderRadius: 50,\r\n        },\r\n        infoContainer: {\r\n            flex: 1,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            paddingLeft: 10,\r\n        },\r\n        name: {\r\n            fontSize: 18,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        lastMessage: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            overflow: \"hidden\",\r\n        },\r\n        lastMessageText: {\r\n            color: theme.text,\r\n            fontSize: 14,\r\n            flex: 1,\r\n        },\r\n        lastMessageTime: {\r\n            color: theme.textLight,\r\n            fontSize: 14,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatRoomCard));\r\n","import * as React from \"react\";\r\nimport {\r\n    ScrollView,\r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    RefreshControl,\r\n    KeyboardAvoidingView,\r\n    NativeScrollEvent,\r\n    NativeSyntheticEvent,\r\n} from \"react-native\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {connectToChat, fetchMatchRooms, refreshMatchRooms} from \"../../state/messaging/actions\";\r\nimport {MaterialTopTabScreenProps} from \"@react-navigation/material-top-tabs\";\r\nimport {TabMessagingRoot} from \"../../navigation/types\";\r\nimport {ChatRoom} from \"../../model/chat-room\";\r\nimport ChatRoomCard from \"../../components/messaging/ChatRoomCard\";\r\nimport {ROOMS_FETCH_LIMIT} from \"../../constants/config\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    rooms: state.messaging.matchRooms,\r\n    fetchingRooms: state.messaging.matchRoomsPagination.fetching,\r\n}));\r\n\r\ntype IndividualMessagingTabProps = ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    MaterialTopTabScreenProps<TabMessagingRoot>;\r\n\r\nconst SCROLL_DISTANCE_TO_LOAD = 50;\r\n\r\nclass IndividualMessagingTab extends React.Component<IndividualMessagingTabProps> {\r\n    fetchMore() {\r\n        const {fetchingRooms, dispatch} = this.props;\r\n        if (!fetchingRooms) (dispatch as MyThunkDispatch)(fetchMatchRooms());\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"focus\", () => this.onFocus());\r\n        this.props.navigation.addListener(\"blur\", () => this.onBlur());\r\n        this.onFocus();\r\n    }\r\n\r\n    onFocus() {\r\n        (this.props.dispatch as MyThunkDispatch)(connectToChat());\r\n        if (this.props.rooms.length < ROOMS_FETCH_LIMIT) this.fetchMore();\r\n    }\r\n\r\n    onBlur() {\r\n        //console.log(this.props.navigation.dangerouslyGetState());\r\n        //(this.props.dispatch as MyThunkDispatch)(disconnectFromChat());\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.rooms.length < ROOMS_FETCH_LIMIT) this.fetchMore();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, rooms, fetchingRooms, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <KeyboardAvoidingView style={{flex: 1, width: \"100%\"}}>\r\n                    <ScrollView\r\n                        style={styles.matchesContainer}\r\n                        refreshControl={\r\n                            <RefreshControl\r\n                                refreshing={fetchingRooms}\r\n                                onRefresh={() => (dispatch as MyThunkDispatch)(refreshMatchRooms())}\r\n                            />\r\n                        }\r\n                        onScroll={(e: NativeSyntheticEvent<NativeScrollEvent>) => {\r\n                            const {layoutMeasurement, contentOffset, contentSize} = e.nativeEvent;\r\n                            const distanceToBottom = contentSize.height - contentOffset.y - layoutMeasurement.height;\r\n                            if (distanceToBottom < SCROLL_DISTANCE_TO_LOAD) this.fetchMore();\r\n                        }}\r\n                    >\r\n                        {rooms.map((cr: ChatRoom) => (\r\n                            <ChatRoomCard key={cr.id} room={cr} />\r\n                        ))}\r\n                        {!fetchingRooms && rooms.length == 0 && (\r\n                            <View style={styles.noMatchesContainer}>\r\n                                <Text style={styles.noMatchesText}>{i18n.t(\"messaging.noMatches\")}</Text>\r\n                            </View>\r\n                        )}\r\n                    </ScrollView>\r\n                </KeyboardAvoidingView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n            //height: 250,\r\n        },\r\n        matchesContainer: {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            paddingVertical: 20,\r\n        },\r\n        noMatchesContainer: {\r\n            width: \"80%\",\r\n            alignSelf: \"center\",\r\n            marginVertical: 40,\r\n        },\r\n        noMatchesText: {\r\n            color: theme.text,\r\n            letterSpacing: 0.5,\r\n            fontSize: 18,\r\n            lineHeight: 24,\r\n            textAlign: \"center\",\r\n        },\r\n\r\n        // Search bar\r\n        searchBarContainer: {\r\n            width: \"90%\",\r\n            marginBottom: 10,\r\n        },\r\n        searchBarInputContainer: {\r\n            height: 45,\r\n            backgroundColor: theme.cardBackground,\r\n            elevation: 2,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(IndividualMessagingTab));\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({}));\r\n\r\ntype GroupMessagingTabProps = ConnectedProps<typeof reduxConnector> & ThemeProps;\r\n\r\nclass GroupMessagingTab extends React.Component<GroupMessagingTabProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <Text>Not implemented</Text>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            flex: 1,\r\n            paddingHorizontal: 0,\r\n            paddingVertical: 20,\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(GroupMessagingTab));\r\n","import * as React from \"react\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {useSafeAreaInsets} from \"react-native-safe-area-context\";\r\nimport IndividualMessagingTab from \"../screens/messaging/IndividualMessagingTab\";\r\nimport GroupMessagingTab from \"../screens/messaging/GroupMessagingTab\";\r\nimport i18n from \"i18n-js\";\r\nimport {TabMessagingRoot} from \"./types\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst Tab = createMaterialTopTabNavigator<TabMessagingRoot>();\r\n\r\nexport default function MessagingNavigator(): JSX.Element {\r\n    const insets = useSafeAreaInsets();\r\n    return (\r\n        <Tab.Navigator tabBarOptions={{style: {paddingTop: insets.top}}} initialRouteName=\"IndividualMessagingTab\">\r\n            <Tab.Screen\r\n                name=\"IndividualMessagingTab\"\r\n                options={{\r\n                    tabBarLabel: i18n.t(\"messaging.tabIndividual\"),\r\n                    title: screenTitle(\"IndividualMessagingTab\"),\r\n                }}\r\n                component={IndividualMessagingTab}\r\n            />\r\n            <Tab.Screen\r\n                name=\"GroupMessagingTab\"\r\n                options={{\r\n                    tabBarLabel: i18n.t(\"messaging.tabGroup\"),\r\n                    title: screenTitle(\"GroupMessagingTab\"),\r\n                }}\r\n                component={GroupMessagingTab}\r\n            />\r\n        </Tab.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport LogOutButton from \"../components/LogOutButton\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {styleTextLight} from \"../styles/general\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass TabNotImplementedScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"heart\" />\r\n                <Text style={styles.title}>Thank you for participating in the alpha program.</Text>\r\n                <View style={styles.separator} />\r\n                <Text style={[styles.alphaText, {fontWeight: \"bold\"}]}>\r\n                    Found a bug or have some feedback for us or ideas for the app?\r\n                </Text>\r\n                <Text style={styles.alphaText}>\r\n                    Get in touch with us on Slack and we would be happy to discuss it with you!\r\n                </Text>\r\n                <LogOutButton style={styles.logoutButton} onLogOut={() => rootNavigate(\"LoginScreen\")} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            padding: 50,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: 24,\r\n            color: theme.text,\r\n            ...styleTextLight,\r\n        },\r\n        alphaText: {\r\n            width: \"100%\",\r\n            textAlign: \"left\",\r\n            fontSize: 16,\r\n            color: theme.text,\r\n            marginVertical: 10,\r\n        },\r\n        icon: {\r\n            color: theme.accent,\r\n            fontSize: 48,\r\n            paddingBottom: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            opacity: 0.1,\r\n            width: \"100%\",\r\n            backgroundColor: theme.text,\r\n        },\r\n        logoutButton: {\r\n            marginTop: 80,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TabNotImplementedScreen);\r\n","/* eslint-disable react/display-name */\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createStackNavigator, StackHeaderLeftButtonProps, StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport TabNotImplementedScreen from \"../screens/TabNotImplementedScreen\";\r\nimport {\r\n    MainNavigatorTabs,\r\n    RootNavigatorScreens,\r\n    TabHomeRoot,\r\n    TabMatchingRoot,\r\n    TabNotificationsRoot,\r\n    TabProfileRoot,\r\n} from \"../navigation/types\";\r\nimport TabProfileScreen from \"../screens/TabProfileScreen\";\r\nimport i18n from \"i18n-js\";\r\nimport TabMatchingScreen, {MatchingHeaderRight} from \"../screens/TabMatchingScreen\";\r\nimport MatchFilteringScreen, {FilteringHeaderLeft, FilteringHeaderRight} from \"../screens/MatchFilteringScreen\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport MessagingNavigator from \"./MessagingNavigator\";\r\nimport {Text} from \"react-native\";\r\nimport {LabelPosition} from \"@react-navigation/bottom-tabs/lib/typescript/src/types\";\r\nimport {ThemeProps} from \"../types\";\r\nimport TabHomeScreen from \"../screens/TabHomeScreen\";\r\nimport {screenTitle} from \"./utils\";\r\n\r\nconst TabNavigator = createBottomTabNavigator<MainNavigatorTabs>();\r\n\r\n// Component props\r\nexport type MainNavigatorProps = ThemeProps & StackScreenProps<RootNavigatorScreens, \"MainScreen\">;\r\n\r\nfunction MainNavigatorComponent({theme}: MainNavigatorProps): JSX.Element {\r\n    return (\r\n        <TabNavigator.Navigator\r\n            initialRouteName=\"TabHome\"\r\n            tabBarOptions={{\r\n                activeTintColor: theme.tint,\r\n                style: {height: 55, paddingTop: 5, paddingBottom: 5},\r\n                tabStyle: {flexDirection: \"column\"},\r\n                iconStyle: {flex: 1},\r\n            }}\r\n        >\r\n            <TabNavigator.Screen\r\n                name=\"TabHome\"\r\n                component={TabHomeNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.home\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"home\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMatching\"\r\n                component={TabMatchingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.matching\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"contacts\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabMessaging\"\r\n                component={MessagingNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.messaging\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"message\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabProfile\"\r\n                component={TabProfileNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => <TabBarLabel text={i18n.t(\"tabs.profile\")} {...props} />,\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"person\" {...props} />,\r\n                }}\r\n            />\r\n            <TabNavigator.Screen\r\n                name=\"TabNotifications\"\r\n                component={TabNotificationsNavigator}\r\n                options={{\r\n                    tabBarLabel: (props: TabBarLabelProps) => (\r\n                        <TabBarLabel text={i18n.t(\"tabs.notifications\")} {...props} />\r\n                    ),\r\n                    tabBarIcon: (props: TabBarIconProps) => <TabBarIcon name=\"notifications\" {...props} />,\r\n                }}\r\n            />\r\n        </TabNavigator.Navigator>\r\n    );\r\n}\r\n\r\ntype TabBarIconProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    size: number;\r\n};\r\ntype TabBarLabelProps = {\r\n    focused: boolean;\r\n    color: string;\r\n    position: LabelPosition;\r\n};\r\n\r\n// TODO move\r\nfunction TabBarIcon({name, color}: {name: string} & TabBarIconProps): JSX.Element {\r\n    return <MaterialIcons size={26} name={name} color={color} />;\r\n}\r\n\r\nfunction TabBarLabel({text, color}: {text: string} & TabBarLabelProps): JSX.Element {\r\n    return <Text style={{color, fontSize: 12}}>{text}</Text>;\r\n}\r\n\r\nconst TabHomeStack = createStackNavigator<TabHomeRoot>();\r\n\r\nconst TabHomeNavigator = (): JSX.Element => (\r\n    <TabHomeStack.Navigator>\r\n        <TabHomeStack.Screen\r\n            name=\"TabHomeScreen\"\r\n            component={TabHomeScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabHomeScreen\")}}\r\n        />\r\n    </TabHomeStack.Navigator>\r\n);\r\n\r\nconst TabMatchingStack = createStackNavigator<TabMatchingRoot>();\r\n\r\nconst TabMatchingNavigator = withTheme(\r\n    (): JSX.Element => (\r\n        <TabMatchingStack.Navigator>\r\n            <TabMatchingStack.Screen\r\n                name=\"TabMatchingScreen\"\r\n                component={TabMatchingScreen}\r\n                options={({navigation}) => ({\r\n                    headerShown: true,\r\n                    headerLeftContainerStyle: {display: \"none\"},\r\n                    headerTitle: \"Matching\",\r\n                    headerTitleStyle: {\r\n                        letterSpacing: 0.5,\r\n                        paddingLeft: 10,\r\n                    },\r\n                    headerTitleAlign: \"left\",\r\n                    // eslint-disable-next-line react/display-name\r\n                    headerRight: () => <MatchingHeaderRight navigation={navigation} />,\r\n                    title: screenTitle(\"TabMatchingScreen\"),\r\n                })}\r\n            />\r\n            <TabMatchingStack.Screen\r\n                name=\"MatchFilteringScreen\"\r\n                component={MatchFilteringScreen}\r\n                options={{\r\n                    headerShown: true,\r\n                    headerTitle: \"Filters\",\r\n                    headerTitleAlign: \"center\",\r\n                    headerLeft: (props: StackHeaderLeftButtonProps) => <FilteringHeaderLeft {...props} />,\r\n                    headerRight: () => <FilteringHeaderRight />,\r\n                    title: screenTitle(\"MatchFilteringScreen\"),\r\n                }}\r\n            />\r\n        </TabMatchingStack.Navigator>\r\n    ),\r\n);\r\n\r\nconst TabNotificationsStack = createStackNavigator<TabNotificationsRoot>();\r\n\r\nconst TabNotificationsNavigator = (): JSX.Element => (\r\n    <TabNotificationsStack.Navigator>\r\n        <TabNotificationsStack.Screen\r\n            name=\"TabNotificationsScreen\"\r\n            component={TabNotImplementedScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabNotificationsScreen\")}}\r\n        />\r\n    </TabNotificationsStack.Navigator>\r\n);\r\n\r\nconst TabProfileStack = createStackNavigator<TabProfileRoot>();\r\n\r\nconst TabProfileNavigator = (): JSX.Element => (\r\n    <TabProfileStack.Navigator>\r\n        <TabProfileStack.Screen\r\n            name=\"TabProfileScreen\"\r\n            component={TabProfileScreen}\r\n            options={{headerShown: false, title: screenTitle(\"TabProfileScreen\")}}\r\n        />\r\n    </TabProfileStack.Navigator>\r\n);\r\n\r\nexport default withTheme(MainNavigatorComponent);\r\n","import {Dimensions, StyleSheet, TextStyle} from \"react-native\";\r\nimport {Theme} from \"../types\";\r\nimport {preTheme} from \"./utils\";\r\nimport {styleTextThin} from \"./general\";\r\n\r\nexport const onboardingStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        slideWrapper: {\r\n            //justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        header: {\r\n            marginBottom: 20,\r\n        },\r\n        slideContentWrapper: {\r\n            width: \"75%\",\r\n            height: Dimensions.get(\"window\").height - 50,\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n        },\r\n        slideNavWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 20,\r\n        },\r\n        navButton: {\r\n            padding: 10,\r\n        },\r\n        navButtonIcon: {\r\n            fontSize: 40,\r\n            color: theme.text,\r\n        },\r\n        finishButtonText: {\r\n            fontSize: 20,\r\n        },\r\n        title: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n            marginBottom: 20,\r\n            color: theme.text,\r\n        } as TextStyle,\r\n        subtitle: {\r\n            fontSize: 18,\r\n            textAlign: \"justify\",\r\n            letterSpacing: 0.4,\r\n            lineHeight: 25,\r\n            color: theme.textLight,\r\n        } as TextStyle,\r\n    });\r\n});\r\n\r\nexport const tosSlideStyle = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionsWrapper: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n        },\r\n        actionButton: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: 20,\r\n        },\r\n        actionButtonTextDecline: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.error,\r\n        },\r\n        actionButtonTextAccept: {\r\n            fontSize: 16,\r\n            paddingHorizontal: 2,\r\n            textTransform: \"uppercase\",\r\n            letterSpacing: 1,\r\n            color: theme.okay,\r\n        },\r\n        readMoreText: {\r\n            fontSize: 16,\r\n            lineHeight: 20,\r\n            textAlign: \"justify\",\r\n            marginBottom: 40,\r\n            letterSpacing: 0.4,\r\n            color: theme.textLight,\r\n        },\r\n    });\r\n});\r\n","import * as React from \"react\";\r\nimport {AnyAction} from \"redux\";\r\nimport {\r\n    CreateProfileDto,\r\n    CreateProfileDtoCommon,\r\n    CreateProfileDtoStaff,\r\n    CreateProfileDtoStudent,\r\n    initOfferValue,\r\n    OfferCategory,\r\n    OfferDto,\r\n    OfferValueDto,\r\n} from \"../../api/dto\";\r\nimport OfferControl from \"../../components/OfferControl\";\r\nimport {setOnboardingOfferValue} from \"../../state/auth/actions\";\r\nimport {createProfile} from \"../../state/profile/actions\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, OnboardingState} from \"../../state/types\";\r\n\r\nexport function createOfferControls(\r\n    offers: OfferDto[],\r\n    category: OfferCategory,\r\n    onboardingState: OnboardingState,\r\n    dispatch: React.Dispatch<AnyAction>,\r\n): JSX.Element[] {\r\n    return offers\r\n        .filter((offer: OfferDto) => offer.category == category)\r\n        .map((offer: OfferDto, i: number) => (\r\n            <OfferControl\r\n                key={i}\r\n                offer={offer}\r\n                value={onboardingState.offerValues[offer.id] || initOfferValue(offer)}\r\n                onChange={(value: OfferValueDto) => dispatch(setOnboardingOfferValue(offer.id, value))}\r\n                style={{marginVertical: 20}}\r\n            />\r\n        ));\r\n}\r\n\r\nfunction onboardingStateToDto(onboardingState: OnboardingState): CreateProfileDto | null {\r\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n\r\n    const base: CreateProfileDtoCommon = {\r\n        type: onboardingState.role!,\r\n        firstName: onboardingState.firstname!,\r\n        lastName: onboardingState.lastname!,\r\n        gender: onboardingState.gender!,\r\n        birthdate: onboardingState.birthdate!.toJSON(),\r\n        nationality: onboardingState.nationality!,\r\n        languages: onboardingState.languages,\r\n        interests: onboardingState.interestIds,\r\n        profileOffers: Object.values(onboardingState.offerValues),\r\n        educationFields: onboardingState.educationFields.map((id) => ({id})),\r\n    };\r\n\r\n    if (onboardingState.role == \"student\") {\r\n        return {\r\n            ...base,\r\n            degree: onboardingState.degree,\r\n        } as CreateProfileDtoStudent;\r\n    } else if (onboardingState.role == \"staff\") {\r\n        return {\r\n            ...base,\r\n            staffRole: onboardingState.staffRole,\r\n        } as CreateProfileDtoStaff;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function finishOnboarding(onboardingState: OnboardingState): void {\r\n    const createProfileDto = onboardingStateToDto(onboardingState);\r\n    if (createProfileDto) (store.dispatch as MyThunkDispatch)(createProfile(createProfileDto));\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {Text, View, TouchableOpacity} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {onboardingStyle} from \"../../styles/onboarding\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {finishOnboarding} from \"./helpers\";\r\nimport i18n from \"i18n-js\";\r\nimport store from \"../../state/store\";\r\n\r\nexport type OnboardingScreenProps = {\r\n    index: number;\r\n    previous: () => void;\r\n    next: () => void;\r\n    hasNext: boolean;\r\n};\r\n\r\nexport type OnboardingSlideProps = {\r\n    title?: string;\r\n    subtitle?: string;\r\n    handleSubmit?: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n    hideNavNext?: boolean;\r\n} & OnboardingScreenProps &\r\n    ThemeProps;\r\n\r\nclass OnboardingSlide extends React.Component<OnboardingSlideProps> {\r\n    render(): JSX.Element {\r\n        const {title, subtitle, index, hideNavNext, hasNext, handleSubmit, next, theme} = this.props;\r\n        const styles = onboardingStyle(theme);\r\n\r\n        const hasPrevious = index > 0;\r\n\r\n        const navigateRight = () => {\r\n            if (handleSubmit) handleSubmit();\r\n            else if (hasNext) next();\r\n        };\r\n\r\n        return (\r\n            <View style={styles.slideWrapper}>\r\n                <View style={styles.slideContentWrapper}>\r\n                    <View style={styles.header}>\r\n                        {title && <Text style={styles.title}>{title}</Text>}\r\n                        {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n                    </View>\r\n                    {this.props.children}\r\n                </View>\r\n                <View style={styles.slideNavWrapper}>\r\n                    {hasPrevious && (\r\n                        <TouchableOpacity style={styles.navButton} onPress={() => this.props.previous()}>\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-left\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hideNavNext && hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            /*onPress={() => this.props.navigation.navigate(next)}*/ onPress={navigateRight}\r\n                        >\r\n                            <FontAwesome style={styles.navButtonIcon} name=\"arrow-circle-right\"></FontAwesome>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                    {!hasNext && (\r\n                        <TouchableOpacity\r\n                            style={styles.navButton}\r\n                            onPress={() => {\r\n                                finishOnboarding(store.getState().auth.onboarding);\r\n                            }}\r\n                        >\r\n                            <Text style={styles.finishButtonText}>{i18n.t(\"onboarding.submit\")}</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingSlide);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport {Keyboard, KeyboardAvoidingView} from \"react-native\";\r\nimport {FormTextInput} from \"../../components/FormTextInput\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_FIRSTNAME, VALIDATOR_LASTNAME} from \"../../validators\";\r\nimport {getOnboardingTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\ntype OnboardingNameFormState = {\r\n    firstname: string;\r\n    lastname: string;\r\n};\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    firstname: VALIDATOR_FIRSTNAME,\r\n    lastname: VALIDATOR_LASTNAME,\r\n});\r\n\r\ntype OnboardingNameScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\nclass OnboardingNameScreen extends React.Component<OnboardingNameScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingNameScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.firstname != next.firstname || prev.lastname != next.lastname;\r\n    }\r\n\r\n    submit(values: OnboardingNameFormState) {\r\n        Keyboard.dismiss();\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingNameFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingNameFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingNameFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, handleChange, handleBlur} = formikProps;\r\n                    const textInputProps = (field: string) => ({\r\n                        field,\r\n                        value: (values as {[key: string]: string})[field],\r\n                        error: (errors as {[key: string]: string | undefined})[field],\r\n                        touched: (touched as {[key: string]: boolean | undefined})[field],\r\n                        handleChange,\r\n                        handleBlur,\r\n                        ...getOnboardingTextInputsStyleProps(theme),\r\n                    });\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.name.title\")}\r\n                            subtitle={i18n.t(\"onboarding.name.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <KeyboardAvoidingView behavior=\"padding\" keyboardVerticalOffset={200}>\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"firstname\")}\r\n                                    label={i18n.t(\"firstname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    {...textInputProps(\"lastname\")}\r\n                                    label={i18n.t(\"lastname\")}\r\n                                    autoCompleteType=\"name\"\r\n                                />\r\n                            </KeyboardAvoidingView>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(withTheme(OnboardingNameScreen));\r\n","import * as React from \"react\";\r\nimport {View, StyleSheet} from \"react-native\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport BirthDatePicker from \"./BirthDatePicker\";\r\nimport {FormattedDate} from \"./FormattedDate\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type BirthDateControlProps = ThemeProps & {\r\n    date?: Date;\r\n    onSelect?: (date: Date) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\nexport type BirthDateControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass BirthDateControl extends React.Component<BirthDateControlProps, BirthDateControlState> {\r\n    constructor(props: BirthDateControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {date, onSelect, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity style={[styles.button, date ? styles.buttonOk : {}]} onPress={() => this.showModal()}>\r\n                    {date && <FormattedDate style={styles.dateText} date={date} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <BirthDatePicker\r\n                    date={date}\r\n                    open={open}\r\n                    onSelect={(value: Date) => {\r\n                        if (onSelect) onSelect(value);\r\n                    }}\r\n                    onHide={() => this.hideModal()}\r\n                ></BirthDatePicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        dateText: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(BirthDateControl);\r\n","import * as React from \"react\";\r\nimport {TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport NationalityPicker from \"./NationalityPicker\";\r\nimport FormattedNationality from \"./FormattedNationality\";\r\nimport {CountryCode} from \"../model/country-codes\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\nexport type NationalityControlProps = ThemeProps & {\r\n    nationality?: CountryCode;\r\n    onSelect?: (countryCode: CountryCode) => void;\r\n    onHide?: () => void;\r\n};\r\n\r\n// Component state\r\nexport type NationalityControlState = {\r\n    open: boolean;\r\n};\r\n\r\nclass NationalityControl extends React.Component<NationalityControlProps, NationalityControlState> {\r\n    constructor(props: NationalityControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    showModal(): void {\r\n        if (!this.state.open) this.setState({...this.state, open: true});\r\n    }\r\n\r\n    hideModal(): void {\r\n        if (this.state.open) {\r\n            this.setState({...this.state, open: false});\r\n            if (this.props.onHide) this.props.onHide();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onSelect, onHide, nationality, theme} = this.props;\r\n        const {open} = this.state;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.wrapper}>\r\n                <TouchableOpacity\r\n                    style={[styles.button, nationality ? styles.buttonOk : {}]}\r\n                    onPress={() => this.showModal()}\r\n                >\r\n                    {nationality && <FormattedNationality countryCode={nationality} style={styles.nationality} />}\r\n                    {/*!date && <Text>Click to change value</Text>*/}\r\n                </TouchableOpacity>\r\n                <NationalityPicker\r\n                    nationality={this.props.nationality}\r\n                    open={open}\r\n                    onSelect={(country: CountryCode) => {\r\n                        if (onSelect) onSelect(country);\r\n                    }}\r\n                    onHide={() => {\r\n                        this.hideModal();\r\n                        if (onHide) onHide();\r\n                    }}\r\n                ></NationalityPicker>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            width: \"100%\",\r\n        },\r\n        button: {\r\n            width: \"100%\",\r\n            height: 60,\r\n            borderRadius: 0,\r\n            borderWidth: 0,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: theme.accentTernary,\r\n            backgroundColor: \"transparent\",\r\n            justifyContent: \"center\",\r\n        },\r\n        buttonOk: {\r\n            borderBottomWidth: 2,\r\n            borderBottomColor: theme.okay,\r\n        },\r\n        nationality: {\r\n            fontSize: 20,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(NationalityControl);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    VALIDATOR_ONBOARDING_GENDER,\r\n    VALIDATOR_ONBOARDING_NATIONALITY,\r\n} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport BirthDateControl from \"../../components/BirthDateControl\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Gender} from \"../../constants/profile-constants\";\r\nimport {GenderToggle} from \"../../components/GenderToggle\";\r\nimport NationalityControl from \"../../components/NationalityControl\";\r\nimport {CountryCode} from \"../../model/country-codes\";\r\nimport EducationFieldPicker from \"../../components/EducationFieldPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    birthdate: VALIDATOR_ONBOARDING_BIRTHDATE,\r\n    gender: VALIDATOR_ONBOARDING_GENDER,\r\n    nationality: VALIDATOR_ONBOARDING_NATIONALITY,\r\n});\r\n\r\ntype OnboardingPersonalInfoScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingPersonalInfoFormState = {\r\n    birthdate: Date | null;\r\n    gender: Gender | null;\r\n    nationality: CountryCode | null;\r\n    educationFields: string[];\r\n};\r\n\r\nclass OnboardingPersonalInfoScreen extends React.Component<OnboardingPersonalInfoScreenProps> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingPersonalInfoScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return (\r\n            prev.birthdate != next.birthdate ||\r\n            prev.gender != next.gender ||\r\n            prev.nationality != next.nationality ||\r\n            prev.educationFields != next.educationFields\r\n        );\r\n    }\r\n\r\n    submit(values: OnboardingPersonalInfoFormState) {\r\n        if (values.birthdate && values.gender && values.nationality) {\r\n            this.props.next();\r\n            this.props.dispatch(\r\n                setOnboardingValues({\r\n                    birthdate: values.birthdate,\r\n                    gender: values.gender,\r\n                    nationality: values.nationality,\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        const spacing = 30;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingPersonalInfoFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingPersonalInfoFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingPersonalInfoFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.personalInfo.title\")}\r\n                            //subtitle={i18n.t(\"onboarding.personalInfo.subtitle\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel>{i18n.t(\"dateOfBirth\")}</InputLabel>\r\n                            <BirthDateControl\r\n                                date={values.birthdate || undefined}\r\n                                onSelect={(birthdate: Date) => setFieldValue(\"birthdate\", birthdate)}\r\n                            />\r\n                            {touched.birthdate && <InputErrorText error={errors.birthdate}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"nationality\")}</InputLabel>\r\n                            <NationalityControl\r\n                                nationality={values.nationality || undefined}\r\n                                onSelect={(nationality: CountryCode) => setFieldValue(\"nationality\", nationality)}\r\n                            />\r\n                            {touched.nationality && <InputErrorText error={errors.nationality}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"gender\")}</InputLabel>\r\n                            <GenderToggle\r\n                                gender={values.gender}\r\n                                onSelect={(gender: Gender) => setFieldValue(\"gender\", gender)}\r\n                            />\r\n                            {touched.gender && <InputErrorText error={errors.gender}></InputErrorText>}\r\n\r\n                            <InputLabel style={{marginTop: spacing}}>{i18n.t(\"fieldsOfEducation\")}</InputLabel>\r\n                            <EducationFieldPicker\r\n                                fields={values.educationFields}\r\n                                onChange={(fields: string[]) => setFieldValue(\"educationFields\", fields)}\r\n                                showSelected={false}\r\n                            ></EducationFieldPicker>\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingPersonalInfoScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_LANGUAGES} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport SpokenLanguagesInput from \"../../components/SpokenLanguagesInput\";\r\nimport {SpokenLanguageDto} from \"../../api/dto\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    languages: VALIDATOR_ONBOARDING_LANGUAGES,\r\n});\r\n\r\ntype OnboardingLanguageScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingLanguageScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\ntype OnboardingLanguageFormState = {\r\n    languages: SpokenLanguageDto[];\r\n};\r\n\r\nclass OnboardingLanguageScreen extends React.Component<OnboardingLanguageScreenProps, OnboardingLanguageScreenState> {\r\n    constructor(props: OnboardingLanguageScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingLanguageScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.languages != next.languages;\r\n    }\r\n\r\n    submit(values: OnboardingLanguageFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({languages: values.languages}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingLanguageFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingLanguageFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingLanguageFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.language.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"spokenLanguages\")}</InputLabel>\r\n                            <SpokenLanguagesInput\r\n                                languages={values.languages}\r\n                                onChange={(languages: SpokenLanguageDto[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"languages\", languages);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></SpokenLanguagesInput>\r\n                            {touched.languages && <InputErrorText error={errors.languages}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingLanguageScreen);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {VALIDATOR_ONBOARDING_INTERESTS} from \"../../validators\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport InterestsPicker from \"../../components/InterestsPicker\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\ntype OnboardingInterestsScreenProps = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\ntype OnboardingInterestsScreenState = {\r\n    hasErrors: boolean;\r\n};\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    interestIds: VALIDATOR_ONBOARDING_INTERESTS,\r\n});\r\n\r\ntype OnboardingInterestsFormState = {\r\n    interestIds: string[];\r\n};\r\n\r\nclass OnboardingInterestsScreen extends React.Component<\r\n    OnboardingInterestsScreenProps,\r\n    OnboardingInterestsScreenState\r\n> {\r\n    constructor(props: OnboardingInterestsScreenProps) {\r\n        super(props);\r\n        this.state = {hasErrors: false};\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingInterestsScreenProps>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.interestIds != next.interestIds;\r\n    }\r\n\r\n    submit(values: OnboardingInterestsFormState) {\r\n        if (!this.state.hasErrors) {\r\n            this.props.dispatch(setOnboardingValues({interestIds: values.interestIds}));\r\n            this.props.next();\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingInterestsFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingInterestsFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingInterestsFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(\"onboarding.interests.title\")}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={{marginBottom: 6}}>{i18n.t(\"chooseInterests\")}</InputLabel>\r\n                            <InterestsPicker\r\n                                interests={values.interestIds}\r\n                                onChange={(interestIds: string[], hasErrors: boolean) => {\r\n                                    setFieldValue(\"interestIds\", interestIds);\r\n                                    this.setState({...this.state, hasErrors});\r\n                                }}\r\n                            ></InterestsPicker>\r\n                            {touched.interestIds && <InputErrorText error={errors.interestIds}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingInterestsScreen);\r\n","import * as React from \"react\";\r\nimport {Text, ViewStyle, StyleSheet} from \"react-native\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {Role} from \"../../constants/profile-constants\";\r\nimport i18n from \"i18n-js\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport store from \"../../state/store\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\ntype OnboardingRoleScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleFormState = {\r\n    role: Role;\r\n};\r\n\r\nclass OnboardingRoleScreen extends React.Component<OnboardingRoleScreenProps> {\r\n    submit(values: OnboardingRoleFormState) {\r\n        store.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.role.title\")} hideNavNext={true} {...this.props}>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"student\"})}>\r\n                    <MaterialIcons name={\"school\"} style={styles.roleButtonIconStudent}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStudent}>{i18n.t(\"allRoles.student\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.roleButton} onPress={() => this.submit({role: \"staff\"})}>\r\n                    <MaterialIcons name={\"group\"} style={styles.roleButtonIconStaff}></MaterialIcons>\r\n                    <Text style={styles.roleButtonTextStaff}>{i18n.t(\"allRoles.staff\")}</Text>\r\n                </TouchableOpacity>\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    const studentColor = theme.accent;\r\n    const staffColor = theme.okay;\r\n\r\n    const common = StyleSheet.create({\r\n        roleButtonText: {\r\n            ...styleTextThin,\r\n            fontSize: 40,\r\n            letterSpacing: 1.75,\r\n        },\r\n        roleButtonIcon: {\r\n            fontSize: 50,\r\n            marginRight: 15,\r\n        },\r\n    });\r\n\r\n    return StyleSheet.create({\r\n        roleButton: {\r\n            height: 100,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        } as ViewStyle,\r\n        roleButtonTextStaff: {\r\n            ...common.roleButtonText,\r\n            color: staffColor,\r\n        },\r\n        roleButtonTextStudent: {\r\n            ...common.roleButtonText,\r\n            color: studentColor,\r\n        },\r\n        roleButtonIconStaff: {\r\n            ...common.roleButtonIcon,\r\n            color: staffColor,\r\n        },\r\n        roleButtonIconStudent: {\r\n            ...common.roleButtonIcon,\r\n            color: studentColor,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingRoleScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen1Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen1 extends React.Component<OnboardingOfferScreen1Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen1Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersDiscover.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersDiscover.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Discover, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen1);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen2Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen2 extends React.Component<OnboardingOfferScreen2Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen2Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersCollaborate.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersCollaborate.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Collaborate, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen2);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {createOfferControls} from \"./helpers\";\r\nimport {OfferCategory} from \"../../api/dto\";\r\n\r\n// State-linked props\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n    offers: state.profile.offers,\r\n}));\r\n\r\n// Component props\r\ntype OnboardingOfferScreen3Props = ConnectedProps<typeof reduxConnector> & OnboardingScreenProps;\r\n\r\nclass OnboardingOfferScreen3 extends React.Component<OnboardingOfferScreen3Props> {\r\n    shouldComponentUpdate(nextProps: Readonly<OnboardingOfferScreen3Props>) {\r\n        const prev = this.props.onboardingState;\r\n        const next = nextProps.onboardingState;\r\n        return prev.offerValues != next.offerValues;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState, offers, dispatch} = this.props;\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.offersMeet.title\")}\r\n                subtitle={i18n.t(\"onboarding.offersMeet.subtitle\")}\r\n                {...this.props}\r\n            >\r\n                {createOfferControls(offers, OfferCategory.Meet, onboardingState, dispatch)}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(OnboardingOfferScreen3);\r\n","import {Formik, FormikProps} from \"formik\";\r\nimport * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {AppState} from \"../../state/types\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {setOnboardingValues} from \"../../state/auth/actions\";\r\nimport InputLabel from \"../../components/InputLabel\";\r\nimport InputErrorText from \"../../components/InputErrorText\";\r\nimport {Degree, StaffRole, STAFF_ROLES} from \"../../constants/profile-constants\";\r\nimport DegreeToggle from \"../../components/DegreeToggle\";\r\nimport {TouchableOpacity, Text, StyleSheet} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {VALIDATOR_ONBOARDING_DEGREE} from \"../../validators\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    onboardingState: state.auth.onboarding,\r\n}));\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    degree: VALIDATOR_ONBOARDING_DEGREE,\r\n});\r\n\r\ntype OnboardingRoleSpecificScreenProps = ConnectedProps<typeof reduxConnector> & ThemeProps & OnboardingScreenProps;\r\n\r\ntype OnboardingRoleSpecificScreenFormState = {\r\n    degree: Degree;\r\n    staffRole: StaffRole | null;\r\n};\r\n\r\nclass OnboardingRoleSpecificScreen extends React.Component<OnboardingRoleSpecificScreenProps> {\r\n    submit(values: Partial<OnboardingRoleSpecificScreenFormState>) {\r\n        this.props.dispatch(setOnboardingValues(values));\r\n        this.props.next();\r\n    }\r\n\r\n    studentRender(): JSX.Element {\r\n        const {onboardingState, theme} = this.props;\r\n        const styles = studentThemedStyles(theme);\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={onboardingState as OnboardingRoleSpecificScreenFormState}\r\n                validationSchema={VALIDATION_SCHEMA}\r\n                validateOnChange={true}\r\n                validateOnBlur={false}\r\n                onSubmit={(values: OnboardingRoleSpecificScreenFormState) => this.submit(values)}\r\n            >\r\n                {(formikProps: FormikProps<OnboardingRoleSpecificScreenFormState>) => {\r\n                    const {handleSubmit, values, errors, touched, setFieldValue} = formikProps;\r\n\r\n                    return (\r\n                        <OnboardingSlide\r\n                            title={i18n.t(`onboarding.roleSpecific1.student.title`)}\r\n                            handleSubmit={handleSubmit}\r\n                            {...this.props}\r\n                        >\r\n                            <InputLabel style={styles.label}>{i18n.t(\"levelOfStudy\")}</InputLabel>\r\n                            <DegreeToggle\r\n                                degree={values.degree}\r\n                                onUpdate={(degree?: Degree) => setFieldValue(\"degree\", degree)}\r\n                            />\r\n                            {touched.degree && <InputErrorText error={errors.degree}></InputErrorText>}\r\n                        </OnboardingSlide>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    staffRender(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = staffThemedStyles(theme);\r\n\r\n        const icons = [\"school\", \"library-books\", \"help\", \"account-balance\", \"build\", \"verified-user\"];\r\n\r\n        const buttons = STAFF_ROLES.map((sr: string, i: number) => (\r\n            <TouchableOpacity key={i} style={styles.button} onPress={() => this.submit({staffRole: sr as StaffRole})}>\r\n                <MaterialIcons name={icons[i]} style={styles.buttonIcon}></MaterialIcons>\r\n                <Text style={styles.buttonText}>{i18n.t(`staffRoles.${sr}`)}</Text>\r\n            </TouchableOpacity>\r\n        ));\r\n\r\n        return (\r\n            <OnboardingSlide title={i18n.t(\"onboarding.roleSpecific1.staff.title\")} hideNavNext={true} {...this.props}>\r\n                {buttons}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n    /*\r\n\r\n        <InputLabel style={{marginTop: spacing}}>{i18n.t(\"staffPosition\")}</InputLabel>\r\n        <StaffRoleToggle\r\n            staffRole={values.staffRole}\r\n            onSelect={(staffRole: StaffRole) => setFieldValue(\"staffRole\", staffRole)}\r\n        />\r\n        {touched.staffRole && <InputErrorText error={errors.staffRole}></InputErrorText>}\r\n    */\r\n\r\n    render(): JSX.Element {\r\n        const {onboardingState} = this.props;\r\n        const isStudent = onboardingState.role == \"student\";\r\n\r\n        return (\r\n            <>\r\n                {isStudent && this.studentRender()}\r\n                {!isStudent && this.staffRender()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport const studentThemedStyles = preTheme(() => {\r\n    return StyleSheet.create({\r\n        label: {\r\n            marginTop: 30,\r\n        },\r\n    });\r\n});\r\n\r\nexport const staffThemedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        button: {\r\n            height: 60,\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 25,\r\n            letterSpacing: 1.25,\r\n            color: theme.text,\r\n        },\r\n        buttonIcon: {\r\n            fontSize: 30,\r\n            marginRight: 10,\r\n            color: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(OnboardingRoleSpecificScreen));\r\n","import React from \"react\";\r\nimport {Text, TouchableHighlight, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport CustomModal, {CustomModalProps} from \"./CustomModal\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\n\r\nexport type TOSDeclinedModalProps = ThemeProps & Partial<CustomModalProps>;\r\n\r\nclass TOSDeclinedModal extends React.Component<TOSDeclinedModalProps> {\r\n    render() {\r\n        const {theme, ...otherProps} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <CustomModal\r\n                {...otherProps}\r\n                renderContent={(hide: () => void) => (\r\n                    <>\r\n                        <Text style={styles.text}>\r\n                            {i18n.t(\"tos.modal.disclaimer1\")}\r\n                            {\"\\n\\n\"}\r\n                            {i18n.t(\"tos.modal.disclaimer2\")}\r\n                        </Text>\r\n                        <View style={styles.actionButtonsWrapper}>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonCancel]}\r\n                                onPress={() => hide()}\r\n                            >\r\n                                <Text style={[styles.actionText]}>{i18n.t(\"cancel\")}</Text>\r\n                            </TouchableHighlight>\r\n                            <TouchableHighlight\r\n                                style={[styles.actionButton, styles.actionButtonDecline]}\r\n                                onPress={() => {\r\n                                    hide();\r\n                                    rootNavigate(\"LoginScreen\");\r\n                                }}\r\n                            >\r\n                                <Text style={styles.actionText}>{i18n.t(\"tos.decline\")}</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        actionButtonsWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n            marginTop: 20,\r\n            justifyContent: \"space-evenly\",\r\n        },\r\n        actionButton: {\r\n            width: 110,\r\n            maxWidth: \"40%\",\r\n            borderRadius: 3,\r\n            paddingVertical: 10,\r\n            elevation: 2,\r\n        },\r\n        actionButtonCancel: {\r\n            backgroundColor: theme.accentSecondary,\r\n        },\r\n        actionButtonDecline: {\r\n            backgroundColor: theme.error,\r\n        },\r\n        actionText: {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            color: theme.textInverted,\r\n        },\r\n        text: {\r\n            fontSize: 16,\r\n            textAlign: \"justify\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(TOSDeclinedModal);\r\n","import * as React from \"react\";\r\nimport {Text, TextProps} from \"react-native\";\r\n\r\n// Component props\r\nexport type TextLinkProps = {\r\n    text: string;\r\n} & TextProps;\r\n\r\nfunction TextLink(props: React.PropsWithChildren<TextLinkProps>): JSX.Element {\r\n    const {text, ...textProps} = props;\r\n\r\n    return (\r\n        <Text {...textProps} style={[textProps ? textProps.style : {}, {color: \"#2e78b7\"}]}>\r\n            {text}\r\n        </Text>\r\n    );\r\n}\r\n\r\nexport default TextLink;\r\n","import * as React from \"react\";\r\nimport OnboardingSlide from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {OnboardingScreenProps, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingTosScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingTosScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingTosScreen extends React.Component<OnboardingTosScreenProps, OnboardingTosScreenState> {\r\n    constructor(props: OnboardingTosScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.tos.title\")}\r\n                subtitle={i18n.t(\"onboarding.tos.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"tos.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"tos.readMore\")[1]} />\r\n                    {i18n.t(\"tos.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingTosScreen);\r\n","import * as React from \"react\";\r\nimport OnboardingSlide, {OnboardingScreenProps} from \"./OnboardingSlide\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {tosSlideStyle} from \"../../styles/onboarding\";\r\nimport TOSDeclinedModal from \"../../components/modals/TOSDeclinedModal\";\r\nimport i18n from \"i18n-js\";\r\nimport TextLink from \"../../components/TextLink\";\r\nimport {ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\n\r\n// Component props\r\ntype OnboardingPrivacyScreenProps = ThemeProps & OnboardingScreenProps;\r\n\r\n// Component state\r\ntype OnboardingPrivacyScreenState = {\r\n    declined: boolean;\r\n};\r\n\r\nclass OnboardingPrivacyScreen extends React.Component<OnboardingPrivacyScreenProps, OnboardingPrivacyScreenState> {\r\n    constructor(props: OnboardingPrivacyScreenProps) {\r\n        super(props);\r\n        this.state = {declined: false};\r\n    }\r\n\r\n    decline() {\r\n        this.setState({...this.state, declined: true});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, next} = this.props;\r\n        const styles = tosSlideStyle(theme);\r\n\r\n        return (\r\n            <OnboardingSlide\r\n                title={i18n.t(\"onboarding.privacy.title\")}\r\n                subtitle={i18n.t(\"onboarding.privacy.subtitle\")}\r\n                hideNavNext={true}\r\n                {...this.props}\r\n            >\r\n                <Text style={styles.readMoreText}>\r\n                    {i18n.t(\"privacy.readMore\")[0]}\r\n                    <TextLink onPress={() => console.log(\"press\")} text={i18n.t(\"privacy.readMore\")[1]} />\r\n                    {i18n.t(\"privacy.readMore\")[2]}\r\n                </Text>\r\n\r\n                <View style={styles.actionsWrapper}>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => this.decline()}>\r\n                        <Text style={styles.actionButtonTextDecline}>{i18n.t(\"tos.decline\")}</Text>\r\n                        <MaterialIcons name=\"close\" style={styles.actionButtonTextDecline} />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.actionButton} onPress={() => next()}>\r\n                        <Text style={styles.actionButtonTextAccept}>{i18n.t(\"tos.accept\")}</Text>\r\n                        <MaterialIcons name=\"check\" style={styles.actionButtonTextAccept} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {this.state.declined && (\r\n                    <TOSDeclinedModal onHide={() => this.setState({...this.state, declined: false})}></TOSDeclinedModal>\r\n                )}\r\n            </OnboardingSlide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(OnboardingPrivacyScreen);\r\n","import {OnboardingScreens} from \"../../navigation/types\";\r\nimport OnboardingNameScreen from \"./OnboardingNameScreen\";\r\nimport OnboardingPersonalInfoScreen from \"./OnboardingPersonalInfoScreen\";\r\nimport OnboardingLanguageScreen from \"./OnboardingLanguageScreen\";\r\nimport OnboardingInterestsScreen from \"./OnboardingInterestsScreen\";\r\nimport OnboardingRoleScreen from \"./OnboardingRoleScreen\";\r\nimport OnboardingOffersScreen1 from \"./OnboardingOffersScreen1\";\r\nimport OnboardingOffersScreen2 from \"./OnboardingOffersScreen2\";\r\nimport OnboardingOffersScreen3 from \"./OnboardingOffersScreen3\";\r\nimport OnboardingRoleSpecificScreen from \"./OnboardingRoleSpecificScreen\";\r\nimport OnboardingTosScreen from \"./OnboardingTosScreen\";\r\nimport OnboardingPrivacyScreen from \"./OnboardingPrivacyScreen\";\r\n\r\nexport const ONBOARDING_SCREENS = {\r\n    OnboardingNameScreen,\r\n    OnboardingPersonalInfoScreen,\r\n    OnboardingLanguageScreen,\r\n    OnboardingInterestsScreen,\r\n    OnboardingRoleScreen,\r\n    OnboardingRoleSpecificScreen,\r\n    OnboardingOffersScreen1,\r\n    OnboardingOffersScreen2,\r\n    OnboardingOffersScreen3,\r\n    OnboardingTosScreen,\r\n    OnboardingPrivacyScreen,\r\n};\r\n\r\nexport const ONBOARDING_ORDER: (keyof OnboardingScreens)[] = [\r\n    \"OnboardingNameScreen\",\r\n    \"OnboardingTosScreen\",\r\n    \"OnboardingPrivacyScreen\",\r\n    \"OnboardingPersonalInfoScreen\",\r\n    \"OnboardingLanguageScreen\",\r\n    \"OnboardingInterestsScreen\",\r\n    \"OnboardingRoleScreen\",\r\n    \"OnboardingRoleSpecificScreen\",\r\n    \"OnboardingOffersScreen1\",\r\n    \"OnboardingOffersScreen2\",\r\n    \"OnboardingOffersScreen3\",\r\n];\r\n","import * as React from \"react\";\r\nimport {OnboardingScreens} from \"../navigation/types\";\r\nimport {createMaterialTopTabNavigator} from \"@react-navigation/material-top-tabs\";\r\nimport {ONBOARDING_ORDER, ONBOARDING_SCREENS} from \"../screens/onboarding\";\r\nimport {rootNavigate, screenTitle} from \"./utils\";\r\n\r\nconst OnboardingStack = createMaterialTopTabNavigator<OnboardingScreens>();\r\n\r\nconst screens = ONBOARDING_ORDER.map((name: keyof OnboardingScreens, i: number) => {\r\n    const ComponentClass = ONBOARDING_SCREENS[name];\r\n    const hasNext = i < ONBOARDING_ORDER.length - 1;\r\n    const next = () => {\r\n        if (hasNext) rootNavigate(ONBOARDING_ORDER[i + 1]);\r\n    };\r\n    const previous = () => {\r\n        if (i > 0) rootNavigate(ONBOARDING_ORDER[i - 1]);\r\n    };\r\n\r\n    class temp extends React.Component {\r\n        render(): JSX.Element {\r\n            return <ComponentClass next={next} previous={previous} index={i} hasNext={hasNext} />;\r\n        }\r\n    }\r\n\r\n    return <OnboardingStack.Screen key={i} name={name} component={temp} options={{title: screenTitle(name)}} />;\r\n});\r\n\r\nexport default function OnboardingNavigator(): JSX.Element {\r\n    return (\r\n        <OnboardingStack.Navigator\r\n            initialRouteName={ONBOARDING_ORDER[0]}\r\n            tabBarOptions={{showLabel: false, showIcon: false}}\r\n            tabBar={() => <></>}\r\n            springConfig={{\r\n                stiffness: 500,\r\n                damping: 2000,\r\n                mass: 5,\r\n            }}\r\n            swipeEnabled={false}\r\n            lazy={true}\r\n            lazyPreloadDistance={0}\r\n        >\r\n            {screens}\r\n        </OnboardingStack.Navigator>\r\n    );\r\n}\r\n","import {FontAwesome} from \"@expo/vector-icons\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, Text, TouchableOpacity, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {rootNavigate} from \"../../navigation/utils\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {styleTextThin} from \"../../styles/general\";\r\n\r\nexport type OnboardingSuccessfulScreenProps = ThemeProps;\r\n\r\nclass OnboardingSuccessfulScreen extends React.Component<OnboardingSuccessfulScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <FontAwesome style={styles.icon} name=\"home\"></FontAwesome>\r\n                <Text style={styles.title}>{i18n.t(\"onboarding.profileCreated\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity style={styles.button} onPress={() => rootNavigate(\"MainScreen\")}>\r\n                    <Text style={styles.buttonText}>{i18n.t(\"onboarding.getStarted\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        title: {\r\n            width: \"85%\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            letterSpacing: 0.5,\r\n            color: theme.text,\r\n        },\r\n        icon: {\r\n            color: theme.text,\r\n            fontSize: 40,\r\n            marginVertical: 20,\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n        },\r\n        button: {\r\n            marginVertical: 20,\r\n            padding: 5,\r\n            borderBottomWidth: 0.75,\r\n            borderBottomColor: theme.textLight,\r\n        },\r\n        buttonText: {\r\n            ...styleTextThin,\r\n            fontSize: 20,\r\n            letterSpacing: 1.5,\r\n            textTransform: \"uppercase\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(OnboardingSuccessfulScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {TouchableOpacity} from \"react-native-gesture-handler\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport i18n from \"i18n-js\";\r\nimport {fetchMyMatches} from \"../state/matching/actions\";\r\nimport {MyThunkDispatch} from \"../state/types\";\r\nimport store from \"../state/store\";\r\nimport {styleTextThin} from \"../styles/general\";\r\n\r\nexport type TabNotImplementedScreenProps = ThemeProps;\r\n\r\nclass ReciprocalMatchScreen extends React.Component<TabNotImplementedScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>{i18n.t(\"matching.success.title\")}</Text>\r\n                <View style={styles.separator} />\r\n                <TouchableOpacity\r\n                    style={styles.actionButton}\r\n                    onPress={() => rootNavigate(\"TabMessaging\") /* TODO Redirect to chat tab directly instead */}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.chat\")}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    style={[styles.actionButton, {backgroundColor: theme.actionNeutral}]}\r\n                    onPress={() => {\r\n                        rootNavigate(\"TabMatchingScreen\");\r\n                        // Make sure the data is up to date\r\n                        // TODO this could be improved\r\n                        (store.dispatch as MyThunkDispatch)(fetchMyMatches());\r\n                    }}\r\n                >\r\n                    <Text style={styles.actionText}>{i18n.t(\"matching.success.continue\")}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: theme.okay,\r\n        },\r\n        title: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            ...styleTextThin,\r\n            fontSize: 32,\r\n            color: theme.text,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n        separator: {\r\n            marginVertical: 30,\r\n            height: 1,\r\n            width: \"80%\",\r\n            backgroundColor: theme.cardBackground,\r\n            opacity: 0.3,\r\n        },\r\n        actionButton: {\r\n            backgroundColor: theme.accent,\r\n            paddingHorizontal: 30,\r\n            paddingVertical: 10,\r\n            marginVertical: 20,\r\n            borderRadius: 20,\r\n        },\r\n        actionText: {\r\n            color: theme.textWhite,\r\n            fontSize: 18,\r\n            letterSpacing: 1,\r\n            textTransform: \"uppercase\",\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ReciprocalMatchScreen);\r\n","import * as React from \"react\";\r\nimport {StyleSheet, Text, View} from \"react-native\";\r\nimport i18n from \"i18n-js\";\r\nimport * as Yup from \"yup\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {FormTextInput} from \"../FormTextInput\";\r\nimport {VALIDATOR_PASSWORD_SIGNUP, VALIDATOR_PASSWORD_REPEAT} from \"../../validators\";\r\nimport {formStyles, getLoginTextInputsStyleProps} from \"../../styles/forms\";\r\nimport {FormProps, Theme, ThemeProps} from \"../../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport store from \"../../state/store\";\r\nimport {MyThunkDispatch, ValidatedActionReturn} from \"../../state/types\";\r\nimport {resetPassword} from \"../../state/auth/actions\";\r\nimport FormSubmitButton from \"./FormSubmitButton\";\r\nimport FormError from \"./FormError\";\r\nimport {generalError, localizeError} from \"../../api/errors\";\r\nimport {RemoteValidationErrors} from \"../../api/dto\";\r\n\r\ntype FormState = {\r\n    password: string;\r\n    passwordRepeat: string;\r\n};\r\n\r\nconst initialState = (): FormState => ({\r\n    password: \"\",\r\n    passwordRepeat: \"\",\r\n});\r\n\r\n// Use Yup to create the validation schema\r\nconst ResetPasswordFormSchema = Yup.object().shape({\r\n    password: VALIDATOR_PASSWORD_SIGNUP,\r\n    passwordRepeat: VALIDATOR_PASSWORD_REPEAT,\r\n});\r\n\r\n// Component props\r\ntype ResetPasswordFormProps = {token?: string} & FormProps<FormState> & ThemeProps;\r\n\r\n// Component state\r\ntype ResetPasswordFormState = {remoteErrors?: RemoteValidationErrors; submitting: boolean};\r\n\r\nclass ResetPasswordForm extends React.Component<ResetPasswordFormProps, ResetPasswordFormState> {\r\n    setFieldError?: (field: string, message: string) => void;\r\n\r\n    constructor(props: ResetPasswordFormProps) {\r\n        super(props);\r\n        this.state = {submitting: false};\r\n    }\r\n\r\n    submit(values: FormState) {\r\n        const {token, onSuccessfulSubmit} = this.props;\r\n        this.setState({...this.state, submitting: true});\r\n\r\n        if (token) {\r\n            (store.dispatch as MyThunkDispatch)(resetPassword(token, values.password)).then(\r\n                ({success, errors}: ValidatedActionReturn) => {\r\n                    if (success && onSuccessfulSubmit) onSuccessfulSubmit(values);\r\n                    if (errors && errors.fields) {\r\n                        const f = errors.fields;\r\n                        Object.keys(f).forEach((e) => this.setFieldError && this.setFieldError(e, localizeError(f[e])));\r\n                    }\r\n                    this.setState({remoteErrors: errors, submitting: false});\r\n                },\r\n            );\r\n        } else {\r\n            this.setState({remoteErrors: {general: \"error.reset_password_no_token\", fields: {}}, submitting: false});\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {remoteErrors, submitting} = this.state;\r\n        const styles = themedStyles(theme);\r\n        const fstyles = formStyles(theme);\r\n\r\n        return (\r\n            <>\r\n                <View style={styles.titleWrapper}>\r\n                    <Text style={styles.title}>{i18n.t(\"resetPassword.title\")}</Text>\r\n                </View>\r\n                <Formik\r\n                    initialValues={initialState()}\r\n                    validationSchema={ResetPasswordFormSchema}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    onSubmit={(values) => this.submit(values)}\r\n                >\r\n                    {(formikProps: FormikProps<FormState>) => {\r\n                        const {\r\n                            handleSubmit,\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            setFieldError,\r\n                        } = formikProps;\r\n                        const textInputProps = {handleChange, handleBlur, ...getLoginTextInputsStyleProps(theme, 15)};\r\n                        this.setFieldError = setFieldError;\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <FormTextInput\r\n                                    field=\"password\"\r\n                                    placeholder={i18n.t(\"password\")}\r\n                                    error={errors.password}\r\n                                    value={values.password}\r\n                                    touched={touched.password}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormTextInput\r\n                                    field=\"passwordRepeat\"\r\n                                    placeholder={i18n.t(\"passwordRepeat\")}\r\n                                    error={errors.passwordRepeat}\r\n                                    value={values.passwordRepeat}\r\n                                    touched={touched.passwordRepeat}\r\n                                    isPassword={true}\r\n                                    {...textInputProps}\r\n                                />\r\n\r\n                                <FormError error={generalError(remoteErrors)} />\r\n\r\n                                <View style={fstyles.actionRow}>\r\n                                    <FormSubmitButton\r\n                                        onPress={() => handleSubmit()}\r\n                                        style={[fstyles.buttonMajor, styles.button]}\r\n                                        textStyle={fstyles.buttonMajorText}\r\n                                        text={i18n.t(\"resetPassword.button\")}\r\n                                        submitting={submitting}\r\n                                    />\r\n                                </View>\r\n                            </React.Fragment>\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        titleWrapper: {\r\n            width: \"100%\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"flex-start\",\r\n            marginBottom: 20,\r\n        },\r\n        title: {\r\n            fontSize: 22,\r\n            color: theme.text,\r\n        },\r\n        button: {\r\n            width: \"60%\",\r\n            backgroundColor: theme.accent,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordForm);\r\n","import * as React from \"react\";\r\nimport {View, KeyboardAvoidingView} from \"react-native\";\r\nimport {loginTabsStyles} from \"../styles/forms\";\r\nimport {ThemeProps} from \"../types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport ResetPasswordForm from \"../components/forms/ResetPasswordForm\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\n\r\ntype ResetPasswordScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\ntype ResetPasswordScreenState = {token?: string};\r\n\r\nclass ResetPasswordScreen extends React.Component<ResetPasswordScreenProps, ResetPasswordScreenState> {\r\n    constructor(props: ResetPasswordScreenProps) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Attempt to extract a token out of the route parameters\r\n        const params = this.props.route.params as {[key: string]: string};\r\n        if (params && params.token) this.setState({...this.state, token: params.token});\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const {token} = this.state;\r\n        const styles = loginTabsStyles(theme);\r\n\r\n        return (\r\n            <KeyboardAvoidingView behavior=\"height\" style={styles.container}>\r\n                <View style={styles.formWrapper}>\r\n                    <ResetPasswordForm token={token} />\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTheme(ResetPasswordScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {FontAwesome} from \"@expo/vector-icons\";\r\nimport i18n from \"i18n-js\";\r\n\r\ntype ForgotPasswordEmailSentScreenProps = ThemeProps;\r\n\r\nclass ForgotPasswordEmailSentScreen extends React.Component<ForgotPasswordEmailSentScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <FontAwesome name=\"envelope-o\" style={styles.mailIcon}></FontAwesome>\r\n                    <Text style={styles.description}>{i18n.t(\"resetPassword.instructions\")}</Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n            alignItems: \"center\",\r\n        },\r\n        description: {\r\n            fontSize: 16,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        mailIcon: {\r\n            marginVertical: 30,\r\n            fontSize: 50,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ForgotPasswordEmailSentScreen);\r\n","import * as React from \"react\";\r\nimport {Text, View, StyleSheet} from \"react-native\";\r\nimport {rootNavigate} from \"../navigation/utils\";\r\nimport i18n from \"i18n-js\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\n\r\ntype ResetPasswordSuccessScreenProps = ThemeProps & StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ResetPasswordSuccessScreen extends React.Component<ResetPasswordSuccessScreenProps> {\r\n    render(): JSX.Element {\r\n        const {theme} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.wrapper}>\r\n                    <Text style={styles.successText}>\r\n                        {i18n.t(\"resetPassword.success\")[0]}\r\n                        <Text onPress={() => rootNavigate(\"TabSignin\")} style={{color: theme.accent}}>\r\n                            {i18n.t(\"resetPassword.success\")[1]}\r\n                        </Text>\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: theme.background,\r\n        },\r\n        wrapper: {\r\n            width: \"70%\",\r\n        },\r\n        title: {\r\n            fontSize: 20,\r\n            marginVertical: 20,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n        successText: {\r\n            fontSize: 18,\r\n            lineHeight: 40,\r\n            textAlign: \"center\",\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nexport default withTheme(ResetPasswordSuccessScreen);\r\n","import {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {StackScreenProps} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport {StyleSheet, View} from \"react-native\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {GiftedChat, IMessage, InputToolbar, InputToolbarProps, Send, SendProps} from \"react-native-gifted-chat\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootNavigatorScreens} from \"../../navigation/types\";\r\nimport {leaveChatRoom, sendChatMessage} from \"../../state/messaging/actions\";\r\nimport {AppState, MyThunkDispatch} from \"../../state/types\";\r\nimport {preTheme} from \"../../styles/utils\";\r\nimport {Theme, ThemeProps} from \"../../types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    activeRoom: state.messaging.activeRoom,\r\n    localChatUser: state.messaging.localChatUser,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenProps = ThemeProps &\r\n    ConnectedProps<typeof reduxConnector> &\r\n    StackScreenProps<RootNavigatorScreens>;\r\n\r\nclass ChatScreen extends React.Component<ChatScreenProps> {\r\n    componentDidMount() {\r\n        this.props.navigation.addListener(\"blur\", () => this.onBlur());\r\n    }\r\n\r\n    onBlur() {\r\n        const {dispatch, activeRoom} = this.props;\r\n        if (activeRoom) (dispatch as MyThunkDispatch)(leaveChatRoom(activeRoom));\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, activeRoom, localChatUser, dispatch} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        let chatComponent = <></>;\r\n        if (activeRoom && localChatUser) {\r\n            chatComponent = (\r\n                <GiftedChat\r\n                    messages={activeRoom.messages}\r\n                    user={localChatUser}\r\n                    renderSend={(props: SendProps<IMessage>) => (\r\n                        <Send {...props} containerStyle={styles.sendContainer}>\r\n                            <MaterialIcons name=\"send\" style={styles.send} />\r\n                        </Send>\r\n                    )}\r\n                    renderInputToolbar={(props: InputToolbarProps) => (\r\n                        <InputToolbar\r\n                            {...props}\r\n                            containerStyle={styles.inputToolbarContainer}\r\n                            primaryStyle={styles.inputToolbarPrimary}\r\n                        />\r\n                    )}\r\n                    timeFormat={\"HH:mm\"}\r\n                    onSend={(messages) => {\r\n                        messages.forEach((m) =>\r\n                            (dispatch as MyThunkDispatch)(sendChatMessage(m._id + \"\", m.text, m.createdAt)),\r\n                        );\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <View style={styles.container}>{chatComponent}</View>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            backgroundColor: theme.background,\r\n            justifyContent: \"center\",\r\n        },\r\n        inputToolbarContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        inputToolbarPrimary: {},\r\n        sendContainer: {\r\n            justifyContent: \"center\",\r\n        },\r\n        send: {\r\n            fontSize: 30,\r\n            color: theme.accent,\r\n            paddingHorizontal: 12,\r\n        },\r\n    });\r\n});\r\n\r\nexport default reduxConnector(withTheme(ChatScreen));\r\n","import * as React from \"react\";\r\nimport {Text, TouchableOpacity, View, StyleSheet} from \"react-native\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {Theme, ThemeProps} from \"../types\";\r\nimport {StackHeaderProps} from \"@react-navigation/stack\";\r\nimport {SafeAreaInsetsContext} from \"react-native-safe-area-context\";\r\nimport {preTheme} from \"../styles/utils\";\r\nimport {MaterialIcons} from \"@expo/vector-icons\";\r\nimport {GiftedAvatar} from \"react-native-gifted-chat\";\r\nimport {ChatRoomUser} from \"../model/chat-room\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    activeRoom: state.messaging.activeRoom,\r\n    profileId: state.profile.user?.profile?.id,\r\n}));\r\n\r\n// Component props\r\nexport type ChatScreenHeaderProps = {topInset: number} & ConnectedProps<typeof reduxConnector> &\r\n    ThemeProps &\r\n    StackHeaderProps;\r\n\r\n// Component state\r\n\r\nclass ChatScreenHeaderClass extends React.Component<ChatScreenHeaderProps> {\r\n    back() {\r\n        const nav = this.props.navigation;\r\n        if (nav.canGoBack()) nav.goBack();\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const {theme, activeRoom, profileId, topInset} = this.props;\r\n        const styles = themedStyles(theme);\r\n\r\n        if (activeRoom) {\r\n            const user = activeRoom.users.filter((p: ChatRoomUser) => p._id != profileId)[0];\r\n            return (\r\n                <View style={[{paddingTop: topInset}, styles.wrapper]}>\r\n                    <View style={styles.container}>\r\n                        <TouchableOpacity style={styles.backButton} onPress={() => this.back()}>\r\n                            <MaterialIcons style={styles.backButtonIcon} name=\"keyboard-backspace\"></MaterialIcons>\r\n                        </TouchableOpacity>\r\n                        <GiftedAvatar avatarStyle={styles.avatar} user={user}></GiftedAvatar>\r\n                        <Text style={styles.name} numberOfLines={1}>\r\n                            {user.name /* + \" this is a very long username\"*/}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n            );\r\n        } else return <></>;\r\n    }\r\n}\r\n\r\nconst themedStyles = preTheme((theme: Theme) => {\r\n    return StyleSheet.create({\r\n        wrapper: {\r\n            backgroundColor: theme.background,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n                width: 0,\r\n                height: 6,\r\n            },\r\n            shadowOpacity: 0.37,\r\n            shadowRadius: 7.49,\r\n            elevation: 3,\r\n        },\r\n        container: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            height: 60,\r\n            paddingRight: 20,\r\n        },\r\n        backButton: {\r\n            width: 55,\r\n            height: 55,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        backButtonIcon: {\r\n            fontSize: 32,\r\n        },\r\n        avatar: {\r\n            width: 40,\r\n            height: 40,\r\n            marginLeft: 5,\r\n            marginRight: 10,\r\n            borderWidth: 1,\r\n            borderColor: theme.accentSlight,\r\n        },\r\n        name: {\r\n            flex: 1,\r\n            fontSize: 17,\r\n            color: theme.text,\r\n        },\r\n    });\r\n});\r\n\r\nconst ChatScreenHeaderComp = reduxConnector(withTheme(ChatScreenHeaderClass));\r\n\r\nfunction ChatScreenHeader(props: StackHeaderProps): JSX.Element {\r\n    return (\r\n        <SafeAreaInsetsContext.Consumer>\r\n            {(insets) => <ChatScreenHeaderComp {...props} topInset={insets ? insets.top : 0} />}\r\n        </SafeAreaInsetsContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default ChatScreenHeader;\r\n","import {NavigationContainer, DefaultTheme, DarkTheme} from \"@react-navigation/native\";\r\nimport {CardStyleInterpolators, createStackNavigator} from \"@react-navigation/stack\";\r\nimport * as React from \"react\";\r\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\r\nimport ValidateEmailScreen from \"../screens/ValidateEmailScreen\";\r\nimport ValidationEmailSentScreen from \"../screens/ValidationEmailSentScreen\";\r\nimport {RootNavigatorScreens} from \"../navigation/types\";\r\nimport LinkingConfiguration from \"./linking-config\";\r\nimport LoginNavigator from \"./LoginNavigator\";\r\nimport MainNavigator from \"./MainNavigator\";\r\nimport OnboardingNavigator from \"./OnboardingNavigator\";\r\nimport {rootNavigationRef, screenTitle} from \"./utils\";\r\nimport {withTheme} from \"react-native-elements\";\r\nimport {ThemeProps} from \"../types\";\r\nimport OnboardingSuccessfulScreen from \"../screens/onboarding/OnboardingSuccessfulScreen\";\r\nimport MatchSuccessScreen from \"../screens/MatchSuccessScreen\";\r\nimport {Platform} from \"react-native\";\r\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\r\nimport ForgotPasswordEmailSentScreen from \"../screens/ForgotPasswordEmailSentScreen\";\r\nimport ResetPasswordSuccessScreen from \"../screens/ResetPasswordSuccessScreen\";\r\nimport ChatScreen from \"../screens/messaging/ChatScreen\";\r\nimport ChatScreenHeader from \"../components/ChatScreenHeader\";\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst Stack = createStackNavigator<RootNavigatorScreens>();\r\n\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nfunction Navigation({theme, initialRoute}: ThemeProps & {initialRoute?: keyof RootNavigatorScreens}): JSX.Element {\r\n    return (\r\n        <NavigationContainer\r\n            ref={rootNavigationRef}\r\n            linking={LinkingConfiguration}\r\n            theme={theme.id === \"dark\" ? DarkTheme : DefaultTheme}\r\n        >\r\n            <Stack.Navigator screenOptions={{headerShown: false}} initialRouteName={initialRoute}>\r\n                <Stack.Screen name=\"LoginScreen\" component={LoginNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ForgotPasswordEmailSentScreen\"\r\n                    component={ForgotPasswordEmailSentScreen}\r\n                    options={{title: screenTitle(\"ForgotPasswordEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidationEmailSentScreen\"\r\n                    component={ValidationEmailSentScreen}\r\n                    options={{title: screenTitle(\"ValidationEmailSentScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ValidateEmailScreen\"\r\n                    component={ValidateEmailScreen}\r\n                    options={{title: screenTitle(\"ValidateEmailScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordScreen\"\r\n                    component={ResetPasswordScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"ResetPasswordSuccessScreen\"\r\n                    component={ResetPasswordSuccessScreen}\r\n                    options={{title: screenTitle(\"ResetPasswordSuccessScreen\")}}\r\n                />\r\n                <Stack.Screen name=\"MainScreen\" component={MainNavigator} />\r\n                <Stack.Screen\r\n                    name=\"ChatScreen\"\r\n                    component={ChatScreen}\r\n                    options={{header: ChatScreenHeader, headerShown: true}}\r\n                />\r\n                <Stack.Screen name=\"OnboardingScreen\" component={OnboardingNavigator} />\r\n                <Stack.Screen\r\n                    name=\"OnboardingSuccessfulScreen\"\r\n                    component={OnboardingSuccessfulScreen}\r\n                    options={{title: screenTitle(\"OnboardingSuccessfulScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"NotFoundScreen\"\r\n                    component={NotFoundScreen}\r\n                    options={{title: screenTitle(\"NotFoundScreen\")}}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"MatchSuccessScreen\"\r\n                    component={MatchSuccessScreen}\r\n                    options={{\r\n                        headerShown: false,\r\n                        cardStyleInterpolator:\r\n                            Platform.OS == \"ios\"\r\n                                ? CardStyleInterpolators.forVerticalIOS\r\n                                : CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                        title: screenTitle(\"MatchSuccessScreen\"),\r\n                    }}\r\n                />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Navigation);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../../state/types\";\r\nimport themes from \"../../constants/themes\";\r\nimport {ThemeProvider} from \"react-native-elements\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    currentTheme: state.settings.theme,\r\n}));\r\n\r\nexport type ConnectedThemeProviderProps = React.PropsWithChildren<ConnectedProps<typeof reduxConnector>>;\r\n\r\n/**\r\n * This provider receives the current theme from the store and passes it down to all\r\n * children (direct or indirect) that are exported using withTheme(<component>).\r\n */\r\nclass ConnectedThemeProvider extends React.Component<ConnectedThemeProviderProps> {\r\n    render(): JSX.Element {\r\n        const {children, currentTheme} = this.props;\r\n        return (\r\n            <ThemeProvider key={currentTheme} theme={themes[currentTheme]}>\r\n                {children}\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxConnector(ConnectedThemeProvider);\r\n","import {StatusBar} from \"expo-status-bar\";\r\nimport * as React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {AppState} from \"../state/types\";\r\n\r\n// Map props from store\r\nconst reduxConnector = connect((state: AppState) => ({\r\n    theme: state.settings.theme,\r\n}));\r\n\r\n// Component props\r\nexport type ThemedStatusBarProps = ConnectedProps<typeof reduxConnector>;\r\n\r\nfunction ThemedStatusBar(props: ThemedStatusBarProps): JSX.Element {\r\n    const {theme} = props;\r\n    return <StatusBar style={theme == \"dark\" ? \"light\" : \"dark\"} />;\r\n}\r\n\r\nexport default reduxConnector(ThemedStatusBar);\r\n","import {registerRootComponent} from \"expo\";\r\nimport React from \"react\";\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport Navigation from \"./navigation\";\r\nimport {Provider} from \"react-redux\";\r\nimport configureLocalization from \"./localization\";\r\nimport {SafeAreaProvider} from \"react-native-safe-area-context\";\r\nimport ConnectedThemeProvider from \"./components/providers/ConnectedThemeProvider\";\r\nimport store from \"./state/store\";\r\nimport ThemedStatusBar from \"./components/ThemedStatusBar\";\r\n\r\n// Example for disabling a warning :\r\n// YellowBox.ignoreWarnings([\"VirtualizedLists should never be nested\"]);\r\n\r\nfunction App() {\r\n    const {isLoadingComplete, initialRoute} = useCachedResources();\r\n    configureLocalization();\r\n\r\n    if (!isLoadingComplete) {\r\n        return null;\r\n    } else {\r\n        return (\r\n            <SafeAreaProvider>\r\n                <Provider store={store}>\r\n                    <ConnectedThemeProvider>\r\n                        <Navigation initialRoute={initialRoute} />\r\n                        <ThemedStatusBar />\r\n                    </ConnectedThemeProvider>\r\n                </Provider>\r\n            </SafeAreaProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registerRootComponent(App);\r\n"],"sourceRoot":""}